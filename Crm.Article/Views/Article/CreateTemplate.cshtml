@inherits Crm.Library.Modularization.CrmViewUserControl
@using Crm.Library.Globalization.Extensions
@using Crm.Library.Modularization.Extensions

<div class="container">
	<div class="card">
		<form role="form" class="root-form">
			<collapsible-block params="id: 'general'" class="morph">
				<collapsible-block-header params="customCss: 'bg-white', swapIcons: true">
					<span>@(Html.Localize("General"))</span>
				</collapsible-block-header>
				<collapsible-block-content params="context: { article: $root.article }">
					<!-- ko with: article -->
					@Html.PluginRenderActions("ArticleCreateFormGeneralTop")
					<div class="flex-input-row">
						<div data-bind="visible: $data.getEntity().entityState === window.$data.EntityState.Added">
							<!-- ko if: $root.filterByType()  -->
							<form-element id="ArticleTypeKey" params="value: ArticleTypeKey, caption: 'ArticleType', type: 'select'">
								<select name="ArticleTypeKey" class="form-control" data-bind="select2autocompleter: { data: value, default: Helper.Lookup.getLookupValue($root.lookups.articleTypes, value), autocompleteOptions: Helper.Article.autocompleterOptionsVehicleAndTools('CrmArticle_ArticleType'), placeholder: placeholder }"></select>
							</form-element>
							<!-- /ko -->
							<!-- ko ifnot: $root.filterByType()  -->
							<form-element id="ArticleTypeKey" params="value: ArticleTypeKey, caption: 'ArticleType', type: 'select'">
								<select name="ArticleTypeKey" class="form-control" data-bind="select2autocompleter: { data: value, default: Helper.Lookup.getLookupValue($root.lookups.articleTypes, value), autocompleteOptions: Helper.Lookup.getAutocompleteOptions('CrmArticle_ArticleType'), placeholder: placeholder }"></select>
							</form-element>
							<!-- /ko -->
						</div>
						<div>
							<form-element params="value: ItemNo, name: 'ItemNo', caption: 'ItemNo', type: 'text'"></form-element>
						</div>
					</div>
					<div class="flex-input-row">
						<div>
							<form-element params="value: Description, name: 'Description', caption: 'Description', type: 'text'"></form-element>
						</div>
					</div>
					<div id="btnTranslations" class="animated fadeIn m-b-15" data-bind="visible: !$root.translation()">
						<a href="#" data-bind="click: $root.toggleTranslations">
							@(Html.Localize("AddTranslations"))
						</a>
					</div>
					<div id="blockTranslation" class="animated fadeIn" data-bind="visible: $root.translation">
						<!-- ko foreach: $root.descriptions -->
						<div class="row">
							<div class="col-md-12">
								<form-element params="value: Value, name: Name, caption: Name, type: 'text'"></form-element>
							</div>
						</div>
						<!-- /ko -->
					</div>
					<!-- ko ifnot: ArticleTypeKey() == "Vehicle" -->
					<div class="flex-input-row">
						<div>
							<form-element params="value: ValidFrom, caption: 'ValidFrom', type: 'datePicker'"></form-element>
						</div>
						<div>
							<form-element params="value: ValidTo, caption: 'ValidTo', type: 'datePicker'"></form-element>
						</div>
					</div>
					<!-- /ko -->
					<div class="flex-input-row">
						<div>
							<form-element id="ProductFamilyKey" params="value: ProductFamilyKey, caption: 'ProductFamily'">
								@await Html.PartialAsync("NestedAutocompleterTemplate")
								<select name="ProductFamilyKey" class="form-control" data-bind="select2autocompleter: { data: $parent.ProductFamilyKey, autocompleteOptions: { nestedProperty: 'ParentId', nested: true,templateResultId: 'nested-autocompleter-options', table: 'CrmArticle_ProductFamily', orderBy: ['Name'], mapDisplayObject: function (c) { return { id: c.Id, text: c.Name, item: c }; }, placeholder: placeholder} }">
								</select>
							</form-element>
						</div>
					</div>

					<!-- ko if: ArticleTypeKey() == "Tool" || ArticleTypeKey() == "Vehicle" -->
					<div class="flex-input-row">
						<div>
							<form-element params="value: Manufacturer, name: 'Manufacturer', caption: 'Manufacturer', type: 'text'"></form-element>
						</div>
						<div>
							<form-element params="value: Model, name: 'Model', caption: 'Model', type: 'text'"></form-element>
						</div>
					</div>
					<div class="flex-input-row">
						<div>
							<form-element params="value: TUV, name: 'TUV', caption: $data.ArticleTypeKey() === 'Vehicle' ? window.Helper.String.getTranslatedString('VehicleTuv') : window.Helper.String.getTranslatedString('ToolTuv'), type: 'text' "></form-element>
						</div>
						<div>
							<form-element params="value: Inspection, name: 'Inspection', caption: 'Inspection', type: 'text'"></form-element>
						</div>
						<div>
							<form-element params="value: StationKey, caption: 'Station', type: 'select'">
								<select class="form-control" data-bind="select2autocompleter: { data: value, autocompleteOptions: { orderBy: ['Name'], table: 'Crm_Station', customFilter: Helper.Station.getSelect2Filter.bind($data), mapDisplayObject: Helper.Station.mapForSelect2Display, placeholder: placeholder } }">
								</select>
							</form-element>
						</div>
					</div>
					<!-- ko if: ArticleTypeKey() == "Vehicle" -->
					<div class="flex-input-row">
						<div>
							<form-element id="DrivingLicenceCategoryKey" params="value: DrivingLicenceCategoryKey, caption: 'DrivingLicenceCategory', type: 'select'">
								<select name="DrivingLicenceCategoryKey" class="form-control" data-bind="select2autocompleter: { data: value, default: Helper.Lookup.getLookupValue($root.lookups.drivinglicenceCategories, value), autocompleteOptions: Helper.Lookup.getAutocompleteOptions('CrmArticle_DrivingLicenceCategory'), placeholder: placeholder }">
								</select>
							</form-element>
						</div>
						<div>
							<form-element params="value: LicensePlate, name: 'LicensePlate', caption: 'LicencePlate', type: 'text'"></form-element>
						</div>
					</div>
					<!-- /ko -->
					<!-- ko if: ArticleTypeKey() == "Tool" -->
					<div class="flex-input-row">
						<div>
							<form-element id="RequiredSkillKeys" params="caption: 'Skills', type: 'select2', value: RequiredSkillKeys">
								<select class="form-control" multiple="multiple" data-bind="select2autocompleter: { data: value, autocompleteOptions: { table: 'Main_Skill', customFilter: Helper.Lookup.queryLookup, mapDisplayObject: Helper.Lookup.mapLookupForSelect2Display, getElementByIdQuery: Helper.Lookup.getLookupByKeyQuery, placeholder: placeholder } }">
							</select>
						</form-element>
						</div>
						<div class="col-md-6">
						<form-element id="RequiredAssetKeys" params="caption: 'Assets', type: 'select2', value: RequiredAssetKeys">
							<select class="form-control" multiple="multiple" data-bind="select2autocompleter: { data: value, autocompleteOptions: { table: 'Main_Asset', customFilter: Helper.Lookup.queryLookup, mapDisplayObject: Helper.Lookup.mapLookupForSelect2Display, getElementByIdQuery: Helper.Lookup.getLookupByKeyQuery, placeholder: placeholder } }">
								</select>
							</form-element>
						</div>
					</div>
					<div class="flex-input-row">
						<div>
							<form-element params="value: EAN, name: 'EAN', caption: 'EAN', type: 'text'"></form-element>
						</div>
						<div>
							<form-element params="value: Serial, name: 'Serial', caption: 'Serial', type: 'text'"></form-element>
						</div>
					</div>
					<!-- /ko -->
					<!-- /ko -->
					@Html.PluginRenderActions("ArticleCreateFormGeneralBottom")
					<!-- /ko -->
				</collapsible-block-content>
			</collapsible-block>

			<div class="top-separator"></div>

			<!-- ko ifnot: article().ArticleTypeKey() == "Vehicle" -->
			<collapsible-block params="id: 'pricing-data'" class="morph">
				<collapsible-block-header params="customCss: 'bg-white', swapIcons: true">
					<span>@(Html.Localize("PricingRelatedData"))</span>
				</collapsible-block-header>
				<collapsible-block-content params="context: { article: $root.article }">
					<!-- ko with: article -->
					@Html.PluginRenderActions("ArticleCreateFormPricingRelatedDataTop")
					<div class="flex-input-row">
						<!-- ko ifnot: ArticleTypeKey() == "Tool" -->
						<div>
							<form-element params="value: Price, name: 'Price', caption: ArticleTypeKey() == 'Service' ? 'PriceService' : 'SalesPrice', type: 'number'"></form-element>
						</div>
						<div>
							<form-element params="value: PurchasePrice, name: 'PurchasePrice', caption: 'PurchasePrice', type: 'number'"></form-element>
						</div>
						<!-- /ko -->
					</div>
					<div class="flex-input-row">
						<div>
							<form-element id="CurrencyKey" params="value: CurrencyKey, caption: 'Currency', type: 'select'">
								<select name="CurrencyKey" class="form-control" data-bind="select2autocompleter: { data: value, default: Helper.Lookup.getLookupValue($root.lookups.currencies, value), autocompleteOptions: Helper.Lookup.getAutocompleteOptions('Main_Currency'), placeholder: placeholder }">
								</select>
							</form-element>
						</div>
						<!-- ko if: ArticleTypeKey() == "Material" || ArticleTypeKey() == "Cost" -->
						<div>
							<form-element id="QuantityUnitGroup" params="value: QuantityUnitEntryKey, caption: 'QuantityUnitGroup', type: 'select2'">
								<select class="form-control" data-bind="select2autocompleter: { data: value, autocompleteOptions: Helper.QuantityUnit.getQuantityUnitEntryAutocompleteOptions($root, null, true) }"></select>
							</form-element>
						</div>
						<div>
							<form-element id="QuantityUnitKey" params="value: QuantityUnitKey, caption: 'BaseQuantityUnit', type: 'select', disable: QuantityUnitEntryKey() != null">
								<select name="QuantityUnitKey" class="form-control" data-bind="select2autocompleter: { data: value, default: Helper.Lookup.getLookupValue($root.lookups.quantityUnits, value), autocompleteOptions: Helper.Lookup.getAutocompleteOptions('CrmArticle_QuantityUnit'), placeholder: placeholder }, disable: disable">
								</select>
							</form-element>
						</div>
						<!-- /ko -->
					</div>
					@Html.PluginRenderActions("ArticleCreateFormPricingRelatedDataBottom")
					<!-- /ko -->
				</collapsible-block-content>
			</collapsible-block>
			<!-- /ko -->

			<div class="top-separator"></div>

			<collapsible-block params="id: 'extended-data', collapsed: true" class="morph">
				<collapsible-block-header params="customCss: 'bg-white', swapIcons: true">
					<span>@(Html.Localize("ExtendedData"))</span>
				</collapsible-block-header>
				<collapsible-block-content params="context: { article: $root.article }">
					<!-- ko with: article -->
					@Html.PluginRenderActions("ArticleCreateFormExtendedDataTop")
					<div class="flex-input-row">
						<div>
							<form-element params="value: ManufacturerItemNo, name: 'ManufacturerItemNo', caption: 'ManufacturerItemNo', type: 'text'"></form-element>
						</div>
						<div>
							<form-element params="value: BarCode, name: 'BarCode', caption: 'Barcode', type: 'text'"></form-element>
						</div>
					</div>
					<div class="flex-input-row">
						<div>
							<form-element id="VATLevelKey" params="value: VATLevelKey, caption: 'VATLevel', type: 'select'">
								<select name="VATLevelKey" class="form-control" data-bind="select2autocompleter: { data: value, default: Helper.Lookup.getLookupValue($root.lookups.vatLevels, value), autocompleteOptions: Helper.Lookup.getAutocompleteOptions('CrmArticle_VATLevel'), placeholder: placeholder }">
								</select>
							</form-element>
						</div>
					</div>
					<!-- ko ifnot: ArticleTypeKey() == "Vehicle" -->
					<div class="flex-input-row">
						<div>
							<form-element params="value: IsEnabled, name: 'IsEnabled', caption: 'IsEnabled', type: 'checkbox'"></form-element>
						</div>
					</div>
					<div class="m-t-25 m-b-15 c-black b-0 f-500 f-14">
						@(Html.Localize("ExtendedData")) - @(Html.Localize("Statistics"))
					</div>
					<div class="flex-input-row">
						<div>
							<form-element id="ArticleGroup01Key" params="value: ArticleGroup01Key, caption: 'ArticleGroup01', type: 'select'">
								<select name="ArticleGroup01Key" class="form-control" data-bind="select2autocompleter: { data: value, default: Helper.Lookup.getLookupValue($root.lookups.articleGroups01, value), autocompleteOptions: Helper.Lookup.getAutocompleteOptions('CrmArticle_ArticleGroup01'), placeholder: placeholder }">
								</select>
							</form-element>
						</div>
						<div>
							<form-element id="ArticleGroup02Key" params="value: ArticleGroup02Key, caption: 'ArticleGroup02', type: 'select'">
								<select name="ArticleGroup02Key" class="form-control" data-bind="select2autocompleter: { data: value, default: Helper.Lookup.getLookupValue($root.lookups.articleGroups02, value), autocompleteOptions: Helper.Lookup.getAutocompleteOptions('CrmArticle_ArticleGroup02'), placeholder: placeholder }">
								</select>
							</form-element>
						</div>
						<div>
							<form-element id="ArticleGroup03Key" params="value: ArticleGroup03Key, caption: 'ArticleGroup03', type: 'select'">
								<select name="ArticleGroup03Key" class="form-control" data-bind="select2autocompleter: { data: value, default: Helper.Lookup.getLookupValue($root.lookups.articleGroups03, value), autocompleteOptions: Helper.Lookup.getAutocompleteOptions('CrmArticle_ArticleGroup03'), placeholder: placeholder }">
								</select>
							</form-element>
						</div>
						<div>
							<form-element id="ArticleGroup04Key" params="value: ArticleGroup04Key, caption: 'ArticleGroup04', type: 'select'">
								<select name="ArticleGroup04Key" class="form-control" data-bind="select2autocompleter: { data: value, default: Helper.Lookup.getLookupValue($root.lookups.articleGroups04, value), autocompleteOptions: Helper.Lookup.getAutocompleteOptions('CrmArticle_ArticleGroup04'), placeholder: placeholder }">
								</select>
							</form-element>
						</div>
						<div>
							<form-element id="ArticleGroup05Key" params="value: ArticleGroup05Key, caption: 'ArticleGroup05', type: 'select'">
								<select name="ArticleGroup05Key" class="form-control" data-bind="select2autocompleter: { data: value, default: Helper.Lookup.getLookupValue($root.lookups.articleGroups05, value), autocompleteOptions: Helper.Lookup.getAutocompleteOptions('CrmArticle_ArticleGroup05'), placeholder: placeholder }">
								</select>
							</form-element>
						</div>
					</div>
					<div class="m-t-25 m-b-15 c-black b-0 f-500 f-14">
						@(Html.Localize("ExtendedData")) - @(Html.Localize("ServiceRelatedAttributes"))
					</div>
					<div class="flex-input-row">
						<div>
							<form-element params="value: WarrantyInMonths, name: 'WarrantyInMonths', caption: 'WarrantyInMonths', type: 'number'"></form-element>
						</div>
						<div>
							<form-element params="value: GuaranteeInMonths, name: 'GuaranteeInMonths', caption: 'GuaranteeInMonths', type: 'number'"></form-element>
						</div>
					</div>
					<!-- ko if: ArticleTypeKey() == "Material" -->
					<div class="m-t-25 m-b-15 c-black b-0 f-500 f-14">
						@(Html.Localize("ExtendedData")) - @(Html.Localize("MaterialAndStockInformation"))
					</div>
					<div class="flex-input-row">
						<div>
							<form-element params="value: IsSerial, name: 'IsSerial', caption: 'IsSerial', type: 'checkbox'"></form-element>
						</div>
						<div>
							<form-element params="value: IsBatch, caption: 'IsBatch', type: 'checkbox'"></form-element>
						</div>
						<div>
							<form-element params="value: DangerousGoodsFlag, name: 'DangerousGoodsFlag', caption: 'DangerousGoodsFlag', type: 'checkbox'"></form-element>
						</div>
						<div>
							<form-element params="value: IsSparePart, caption: 'IsSparePart', type: 'checkbox'"></form-element>
						</div>
						<div>
							<form-element params="value: IsWarehouseManaged, caption: 'IsWarehouseManaged', type: 'checkbox'"></form-element>
						</div>
						<div>
							<form-element params="value: MinimumStock, name: 'MinimumStock', caption: 'MinimumStock', type: 'number'"></form-element>
						</div>
					</div>
					<div class="flex-input-row">
						<div>
							<form-element params="value: LeadTimeInDays, name: 'LeadTimeInDays', caption: 'LeadTimeInDays', type: 'number'"></form-element>
						</div>
					</div>
					<div class="flex-input-row">
						<div>
							<form-element params="value: Weight, name: 'Weight', caption: 'WeightWithUnitKG', type: 'number'"></form-element>
						</div>
						<div>
							<form-element params="value: WeightNet, name: 'WeightNet', caption: 'WeightNetWithUnitKG', type: 'number'"></form-element>
						</div>
					</div>
					<div class="flex-input-row">
						<div>
							<form-element params="value: Length, name: 'Length', caption: 'LengthWithUnitCM', type: 'number'"></form-element>
						</div>
						<div>
							<form-element params="value: Width, name: 'Width', caption: 'WidthWithUnitCM', type: 'number'"></form-element>
						</div>
						<div>
							<form-element params="value: Height, name: 'Height', caption: 'HeightWithUnitCM', type: 'number'"></form-element>
						</div>
					</div>
					<!-- /ko -->
					<!-- /ko -->
					@Html.PluginRenderActions("ArticleCreateFormExtendedDataBottom")
					<!-- /ko -->
				</collapsible-block-content>
			</collapsible-block>
			@Html.PluginRenderActions("ArticleCreateForm")
		</form>
		@await Html.PartialAsync("CreateFormFooter")
	</div>
</div>