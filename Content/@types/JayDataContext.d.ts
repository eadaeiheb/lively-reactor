/*//////////////////////////////////////////////////////////////////////////////////////
//////     Autogenerated by JaySvcUtil http://JayData.org for more info        /////////
//////                      OData  V4  TypeScript                              /////////
//////////////////////////////////////////////////////////////////////////////////////*/

declare global {
    namespace $data {
        class Geography{}
        class GeographyLineString{}
        class GeographyPolygon{}
        class GeographyMultiPoint{}
        class GeographyMultiPolygon{}
        class GeographyMultiLineString{}
        class GeographyCollection{}
    
        class Geometry{}
        class GeometryLineString{}
        class GeometryPolygon{}
        class GeometryMultiPoint{}
        class GeometryMultiPolygon{}
        class GeometryMultiLineString{}
        class GeometryCollection{}
    
        const enum EntityState{
            Detached = 0,
            Unchanged = 10,
            Added = 20,
            Modified = 30,
            Deleted = 40
        }
    
        interface MemberDefinition{
            name: string;
            type: any;
            dataType: any;
            elementType: any;
            originalType: any;
            kind: string;
            classMember: boolean;
            set: (value:any) => void;
            get: () => any;
            value: any;
            initialValue: any;
            method: Function;
            enumerable: boolean;
            configurable: boolean;
            key: boolean;
            computed: boolean;
            storeOnObject: boolean;
            monitorChanges: boolean;
        }
    
        interface Event{
            attach(eventHandler: (sender: any, event: any) => void ): void;
            detach(eventHandler: () => void ): void;
            fire(e: any, sender: any): void;
        }
    
        class Base<T>{
            constructor();
            getType: () => typeof Base;

            static inheritedTo: any;
            static addProperty(name:string, getterOrType:string | Function, setterOrGetter?:Function, setter?:Function): void;
            static addMember(name:string, definition:any, isClassMember?:boolean): void;
            static describeField(name:string, definition:any): void;
    
            static hasMetadata(key:string, property?:string): boolean;
            static getAllMetadata(property?:string): any;
            static getMetadata(key:string, property?:string): any;
            static setMetadata(key:string, value:any, property?:string): void;
        }
    
        class Enum extends Base<Enum>{
            static extend(name:string, instanceDefinition:any, classDefinition?:any): Base<Enum>;
        }
        function createEnum(name:string, enumType:any, enumDefinition?:any): Base<Enum>;
    
        class Entity extends Base<Entity>{
            static extend(name:string, instanceDefinition:any, classDefinition?:any): Base<Entity>;
    
            entityState: EntityState;
            changedProperties: MemberDefinition[];
    
            propertyChanging: Event;
            propertyChanged: Event;
            propertyValidationError: Event;
            isValid: boolean;
        }
    
        class EntitySet<Ttype extends typeof Entity, T extends Entity> extends Queryable<T>{
            add(item: T): T;
            add(initData: {}): T;
            attach(item: T): void;
            attach(item: {}): void;
            attachOrGet(item: T): T;
            attachOrGet(item: {}): T;
            detach(item: T): void;
            detach(item: {}): void;
            remove(item: T): void;
            remove(item: {}): void;
            defaultType: Ttype;
            elementType: Ttype;
        }
    
        class EntityContext extends Base<EntityContext>{
            constructor(config?: any);
            onReady(): Promise<EntityContext>;
            saveChanges(): Promise<number>;
            stateManager: {reset: Function, trackedEntities: any[]};
            static extend(name:string, instanceDefinition:any, classDefinition?:any): Base<EntityContext>;
        }
    
        class Queryable<T extends Entity | Edm.Primitive>{
            count(): Promise<number>;
            count(): Queryable<number>;
            distinct(): Queryable<any>;
            filter(predicate: (it: T) => boolean, thisArg?: any): Queryable<T>;
            filter(predicate: string, thisArg?: any): Queryable<T>;
            filter(column: string, operator: string, thisArg?: any): Queryable<T>;
            find(id: string): Promise<T>;
            first(predicate?: (it: T) => boolean, params?: any): Promise<T>;
            first(predicate?: string, params?: any): Promise<T>;
            forEach(handler: (it: T) => void): Promise<T>;
            groupBy(projection: (it: T) => any): Queryable<any>;
            groupBy(expresssion: string);
            include(selector: string): Queryable<T>;
            include2(selector: string): Queryable<T>;
            length(): Promise<number>;
            map(projection: (it: T) => any): Queryable<any>;
            map(projection: string): Queryable<any>;
            orderBy(predicate: (it: T) => void): Queryable<T>;
            orderBy(predicate: string): Queryable<T>;
            orderByDescending(predicate: (it: T) => void): Queryable<T>;
            orderByDescending(predicate: string): Queryable<T>;
            removeAll(): Promise<number>;
            select(projection: (it: T) => any): Queryable<any>;
            select(projection: string): Queryable<any>;
            single(predicate: (it: T) => boolean, params?: any): Promise<T>;
            single(predicate: string, params?: any): Promise<T>;
            skip(amount: number): Queryable<T>;
            sum(): Promise<number>;
            take(amount: number): Queryable<T>;
            toArray(): Promise<T[]>;
            toArray(handler: (result: T[]) => void ): Promise<T[]>;
            toArray(handler: { success?: (result: T[]) => void; error?: (result: any) => void; }): Promise<T[]>;
            withInlineCount(): Queryable<T>;
        }
        class ServiceAction{}
        class ServiceFunction{}
    
        function implementation(name:string): typeof Base;
    }
    namespace Edm {
        type Boolean = boolean;
        type Binary = string;
        type DateTime = JSDate;
        type DateTimeOffset = JSDate;
        type Duration = string;
        type TimeOfDay = string;
        type Date = string;
        type Time = string;
        type Decimal = number;
        type Single = number;
        type Float = number;
        type Double = number;
        type Guid = string;
        type Int16 = number;
        type Int32 = number;
        type Int64 = number;
        type Byte = number;
        type SByte = number;
        type String = string;
        type GeographyPoint = $data.Geography;
        type GeographyLineString = $data.GeographyLineString;
        type GeographyPolygon = $data.GeographyPolygon;
        type GeographyMultiPoint = $data.GeographyMultiPoint;
        type GeographyMultiPolygon = $data.GeographyMultiPolygon;
        type GeographyMultiLineString = $data.GeographyMultiLineString;
        type GeographyCollection = $data.GeographyCollection;
        type GeometryPoint = $data.Geometry;
        type GeometryLineString = $data.GeometryLineString;
        type GeometryPolygon = $data.GeometryPolygon;
        type GeometryMultiPoint = $data.GeometryMultiPoint;
        type GeometryMultiPolygon = $data.GeometryMultiPolygon;
        type GeometryMultiLineString = $data.GeometryMultiLineString;
        type GeometryCollection = $data.GeometryCollection;
        type Primitive =
            Boolean | Binary | Guid | DateTime | DateTimeOffset | Duration | TimeOfDay | Date | Time |
            Decimal | Single | Float | Double | Int16 | Int32 | Int64 | Byte | SByte | String |
            GeographyPoint | GeographyLineString | GeographyPolygon | GeographyMultiPoint | GeographyMultiLineString | GeographyMultiPolygon | GeographyCollection |
            GeometryPoint | GeometryLineString | GeometryPolygon | GeometryMultiPoint | GeometryMultiLineString | GeometryMultiPolygon | GeometryCollection;
    }

namespace Sms.TimeManagement.Rest.Model {

    export class ObservableSmsTimeManagement_TimeManagementEvent extends $data.Entity {
        constructor();
        constructor(initData: { AbsenceType?: KnockoutObservable<Edm.String>; CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; DispatchId?: KnockoutObservable<Edm.Guid>; DomainId?: KnockoutObservable<Edm.Guid>; Event?: KnockoutObservable<Edm.String>; EventId?: KnockoutObservable<Edm.Int32>; EventTypeKey?: KnockoutObservable<Edm.Int32>; Id?: KnockoutObservable<Edm.Guid>; InstallationId?: KnockoutObservable<Edm.Guid>; IsActive?: KnockoutObservable<Edm.Boolean>; IsClosed?: KnockoutObservable<Edm.Boolean>; Latitude?: KnockoutObservable<Edm.Single>; Longitude?: KnockoutObservable<Edm.Single>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; PerDiemReport?: KnockoutObservable<Crm.PerDiem.Rest.Model.ObservableCrmPerDiem_PerDiemReport>; PerDiemReportId?: KnockoutObservable<Edm.Guid>; ResponsibleUser?: KnockoutObservable<Edm.String>; ResponsibleUserObject?: KnockoutObservable<Main.Rest.Model.ObservableMain_User>; Terminal?: KnockoutObservable<Edm.String>; TimeZoneFrom?: KnockoutObservable<Edm.String>; TimeZoneTo?: KnockoutObservable<Edm.String>; Timestamp?: KnockoutObservable<Edm.DateTimeOffset>; Token?: KnockoutObservable<Edm.String>; TransactionCode?: KnockoutObservable<Edm.String> });

        AbsenceType: KnockoutObservable<Edm.String>;
        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        DispatchId: KnockoutObservable<Edm.Guid>;
        DomainId: KnockoutObservable<Edm.Guid>;
        Event: KnockoutObservable<Edm.String>;
        EventId: KnockoutObservable<Edm.Int32>;
        EventTypeKey: KnockoutObservable<Edm.Int32>;
        Id: KnockoutObservable<Edm.Guid>;
        InstallationId: KnockoutObservable<Edm.Guid>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        IsClosed: KnockoutObservable<Edm.Boolean>;
        Latitude: KnockoutObservable<Edm.Single>;
        Longitude: KnockoutObservable<Edm.Single>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        PerDiemReport: KnockoutObservable<Crm.PerDiem.Rest.Model.ObservableCrmPerDiem_PerDiemReport>;
        PerDiemReportId: KnockoutObservable<Edm.Guid>;
        ResponsibleUser: KnockoutObservable<Edm.String>;
        ResponsibleUserObject: KnockoutObservable<Main.Rest.Model.ObservableMain_User>;
        Terminal: KnockoutObservable<Edm.String>;
        TimeZoneFrom: KnockoutObservable<Edm.String>;
        TimeZoneTo: KnockoutObservable<Edm.String>;
        Timestamp: KnockoutObservable<Edm.DateTimeOffset>;
        Token: KnockoutObservable<Edm.String>;
        TransactionCode: KnockoutObservable<Edm.String>;
        innerInstance: SmsTimeManagement_TimeManagementEvent;
    }

    export class SmsTimeManagement_TimeManagementEvent extends $data.Entity {
        constructor();
        constructor(initData: { AbsenceType?: Edm.String; CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; DispatchId?: Edm.Guid; DomainId?: Edm.Guid; Event?: Edm.String; EventId?: Edm.Int32; EventTypeKey?: Edm.Int32; Id?: Edm.Guid; InstallationId?: Edm.Guid; IsActive?: Edm.Boolean; IsClosed?: Edm.Boolean; Latitude?: Edm.Single; Longitude?: Edm.Single; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; PerDiemReport?: Crm.PerDiem.Rest.Model.CrmPerDiem_PerDiemReport; PerDiemReportId?: Edm.Guid; ResponsibleUser?: Edm.String; ResponsibleUserObject?: Main.Rest.Model.Main_User; Terminal?: Edm.String; TimeZoneFrom?: Edm.String; TimeZoneTo?: Edm.String; Timestamp?: Edm.DateTimeOffset; Token?: Edm.String; TransactionCode?: Edm.String });

        AbsenceType: Edm.String;
        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        DispatchId: Edm.Guid;
        DomainId: Edm.Guid;
        Event: Edm.String;
        EventId: Edm.Int32;
        EventTypeKey: Edm.Int32;
        Id: Edm.Guid;
        InstallationId: Edm.Guid;
        IsActive: Edm.Boolean;
        IsClosed: Edm.Boolean;
        Latitude: Edm.Single;
        Longitude: Edm.Single;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        PerDiemReport: Crm.PerDiem.Rest.Model.CrmPerDiem_PerDiemReport;
        PerDiemReportId: Edm.Guid;
        ResponsibleUser: Edm.String;
        ResponsibleUserObject: Main.Rest.Model.Main_User;
        Terminal: Edm.String;
        TimeZoneFrom: Edm.String;
        TimeZoneTo: Edm.String;
        Timestamp: Edm.DateTimeOffset;
        Token: Edm.String;
        TransactionCode: Edm.String;
        asKoObservable(): ObservableSmsTimeManagement_TimeManagementEvent;
        static create(): SmsTimeManagement_TimeManagementEvent;
        static create(initData:any): SmsTimeManagement_TimeManagementEvent;
    }

}

namespace Sms.Scheduler.Rest.Model {

    export class ObservableSmsScheduler_Absence extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; Description?: KnockoutObservable<Edm.String>; DomainId?: KnockoutObservable<Edm.Guid>; From?: KnockoutObservable<Edm.DateTimeOffset>; Id?: KnockoutObservable<Edm.Guid>; IsActive?: KnockoutObservable<Edm.Boolean>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; ResponsibleUser?: KnockoutObservable<Edm.String>; ResponsibleUserObject?: KnockoutObservable<Main.Rest.Model.ObservableMain_User>; TimeEntryTypeKey?: KnockoutObservable<Edm.String>; To?: KnockoutObservable<Edm.DateTimeOffset> });

        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        Description: KnockoutObservable<Edm.String>;
        DomainId: KnockoutObservable<Edm.Guid>;
        From: KnockoutObservable<Edm.DateTimeOffset>;
        Id: KnockoutObservable<Edm.Guid>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        ResponsibleUser: KnockoutObservable<Edm.String>;
        ResponsibleUserObject: KnockoutObservable<Main.Rest.Model.ObservableMain_User>;
        TimeEntryTypeKey: KnockoutObservable<Edm.String>;
        To: KnockoutObservable<Edm.DateTimeOffset>;
        innerInstance: SmsScheduler_Absence;
    }

    export class ObservableSmsScheduler_DispatchArticleAssignment extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; DispatchKey?: KnockoutObservable<Edm.Guid>; Id?: KnockoutObservable<Edm.Guid>; IsActive?: KnockoutObservable<Edm.Boolean>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; ResourceKey?: KnockoutObservable<Edm.Guid> });

        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        DispatchKey: KnockoutObservable<Edm.Guid>;
        Id: KnockoutObservable<Edm.Guid>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        ResourceKey: KnockoutObservable<Edm.Guid>;
        innerInstance: SmsScheduler_DispatchArticleAssignment;
    }

    export class ObservableSmsScheduler_DispatchPersonAssignment extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; Dispatch?: KnockoutObservable<Crm.Service.Rest.Model.ObservableCrmService_ServiceOrderDispatch>; DispatchKey?: KnockoutObservable<Edm.Guid>; Id?: KnockoutObservable<Edm.Guid>; IsActive?: KnockoutObservable<Edm.Boolean>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; ResourceKey?: KnockoutObservable<Edm.String> });

        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        Dispatch: KnockoutObservable<Crm.Service.Rest.Model.ObservableCrmService_ServiceOrderDispatch>;
        DispatchKey: KnockoutObservable<Edm.Guid>;
        Id: KnockoutObservable<Edm.Guid>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        ResourceKey: KnockoutObservable<Edm.String>;
        innerInstance: SmsScheduler_DispatchPersonAssignment;
    }

    export class ObservableSmsScheduler_ProfileResource extends $data.Entity {
        constructor();
        constructor(initData: { DomainId?: KnockoutObservable<Edm.Guid>; Id?: KnockoutObservable<Edm.Int32>; ProfileKey?: KnockoutObservable<Edm.Int32>; ResourceKey?: KnockoutObservable<Edm.String>; SortOrder?: KnockoutObservable<Edm.Int32> });

        DomainId: KnockoutObservable<Edm.Guid>;
        Id: KnockoutObservable<Edm.Int32>;
        ProfileKey: KnockoutObservable<Edm.Int32>;
        ResourceKey: KnockoutObservable<Edm.String>;
        SortOrder: KnockoutObservable<Edm.Int32>;
        innerInstance: SmsScheduler_ProfileResource;
    }

    export class ObservableSmsScheduler_Profile extends $data.Entity {
        constructor();
        constructor(initData: { ClientConfig?: KnockoutObservable<Sms.Scheduler.Model.ClientConfig>; DefaultProfile?: KnockoutObservable<Edm.Boolean>; DomainId?: KnockoutObservable<Edm.Guid>; Id?: KnockoutObservable<Edm.Int32>; InternalId?: KnockoutObservable<Edm.Guid>; Name?: KnockoutObservable<Edm.String>; ResourceKeys?: KnockoutObservableArray<Edm.String>; TemplateKey?: KnockoutObservable<Edm.Int32>; User?: KnockoutObservable<Main.Rest.Model.ObservableMain_User>; Username?: KnockoutObservable<Edm.String> });

        ClientConfig: KnockoutObservable<Sms.Scheduler.Model.ClientConfig>;
        DefaultProfile: KnockoutObservable<Edm.Boolean>;
        DomainId: KnockoutObservable<Edm.Guid>;
        Id: KnockoutObservable<Edm.Int32>;
        InternalId: KnockoutObservable<Edm.Guid>;
        Name: KnockoutObservable<Edm.String>;
        ResourceKeys: KnockoutObservableArray<Edm.String>;
        TemplateKey: KnockoutObservable<Edm.Int32>;
        User: KnockoutObservable<Main.Rest.Model.ObservableMain_User>;
        Username: KnockoutObservable<Edm.String>;
        innerInstance: SmsScheduler_Profile;
    }

    export class SmsScheduler_Absence extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; Description?: Edm.String; DomainId?: Edm.Guid; From?: Edm.DateTimeOffset; Id?: Edm.Guid; IsActive?: Edm.Boolean; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; ResponsibleUser?: Edm.String; ResponsibleUserObject?: Main.Rest.Model.Main_User; TimeEntryTypeKey?: Edm.String; To?: Edm.DateTimeOffset });

        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        Description: Edm.String;
        DomainId: Edm.Guid;
        From: Edm.DateTimeOffset;
        Id: Edm.Guid;
        IsActive: Edm.Boolean;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        ResponsibleUser: Edm.String;
        ResponsibleUserObject: Main.Rest.Model.Main_User;
        TimeEntryTypeKey: Edm.String;
        To: Edm.DateTimeOffset;
        asKoObservable(): ObservableSmsScheduler_Absence;
        static create(): SmsScheduler_Absence;
        static create(initData:any): SmsScheduler_Absence;
    }

    export class SmsScheduler_DispatchArticleAssignment extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; DispatchKey?: Edm.Guid; Id?: Edm.Guid; IsActive?: Edm.Boolean; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; ResourceKey?: Edm.Guid });

        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        DispatchKey: Edm.Guid;
        Id: Edm.Guid;
        IsActive: Edm.Boolean;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        ResourceKey: Edm.Guid;
        asKoObservable(): ObservableSmsScheduler_DispatchArticleAssignment;
        static create(): SmsScheduler_DispatchArticleAssignment;
        static create(initData:any): SmsScheduler_DispatchArticleAssignment;
    }

    export class SmsScheduler_DispatchPersonAssignment extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; Dispatch?: Crm.Service.Rest.Model.CrmService_ServiceOrderDispatch; DispatchKey?: Edm.Guid; Id?: Edm.Guid; IsActive?: Edm.Boolean; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; ResourceKey?: Edm.String });

        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        Dispatch: Crm.Service.Rest.Model.CrmService_ServiceOrderDispatch;
        DispatchKey: Edm.Guid;
        Id: Edm.Guid;
        IsActive: Edm.Boolean;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        ResourceKey: Edm.String;
        asKoObservable(): ObservableSmsScheduler_DispatchPersonAssignment;
        static create(): SmsScheduler_DispatchPersonAssignment;
        static create(initData:any): SmsScheduler_DispatchPersonAssignment;
    }

    export class SmsScheduler_ProfileResource extends $data.Entity {
        constructor();
        constructor(initData: { DomainId?: Edm.Guid; Id?: Edm.Int32; ProfileKey?: Edm.Int32; ResourceKey?: Edm.String; SortOrder?: Edm.Int32 });

        DomainId: Edm.Guid;
        Id: Edm.Int32;
        ProfileKey: Edm.Int32;
        ResourceKey: Edm.String;
        SortOrder: Edm.Int32;
        asKoObservable(): ObservableSmsScheduler_ProfileResource;
        static create(): SmsScheduler_ProfileResource;
        static create(initData:any): SmsScheduler_ProfileResource;
    }

    export class SmsScheduler_Profile extends $data.Entity {
        constructor();
        constructor(initData: { ClientConfig?: Sms.Scheduler.Model.ClientConfig; DefaultProfile?: Edm.Boolean; DomainId?: Edm.Guid; Id?: Edm.Int32; InternalId?: Edm.Guid; Name?: Edm.String; ResourceKeys?: Edm.String[]; TemplateKey?: Edm.Int32; User?: Main.Rest.Model.Main_User; Username?: Edm.String });

        ClientConfig: Sms.Scheduler.Model.ClientConfig;
        DefaultProfile: Edm.Boolean;
        DomainId: Edm.Guid;
        Id: Edm.Int32;
        InternalId: Edm.Guid;
        Name: Edm.String;
        ResourceKeys: Edm.String[];
        TemplateKey: Edm.Int32;
        User: Main.Rest.Model.Main_User;
        Username: Edm.String;
        asKoObservable(): ObservableSmsScheduler_Profile;
        static create(): SmsScheduler_Profile;
        static create(initData:any): SmsScheduler_Profile;
    }

}

namespace Sms.Checklists.Rest.Model {

    export class ObservableSmsChecklists_ChecklistInstallationTypeRelationship extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; DynamicForm?: KnockoutObservable<Crm.DynamicForms.Rest.Model.ObservableCrmDynamicForms_DynamicForm>; DynamicFormKey?: KnockoutObservable<Edm.Guid>; Id?: KnockoutObservable<Edm.Guid>; InstallationTypeKey?: KnockoutObservable<Edm.String>; IsActive?: KnockoutObservable<Edm.Boolean>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; RequiredForServiceOrderCompletion?: KnockoutObservable<Edm.Boolean>; SendToCustomer?: KnockoutObservable<Edm.Boolean>; ServiceOrderTypeKey?: KnockoutObservable<Edm.String> });

        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        DynamicForm: KnockoutObservable<Crm.DynamicForms.Rest.Model.ObservableCrmDynamicForms_DynamicForm>;
        DynamicFormKey: KnockoutObservable<Edm.Guid>;
        Id: KnockoutObservable<Edm.Guid>;
        InstallationTypeKey: KnockoutObservable<Edm.String>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        RequiredForServiceOrderCompletion: KnockoutObservable<Edm.Boolean>;
        SendToCustomer: KnockoutObservable<Edm.Boolean>;
        ServiceOrderTypeKey: KnockoutObservable<Edm.String>;
        innerInstance: SmsChecklists_ChecklistInstallationTypeRelationship;
    }

    export class ObservableSmsChecklists_ServiceCaseChecklist extends $data.Entity {
        constructor();
        constructor(initData: { Completed?: KnockoutObservable<Edm.Boolean>; CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; DomainId?: KnockoutObservable<Edm.Guid>; DynamicForm?: KnockoutObservable<Crm.DynamicForms.Rest.Model.ObservableCrmDynamicForms_DynamicForm>; DynamicFormKey?: KnockoutObservable<Edm.Guid>; Id?: KnockoutObservable<Edm.Guid>; IsActive?: KnockoutObservable<Edm.Boolean>; IsCompletionChecklist?: KnockoutObservable<Edm.Boolean>; IsCreationChecklist?: KnockoutObservable<Edm.Boolean>; LegacyId?: KnockoutObservable<Edm.String>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; ReferenceKey?: KnockoutObservable<Edm.Guid>; ReferenceType?: KnockoutObservable<Edm.String>; Responses?: KnockoutObservableArray<Crm.DynamicForms.Rest.Model.ObservableCrmDynamicForms_DynamicFormResponse>; ServiceCase?: KnockoutObservable<Crm.Service.Rest.Model.ObservableCrmService_ServiceCase> });

        Completed: KnockoutObservable<Edm.Boolean>;
        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        DomainId: KnockoutObservable<Edm.Guid>;
        DynamicForm: KnockoutObservable<Crm.DynamicForms.Rest.Model.ObservableCrmDynamicForms_DynamicForm>;
        DynamicFormKey: KnockoutObservable<Edm.Guid>;
        Id: KnockoutObservable<Edm.Guid>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        IsCompletionChecklist: KnockoutObservable<Edm.Boolean>;
        IsCreationChecklist: KnockoutObservable<Edm.Boolean>;
        LegacyId: KnockoutObservable<Edm.String>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        ReferenceKey: KnockoutObservable<Edm.Guid>;
        ReferenceType: KnockoutObservable<Edm.String>;
        Responses: KnockoutObservableArray<Crm.DynamicForms.Rest.Model.ObservableCrmDynamicForms_DynamicFormResponse>;
        ServiceCase: KnockoutObservable<Crm.Service.Rest.Model.ObservableCrmService_ServiceCase>;
        innerInstance: SmsChecklists_ServiceCaseChecklist;
    }

    export class ObservableSmsChecklists_ServiceOrderChecklist extends $data.Entity {
        constructor();
        constructor(initData: { ChildServiceOrderChecklists?: KnockoutObservableArray<Sms.Checklists.Rest.Model.ObservableSmsChecklists_ServiceOrderChecklist>; Completed?: KnockoutObservable<Edm.Boolean>; CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; DispatchId?: KnockoutObservable<Edm.Guid>; DomainId?: KnockoutObservable<Edm.Guid>; DynamicForm?: KnockoutObservable<Crm.DynamicForms.Rest.Model.ObservableCrmDynamicForms_DynamicForm>; DynamicFormKey?: KnockoutObservable<Edm.Guid>; Id?: KnockoutObservable<Edm.Guid>; IsActive?: KnockoutObservable<Edm.Boolean>; LegacyId?: KnockoutObservable<Edm.String>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; ParentServiceOrderChecklist?: KnockoutObservable<Sms.Checklists.Rest.Model.ObservableSmsChecklists_ServiceOrderChecklist>; ParentServiceOrderChecklistId?: KnockoutObservable<Edm.Guid>; ReferenceKey?: KnockoutObservable<Edm.Guid>; ReferenceType?: KnockoutObservable<Edm.String>; Remark?: KnockoutObservable<Edm.String>; RequiredForServiceOrderCompletion?: KnockoutObservable<Edm.Boolean>; Responses?: KnockoutObservableArray<Crm.DynamicForms.Rest.Model.ObservableCrmDynamicForms_DynamicFormResponse>; SendToCustomer?: KnockoutObservable<Edm.Boolean>; ServiceOrder?: KnockoutObservable<Crm.Service.Rest.Model.ObservableCrmService_ServiceOrderHead>; ServiceOrderDispatch?: KnockoutObservable<Crm.Service.Rest.Model.ObservableCrmService_ServiceOrderDispatch>; ServiceOrderTime?: KnockoutObservable<Crm.Service.Rest.Model.ObservableCrmService_ServiceOrderTime>; ServiceOrderTimeKey?: KnockoutObservable<Edm.Guid> });

        ChildServiceOrderChecklists: KnockoutObservableArray<Sms.Checklists.Rest.Model.ObservableSmsChecklists_ServiceOrderChecklist>;
        Completed: KnockoutObservable<Edm.Boolean>;
        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        DispatchId: KnockoutObservable<Edm.Guid>;
        DomainId: KnockoutObservable<Edm.Guid>;
        DynamicForm: KnockoutObservable<Crm.DynamicForms.Rest.Model.ObservableCrmDynamicForms_DynamicForm>;
        DynamicFormKey: KnockoutObservable<Edm.Guid>;
        Id: KnockoutObservable<Edm.Guid>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        LegacyId: KnockoutObservable<Edm.String>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        ParentServiceOrderChecklist: KnockoutObservable<Sms.Checklists.Rest.Model.ObservableSmsChecklists_ServiceOrderChecklist>;
        ParentServiceOrderChecklistId: KnockoutObservable<Edm.Guid>;
        ReferenceKey: KnockoutObservable<Edm.Guid>;
        ReferenceType: KnockoutObservable<Edm.String>;
        Remark: KnockoutObservable<Edm.String>;
        RequiredForServiceOrderCompletion: KnockoutObservable<Edm.Boolean>;
        Responses: KnockoutObservableArray<Crm.DynamicForms.Rest.Model.ObservableCrmDynamicForms_DynamicFormResponse>;
        SendToCustomer: KnockoutObservable<Edm.Boolean>;
        ServiceOrder: KnockoutObservable<Crm.Service.Rest.Model.ObservableCrmService_ServiceOrderHead>;
        ServiceOrderDispatch: KnockoutObservable<Crm.Service.Rest.Model.ObservableCrmService_ServiceOrderDispatch>;
        ServiceOrderTime: KnockoutObservable<Crm.Service.Rest.Model.ObservableCrmService_ServiceOrderTime>;
        ServiceOrderTimeKey: KnockoutObservable<Edm.Guid>;
        innerInstance: SmsChecklists_ServiceOrderChecklist;
    }

    export class SmsChecklists_ChecklistInstallationTypeRelationship extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; DynamicForm?: Crm.DynamicForms.Rest.Model.CrmDynamicForms_DynamicForm; DynamicFormKey?: Edm.Guid; Id?: Edm.Guid; InstallationTypeKey?: Edm.String; IsActive?: Edm.Boolean; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; RequiredForServiceOrderCompletion?: Edm.Boolean; SendToCustomer?: Edm.Boolean; ServiceOrderTypeKey?: Edm.String });

        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        DynamicForm: Crm.DynamicForms.Rest.Model.CrmDynamicForms_DynamicForm;
        DynamicFormKey: Edm.Guid;
        Id: Edm.Guid;
        InstallationTypeKey: Edm.String;
        IsActive: Edm.Boolean;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        RequiredForServiceOrderCompletion: Edm.Boolean;
        SendToCustomer: Edm.Boolean;
        ServiceOrderTypeKey: Edm.String;
        asKoObservable(): ObservableSmsChecklists_ChecklistInstallationTypeRelationship;
        static create(): SmsChecklists_ChecklistInstallationTypeRelationship;
        static create(initData:any): SmsChecklists_ChecklistInstallationTypeRelationship;
    }

    export class SmsChecklists_ServiceCaseChecklist extends $data.Entity {
        constructor();
        constructor(initData: { Completed?: Edm.Boolean; CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; DomainId?: Edm.Guid; DynamicForm?: Crm.DynamicForms.Rest.Model.CrmDynamicForms_DynamicForm; DynamicFormKey?: Edm.Guid; Id?: Edm.Guid; IsActive?: Edm.Boolean; IsCompletionChecklist?: Edm.Boolean; IsCreationChecklist?: Edm.Boolean; LegacyId?: Edm.String; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; ReferenceKey?: Edm.Guid; ReferenceType?: Edm.String; Responses?: Crm.DynamicForms.Rest.Model.CrmDynamicForms_DynamicFormResponse[]; ServiceCase?: Crm.Service.Rest.Model.CrmService_ServiceCase });

        Completed: Edm.Boolean;
        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        DomainId: Edm.Guid;
        DynamicForm: Crm.DynamicForms.Rest.Model.CrmDynamicForms_DynamicForm;
        DynamicFormKey: Edm.Guid;
        Id: Edm.Guid;
        IsActive: Edm.Boolean;
        IsCompletionChecklist: Edm.Boolean;
        IsCreationChecklist: Edm.Boolean;
        LegacyId: Edm.String;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        ReferenceKey: Edm.Guid;
        ReferenceType: Edm.String;
        Responses: Crm.DynamicForms.Rest.Model.CrmDynamicForms_DynamicFormResponse[];
        ServiceCase: Crm.Service.Rest.Model.CrmService_ServiceCase;
        asKoObservable(): ObservableSmsChecklists_ServiceCaseChecklist;
        static create(): SmsChecklists_ServiceCaseChecklist;
        static create(initData:any): SmsChecklists_ServiceCaseChecklist;
    }

    export class SmsChecklists_ServiceOrderChecklist extends $data.Entity {
        constructor();
        constructor(initData: { ChildServiceOrderChecklists?: Sms.Checklists.Rest.Model.SmsChecklists_ServiceOrderChecklist[]; Completed?: Edm.Boolean; CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; DispatchId?: Edm.Guid; DomainId?: Edm.Guid; DynamicForm?: Crm.DynamicForms.Rest.Model.CrmDynamicForms_DynamicForm; DynamicFormKey?: Edm.Guid; Id?: Edm.Guid; IsActive?: Edm.Boolean; LegacyId?: Edm.String; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; ParentServiceOrderChecklist?: Sms.Checklists.Rest.Model.SmsChecklists_ServiceOrderChecklist; ParentServiceOrderChecklistId?: Edm.Guid; ReferenceKey?: Edm.Guid; ReferenceType?: Edm.String; Remark?: Edm.String; RequiredForServiceOrderCompletion?: Edm.Boolean; Responses?: Crm.DynamicForms.Rest.Model.CrmDynamicForms_DynamicFormResponse[]; SendToCustomer?: Edm.Boolean; ServiceOrder?: Crm.Service.Rest.Model.CrmService_ServiceOrderHead; ServiceOrderDispatch?: Crm.Service.Rest.Model.CrmService_ServiceOrderDispatch; ServiceOrderTime?: Crm.Service.Rest.Model.CrmService_ServiceOrderTime; ServiceOrderTimeKey?: Edm.Guid });

        ChildServiceOrderChecklists: Sms.Checklists.Rest.Model.SmsChecklists_ServiceOrderChecklist[];
        Completed: Edm.Boolean;
        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        DispatchId: Edm.Guid;
        DomainId: Edm.Guid;
        DynamicForm: Crm.DynamicForms.Rest.Model.CrmDynamicForms_DynamicForm;
        DynamicFormKey: Edm.Guid;
        Id: Edm.Guid;
        IsActive: Edm.Boolean;
        LegacyId: Edm.String;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        ParentServiceOrderChecklist: Sms.Checklists.Rest.Model.SmsChecklists_ServiceOrderChecklist;
        ParentServiceOrderChecklistId: Edm.Guid;
        ReferenceKey: Edm.Guid;
        ReferenceType: Edm.String;
        Remark: Edm.String;
        RequiredForServiceOrderCompletion: Edm.Boolean;
        Responses: Crm.DynamicForms.Rest.Model.CrmDynamicForms_DynamicFormResponse[];
        SendToCustomer: Edm.Boolean;
        ServiceOrder: Crm.Service.Rest.Model.CrmService_ServiceOrderHead;
        ServiceOrderDispatch: Crm.Service.Rest.Model.CrmService_ServiceOrderDispatch;
        ServiceOrderTime: Crm.Service.Rest.Model.CrmService_ServiceOrderTime;
        ServiceOrderTimeKey: Edm.Guid;
        asKoObservable(): ObservableSmsChecklists_ServiceOrderChecklist;
        static create(): SmsChecklists_ServiceOrderChecklist;
        static create(initData:any): SmsChecklists_ServiceOrderChecklist;
    }

}

namespace Main.VideoCall.Rest.Model {

    export class ObservableMainVideoCall_JoinedGroupChats extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; DomainId?: KnockoutObservable<Edm.Guid>; Id?: KnockoutObservable<Edm.Guid>; IsSubscribed?: KnockoutObservable<Edm.Boolean>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; RoomId?: KnockoutObservable<Edm.Guid>; Username?: KnockoutObservable<Edm.String> });

        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        DomainId: KnockoutObservable<Edm.Guid>;
        Id: KnockoutObservable<Edm.Guid>;
        IsSubscribed: KnockoutObservable<Edm.Boolean>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        RoomId: KnockoutObservable<Edm.Guid>;
        Username: KnockoutObservable<Edm.String>;
        innerInstance: MainVideoCall_JoinedGroupChats;
    }

    export class MainVideoCall_JoinedGroupChats extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; DomainId?: Edm.Guid; Id?: Edm.Guid; IsSubscribed?: Edm.Boolean; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; RoomId?: Edm.Guid; Username?: Edm.String });

        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        DomainId: Edm.Guid;
        Id: Edm.Guid;
        IsSubscribed: Edm.Boolean;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        RoomId: Edm.Guid;
        Username: Edm.String;
        asKoObservable(): ObservableMainVideoCall_JoinedGroupChats;
        static create(): MainVideoCall_JoinedGroupChats;
        static create(initData:any): MainVideoCall_JoinedGroupChats;
    }

}

namespace Main.Replication.Rest {

    export class ObservableMainReplication_FailedTransfer extends $data.Entity {
        constructor();
        constructor(initData: { ActualRequest?: KnockoutObservable<Edm.String>; AdditionalData?: KnockoutObservable<Edm.String>; CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; DeleteMe?: KnockoutObservable<Edm.Boolean>; Error?: KnockoutObservable<Edm.String>; ExternalClientName?: KnockoutObservable<Edm.String>; ExternalId?: KnockoutObservable<Edm.String>; FieldEntityJson?: KnockoutObservable<Edm.String>; FieldId?: KnockoutObservable<Edm.String>; FieldType?: KnockoutObservable<Edm.String>; Hash?: KnockoutObservable<Edm.String>; Id?: KnockoutObservable<Edm.Guid>; Method?: KnockoutObservable<Edm.String>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; Timestamp?: KnockoutObservable<Edm.DateTimeOffset> });

        ActualRequest: KnockoutObservable<Edm.String>;
        AdditionalData: KnockoutObservable<Edm.String>;
        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        DeleteMe: KnockoutObservable<Edm.Boolean>;
        Error: KnockoutObservable<Edm.String>;
        ExternalClientName: KnockoutObservable<Edm.String>;
        ExternalId: KnockoutObservable<Edm.String>;
        FieldEntityJson: KnockoutObservable<Edm.String>;
        FieldId: KnockoutObservable<Edm.String>;
        FieldType: KnockoutObservable<Edm.String>;
        Hash: KnockoutObservable<Edm.String>;
        Id: KnockoutObservable<Edm.Guid>;
        Method: KnockoutObservable<Edm.String>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        Timestamp: KnockoutObservable<Edm.DateTimeOffset>;
        innerInstance: MainReplication_FailedTransfer;
    }

    export class ObservableMainReplication_TransferConfiguration extends $data.Entity {
        constructor();
        constructor(initData: { ClientType?: KnockoutObservable<Main.Replication.Model.ClientType>; Configuration?: KnockoutObservable<Edm.String>; CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; EmailRecipients?: KnockoutObservable<Edm.String>; ExportTypes?: KnockoutObservable<Edm.String>; Id?: KnockoutObservable<Edm.Guid>; ImportTypes?: KnockoutObservable<Edm.String>; IsActive?: KnockoutObservable<Edm.Boolean>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; RoleId?: KnockoutObservable<Edm.Guid> });

        ClientType: KnockoutObservable<Main.Replication.Model.ClientType>;
        Configuration: KnockoutObservable<Edm.String>;
        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        EmailRecipients: KnockoutObservable<Edm.String>;
        ExportTypes: KnockoutObservable<Edm.String>;
        Id: KnockoutObservable<Edm.Guid>;
        ImportTypes: KnockoutObservable<Edm.String>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        RoleId: KnockoutObservable<Edm.Guid>;
        innerInstance: MainReplication_TransferConfiguration;
    }

    export class MainReplication_FailedTransfer extends $data.Entity {
        constructor();
        constructor(initData: { ActualRequest?: Edm.String; AdditionalData?: Edm.String; CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; DeleteMe?: Edm.Boolean; Error?: Edm.String; ExternalClientName?: Edm.String; ExternalId?: Edm.String; FieldEntityJson?: Edm.String; FieldId?: Edm.String; FieldType?: Edm.String; Hash?: Edm.String; Id?: Edm.Guid; Method?: Edm.String; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; Timestamp?: Edm.DateTimeOffset });

        ActualRequest: Edm.String;
        AdditionalData: Edm.String;
        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        DeleteMe: Edm.Boolean;
        Error: Edm.String;
        ExternalClientName: Edm.String;
        ExternalId: Edm.String;
        FieldEntityJson: Edm.String;
        FieldId: Edm.String;
        FieldType: Edm.String;
        Hash: Edm.String;
        Id: Edm.Guid;
        Method: Edm.String;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        Timestamp: Edm.DateTimeOffset;
        asKoObservable(): ObservableMainReplication_FailedTransfer;
        static create(): MainReplication_FailedTransfer;
        static create(initData:any): MainReplication_FailedTransfer;
    }

    export class MainReplication_TransferConfiguration extends $data.Entity {
        constructor();
        constructor(initData: { ClientType?: Main.Replication.Model.ClientType; Configuration?: Edm.String; CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; EmailRecipients?: Edm.String; ExportTypes?: Edm.String; Id?: Edm.Guid; ImportTypes?: Edm.String; IsActive?: Edm.Boolean; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; RoleId?: Edm.Guid });

        ClientType: Main.Replication.Model.ClientType;
        Configuration: Edm.String;
        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        EmailRecipients: Edm.String;
        ExportTypes: Edm.String;
        Id: Edm.Guid;
        ImportTypes: Edm.String;
        IsActive: Edm.Boolean;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        RoleId: Edm.Guid;
        asKoObservable(): ObservableMainReplication_TransferConfiguration;
        static create(): MainReplication_TransferConfiguration;
        static create(initData:any): MainReplication_TransferConfiguration;
    }

    export class ObservableReplicationState extends $data.Entity {
        constructor();
        constructor(initData: { ExternalData?: KnockoutObservable<Edm.String>; ExternalId?: KnockoutObservable<Edm.String>; Id?: KnockoutObservable<Edm.String>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset> });

        ExternalData: KnockoutObservable<Edm.String>;
        ExternalId: KnockoutObservable<Edm.String>;
        Id: KnockoutObservable<Edm.String>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        innerInstance: ReplicationState;
    }

    export class ReplicationState extends $data.Entity {
        constructor();
        constructor(initData: { ExternalData?: Edm.String; ExternalId?: Edm.String; Id?: Edm.String; ModifyDate?: Edm.DateTimeOffset });

        ExternalData: Edm.String;
        ExternalId: Edm.String;
        Id: Edm.String;
        ModifyDate: Edm.DateTimeOffset;
        asKoObservable(): ObservableReplicationState;
        static create(): ReplicationState;
        static create(initData:any): ReplicationState;
    }

}

namespace Main.Replication.Rest.Model {

    export class ObservableMainReplication_ReplicationGroupSetting extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; Id?: KnockoutObservable<Edm.Guid>; IsActive?: KnockoutObservable<Edm.Boolean>; IsEnabled?: KnockoutObservable<Edm.Boolean>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; Name?: KnockoutObservable<Edm.String>; Parameter?: KnockoutObservable<Edm.Int32> });

        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        Id: KnockoutObservable<Edm.Guid>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        IsEnabled: KnockoutObservable<Edm.Boolean>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        Name: KnockoutObservable<Edm.String>;
        Parameter: KnockoutObservable<Edm.Int32>;
        innerInstance: MainReplication_ReplicationGroupSetting;
    }

    export class MainReplication_ReplicationGroupSetting extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; Id?: Edm.Guid; IsActive?: Edm.Boolean; IsEnabled?: Edm.Boolean; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; Name?: Edm.String; Parameter?: Edm.Int32 });

        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        Id: Edm.Guid;
        IsActive: Edm.Boolean;
        IsEnabled: Edm.Boolean;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        Name: Edm.String;
        Parameter: Edm.Int32;
        asKoObservable(): ObservableMainReplication_ReplicationGroupSetting;
        static create(): MainReplication_ReplicationGroupSetting;
        static create(initData:any): MainReplication_ReplicationGroupSetting;
    }

}

namespace Main.Localization.Rest.Model {

    export class ObservableMainLocalization_Localization extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; DomainId?: KnockoutObservable<Edm.Guid>; Id?: KnockoutObservable<Edm.Guid>; IsActive?: KnockoutObservable<Edm.Boolean>; Language?: KnockoutObservable<Edm.String>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; Name?: KnockoutObservable<Edm.String>; Plugin?: KnockoutObservable<Edm.String>; Value?: KnockoutObservable<Edm.String> });

        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        DomainId: KnockoutObservable<Edm.Guid>;
        Id: KnockoutObservable<Edm.Guid>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        Language: KnockoutObservable<Edm.String>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        Name: KnockoutObservable<Edm.String>;
        Plugin: KnockoutObservable<Edm.String>;
        Value: KnockoutObservable<Edm.String>;
        innerInstance: MainLocalization_Localization;
    }

    export class MainLocalization_Localization extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; DomainId?: Edm.Guid; Id?: Edm.Guid; IsActive?: Edm.Boolean; Language?: Edm.String; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; Name?: Edm.String; Plugin?: Edm.String; Value?: Edm.String });

        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        DomainId: Edm.Guid;
        Id: Edm.Guid;
        IsActive: Edm.Boolean;
        Language: Edm.String;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        Name: Edm.String;
        Plugin: Edm.String;
        Value: Edm.String;
        asKoObservable(): ObservableMainLocalization_Localization;
        static create(): MainLocalization_Localization;
        static create(initData:any): MainLocalization_Localization;
    }

}

namespace Main.Flow.Rest.Model {

    export class ObservableMainFlow_FlowItem extends $data.Entity {
        constructor();
        constructor(initData: { Category?: KnockoutObservable<Crm.Library.Model.PostingCategory>; CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; DomainId?: KnockoutObservable<Edm.Guid>; EntityId?: KnockoutObservable<Edm.String>; EntityTypeName?: KnockoutObservable<Edm.String>; Id?: KnockoutObservable<Edm.Int32>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; PostingState?: KnockoutObservable<Crm.Library.Model.PostingState>; PostingType?: KnockoutObservable<Crm.Library.Model.PostingType>; Retries?: KnockoutObservable<Edm.Int32>; RetryAfter?: KnockoutObservable<Edm.DateTimeOffset>; RuleKey?: KnockoutObservable<Edm.Guid>; SerializedEntity?: KnockoutObservable<Edm.String>; StateDetails?: KnockoutObservable<Edm.String>; TransactionId?: KnockoutObservable<Edm.String> });

        Category: KnockoutObservable<Crm.Library.Model.PostingCategory>;
        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        DomainId: KnockoutObservable<Edm.Guid>;
        EntityId: KnockoutObservable<Edm.String>;
        EntityTypeName: KnockoutObservable<Edm.String>;
        Id: KnockoutObservable<Edm.Int32>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        PostingState: KnockoutObservable<Crm.Library.Model.PostingState>;
        PostingType: KnockoutObservable<Crm.Library.Model.PostingType>;
        Retries: KnockoutObservable<Edm.Int32>;
        RetryAfter: KnockoutObservable<Edm.DateTimeOffset>;
        RuleKey: KnockoutObservable<Edm.Guid>;
        SerializedEntity: KnockoutObservable<Edm.String>;
        StateDetails: KnockoutObservable<Edm.String>;
        TransactionId: KnockoutObservable<Edm.String>;
        innerInstance: MainFlow_FlowItem;
    }

    export class ObservableMainFlow_FlowRule extends $data.Entity {
        constructor();
        constructor(initData: { Action?: KnockoutObservable<Edm.String>; CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; Description?: KnockoutObservable<Edm.String>; DomainId?: KnockoutObservable<Edm.Guid>; Endpoint?: KnockoutObservable<Edm.String>; EntityType?: KnockoutObservable<Edm.String>; Id?: KnockoutObservable<Edm.Guid>; IsActive?: KnockoutObservable<Edm.Boolean>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; Password?: KnockoutObservable<Edm.String>; Username?: KnockoutObservable<Edm.String> });

        Action: KnockoutObservable<Edm.String>;
        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        Description: KnockoutObservable<Edm.String>;
        DomainId: KnockoutObservable<Edm.Guid>;
        Endpoint: KnockoutObservable<Edm.String>;
        EntityType: KnockoutObservable<Edm.String>;
        Id: KnockoutObservable<Edm.Guid>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        Password: KnockoutObservable<Edm.String>;
        Username: KnockoutObservable<Edm.String>;
        innerInstance: MainFlow_FlowRule;
    }

    export class MainFlow_FlowItem extends $data.Entity {
        constructor();
        constructor(initData: { Category?: Crm.Library.Model.PostingCategory; CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; DomainId?: Edm.Guid; EntityId?: Edm.String; EntityTypeName?: Edm.String; Id?: Edm.Int32; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; PostingState?: Crm.Library.Model.PostingState; PostingType?: Crm.Library.Model.PostingType; Retries?: Edm.Int32; RetryAfter?: Edm.DateTimeOffset; RuleKey?: Edm.Guid; SerializedEntity?: Edm.String; StateDetails?: Edm.String; TransactionId?: Edm.String });

        Category: Crm.Library.Model.PostingCategory;
        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        DomainId: Edm.Guid;
        EntityId: Edm.String;
        EntityTypeName: Edm.String;
        Id: Edm.Int32;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        PostingState: Crm.Library.Model.PostingState;
        PostingType: Crm.Library.Model.PostingType;
        Retries: Edm.Int32;
        RetryAfter: Edm.DateTimeOffset;
        RuleKey: Edm.Guid;
        SerializedEntity: Edm.String;
        StateDetails: Edm.String;
        TransactionId: Edm.String;
        asKoObservable(): ObservableMainFlow_FlowItem;
        static create(): MainFlow_FlowItem;
        static create(initData:any): MainFlow_FlowItem;
    }

    export class MainFlow_FlowRule extends $data.Entity {
        constructor();
        constructor(initData: { Action?: Edm.String; CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; Description?: Edm.String; DomainId?: Edm.Guid; Endpoint?: Edm.String; EntityType?: Edm.String; Id?: Edm.Guid; IsActive?: Edm.Boolean; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; Password?: Edm.String; Username?: Edm.String });

        Action: Edm.String;
        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        Description: Edm.String;
        DomainId: Edm.Guid;
        Endpoint: Edm.String;
        EntityType: Edm.String;
        Id: Edm.Guid;
        IsActive: Edm.Boolean;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        Password: Edm.String;
        Username: Edm.String;
        asKoObservable(): ObservableMainFlow_FlowRule;
        static create(): MainFlow_FlowRule;
        static create(initData:any): MainFlow_FlowRule;
    }

}

namespace Main.Rest.Model {

    export class ObservableMain_PermissionSchemaRole extends $data.Entity {
        constructor();
        constructor(initData: { CompilationName?: KnockoutObservable<Edm.String>; ExtensionValues?: KnockoutObservable<Default.ObservableMain_PermissionSchemaRole_ExtensionValues>; FromConfiguration?: KnockoutObservable<Edm.Boolean>; Group?: KnockoutObservable<Edm.String>; IgnoreCircles?: KnockoutObservable<Edm.Boolean>; ModifiedAt?: KnockoutObservable<Edm.DateTimeOffset>; Name?: KnockoutObservable<Edm.String>; PermissionSchemaId?: KnockoutObservable<Edm.Guid>; SourcePermissionSchemaRole?: KnockoutObservable<Main.Rest.Model.ObservableMain_PermissionSchemaRole>; SourcePermissionSchemaRoleId?: KnockoutObservable<Edm.Guid>; UId?: KnockoutObservable<Edm.Guid> });

        CompilationName: KnockoutObservable<Edm.String>;
        ExtensionValues: KnockoutObservable<Default.ObservableMain_PermissionSchemaRole_ExtensionValues>;
        FromConfiguration: KnockoutObservable<Edm.Boolean>;
        Group: KnockoutObservable<Edm.String>;
        IgnoreCircles: KnockoutObservable<Edm.Boolean>;
        ModifiedAt: KnockoutObservable<Edm.DateTimeOffset>;
        Name: KnockoutObservable<Edm.String>;
        PermissionSchemaId: KnockoutObservable<Edm.Guid>;
        SourcePermissionSchemaRole: KnockoutObservable<Main.Rest.Model.ObservableMain_PermissionSchemaRole>;
        SourcePermissionSchemaRoleId: KnockoutObservable<Edm.Guid>;
        UId: KnockoutObservable<Edm.Guid>;
        innerInstance: Main_PermissionSchemaRole;
    }

    export class ObservableMain_EntityType extends $data.Entity {
        constructor();
        constructor(initData: { IsDeleted?: KnockoutObservable<Edm.Boolean>; ModifiedAt?: KnockoutObservable<Edm.DateTimeOffset>; Name?: KnockoutObservable<Edm.String>; UId?: KnockoutObservable<Edm.Guid> });

        IsDeleted: KnockoutObservable<Edm.Boolean>;
        ModifiedAt: KnockoutObservable<Edm.DateTimeOffset>;
        Name: KnockoutObservable<Edm.String>;
        UId: KnockoutObservable<Edm.Guid>;
        innerInstance: Main_EntityType;
    }

    export class ObservableMain_DocumentGeneratorEntry extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; ErrorMessage?: KnockoutObservable<Edm.String>; GeneratorService?: KnockoutObservable<Edm.String>; Id?: KnockoutObservable<Edm.Guid>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; Type?: KnockoutObservable<Edm.String> });

        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        ErrorMessage: KnockoutObservable<Edm.String>;
        GeneratorService: KnockoutObservable<Edm.String>;
        Id: KnockoutObservable<Edm.Guid>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        Type: KnockoutObservable<Edm.String>;
        innerInstance: Main_DocumentGeneratorEntry;
    }

    export class ObservableMain_Device extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; DeviceInfo?: KnockoutObservable<Edm.String>; DomainId?: KnockoutObservable<Edm.Guid>; ExtensionValues?: KnockoutObservable<Default.ObservableMain_Device_ExtensionValues>; Fingerprint?: KnockoutObservable<Edm.String>; Id?: KnockoutObservable<Edm.Guid>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; Token?: KnockoutObservable<Edm.String>; Username?: KnockoutObservable<Edm.String> });

        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        DeviceInfo: KnockoutObservable<Edm.String>;
        DomainId: KnockoutObservable<Edm.Guid>;
        ExtensionValues: KnockoutObservable<Default.ObservableMain_Device_ExtensionValues>;
        Fingerprint: KnockoutObservable<Edm.String>;
        Id: KnockoutObservable<Edm.Guid>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        Token: KnockoutObservable<Edm.String>;
        Username: KnockoutObservable<Edm.String>;
        innerInstance: Main_Device;
    }

    export class ObservableMain_Log extends $data.Entity {
        constructor();
        constructor(initData: { Context?: KnockoutObservable<Edm.String>; CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; Exception?: KnockoutObservable<Edm.String>; Id?: KnockoutObservable<Edm.Int32>; IsActive?: KnockoutObservable<Edm.Boolean>; Level?: KnockoutObservable<Edm.String>; Logger?: KnockoutObservable<Edm.String>; Message?: KnockoutObservable<Edm.String>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; Thread?: KnockoutObservable<Edm.String> });

        Context: KnockoutObservable<Edm.String>;
        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        Exception: KnockoutObservable<Edm.String>;
        Id: KnockoutObservable<Edm.Int32>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        Level: KnockoutObservable<Edm.String>;
        Logger: KnockoutObservable<Edm.String>;
        Message: KnockoutObservable<Edm.String>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        Thread: KnockoutObservable<Edm.String>;
        innerInstance: Main_Log;
    }

    export class ObservableMain_MenuEntry extends $data.Entity {
        constructor();
        constructor(initData: { Category?: KnockoutObservable<Edm.String>; CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; IconClass?: KnockoutObservable<Edm.String>; Id?: KnockoutObservable<Edm.Guid>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; Priority?: KnockoutObservable<Edm.Int32>; Title?: KnockoutObservable<Edm.String> });

        Category: KnockoutObservable<Edm.String>;
        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        IconClass: KnockoutObservable<Edm.String>;
        Id: KnockoutObservable<Edm.Guid>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        Priority: KnockoutObservable<Edm.Int32>;
        Title: KnockoutObservable<Edm.String>;
        innerInstance: Main_MenuEntry;
    }

    export class ObservableMain_Message extends $data.Entity {
        constructor();
        constructor(initData: { AttachmentIds?: KnockoutObservableArray<Edm.Guid>; Bcc?: KnockoutObservableArray<Edm.String>; Body?: KnockoutObservable<Edm.String>; CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; DomainId?: KnockoutObservable<Edm.Guid>; ErrorMessage?: KnockoutObservable<Edm.String>; From?: KnockoutObservable<Edm.String>; Id?: KnockoutObservable<Edm.Guid>; IsActive?: KnockoutObservable<Edm.Boolean>; IsBodyHtml?: KnockoutObservable<Edm.Boolean>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; Recipients?: KnockoutObservableArray<Edm.String>; State?: KnockoutObservable<Main.Model.Enums.MessageState>; Subject?: KnockoutObservable<Edm.String> });

        AttachmentIds: KnockoutObservableArray<Edm.Guid>;
        Bcc: KnockoutObservableArray<Edm.String>;
        Body: KnockoutObservable<Edm.String>;
        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        DomainId: KnockoutObservable<Edm.Guid>;
        ErrorMessage: KnockoutObservable<Edm.String>;
        From: KnockoutObservable<Edm.String>;
        Id: KnockoutObservable<Edm.Guid>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        IsBodyHtml: KnockoutObservable<Edm.Boolean>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        Recipients: KnockoutObservableArray<Edm.String>;
        State: KnockoutObservable<Main.Model.Enums.MessageState>;
        Subject: KnockoutObservable<Edm.String>;
        innerInstance: Main_Message;
    }

    export class ObservableMain_Site extends $data.Entity {
        constructor();
        constructor(initData: { ExtensionValues?: KnockoutObservable<Default.ObservableMain_Site_ExtensionValues>; Id?: KnockoutObservable<Edm.Guid>; ModifiedAt?: KnockoutObservable<Edm.DateTimeOffset>; Name?: KnockoutObservable<Edm.String> });

        ExtensionValues: KnockoutObservable<Default.ObservableMain_Site_ExtensionValues>;
        Id: KnockoutObservable<Edm.Guid>;
        ModifiedAt: KnockoutObservable<Edm.DateTimeOffset>;
        Name: KnockoutObservable<Edm.String>;
        innerInstance: Main_Site;
    }

    export class ObservableMain_UserAsset extends $data.Entity {
        constructor();
        constructor(initData: { AssetKey?: KnockoutObservable<Edm.String>; CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; DaysToNotifyBeforeExpiration?: KnockoutObservable<Edm.Int32>; DomainId?: KnockoutObservable<Edm.Guid>; Id?: KnockoutObservable<Edm.Guid>; IsActive?: KnockoutObservable<Edm.Boolean>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; User?: KnockoutObservable<Main.Rest.Model.ObservableMain_User>; Username?: KnockoutObservable<Edm.String>; ValidFrom?: KnockoutObservable<Edm.DateTimeOffset>; ValidTo?: KnockoutObservable<Edm.DateTimeOffset> });

        AssetKey: KnockoutObservable<Edm.String>;
        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        DaysToNotifyBeforeExpiration: KnockoutObservable<Edm.Int32>;
        DomainId: KnockoutObservable<Edm.Guid>;
        Id: KnockoutObservable<Edm.Guid>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        User: KnockoutObservable<Main.Rest.Model.ObservableMain_User>;
        Username: KnockoutObservable<Edm.String>;
        ValidFrom: KnockoutObservable<Edm.DateTimeOffset>;
        ValidTo: KnockoutObservable<Edm.DateTimeOffset>;
        innerInstance: Main_UserAsset;
    }

    export class ObservableMain_Usergroup extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; DomainId?: KnockoutObservable<Edm.Guid>; ExtensionValues?: KnockoutObservable<Default.ObservableMain_Usergroup_ExtensionValues>; Id?: KnockoutObservable<Edm.Guid>; IsActive?: KnockoutObservable<Edm.Boolean>; Members?: KnockoutObservableArray<Main.Rest.Model.ObservableMain_UserUserGroup>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; MultiFactorAuthenticationMandatory?: KnockoutObservable<Edm.Boolean>; Name?: KnockoutObservable<Edm.String>; UsersIds?: KnockoutObservableArray<Edm.String> });

        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        DomainId: KnockoutObservable<Edm.Guid>;
        ExtensionValues: KnockoutObservable<Default.ObservableMain_Usergroup_ExtensionValues>;
        Id: KnockoutObservable<Edm.Guid>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        Members: KnockoutObservableArray<Main.Rest.Model.ObservableMain_UserUserGroup>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        MultiFactorAuthenticationMandatory: KnockoutObservable<Edm.Boolean>;
        Name: KnockoutObservable<Edm.String>;
        UsersIds: KnockoutObservableArray<Edm.String>;
        innerInstance: Main_Usergroup;
    }

    export class ObservableMain_UserSkill extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; DaysToNotifyBeforeExpiration?: KnockoutObservable<Edm.Int32>; DomainId?: KnockoutObservable<Edm.Guid>; Id?: KnockoutObservable<Edm.Guid>; IsActive?: KnockoutObservable<Edm.Boolean>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; SkillKey?: KnockoutObservable<Edm.String>; User?: KnockoutObservable<Main.Rest.Model.ObservableMain_User>; Username?: KnockoutObservable<Edm.String>; ValidFrom?: KnockoutObservable<Edm.DateTimeOffset>; ValidTo?: KnockoutObservable<Edm.DateTimeOffset> });

        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        DaysToNotifyBeforeExpiration: KnockoutObservable<Edm.Int32>;
        DomainId: KnockoutObservable<Edm.Guid>;
        Id: KnockoutObservable<Edm.Guid>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        SkillKey: KnockoutObservable<Edm.String>;
        User: KnockoutObservable<Main.Rest.Model.ObservableMain_User>;
        Username: KnockoutObservable<Edm.String>;
        ValidFrom: KnockoutObservable<Edm.DateTimeOffset>;
        ValidTo: KnockoutObservable<Edm.DateTimeOffset>;
        innerInstance: Main_UserSkill;
    }

    export class ObservableMain_UserSubscription extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; DomainId?: KnockoutObservable<Edm.Guid>; EntityKey?: KnockoutObservable<Edm.Guid>; EntityType?: KnockoutObservable<Edm.String>; Id?: KnockoutObservable<Edm.Guid>; IsActive?: KnockoutObservable<Edm.Boolean>; IsSubscribed?: KnockoutObservable<Edm.Boolean>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; Username?: KnockoutObservable<Edm.String> });

        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        DomainId: KnockoutObservable<Edm.Guid>;
        EntityKey: KnockoutObservable<Edm.Guid>;
        EntityType: KnockoutObservable<Edm.String>;
        Id: KnockoutObservable<Edm.Guid>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        IsSubscribed: KnockoutObservable<Edm.Boolean>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        Username: KnockoutObservable<Edm.String>;
        innerInstance: Main_UserSubscription;
    }

    export class ObservableMain_User extends $data.Entity {
        constructor();
        constructor(initData: { AdName?: KnockoutObservable<Edm.String>; Avatar?: KnockoutObservable<Edm.String>; CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; DefaultLanguageKey?: KnockoutObservable<Edm.String>; DefaultLocale?: KnockoutObservable<Edm.String>; DischargeDate?: KnockoutObservable<Edm.DateTimeOffset>; Discharged?: KnockoutObservable<Edm.Boolean>; DomainId?: KnockoutObservable<Edm.Guid>; Email?: KnockoutObservable<Edm.String>; ExtensionValues?: KnockoutObservable<Default.ObservableMain_User_ExtensionValues>; FirstName?: KnockoutObservable<Edm.String>; GeneralToken?: KnockoutObservable<Edm.String>; Id?: KnockoutObservable<Edm.String>; IdentificationNo?: KnockoutObservable<Edm.String>; IsActive?: KnockoutObservable<Edm.Boolean>; LastLoginDate?: KnockoutObservable<Edm.DateTimeOffset>; LastName?: KnockoutObservable<Edm.String>; LastStatusUpdate?: KnockoutObservable<Edm.DateTimeOffset>; Latitude?: KnockoutObservable<Edm.Single>; LicensedAt?: KnockoutObservable<Edm.DateTimeOffset>; Longitude?: KnockoutObservable<Edm.Single>; MasterRecordNo?: KnockoutObservable<Edm.String>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; OpenIdIdentifier?: KnockoutObservable<Edm.String>; PasswordChangeRequired?: KnockoutObservable<Edm.Boolean>; PersonnelId?: KnockoutObservable<Edm.String>; Remark?: KnockoutObservable<Edm.String>; RoleIds?: KnockoutObservableArray<Edm.Guid>; Roles?: KnockoutObservableArray<Main.Rest.Model.ObservableMain_PermissionSchemaRole>; TimeZoneName?: KnockoutObservable<Edm.String>; TotpIsSetUp?: KnockoutObservable<Edm.Boolean>; UsergroupIds?: KnockoutObservableArray<Edm.Guid>; UsergroupObjects?: KnockoutObservableArray<Main.Rest.Model.ObservableMain_Usergroup>; Usergroups?: KnockoutObservableArray<Edm.String> });

        AdName: KnockoutObservable<Edm.String>;
        Avatar: KnockoutObservable<Edm.String>;
        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        DefaultLanguageKey: KnockoutObservable<Edm.String>;
        DefaultLocale: KnockoutObservable<Edm.String>;
        DischargeDate: KnockoutObservable<Edm.DateTimeOffset>;
        Discharged: KnockoutObservable<Edm.Boolean>;
        DomainId: KnockoutObservable<Edm.Guid>;
        Email: KnockoutObservable<Edm.String>;
        ExtensionValues: KnockoutObservable<Default.ObservableMain_User_ExtensionValues>;
        FirstName: KnockoutObservable<Edm.String>;
        GeneralToken: KnockoutObservable<Edm.String>;
        Id: KnockoutObservable<Edm.String>;
        IdentificationNo: KnockoutObservable<Edm.String>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        LastLoginDate: KnockoutObservable<Edm.DateTimeOffset>;
        LastName: KnockoutObservable<Edm.String>;
        LastStatusUpdate: KnockoutObservable<Edm.DateTimeOffset>;
        Latitude: KnockoutObservable<Edm.Single>;
        LicensedAt: KnockoutObservable<Edm.DateTimeOffset>;
        Longitude: KnockoutObservable<Edm.Single>;
        MasterRecordNo: KnockoutObservable<Edm.String>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        OpenIdIdentifier: KnockoutObservable<Edm.String>;
        PasswordChangeRequired: KnockoutObservable<Edm.Boolean>;
        PersonnelId: KnockoutObservable<Edm.String>;
        Remark: KnockoutObservable<Edm.String>;
        RoleIds: KnockoutObservableArray<Edm.Guid>;
        Roles: KnockoutObservableArray<Main.Rest.Model.ObservableMain_PermissionSchemaRole>;
        TimeZoneName: KnockoutObservable<Edm.String>;
        TotpIsSetUp: KnockoutObservable<Edm.Boolean>;
        UsergroupIds: KnockoutObservableArray<Edm.Guid>;
        UsergroupObjects: KnockoutObservableArray<Main.Rest.Model.ObservableMain_Usergroup>;
        Usergroups: KnockoutObservableArray<Edm.String>;
        innerInstance: Main_User;
    }

    export class ObservableMain_UserUserGroup extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; Id?: KnockoutObservable<Edm.Guid>; IsActive?: KnockoutObservable<Edm.Boolean>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; User?: KnockoutObservable<Main.Rest.Model.ObservableMain_User>; UserGroup?: KnockoutObservable<Main.Rest.Model.ObservableMain_Usergroup>; UserGroupKey?: KnockoutObservable<Edm.Guid>; Username?: KnockoutObservable<Edm.String> });

        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        Id: KnockoutObservable<Edm.Guid>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        User: KnockoutObservable<Main.Rest.Model.ObservableMain_User>;
        UserGroup: KnockoutObservable<Main.Rest.Model.ObservableMain_Usergroup>;
        UserGroupKey: KnockoutObservable<Edm.Guid>;
        Username: KnockoutObservable<Edm.String>;
        innerInstance: Main_UserUserGroup;
    }

    export class Main_PermissionSchemaRole extends $data.Entity {
        constructor();
        constructor(initData: { CompilationName?: Edm.String; ExtensionValues?: Default.Main_PermissionSchemaRole_ExtensionValues; FromConfiguration?: Edm.Boolean; Group?: Edm.String; IgnoreCircles?: Edm.Boolean; ModifiedAt?: Edm.DateTimeOffset; Name?: Edm.String; PermissionSchemaId?: Edm.Guid; SourcePermissionSchemaRole?: Main.Rest.Model.Main_PermissionSchemaRole; SourcePermissionSchemaRoleId?: Edm.Guid; UId?: Edm.Guid });

        CompilationName: Edm.String;
        ExtensionValues: Default.Main_PermissionSchemaRole_ExtensionValues;
        FromConfiguration: Edm.Boolean;
        Group: Edm.String;
        IgnoreCircles: Edm.Boolean;
        ModifiedAt: Edm.DateTimeOffset;
        Name: Edm.String;
        PermissionSchemaId: Edm.Guid;
        SourcePermissionSchemaRole: Main.Rest.Model.Main_PermissionSchemaRole;
        SourcePermissionSchemaRoleId: Edm.Guid;
        UId: Edm.Guid;
        asKoObservable(): ObservableMain_PermissionSchemaRole;
        static create(): Main_PermissionSchemaRole;
        static create(initData:any): Main_PermissionSchemaRole;
    }

    export class Main_EntityType extends $data.Entity {
        constructor();
        constructor(initData: { IsDeleted?: Edm.Boolean; ModifiedAt?: Edm.DateTimeOffset; Name?: Edm.String; UId?: Edm.Guid });

        IsDeleted: Edm.Boolean;
        ModifiedAt: Edm.DateTimeOffset;
        Name: Edm.String;
        UId: Edm.Guid;
        asKoObservable(): ObservableMain_EntityType;
        static create(): Main_EntityType;
        static create(initData:any): Main_EntityType;
    }

    export class Main_DocumentGeneratorEntry extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; ErrorMessage?: Edm.String; GeneratorService?: Edm.String; Id?: Edm.Guid; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; Type?: Edm.String });

        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        ErrorMessage: Edm.String;
        GeneratorService: Edm.String;
        Id: Edm.Guid;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        Type: Edm.String;
        asKoObservable(): ObservableMain_DocumentGeneratorEntry;
        static create(): Main_DocumentGeneratorEntry;
        static create(initData:any): Main_DocumentGeneratorEntry;
    }

    export class Main_Device extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; DeviceInfo?: Edm.String; DomainId?: Edm.Guid; ExtensionValues?: Default.Main_Device_ExtensionValues; Fingerprint?: Edm.String; Id?: Edm.Guid; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; Token?: Edm.String; Username?: Edm.String });

        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        DeviceInfo: Edm.String;
        DomainId: Edm.Guid;
        ExtensionValues: Default.Main_Device_ExtensionValues;
        Fingerprint: Edm.String;
        Id: Edm.Guid;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        Token: Edm.String;
        Username: Edm.String;
        asKoObservable(): ObservableMain_Device;
        static create(): Main_Device;
        static create(initData:any): Main_Device;
    }

    export class Main_Log extends $data.Entity {
        constructor();
        constructor(initData: { Context?: Edm.String; CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; Exception?: Edm.String; Id?: Edm.Int32; IsActive?: Edm.Boolean; Level?: Edm.String; Logger?: Edm.String; Message?: Edm.String; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; Thread?: Edm.String });

        Context: Edm.String;
        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        Exception: Edm.String;
        Id: Edm.Int32;
        IsActive: Edm.Boolean;
        Level: Edm.String;
        Logger: Edm.String;
        Message: Edm.String;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        Thread: Edm.String;
        asKoObservable(): ObservableMain_Log;
        static create(): Main_Log;
        static create(initData:any): Main_Log;
    }

    export class Main_MenuEntry extends $data.Entity {
        constructor();
        constructor(initData: { Category?: Edm.String; CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; IconClass?: Edm.String; Id?: Edm.Guid; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; Priority?: Edm.Int32; Title?: Edm.String });

        Category: Edm.String;
        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        IconClass: Edm.String;
        Id: Edm.Guid;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        Priority: Edm.Int32;
        Title: Edm.String;
        asKoObservable(): ObservableMain_MenuEntry;
        static create(): Main_MenuEntry;
        static create(initData:any): Main_MenuEntry;
    }

    export class Main_Message extends $data.Entity {
        constructor();
        constructor(initData: { AttachmentIds?: Edm.Guid[]; Bcc?: Edm.String[]; Body?: Edm.String; CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; DomainId?: Edm.Guid; ErrorMessage?: Edm.String; From?: Edm.String; Id?: Edm.Guid; IsActive?: Edm.Boolean; IsBodyHtml?: Edm.Boolean; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; Recipients?: Edm.String[]; State?: Main.Model.Enums.MessageState; Subject?: Edm.String });

        AttachmentIds: Edm.Guid[];
        Bcc: Edm.String[];
        Body: Edm.String;
        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        DomainId: Edm.Guid;
        ErrorMessage: Edm.String;
        From: Edm.String;
        Id: Edm.Guid;
        IsActive: Edm.Boolean;
        IsBodyHtml: Edm.Boolean;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        Recipients: Edm.String[];
        State: Main.Model.Enums.MessageState;
        Subject: Edm.String;
        asKoObservable(): ObservableMain_Message;
        static create(): Main_Message;
        static create(initData:any): Main_Message;
    }

    export class Main_Site extends $data.Entity {
        constructor();
        constructor(initData: { ExtensionValues?: Default.Main_Site_ExtensionValues; Id?: Edm.Guid; ModifiedAt?: Edm.DateTimeOffset; Name?: Edm.String });

        ExtensionValues: Default.Main_Site_ExtensionValues;
        Id: Edm.Guid;
        ModifiedAt: Edm.DateTimeOffset;
        Name: Edm.String;
        asKoObservable(): ObservableMain_Site;
        static create(): Main_Site;
        static create(initData:any): Main_Site;
    }

    export class Main_UserAsset extends $data.Entity {
        constructor();
        constructor(initData: { AssetKey?: Edm.String; CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; DaysToNotifyBeforeExpiration?: Edm.Int32; DomainId?: Edm.Guid; Id?: Edm.Guid; IsActive?: Edm.Boolean; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; User?: Main.Rest.Model.Main_User; Username?: Edm.String; ValidFrom?: Edm.DateTimeOffset; ValidTo?: Edm.DateTimeOffset });

        AssetKey: Edm.String;
        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        DaysToNotifyBeforeExpiration: Edm.Int32;
        DomainId: Edm.Guid;
        Id: Edm.Guid;
        IsActive: Edm.Boolean;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        User: Main.Rest.Model.Main_User;
        Username: Edm.String;
        ValidFrom: Edm.DateTimeOffset;
        ValidTo: Edm.DateTimeOffset;
        asKoObservable(): ObservableMain_UserAsset;
        static create(): Main_UserAsset;
        static create(initData:any): Main_UserAsset;
    }

    export class Main_Usergroup extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; DomainId?: Edm.Guid; ExtensionValues?: Default.Main_Usergroup_ExtensionValues; Id?: Edm.Guid; IsActive?: Edm.Boolean; Members?: Main.Rest.Model.Main_UserUserGroup[]; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; MultiFactorAuthenticationMandatory?: Edm.Boolean; Name?: Edm.String; UsersIds?: Edm.String[] });

        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        DomainId: Edm.Guid;
        ExtensionValues: Default.Main_Usergroup_ExtensionValues;
        Id: Edm.Guid;
        IsActive: Edm.Boolean;
        Members: Main.Rest.Model.Main_UserUserGroup[];
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        MultiFactorAuthenticationMandatory: Edm.Boolean;
        Name: Edm.String;
        UsersIds: Edm.String[];
        asKoObservable(): ObservableMain_Usergroup;
        static create(): Main_Usergroup;
        static create(initData:any): Main_Usergroup;
    }

    export class Main_UserSkill extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; DaysToNotifyBeforeExpiration?: Edm.Int32; DomainId?: Edm.Guid; Id?: Edm.Guid; IsActive?: Edm.Boolean; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; SkillKey?: Edm.String; User?: Main.Rest.Model.Main_User; Username?: Edm.String; ValidFrom?: Edm.DateTimeOffset; ValidTo?: Edm.DateTimeOffset });

        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        DaysToNotifyBeforeExpiration: Edm.Int32;
        DomainId: Edm.Guid;
        Id: Edm.Guid;
        IsActive: Edm.Boolean;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        SkillKey: Edm.String;
        User: Main.Rest.Model.Main_User;
        Username: Edm.String;
        ValidFrom: Edm.DateTimeOffset;
        ValidTo: Edm.DateTimeOffset;
        asKoObservable(): ObservableMain_UserSkill;
        static create(): Main_UserSkill;
        static create(initData:any): Main_UserSkill;
    }

    export class Main_UserSubscription extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; DomainId?: Edm.Guid; EntityKey?: Edm.Guid; EntityType?: Edm.String; Id?: Edm.Guid; IsActive?: Edm.Boolean; IsSubscribed?: Edm.Boolean; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; Username?: Edm.String });

        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        DomainId: Edm.Guid;
        EntityKey: Edm.Guid;
        EntityType: Edm.String;
        Id: Edm.Guid;
        IsActive: Edm.Boolean;
        IsSubscribed: Edm.Boolean;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        Username: Edm.String;
        asKoObservable(): ObservableMain_UserSubscription;
        static create(): Main_UserSubscription;
        static create(initData:any): Main_UserSubscription;
    }

    export class Main_User extends $data.Entity {
        constructor();
        constructor(initData: { AdName?: Edm.String; Avatar?: Edm.String; CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; DefaultLanguageKey?: Edm.String; DefaultLocale?: Edm.String; DischargeDate?: Edm.DateTimeOffset; Discharged?: Edm.Boolean; DomainId?: Edm.Guid; Email?: Edm.String; ExtensionValues?: Default.Main_User_ExtensionValues; FirstName?: Edm.String; GeneralToken?: Edm.String; Id?: Edm.String; IdentificationNo?: Edm.String; IsActive?: Edm.Boolean; LastLoginDate?: Edm.DateTimeOffset; LastName?: Edm.String; LastStatusUpdate?: Edm.DateTimeOffset; Latitude?: Edm.Single; LicensedAt?: Edm.DateTimeOffset; Longitude?: Edm.Single; MasterRecordNo?: Edm.String; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; OpenIdIdentifier?: Edm.String; PasswordChangeRequired?: Edm.Boolean; PersonnelId?: Edm.String; Remark?: Edm.String; RoleIds?: Edm.Guid[]; Roles?: Main.Rest.Model.Main_PermissionSchemaRole[]; TimeZoneName?: Edm.String; TotpIsSetUp?: Edm.Boolean; UsergroupIds?: Edm.Guid[]; UsergroupObjects?: Main.Rest.Model.Main_Usergroup[]; Usergroups?: Edm.String[] });

        AdName: Edm.String;
        Avatar: Edm.String;
        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        DefaultLanguageKey: Edm.String;
        DefaultLocale: Edm.String;
        DischargeDate: Edm.DateTimeOffset;
        Discharged: Edm.Boolean;
        DomainId: Edm.Guid;
        Email: Edm.String;
        ExtensionValues: Default.Main_User_ExtensionValues;
        FirstName: Edm.String;
        GeneralToken: Edm.String;
        Id: Edm.String;
        IdentificationNo: Edm.String;
        IsActive: Edm.Boolean;
        LastLoginDate: Edm.DateTimeOffset;
        LastName: Edm.String;
        LastStatusUpdate: Edm.DateTimeOffset;
        Latitude: Edm.Single;
        LicensedAt: Edm.DateTimeOffset;
        Longitude: Edm.Single;
        MasterRecordNo: Edm.String;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        OpenIdIdentifier: Edm.String;
        PasswordChangeRequired: Edm.Boolean;
        PersonnelId: Edm.String;
        Remark: Edm.String;
        RoleIds: Edm.Guid[];
        Roles: Main.Rest.Model.Main_PermissionSchemaRole[];
        TimeZoneName: Edm.String;
        TotpIsSetUp: Edm.Boolean;
        UsergroupIds: Edm.Guid[];
        UsergroupObjects: Main.Rest.Model.Main_Usergroup[];
        Usergroups: Edm.String[];
        asKoObservable(): ObservableMain_User;
        static create(): Main_User;
        static create(initData:any): Main_User;
    }

    export class Main_UserUserGroup extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; Id?: Edm.Guid; IsActive?: Edm.Boolean; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; User?: Main.Rest.Model.Main_User; UserGroup?: Main.Rest.Model.Main_Usergroup; UserGroupKey?: Edm.Guid; Username?: Edm.String });

        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        Id: Edm.Guid;
        IsActive: Edm.Boolean;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        User: Main.Rest.Model.Main_User;
        UserGroup: Main.Rest.Model.Main_Usergroup;
        UserGroupKey: Edm.Guid;
        Username: Edm.String;
        asKoObservable(): ObservableMain_UserUserGroup;
        static create(): Main_UserUserGroup;
        static create(initData:any): Main_UserUserGroup;
    }

    export class ObservablePermissionGroupPermission extends $data.Entity {
        constructor();
        constructor(initData: { ImportedBy?: KnockoutObservableArray<Edm.String>; ImportedPermissions?: KnockoutObservableArray<Edm.String>; PermissionName?: KnockoutObservable<Edm.String> });

        ImportedBy: KnockoutObservableArray<Edm.String>;
        ImportedPermissions: KnockoutObservableArray<Edm.String>;
        PermissionName: KnockoutObservable<Edm.String>;
        innerInstance: PermissionGroupPermission;
    }

    export class ObservableRolePermissionGroup extends $data.Entity {
        constructor();
        constructor(initData: { Name?: KnockoutObservable<Edm.String>; Permissions?: KnockoutObservableArray<Main.Rest.Model.PermissionGroupPermission> });

        Name: KnockoutObservable<Edm.String>;
        Permissions: KnockoutObservableArray<Main.Rest.Model.PermissionGroupPermission>;
        innerInstance: RolePermissionGroup;
    }

    export class ObservableLookupProperty extends $data.Entity {
        constructor();
        constructor(initData: { Extension?: KnockoutObservable<Edm.Boolean>; Hidden?: KnockoutObservable<Edm.Boolean>; Name?: KnockoutObservable<Edm.String>; PropertyTypeName?: KnockoutObservable<Edm.String>; Required?: KnockoutObservable<Edm.Boolean>; Shared?: KnockoutObservable<Edm.Boolean> });

        Extension: KnockoutObservable<Edm.Boolean>;
        Hidden: KnockoutObservable<Edm.Boolean>;
        Name: KnockoutObservable<Edm.String>;
        PropertyTypeName: KnockoutObservable<Edm.String>;
        Required: KnockoutObservable<Edm.Boolean>;
        Shared: KnockoutObservable<Edm.Boolean>;
        innerInstance: LookupProperty;
    }

    export class ObservablePluginDescriptor extends $data.Entity {
        constructor();
        constructor(initData: { IsCustomerPlugin?: KnockoutObservable<Edm.Boolean>; PluginName?: KnockoutObservable<Edm.String>; RequiredPluginNames?: KnockoutObservableArray<Edm.String> });

        IsCustomerPlugin: KnockoutObservable<Edm.Boolean>;
        PluginName: KnockoutObservable<Edm.String>;
        RequiredPluginNames: KnockoutObservableArray<Edm.String>;
        innerInstance: PluginDescriptor;
    }

    export class ObservableTheme extends $data.Entity {
        constructor();
        constructor(initData: { Color?: KnockoutObservable<Edm.String>; Name?: KnockoutObservable<Edm.String> });

        Color: KnockoutObservable<Edm.String>;
        Name: KnockoutObservable<Edm.String>;
        innerInstance: Theme;
    }

    export class ObservableRolePermissions extends $data.Entity {
        constructor();
        constructor(initData: { PermissionGroups?: KnockoutObservableArray<Main.Rest.Model.RolePermissionGroup>; Permissions?: KnockoutObservableArray<Edm.String>; SourcePermissions?: KnockoutObservableArray<Edm.String> });

        PermissionGroups: KnockoutObservableArray<Main.Rest.Model.RolePermissionGroup>;
        Permissions: KnockoutObservableArray<Edm.String>;
        SourcePermissions: KnockoutObservableArray<Edm.String>;
        innerInstance: RolePermissions;
    }

    export class ObservableUserSignalRInformation extends $data.Entity {
        constructor();
        constructor(initData: { Connected?: KnockoutObservable<Edm.Boolean>; Id?: KnockoutObservable<Edm.String>; JavaScriptLogLevel?: KnockoutObservable<Crm.Library.Signalr.JavaScriptLogLevel>; LocalDatabaseLogs?: KnockoutObservableArray<Edm.String>; LocalStorageLogs?: KnockoutObservableArray<Edm.String> });

        Connected: KnockoutObservable<Edm.Boolean>;
        Id: KnockoutObservable<Edm.String>;
        JavaScriptLogLevel: KnockoutObservable<Crm.Library.Signalr.JavaScriptLogLevel>;
        LocalDatabaseLogs: KnockoutObservableArray<Edm.String>;
        LocalStorageLogs: KnockoutObservableArray<Edm.String>;
        innerInstance: UserSignalRInformation;
    }

    export class ObservablePermissionRest extends $data.Entity {
        constructor();
        constructor(initData: { CircleConstraint?: KnockoutObservable<LMobile.Unicore.CircleConstraint>; CompilationName?: KnockoutObservable<Edm.String>; DomainAccessMergeType?: KnockoutObservable<LMobile.Unicore.DomainAccessMergeType>; DomainAccessOptions?: KnockoutObservable<LMobile.Unicore.DomainAccessOptions>; Group?: KnockoutObservable<Edm.String>; ImportedPermissions?: KnockoutObservableArray<Edm.String>; ModifiedAt?: KnockoutObservable<Edm.DateTimeOffset>; Name?: KnockoutObservable<Edm.String>; SchemaUsage?: KnockoutObservable<Edm.String>; UId?: KnockoutObservable<Edm.Guid> });

        CircleConstraint: KnockoutObservable<LMobile.Unicore.CircleConstraint>;
        CompilationName: KnockoutObservable<Edm.String>;
        DomainAccessMergeType: KnockoutObservable<LMobile.Unicore.DomainAccessMergeType>;
        DomainAccessOptions: KnockoutObservable<LMobile.Unicore.DomainAccessOptions>;
        Group: KnockoutObservable<Edm.String>;
        ImportedPermissions: KnockoutObservableArray<Edm.String>;
        ModifiedAt: KnockoutObservable<Edm.DateTimeOffset>;
        Name: KnockoutObservable<Edm.String>;
        SchemaUsage: KnockoutObservable<Edm.String>;
        UId: KnockoutObservable<Edm.Guid>;
        innerInstance: PermissionRest;
    }

    export class ObservableLookupType extends $data.Entity {
        constructor();
        constructor(initData: { FullName?: KnockoutObservable<Edm.String>; IsEditable?: KnockoutObservable<Edm.Boolean>; LookupProperties?: KnockoutObservableArray<Main.Rest.Model.LookupProperty>; Name?: KnockoutObservable<Edm.String> });

        FullName: KnockoutObservable<Edm.String>;
        IsEditable: KnockoutObservable<Edm.Boolean>;
        LookupProperties: KnockoutObservableArray<Main.Rest.Model.LookupProperty>;
        Name: KnockoutObservable<Edm.String>;
        innerInstance: LookupType;
    }

    export class PermissionGroupPermission extends $data.Entity {
        constructor();
        constructor(initData: { ImportedBy?: Edm.String[]; ImportedPermissions?: Edm.String[]; PermissionName?: Edm.String });

        ImportedBy: Edm.String[];
        ImportedPermissions: Edm.String[];
        PermissionName: Edm.String;
        asKoObservable(): ObservablePermissionGroupPermission;
        static create(): PermissionGroupPermission;
        static create(initData:any): PermissionGroupPermission;
    }

    export class RolePermissionGroup extends $data.Entity {
        constructor();
        constructor(initData: { Name?: Edm.String; Permissions?: Main.Rest.Model.PermissionGroupPermission[] });

        Name: Edm.String;
        Permissions: Main.Rest.Model.PermissionGroupPermission[];
        asKoObservable(): ObservableRolePermissionGroup;
        static create(): RolePermissionGroup;
        static create(initData:any): RolePermissionGroup;
    }

    export class LookupProperty extends $data.Entity {
        constructor();
        constructor(initData: { Extension?: Edm.Boolean; Hidden?: Edm.Boolean; Name?: Edm.String; PropertyTypeName?: Edm.String; Required?: Edm.Boolean; Shared?: Edm.Boolean });

        Extension: Edm.Boolean;
        Hidden: Edm.Boolean;
        Name: Edm.String;
        PropertyTypeName: Edm.String;
        Required: Edm.Boolean;
        Shared: Edm.Boolean;
        asKoObservable(): ObservableLookupProperty;
        static create(): LookupProperty;
        static create(initData:any): LookupProperty;
    }

    export class PluginDescriptor extends $data.Entity {
        constructor();
        constructor(initData: { IsCustomerPlugin?: Edm.Boolean; PluginName?: Edm.String; RequiredPluginNames?: Edm.String[] });

        IsCustomerPlugin: Edm.Boolean;
        PluginName: Edm.String;
        RequiredPluginNames: Edm.String[];
        asKoObservable(): ObservablePluginDescriptor;
        static create(): PluginDescriptor;
        static create(initData:any): PluginDescriptor;
    }

    export class Theme extends $data.Entity {
        constructor();
        constructor(initData: { Color?: Edm.String; Name?: Edm.String });

        Color: Edm.String;
        Name: Edm.String;
        asKoObservable(): ObservableTheme;
        static create(): Theme;
        static create(initData:any): Theme;
    }

    export class RolePermissions extends $data.Entity {
        constructor();
        constructor(initData: { PermissionGroups?: Main.Rest.Model.RolePermissionGroup[]; Permissions?: Edm.String[]; SourcePermissions?: Edm.String[] });

        PermissionGroups: Main.Rest.Model.RolePermissionGroup[];
        Permissions: Edm.String[];
        SourcePermissions: Edm.String[];
        asKoObservable(): ObservableRolePermissions;
        static create(): RolePermissions;
        static create(initData:any): RolePermissions;
    }

    export class UserSignalRInformation extends $data.Entity {
        constructor();
        constructor(initData: { Connected?: Edm.Boolean; Id?: Edm.String; JavaScriptLogLevel?: Crm.Library.Signalr.JavaScriptLogLevel; LocalDatabaseLogs?: Edm.String[]; LocalStorageLogs?: Edm.String[] });

        Connected: Edm.Boolean;
        Id: Edm.String;
        JavaScriptLogLevel: Crm.Library.Signalr.JavaScriptLogLevel;
        LocalDatabaseLogs: Edm.String[];
        LocalStorageLogs: Edm.String[];
        asKoObservable(): ObservableUserSignalRInformation;
        static create(): UserSignalRInformation;
        static create(initData:any): UserSignalRInformation;
    }

    export class PermissionRest extends $data.Entity {
        constructor();
        constructor(initData: { CircleConstraint?: LMobile.Unicore.CircleConstraint; CompilationName?: Edm.String; DomainAccessMergeType?: LMobile.Unicore.DomainAccessMergeType; DomainAccessOptions?: LMobile.Unicore.DomainAccessOptions; Group?: Edm.String; ImportedPermissions?: Edm.String[]; ModifiedAt?: Edm.DateTimeOffset; Name?: Edm.String; SchemaUsage?: Edm.String; UId?: Edm.Guid });

        CircleConstraint: LMobile.Unicore.CircleConstraint;
        CompilationName: Edm.String;
        DomainAccessMergeType: LMobile.Unicore.DomainAccessMergeType;
        DomainAccessOptions: LMobile.Unicore.DomainAccessOptions;
        Group: Edm.String;
        ImportedPermissions: Edm.String[];
        ModifiedAt: Edm.DateTimeOffset;
        Name: Edm.String;
        SchemaUsage: Edm.String;
        UId: Edm.Guid;
        asKoObservable(): ObservablePermissionRest;
        static create(): PermissionRest;
        static create(initData:any): PermissionRest;
    }

    export class LookupType extends $data.Entity {
        constructor();
        constructor(initData: { FullName?: Edm.String; IsEditable?: Edm.Boolean; LookupProperties?: Main.Rest.Model.LookupProperty[]; Name?: Edm.String });

        FullName: Edm.String;
        IsEditable: Edm.Boolean;
        LookupProperties: Main.Rest.Model.LookupProperty[];
        Name: Edm.String;
        asKoObservable(): ObservableLookupType;
        static create(): LookupType;
        static create(initData:any): LookupType;
    }

}

namespace Crm.Library.Rest.Model {

    export class ObservableMain_Posting extends $data.Entity {
        constructor();
        constructor(initData: { Category?: KnockoutObservable<Crm.Library.Model.PostingCategory>; CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; DomainId?: KnockoutObservable<Edm.Guid>; EntityId?: KnockoutObservable<Edm.String>; EntityTypeName?: KnockoutObservable<Edm.String>; Id?: KnockoutObservable<Edm.Int32>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; PostingState?: KnockoutObservable<Crm.Library.Model.PostingState>; PostingType?: KnockoutObservable<Crm.Library.Model.PostingType>; Retries?: KnockoutObservable<Edm.Int32>; RetryAfter?: KnockoutObservable<Edm.DateTimeOffset>; SerializedEntity?: KnockoutObservable<Edm.String>; StateDetails?: KnockoutObservable<Edm.String>; TransactionId?: KnockoutObservable<Edm.String> });

        Category: KnockoutObservable<Crm.Library.Model.PostingCategory>;
        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        DomainId: KnockoutObservable<Edm.Guid>;
        EntityId: KnockoutObservable<Edm.String>;
        EntityTypeName: KnockoutObservable<Edm.String>;
        Id: KnockoutObservable<Edm.Int32>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        PostingState: KnockoutObservable<Crm.Library.Model.PostingState>;
        PostingType: KnockoutObservable<Crm.Library.Model.PostingType>;
        Retries: KnockoutObservable<Edm.Int32>;
        RetryAfter: KnockoutObservable<Edm.DateTimeOffset>;
        SerializedEntity: KnockoutObservable<Edm.String>;
        StateDetails: KnockoutObservable<Edm.String>;
        TransactionId: KnockoutObservable<Edm.String>;
        innerInstance: Main_Posting;
    }

    export class ObservableMain_RecentPage extends $data.Entity {
        constructor();
        constructor(initData: { Category?: KnockoutObservable<Edm.String>; Count?: KnockoutObservable<Edm.Int32>; CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; DomainId?: KnockoutObservable<Edm.Guid>; Id?: KnockoutObservable<Edm.Guid>; IsActive?: KnockoutObservable<Edm.Boolean>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; Title?: KnockoutObservable<Edm.String>; Url?: KnockoutObservable<Edm.String>; Username?: KnockoutObservable<Edm.String> });

        Category: KnockoutObservable<Edm.String>;
        Count: KnockoutObservable<Edm.Int32>;
        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        DomainId: KnockoutObservable<Edm.Guid>;
        Id: KnockoutObservable<Edm.Guid>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        Title: KnockoutObservable<Edm.String>;
        Url: KnockoutObservable<Edm.String>;
        Username: KnockoutObservable<Edm.String>;
        innerInstance: Main_RecentPage;
    }

    export class Main_Posting extends $data.Entity {
        constructor();
        constructor(initData: { Category?: Crm.Library.Model.PostingCategory; CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; DomainId?: Edm.Guid; EntityId?: Edm.String; EntityTypeName?: Edm.String; Id?: Edm.Int32; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; PostingState?: Crm.Library.Model.PostingState; PostingType?: Crm.Library.Model.PostingType; Retries?: Edm.Int32; RetryAfter?: Edm.DateTimeOffset; SerializedEntity?: Edm.String; StateDetails?: Edm.String; TransactionId?: Edm.String });

        Category: Crm.Library.Model.PostingCategory;
        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        DomainId: Edm.Guid;
        EntityId: Edm.String;
        EntityTypeName: Edm.String;
        Id: Edm.Int32;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        PostingState: Crm.Library.Model.PostingState;
        PostingType: Crm.Library.Model.PostingType;
        Retries: Edm.Int32;
        RetryAfter: Edm.DateTimeOffset;
        SerializedEntity: Edm.String;
        StateDetails: Edm.String;
        TransactionId: Edm.String;
        asKoObservable(): ObservableMain_Posting;
        static create(): Main_Posting;
        static create(initData:any): Main_Posting;
    }

    export class Main_RecentPage extends $data.Entity {
        constructor();
        constructor(initData: { Category?: Edm.String; Count?: Edm.Int32; CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; DomainId?: Edm.Guid; Id?: Edm.Guid; IsActive?: Edm.Boolean; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; Title?: Edm.String; Url?: Edm.String; Username?: Edm.String });

        Category: Edm.String;
        Count: Edm.Int32;
        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        DomainId: Edm.Guid;
        Id: Edm.Guid;
        IsActive: Edm.Boolean;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        Title: Edm.String;
        Url: Edm.String;
        Username: Edm.String;
        asKoObservable(): ObservableMain_RecentPage;
        static create(): Main_RecentPage;
        static create(initData:any): Main_RecentPage;
    }

}

namespace Integration.Exchange.Rest {

    export class ObservableIntegrationExchange_ExchangeSyncConfig extends $data.Entity {
        constructor();
        constructor(initData: { Color?: KnockoutObservable<Edm.String>; CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; EntityType?: KnockoutObservable<Edm.String>; FolderName?: KnockoutObservable<Edm.String>; Id?: KnockoutObservable<Edm.Guid>; IsActive?: KnockoutObservable<Edm.Boolean>; IsSyncEnabled?: KnockoutObservable<Edm.Boolean>; LastSyncDate?: KnockoutObservable<Edm.DateTimeOffset>; LastSyncResult?: KnockoutObservable<Edm.String>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; UserName?: KnockoutObservable<Edm.String> });

        Color: KnockoutObservable<Edm.String>;
        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        EntityType: KnockoutObservable<Edm.String>;
        FolderName: KnockoutObservable<Edm.String>;
        Id: KnockoutObservable<Edm.Guid>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        IsSyncEnabled: KnockoutObservable<Edm.Boolean>;
        LastSyncDate: KnockoutObservable<Edm.DateTimeOffset>;
        LastSyncResult: KnockoutObservable<Edm.String>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        UserName: KnockoutObservable<Edm.String>;
        innerInstance: IntegrationExchange_ExchangeSyncConfig;
    }

    export class IntegrationExchange_ExchangeSyncConfig extends $data.Entity {
        constructor();
        constructor(initData: { Color?: Edm.String; CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; EntityType?: Edm.String; FolderName?: Edm.String; Id?: Edm.Guid; IsActive?: Edm.Boolean; IsSyncEnabled?: Edm.Boolean; LastSyncDate?: Edm.DateTimeOffset; LastSyncResult?: Edm.String; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; UserName?: Edm.String });

        Color: Edm.String;
        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        EntityType: Edm.String;
        FolderName: Edm.String;
        Id: Edm.Guid;
        IsActive: Edm.Boolean;
        IsSyncEnabled: Edm.Boolean;
        LastSyncDate: Edm.DateTimeOffset;
        LastSyncResult: Edm.String;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        UserName: Edm.String;
        asKoObservable(): ObservableIntegrationExchange_ExchangeSyncConfig;
        static create(): IntegrationExchange_ExchangeSyncConfig;
        static create(initData:any): IntegrationExchange_ExchangeSyncConfig;
    }

}

namespace Crm.VisitReport.Rest.Model {

    export class ObservableCrmVisitReport_ContactPersonRelationship extends $data.Entity {
        constructor();
        constructor(initData: { Child?: KnockoutObservable<Crm.Rest.Model.ObservableCrm_Person>; ChildId?: KnockoutObservable<Edm.Guid>; CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; DomainId?: KnockoutObservable<Edm.Guid>; Email?: KnockoutObservable<Edm.String>; Firstname?: KnockoutObservable<Edm.String>; Id?: KnockoutObservable<Edm.Guid>; Information?: KnockoutObservable<Edm.String>; IsActive?: KnockoutObservable<Edm.Boolean>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; ParentId?: KnockoutObservable<Edm.Guid>; Phone?: KnockoutObservable<Edm.String>; RelationshipTypeKey?: KnockoutObservable<Edm.String>; Surname?: KnockoutObservable<Edm.String> });

        Child: KnockoutObservable<Crm.Rest.Model.ObservableCrm_Person>;
        ChildId: KnockoutObservable<Edm.Guid>;
        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        DomainId: KnockoutObservable<Edm.Guid>;
        Email: KnockoutObservable<Edm.String>;
        Firstname: KnockoutObservable<Edm.String>;
        Id: KnockoutObservable<Edm.Guid>;
        Information: KnockoutObservable<Edm.String>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        ParentId: KnockoutObservable<Edm.Guid>;
        Phone: KnockoutObservable<Edm.String>;
        RelationshipTypeKey: KnockoutObservable<Edm.String>;
        Surname: KnockoutObservable<Edm.String>;
        innerInstance: CrmVisitReport_ContactPersonRelationship;
    }

    export class ObservableCrmVisitReport_VisitReportRecipient extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; Email?: KnockoutObservable<Edm.String>; Id?: KnockoutObservable<Edm.Guid>; IsActive?: KnockoutObservable<Edm.Boolean>; Language?: KnockoutObservable<Edm.String>; Locale?: KnockoutObservable<Edm.String>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; Visit?: KnockoutObservable<Crm.VisitReport.Rest.Model.ObservableCrmVisitReport_Visit>; VisitId?: KnockoutObservable<Edm.Guid> });

        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        Email: KnockoutObservable<Edm.String>;
        Id: KnockoutObservable<Edm.Guid>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        Language: KnockoutObservable<Edm.String>;
        Locale: KnockoutObservable<Edm.String>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        Visit: KnockoutObservable<Crm.VisitReport.Rest.Model.ObservableCrmVisitReport_Visit>;
        VisitId: KnockoutObservable<Edm.Guid>;
        innerInstance: CrmVisitReport_VisitReportRecipient;
    }

    export class ObservableCrmVisitReport_VisitReport extends $data.Entity {
        constructor();
        constructor(initData: { Company?: KnockoutObservable<Crm.Rest.Model.ObservableCrm_Company>; Completed?: KnockoutObservable<Edm.Boolean>; CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; Date?: KnockoutObservable<Edm.DateTimeOffset>; DomainId?: KnockoutObservable<Edm.Guid>; DynamicForm?: KnockoutObservable<Crm.DynamicForms.Rest.Model.ObservableCrmDynamicForms_DynamicForm>; DynamicFormKey?: KnockoutObservable<Edm.Guid>; Id?: KnockoutObservable<Edm.Guid>; IsActive?: KnockoutObservable<Edm.Boolean>; LegacyId?: KnockoutObservable<Edm.String>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; ReferenceKey?: KnockoutObservable<Edm.Guid>; ReferenceType?: KnockoutObservable<Edm.String>; Responses?: KnockoutObservableArray<Crm.DynamicForms.Rest.Model.ObservableCrmDynamicForms_DynamicFormResponse>; ResponsibleUser?: KnockoutObservable<Edm.String>; ResponsibleUserUser?: KnockoutObservable<Main.Rest.Model.ObservableMain_User>; SendToCustomer?: KnockoutObservable<Edm.Boolean>; Visit?: KnockoutObservable<Crm.VisitReport.Rest.Model.ObservableCrmVisitReport_Visit>; VisitId?: KnockoutObservable<Edm.Guid> });

        Company: KnockoutObservable<Crm.Rest.Model.ObservableCrm_Company>;
        Completed: KnockoutObservable<Edm.Boolean>;
        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        Date: KnockoutObservable<Edm.DateTimeOffset>;
        DomainId: KnockoutObservable<Edm.Guid>;
        DynamicForm: KnockoutObservable<Crm.DynamicForms.Rest.Model.ObservableCrmDynamicForms_DynamicForm>;
        DynamicFormKey: KnockoutObservable<Edm.Guid>;
        Id: KnockoutObservable<Edm.Guid>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        LegacyId: KnockoutObservable<Edm.String>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        ReferenceKey: KnockoutObservable<Edm.Guid>;
        ReferenceType: KnockoutObservable<Edm.String>;
        Responses: KnockoutObservableArray<Crm.DynamicForms.Rest.Model.ObservableCrmDynamicForms_DynamicFormResponse>;
        ResponsibleUser: KnockoutObservable<Edm.String>;
        ResponsibleUserUser: KnockoutObservable<Main.Rest.Model.ObservableMain_User>;
        SendToCustomer: KnockoutObservable<Edm.Boolean>;
        Visit: KnockoutObservable<Crm.VisitReport.Rest.Model.ObservableCrmVisitReport_Visit>;
        VisitId: KnockoutObservable<Edm.Guid>;
        innerInstance: CrmVisitReport_VisitReport;
    }

    export class ObservableCrmVisitReport_Visit extends $data.Entity {
        constructor();
        constructor(initData: { Address?: KnockoutObservable<Crm.Rest.Model.ObservableCrm_Address>; AddressId?: KnockoutObservable<Edm.Guid>; BackgroundInfo?: KnockoutObservable<Edm.String>; CampaignSource?: KnockoutObservable<Edm.Guid>; ContactPerson?: KnockoutObservable<Edm.String>; CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; CustomAim?: KnockoutObservable<Edm.String>; DomainId?: KnockoutObservable<Edm.Guid>; Emails?: KnockoutObservableArray<Crm.Rest.Model.ObservableCrm_Email>; Faxes?: KnockoutObservableArray<Crm.Rest.Model.ObservableCrm_Fax>; Id?: KnockoutObservable<Edm.Guid>; IsActive?: KnockoutObservable<Edm.Boolean>; IsSigned?: KnockoutObservable<Edm.Boolean>; LanguageKey?: KnockoutObservable<Edm.String>; LastActivity?: KnockoutObservable<Edm.DateTimeOffset>; LegacyId?: KnockoutObservable<Edm.String>; LegacyName?: KnockoutObservable<Edm.String>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; Name?: KnockoutObservable<Edm.String>; Notes?: KnockoutObservableArray<Crm.Rest.Model.ObservableCrm_Note>; Parent?: KnockoutObservable<Crm.Rest.Model.ObservableCrm_Company>; ParentId?: KnockoutObservable<Edm.Guid>; ParentName?: KnockoutObservable<Edm.String>; ParentType?: KnockoutObservable<Edm.String>; Phones?: KnockoutObservableArray<Crm.Rest.Model.ObservableCrm_Phone>; PlannedDate?: KnockoutObservable<Edm.DateTimeOffset>; PlannedDuration?: KnockoutObservable<Edm.Duration>; PlannedEndDate?: KnockoutObservable<Edm.DateTimeOffset>; ReportRecipients?: KnockoutObservableArray<Crm.VisitReport.Rest.Model.ObservableCrmVisitReport_VisitReportRecipient>; ReportSent?: KnockoutObservable<Edm.Boolean>; ResponsibleUser?: KnockoutObservable<Edm.String>; ResponsibleUserUser?: KnockoutObservable<Main.Rest.Model.ObservableMain_User>; SignPrivacyPolicyAccepted?: KnockoutObservable<Edm.Boolean>; SignatureContactName?: KnockoutObservable<Edm.String>; SignatureDate?: KnockoutObservable<Edm.DateTimeOffset>; SignatureJson?: KnockoutObservable<Edm.String>; SignatureResponsiblePersonDate?: KnockoutObservable<Edm.DateTimeOffset>; SignatureResponsiblePersonJson?: KnockoutObservable<Edm.String>; SignatureResponsiblePersonName?: KnockoutObservable<Edm.String>; SourceTypeKey?: KnockoutObservable<Edm.String>; StatusKey?: KnockoutObservable<Edm.String>; Visibility?: KnockoutObservable<Crm.Library.BaseModel.Visibility>; VisibleToUserIds?: KnockoutObservableArray<Edm.String>; VisibleToUsergroupIds?: KnockoutObservableArray<Edm.Guid>; VisitAimKey?: KnockoutObservable<Edm.String>; Websites?: KnockoutObservableArray<Crm.Rest.Model.ObservableCrm_Website> });

        Address: KnockoutObservable<Crm.Rest.Model.ObservableCrm_Address>;
        AddressId: KnockoutObservable<Edm.Guid>;
        BackgroundInfo: KnockoutObservable<Edm.String>;
        CampaignSource: KnockoutObservable<Edm.Guid>;
        ContactPerson: KnockoutObservable<Edm.String>;
        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        CustomAim: KnockoutObservable<Edm.String>;
        DomainId: KnockoutObservable<Edm.Guid>;
        Emails: KnockoutObservableArray<Crm.Rest.Model.ObservableCrm_Email>;
        Faxes: KnockoutObservableArray<Crm.Rest.Model.ObservableCrm_Fax>;
        Id: KnockoutObservable<Edm.Guid>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        IsSigned: KnockoutObservable<Edm.Boolean>;
        LanguageKey: KnockoutObservable<Edm.String>;
        LastActivity: KnockoutObservable<Edm.DateTimeOffset>;
        LegacyId: KnockoutObservable<Edm.String>;
        LegacyName: KnockoutObservable<Edm.String>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        Name: KnockoutObservable<Edm.String>;
        Notes: KnockoutObservableArray<Crm.Rest.Model.ObservableCrm_Note>;
        Parent: KnockoutObservable<Crm.Rest.Model.ObservableCrm_Company>;
        ParentId: KnockoutObservable<Edm.Guid>;
        ParentName: KnockoutObservable<Edm.String>;
        ParentType: KnockoutObservable<Edm.String>;
        Phones: KnockoutObservableArray<Crm.Rest.Model.ObservableCrm_Phone>;
        PlannedDate: KnockoutObservable<Edm.DateTimeOffset>;
        PlannedDuration: KnockoutObservable<Edm.Duration>;
        PlannedEndDate: KnockoutObservable<Edm.DateTimeOffset>;
        ReportRecipients: KnockoutObservableArray<Crm.VisitReport.Rest.Model.ObservableCrmVisitReport_VisitReportRecipient>;
        ReportSent: KnockoutObservable<Edm.Boolean>;
        ResponsibleUser: KnockoutObservable<Edm.String>;
        ResponsibleUserUser: KnockoutObservable<Main.Rest.Model.ObservableMain_User>;
        SignPrivacyPolicyAccepted: KnockoutObservable<Edm.Boolean>;
        SignatureContactName: KnockoutObservable<Edm.String>;
        SignatureDate: KnockoutObservable<Edm.DateTimeOffset>;
        SignatureJson: KnockoutObservable<Edm.String>;
        SignatureResponsiblePersonDate: KnockoutObservable<Edm.DateTimeOffset>;
        SignatureResponsiblePersonJson: KnockoutObservable<Edm.String>;
        SignatureResponsiblePersonName: KnockoutObservable<Edm.String>;
        SourceTypeKey: KnockoutObservable<Edm.String>;
        StatusKey: KnockoutObservable<Edm.String>;
        Visibility: KnockoutObservable<Crm.Library.BaseModel.Visibility>;
        VisibleToUserIds: KnockoutObservableArray<Edm.String>;
        VisibleToUsergroupIds: KnockoutObservableArray<Edm.Guid>;
        VisitAimKey: KnockoutObservable<Edm.String>;
        Websites: KnockoutObservableArray<Crm.Rest.Model.ObservableCrm_Website>;
        innerInstance: CrmVisitReport_Visit;
    }

    export class CrmVisitReport_ContactPersonRelationship extends $data.Entity {
        constructor();
        constructor(initData: { Child?: Crm.Rest.Model.Crm_Person; ChildId?: Edm.Guid; CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; DomainId?: Edm.Guid; Email?: Edm.String; Firstname?: Edm.String; Id?: Edm.Guid; Information?: Edm.String; IsActive?: Edm.Boolean; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; ParentId?: Edm.Guid; Phone?: Edm.String; RelationshipTypeKey?: Edm.String; Surname?: Edm.String });

        Child: Crm.Rest.Model.Crm_Person;
        ChildId: Edm.Guid;
        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        DomainId: Edm.Guid;
        Email: Edm.String;
        Firstname: Edm.String;
        Id: Edm.Guid;
        Information: Edm.String;
        IsActive: Edm.Boolean;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        ParentId: Edm.Guid;
        Phone: Edm.String;
        RelationshipTypeKey: Edm.String;
        Surname: Edm.String;
        asKoObservable(): ObservableCrmVisitReport_ContactPersonRelationship;
        static create(): CrmVisitReport_ContactPersonRelationship;
        static create(initData:any): CrmVisitReport_ContactPersonRelationship;
    }

    export class CrmVisitReport_VisitReportRecipient extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; Email?: Edm.String; Id?: Edm.Guid; IsActive?: Edm.Boolean; Language?: Edm.String; Locale?: Edm.String; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; Visit?: Crm.VisitReport.Rest.Model.CrmVisitReport_Visit; VisitId?: Edm.Guid });

        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        Email: Edm.String;
        Id: Edm.Guid;
        IsActive: Edm.Boolean;
        Language: Edm.String;
        Locale: Edm.String;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        Visit: Crm.VisitReport.Rest.Model.CrmVisitReport_Visit;
        VisitId: Edm.Guid;
        asKoObservable(): ObservableCrmVisitReport_VisitReportRecipient;
        static create(): CrmVisitReport_VisitReportRecipient;
        static create(initData:any): CrmVisitReport_VisitReportRecipient;
    }

    export class CrmVisitReport_VisitReport extends $data.Entity {
        constructor();
        constructor(initData: { Company?: Crm.Rest.Model.Crm_Company; Completed?: Edm.Boolean; CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; Date?: Edm.DateTimeOffset; DomainId?: Edm.Guid; DynamicForm?: Crm.DynamicForms.Rest.Model.CrmDynamicForms_DynamicForm; DynamicFormKey?: Edm.Guid; Id?: Edm.Guid; IsActive?: Edm.Boolean; LegacyId?: Edm.String; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; ReferenceKey?: Edm.Guid; ReferenceType?: Edm.String; Responses?: Crm.DynamicForms.Rest.Model.CrmDynamicForms_DynamicFormResponse[]; ResponsibleUser?: Edm.String; ResponsibleUserUser?: Main.Rest.Model.Main_User; SendToCustomer?: Edm.Boolean; Visit?: Crm.VisitReport.Rest.Model.CrmVisitReport_Visit; VisitId?: Edm.Guid });

        Company: Crm.Rest.Model.Crm_Company;
        Completed: Edm.Boolean;
        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        Date: Edm.DateTimeOffset;
        DomainId: Edm.Guid;
        DynamicForm: Crm.DynamicForms.Rest.Model.CrmDynamicForms_DynamicForm;
        DynamicFormKey: Edm.Guid;
        Id: Edm.Guid;
        IsActive: Edm.Boolean;
        LegacyId: Edm.String;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        ReferenceKey: Edm.Guid;
        ReferenceType: Edm.String;
        Responses: Crm.DynamicForms.Rest.Model.CrmDynamicForms_DynamicFormResponse[];
        ResponsibleUser: Edm.String;
        ResponsibleUserUser: Main.Rest.Model.Main_User;
        SendToCustomer: Edm.Boolean;
        Visit: Crm.VisitReport.Rest.Model.CrmVisitReport_Visit;
        VisitId: Edm.Guid;
        asKoObservable(): ObservableCrmVisitReport_VisitReport;
        static create(): CrmVisitReport_VisitReport;
        static create(initData:any): CrmVisitReport_VisitReport;
    }

    export class CrmVisitReport_Visit extends $data.Entity {
        constructor();
        constructor(initData: { Address?: Crm.Rest.Model.Crm_Address; AddressId?: Edm.Guid; BackgroundInfo?: Edm.String; CampaignSource?: Edm.Guid; ContactPerson?: Edm.String; CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; CustomAim?: Edm.String; DomainId?: Edm.Guid; Emails?: Crm.Rest.Model.Crm_Email[]; Faxes?: Crm.Rest.Model.Crm_Fax[]; Id?: Edm.Guid; IsActive?: Edm.Boolean; IsSigned?: Edm.Boolean; LanguageKey?: Edm.String; LastActivity?: Edm.DateTimeOffset; LegacyId?: Edm.String; LegacyName?: Edm.String; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; Name?: Edm.String; Notes?: Crm.Rest.Model.Crm_Note[]; Parent?: Crm.Rest.Model.Crm_Company; ParentId?: Edm.Guid; ParentName?: Edm.String; ParentType?: Edm.String; Phones?: Crm.Rest.Model.Crm_Phone[]; PlannedDate?: Edm.DateTimeOffset; PlannedDuration?: Edm.Duration; PlannedEndDate?: Edm.DateTimeOffset; ReportRecipients?: Crm.VisitReport.Rest.Model.CrmVisitReport_VisitReportRecipient[]; ReportSent?: Edm.Boolean; ResponsibleUser?: Edm.String; ResponsibleUserUser?: Main.Rest.Model.Main_User; SignPrivacyPolicyAccepted?: Edm.Boolean; SignatureContactName?: Edm.String; SignatureDate?: Edm.DateTimeOffset; SignatureJson?: Edm.String; SignatureResponsiblePersonDate?: Edm.DateTimeOffset; SignatureResponsiblePersonJson?: Edm.String; SignatureResponsiblePersonName?: Edm.String; SourceTypeKey?: Edm.String; StatusKey?: Edm.String; Visibility?: Crm.Library.BaseModel.Visibility; VisibleToUserIds?: Edm.String[]; VisibleToUsergroupIds?: Edm.Guid[]; VisitAimKey?: Edm.String; Websites?: Crm.Rest.Model.Crm_Website[] });

        Address: Crm.Rest.Model.Crm_Address;
        AddressId: Edm.Guid;
        BackgroundInfo: Edm.String;
        CampaignSource: Edm.Guid;
        ContactPerson: Edm.String;
        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        CustomAim: Edm.String;
        DomainId: Edm.Guid;
        Emails: Crm.Rest.Model.Crm_Email[];
        Faxes: Crm.Rest.Model.Crm_Fax[];
        Id: Edm.Guid;
        IsActive: Edm.Boolean;
        IsSigned: Edm.Boolean;
        LanguageKey: Edm.String;
        LastActivity: Edm.DateTimeOffset;
        LegacyId: Edm.String;
        LegacyName: Edm.String;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        Name: Edm.String;
        Notes: Crm.Rest.Model.Crm_Note[];
        Parent: Crm.Rest.Model.Crm_Company;
        ParentId: Edm.Guid;
        ParentName: Edm.String;
        ParentType: Edm.String;
        Phones: Crm.Rest.Model.Crm_Phone[];
        PlannedDate: Edm.DateTimeOffset;
        PlannedDuration: Edm.Duration;
        PlannedEndDate: Edm.DateTimeOffset;
        ReportRecipients: Crm.VisitReport.Rest.Model.CrmVisitReport_VisitReportRecipient[];
        ReportSent: Edm.Boolean;
        ResponsibleUser: Edm.String;
        ResponsibleUserUser: Main.Rest.Model.Main_User;
        SignPrivacyPolicyAccepted: Edm.Boolean;
        SignatureContactName: Edm.String;
        SignatureDate: Edm.DateTimeOffset;
        SignatureJson: Edm.String;
        SignatureResponsiblePersonDate: Edm.DateTimeOffset;
        SignatureResponsiblePersonJson: Edm.String;
        SignatureResponsiblePersonName: Edm.String;
        SourceTypeKey: Edm.String;
        StatusKey: Edm.String;
        Visibility: Crm.Library.BaseModel.Visibility;
        VisibleToUserIds: Edm.String[];
        VisibleToUsergroupIds: Edm.Guid[];
        VisitAimKey: Edm.String;
        Websites: Crm.Rest.Model.Crm_Website[];
        asKoObservable(): ObservableCrmVisitReport_Visit;
        static create(): CrmVisitReport_Visit;
        static create(initData:any): CrmVisitReport_Visit;
    }

}

namespace Crm.Service.Team.Rest.Model {

    export class ObservableCrmServiceTeam_ArticleUserGroupRelationship extends $data.Entity {
        constructor();
        constructor(initData: { Article?: KnockoutObservable<Crm.Article.Rest.Model.ObservableCrmArticle_Article>; ArticleKey?: KnockoutObservable<Edm.Guid>; CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; DomainId?: KnockoutObservable<Edm.Guid>; From?: KnockoutObservable<Edm.DateTimeOffset>; Id?: KnockoutObservable<Edm.Guid>; IsActive?: KnockoutObservable<Edm.Boolean>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; To?: KnockoutObservable<Edm.DateTimeOffset>; UserGroup?: KnockoutObservable<Main.Rest.Model.ObservableMain_Usergroup>; UserGroupKey?: KnockoutObservable<Edm.Guid> });

        Article: KnockoutObservable<Crm.Article.Rest.Model.ObservableCrmArticle_Article>;
        ArticleKey: KnockoutObservable<Edm.Guid>;
        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        DomainId: KnockoutObservable<Edm.Guid>;
        From: KnockoutObservable<Edm.DateTimeOffset>;
        Id: KnockoutObservable<Edm.Guid>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        To: KnockoutObservable<Edm.DateTimeOffset>;
        UserGroup: KnockoutObservable<Main.Rest.Model.ObservableMain_Usergroup>;
        UserGroupKey: KnockoutObservable<Edm.Guid>;
        innerInstance: CrmServiceTeam_ArticleUserGroupRelationship;
    }

    export class CrmServiceTeam_ArticleUserGroupRelationship extends $data.Entity {
        constructor();
        constructor(initData: { Article?: Crm.Article.Rest.Model.CrmArticle_Article; ArticleKey?: Edm.Guid; CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; DomainId?: Edm.Guid; From?: Edm.DateTimeOffset; Id?: Edm.Guid; IsActive?: Edm.Boolean; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; To?: Edm.DateTimeOffset; UserGroup?: Main.Rest.Model.Main_Usergroup; UserGroupKey?: Edm.Guid });

        Article: Crm.Article.Rest.Model.CrmArticle_Article;
        ArticleKey: Edm.Guid;
        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        DomainId: Edm.Guid;
        From: Edm.DateTimeOffset;
        Id: Edm.Guid;
        IsActive: Edm.Boolean;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        To: Edm.DateTimeOffset;
        UserGroup: Main.Rest.Model.Main_Usergroup;
        UserGroupKey: Edm.Guid;
        asKoObservable(): ObservableCrmServiceTeam_ArticleUserGroupRelationship;
        static create(): CrmServiceTeam_ArticleUserGroupRelationship;
        static create(initData:any): CrmServiceTeam_ArticleUserGroupRelationship;
    }

}

namespace Crm.Service.Rest.Model {

    export class ObservableCrmService_RdsPpStructure extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; Description?: KnockoutObservable<Edm.String>; DomainId?: KnockoutObservable<Edm.Guid>; Id?: KnockoutObservable<Edm.Guid>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; ParentRdsPpStructureKey?: KnockoutObservable<Edm.Guid>; RdsPpClassification?: KnockoutObservable<Edm.String> });

        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        Description: KnockoutObservable<Edm.String>;
        DomainId: KnockoutObservable<Edm.Guid>;
        Id: KnockoutObservable<Edm.Guid>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        ParentRdsPpStructureKey: KnockoutObservable<Edm.Guid>;
        RdsPpClassification: KnockoutObservable<Edm.String>;
        innerInstance: CrmService_RdsPpStructure;
    }

    export class ObservableCrmService_InstallationPosSerial extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; DomainId?: KnockoutObservable<Edm.Guid>; Id?: KnockoutObservable<Edm.Guid>; InstallationPosId?: KnockoutObservable<Edm.Guid>; IsInstalled?: KnockoutObservable<Edm.Boolean>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; SerialNo?: KnockoutObservable<Edm.String> });

        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        DomainId: KnockoutObservable<Edm.Guid>;
        Id: KnockoutObservable<Edm.Guid>;
        InstallationPosId: KnockoutObservable<Edm.Guid>;
        IsInstalled: KnockoutObservable<Edm.Boolean>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        SerialNo: KnockoutObservable<Edm.String>;
        innerInstance: CrmService_InstallationPosSerial;
    }

    export class ObservableCrmService_ServiceOrderDispatch extends $data.Entity {
        constructor();
        constructor(initData: { CancellationReasonKey?: KnockoutObservable<Edm.String>; CancellationRemark?: KnockoutObservable<Edm.String>; CloseDate?: KnockoutObservable<Edm.DateTimeOffset>; ComponentKey?: KnockoutObservable<Edm.String>; CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; CurrentServiceOrderTime?: KnockoutObservable<Crm.Service.Rest.Model.ObservableCrmService_ServiceOrderTime>; CurrentServiceOrderTimeId?: KnockoutObservable<Edm.Guid>; Date?: KnockoutObservable<Edm.DateTimeOffset>; Diagnosis?: KnockoutObservable<Edm.String>; DispatchNo?: KnockoutObservable<Edm.String>; DispatchedUser?: KnockoutObservable<Main.Rest.Model.ObservableMain_User>; DomainId?: KnockoutObservable<Edm.Guid>; EndDate?: KnockoutObservable<Edm.DateTimeOffset>; ExtensionValues?: KnockoutObservable<Default.ObservableCrmService_ServiceOrderDispatch_ExtensionValues>; FollowUpServiceOrder?: KnockoutObservable<Edm.Boolean>; FollowUpServiceOrderRemark?: KnockoutObservable<Edm.String>; Id?: KnockoutObservable<Edm.Guid>; InfoForTechnician?: KnockoutObservable<Edm.String>; IsActive?: KnockoutObservable<Edm.Boolean>; IsFixed?: KnockoutObservable<Edm.Boolean>; LatitudeOnDispatchStart?: KnockoutObservable<Edm.Double>; LongitudeOnDispatchStart?: KnockoutObservable<Edm.Double>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; NetWorkMinutes?: KnockoutObservable<Edm.Int32>; OrderId?: KnockoutObservable<Edm.Guid>; OrderNo?: KnockoutObservable<Edm.String>; RejectReasonKey?: KnockoutObservable<Edm.String>; RejectRemark?: KnockoutObservable<Edm.String>; Remark?: KnockoutObservable<Edm.String>; ReportRecipients?: KnockoutObservableArray<Crm.Service.Rest.Model.ObservableCrmService_ServiceOrderDispatchReportRecipient>; RequiredOperations?: KnockoutObservable<Edm.String>; ServiceOrder?: KnockoutObservable<Crm.Service.Rest.Model.ObservableCrmService_ServiceOrderHead>; ServiceOrderErrorTypes?: KnockoutObservableArray<Crm.Service.Rest.Model.ObservableCrmService_ServiceOrderErrorType>; ServiceOrderExpensePostings?: KnockoutObservableArray<Crm.Service.Rest.Model.ObservableCrmService_ServiceOrderExpensePosting>; ServiceOrderMaterial?: KnockoutObservableArray<Crm.Service.Rest.Model.ObservableCrmService_ServiceOrderMaterial>; ServiceOrderTimeDispatches?: KnockoutObservableArray<Crm.Service.Rest.Model.ObservableCrmService_ServiceOrderTimeDispatch>; ServiceOrderTimePostings?: KnockoutObservableArray<Crm.Service.Rest.Model.ObservableCrmService_ServiceOrderTimePosting>; SignPrivacyPolicyAccepted?: KnockoutObservable<Edm.Boolean>; SignatureContactName?: KnockoutObservable<Edm.String>; SignatureDate?: KnockoutObservable<Edm.DateTimeOffset>; SignatureJson?: KnockoutObservable<Edm.String>; SignatureOriginatorDate?: KnockoutObservable<Edm.DateTimeOffset>; SignatureOriginatorJson?: KnockoutObservable<Edm.String>; SignatureOriginatorName?: KnockoutObservable<Edm.String>; SignatureTechnicianDate?: KnockoutObservable<Edm.DateTimeOffset>; SignatureTechnicianJson?: KnockoutObservable<Edm.String>; SignatureTechnicianName?: KnockoutObservable<Edm.String>; StatusKey?: KnockoutObservable<Edm.String>; TimeZone?: KnockoutObservable<Edm.String>; Username?: KnockoutObservable<Edm.String> });

        CancellationReasonKey: KnockoutObservable<Edm.String>;
        CancellationRemark: KnockoutObservable<Edm.String>;
        CloseDate: KnockoutObservable<Edm.DateTimeOffset>;
        ComponentKey: KnockoutObservable<Edm.String>;
        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        CurrentServiceOrderTime: KnockoutObservable<Crm.Service.Rest.Model.ObservableCrmService_ServiceOrderTime>;
        CurrentServiceOrderTimeId: KnockoutObservable<Edm.Guid>;
        Date: KnockoutObservable<Edm.DateTimeOffset>;
        Diagnosis: KnockoutObservable<Edm.String>;
        DispatchNo: KnockoutObservable<Edm.String>;
        DispatchedUser: KnockoutObservable<Main.Rest.Model.ObservableMain_User>;
        DomainId: KnockoutObservable<Edm.Guid>;
        EndDate: KnockoutObservable<Edm.DateTimeOffset>;
        ExtensionValues: KnockoutObservable<Default.ObservableCrmService_ServiceOrderDispatch_ExtensionValues>;
        FollowUpServiceOrder: KnockoutObservable<Edm.Boolean>;
        FollowUpServiceOrderRemark: KnockoutObservable<Edm.String>;
        Id: KnockoutObservable<Edm.Guid>;
        InfoForTechnician: KnockoutObservable<Edm.String>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        IsFixed: KnockoutObservable<Edm.Boolean>;
        LatitudeOnDispatchStart: KnockoutObservable<Edm.Double>;
        LongitudeOnDispatchStart: KnockoutObservable<Edm.Double>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        NetWorkMinutes: KnockoutObservable<Edm.Int32>;
        OrderId: KnockoutObservable<Edm.Guid>;
        OrderNo: KnockoutObservable<Edm.String>;
        RejectReasonKey: KnockoutObservable<Edm.String>;
        RejectRemark: KnockoutObservable<Edm.String>;
        Remark: KnockoutObservable<Edm.String>;
        ReportRecipients: KnockoutObservableArray<Crm.Service.Rest.Model.ObservableCrmService_ServiceOrderDispatchReportRecipient>;
        RequiredOperations: KnockoutObservable<Edm.String>;
        ServiceOrder: KnockoutObservable<Crm.Service.Rest.Model.ObservableCrmService_ServiceOrderHead>;
        ServiceOrderErrorTypes: KnockoutObservableArray<Crm.Service.Rest.Model.ObservableCrmService_ServiceOrderErrorType>;
        ServiceOrderExpensePostings: KnockoutObservableArray<Crm.Service.Rest.Model.ObservableCrmService_ServiceOrderExpensePosting>;
        ServiceOrderMaterial: KnockoutObservableArray<Crm.Service.Rest.Model.ObservableCrmService_ServiceOrderMaterial>;
        ServiceOrderTimeDispatches: KnockoutObservableArray<Crm.Service.Rest.Model.ObservableCrmService_ServiceOrderTimeDispatch>;
        ServiceOrderTimePostings: KnockoutObservableArray<Crm.Service.Rest.Model.ObservableCrmService_ServiceOrderTimePosting>;
        SignPrivacyPolicyAccepted: KnockoutObservable<Edm.Boolean>;
        SignatureContactName: KnockoutObservable<Edm.String>;
        SignatureDate: KnockoutObservable<Edm.DateTimeOffset>;
        SignatureJson: KnockoutObservable<Edm.String>;
        SignatureOriginatorDate: KnockoutObservable<Edm.DateTimeOffset>;
        SignatureOriginatorJson: KnockoutObservable<Edm.String>;
        SignatureOriginatorName: KnockoutObservable<Edm.String>;
        SignatureTechnicianDate: KnockoutObservable<Edm.DateTimeOffset>;
        SignatureTechnicianJson: KnockoutObservable<Edm.String>;
        SignatureTechnicianName: KnockoutObservable<Edm.String>;
        StatusKey: KnockoutObservable<Edm.String>;
        TimeZone: KnockoutObservable<Edm.String>;
        Username: KnockoutObservable<Edm.String>;
        innerInstance: CrmService_ServiceOrderDispatch;
    }

    export class ObservableCrmService_InstallationAddressRelationship extends $data.Entity {
        constructor();
        constructor(initData: { Child?: KnockoutObservable<Crm.Rest.Model.ObservableCrm_Address>; ChildId?: KnockoutObservable<Edm.Guid>; CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; DomainId?: KnockoutObservable<Edm.Guid>; Id?: KnockoutObservable<Edm.Guid>; Information?: KnockoutObservable<Edm.String>; IsActive?: KnockoutObservable<Edm.Boolean>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; Parent?: KnockoutObservable<Crm.Service.Rest.Model.ObservableCrmService_Installation>; ParentId?: KnockoutObservable<Edm.Guid>; RelationshipTypeKey?: KnockoutObservable<Edm.String> });

        Child: KnockoutObservable<Crm.Rest.Model.ObservableCrm_Address>;
        ChildId: KnockoutObservable<Edm.Guid>;
        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        DomainId: KnockoutObservable<Edm.Guid>;
        Id: KnockoutObservable<Edm.Guid>;
        Information: KnockoutObservable<Edm.String>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        Parent: KnockoutObservable<Crm.Service.Rest.Model.ObservableCrmService_Installation>;
        ParentId: KnockoutObservable<Edm.Guid>;
        RelationshipTypeKey: KnockoutObservable<Edm.String>;
        innerInstance: CrmService_InstallationAddressRelationship;
    }

    export class ObservableCrmService_InstallationCompanyRelationship extends $data.Entity {
        constructor();
        constructor(initData: { Child?: KnockoutObservable<Crm.Rest.Model.ObservableCrm_Company>; ChildId?: KnockoutObservable<Edm.Guid>; CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; DomainId?: KnockoutObservable<Edm.Guid>; Id?: KnockoutObservable<Edm.Guid>; Information?: KnockoutObservable<Edm.String>; IsActive?: KnockoutObservable<Edm.Boolean>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; Parent?: KnockoutObservable<Crm.Service.Rest.Model.ObservableCrmService_Installation>; ParentId?: KnockoutObservable<Edm.Guid>; RelationshipTypeKey?: KnockoutObservable<Edm.String> });

        Child: KnockoutObservable<Crm.Rest.Model.ObservableCrm_Company>;
        ChildId: KnockoutObservable<Edm.Guid>;
        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        DomainId: KnockoutObservable<Edm.Guid>;
        Id: KnockoutObservable<Edm.Guid>;
        Information: KnockoutObservable<Edm.String>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        Parent: KnockoutObservable<Crm.Service.Rest.Model.ObservableCrmService_Installation>;
        ParentId: KnockoutObservable<Edm.Guid>;
        RelationshipTypeKey: KnockoutObservable<Edm.String>;
        innerInstance: CrmService_InstallationCompanyRelationship;
    }

    export class ObservableCrmService_InstallationPersonRelationship extends $data.Entity {
        constructor();
        constructor(initData: { Child?: KnockoutObservable<Crm.Rest.Model.ObservableCrm_Person>; ChildId?: KnockoutObservable<Edm.Guid>; CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; DomainId?: KnockoutObservable<Edm.Guid>; Id?: KnockoutObservable<Edm.Guid>; Information?: KnockoutObservable<Edm.String>; IsActive?: KnockoutObservable<Edm.Boolean>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; Parent?: KnockoutObservable<Crm.Service.Rest.Model.ObservableCrmService_Installation>; ParentId?: KnockoutObservable<Edm.Guid>; RelationshipTypeKey?: KnockoutObservable<Edm.String> });

        Child: KnockoutObservable<Crm.Rest.Model.ObservableCrm_Person>;
        ChildId: KnockoutObservable<Edm.Guid>;
        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        DomainId: KnockoutObservable<Edm.Guid>;
        Id: KnockoutObservable<Edm.Guid>;
        Information: KnockoutObservable<Edm.String>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        Parent: KnockoutObservable<Crm.Service.Rest.Model.ObservableCrmService_Installation>;
        ParentId: KnockoutObservable<Edm.Guid>;
        RelationshipTypeKey: KnockoutObservable<Edm.String>;
        innerInstance: CrmService_InstallationPersonRelationship;
    }

    export class ObservableCrmService_InstallationPos extends $data.Entity {
        constructor();
        constructor(initData: { Article?: KnockoutObservable<Crm.Article.Rest.Model.ObservableCrmArticle_Article>; ArticleId?: KnockoutObservable<Edm.Guid>; BatchNo?: KnockoutObservable<Edm.String>; Children?: KnockoutObservableArray<Crm.Service.Rest.Model.ObservableCrmService_InstallationPos>; Comment?: KnockoutObservable<Edm.String>; CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; Description?: KnockoutObservable<Edm.String>; DomainId?: KnockoutObservable<Edm.Guid>; GroupLevel?: KnockoutObservable<Edm.Int32>; Id?: KnockoutObservable<Edm.Guid>; InstallDate?: KnockoutObservable<Edm.DateTimeOffset>; Installation?: KnockoutObservable<Crm.Service.Rest.Model.ObservableCrmService_Installation>; InstallationId?: KnockoutObservable<Edm.Guid>; IsActive?: KnockoutObservable<Edm.Boolean>; IsGroupItem?: KnockoutObservable<Edm.Boolean>; IsInstalled?: KnockoutObservable<Edm.Boolean>; IsSerial?: KnockoutObservable<Edm.Boolean>; ItemNo?: KnockoutObservable<Edm.String>; LegacyInstallationId?: KnockoutObservable<Edm.String>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; Parent?: KnockoutObservable<Crm.Service.Rest.Model.ObservableCrmService_InstallationPos>; PosNo?: KnockoutObservable<Edm.String>; Quantity?: KnockoutObservable<Edm.Decimal>; QuantityUnitEntry?: KnockoutObservable<Crm.Article.Rest.Model.ObservableCrmArticle_QuantityUnitEntry>; QuantityUnitEntryKey?: KnockoutObservable<Edm.Guid>; QuantityUnitKey?: KnockoutObservable<Edm.String>; RdsPpClassification?: KnockoutObservable<Edm.String>; ReferenceId?: KnockoutObservable<Edm.Guid>; RelatedInstallation?: KnockoutObservable<Crm.Service.Rest.Model.ObservableCrmService_Installation>; RelatedInstallationId?: KnockoutObservable<Edm.Guid>; RemoveDate?: KnockoutObservable<Edm.DateTimeOffset>; SerialNo?: KnockoutObservable<Edm.String>; Supplier?: KnockoutObservable<Edm.String>; WarrantyEndCustomer?: KnockoutObservable<Edm.DateTimeOffset>; WarrantyEndSupplier?: KnockoutObservable<Edm.DateTimeOffset>; WarrantyStartCustomer?: KnockoutObservable<Edm.DateTimeOffset>; WarrantyStartSupplier?: KnockoutObservable<Edm.DateTimeOffset> });

        Article: KnockoutObservable<Crm.Article.Rest.Model.ObservableCrmArticle_Article>;
        ArticleId: KnockoutObservable<Edm.Guid>;
        BatchNo: KnockoutObservable<Edm.String>;
        Children: KnockoutObservableArray<Crm.Service.Rest.Model.ObservableCrmService_InstallationPos>;
        Comment: KnockoutObservable<Edm.String>;
        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        Description: KnockoutObservable<Edm.String>;
        DomainId: KnockoutObservable<Edm.Guid>;
        GroupLevel: KnockoutObservable<Edm.Int32>;
        Id: KnockoutObservable<Edm.Guid>;
        InstallDate: KnockoutObservable<Edm.DateTimeOffset>;
        Installation: KnockoutObservable<Crm.Service.Rest.Model.ObservableCrmService_Installation>;
        InstallationId: KnockoutObservable<Edm.Guid>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        IsGroupItem: KnockoutObservable<Edm.Boolean>;
        IsInstalled: KnockoutObservable<Edm.Boolean>;
        IsSerial: KnockoutObservable<Edm.Boolean>;
        ItemNo: KnockoutObservable<Edm.String>;
        LegacyInstallationId: KnockoutObservable<Edm.String>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        Parent: KnockoutObservable<Crm.Service.Rest.Model.ObservableCrmService_InstallationPos>;
        PosNo: KnockoutObservable<Edm.String>;
        Quantity: KnockoutObservable<Edm.Decimal>;
        QuantityUnitEntry: KnockoutObservable<Crm.Article.Rest.Model.ObservableCrmArticle_QuantityUnitEntry>;
        QuantityUnitEntryKey: KnockoutObservable<Edm.Guid>;
        QuantityUnitKey: KnockoutObservable<Edm.String>;
        RdsPpClassification: KnockoutObservable<Edm.String>;
        ReferenceId: KnockoutObservable<Edm.Guid>;
        RelatedInstallation: KnockoutObservable<Crm.Service.Rest.Model.ObservableCrmService_Installation>;
        RelatedInstallationId: KnockoutObservable<Edm.Guid>;
        RemoveDate: KnockoutObservable<Edm.DateTimeOffset>;
        SerialNo: KnockoutObservable<Edm.String>;
        Supplier: KnockoutObservable<Edm.String>;
        WarrantyEndCustomer: KnockoutObservable<Edm.DateTimeOffset>;
        WarrantyEndSupplier: KnockoutObservable<Edm.DateTimeOffset>;
        WarrantyStartCustomer: KnockoutObservable<Edm.DateTimeOffset>;
        WarrantyStartSupplier: KnockoutObservable<Edm.DateTimeOffset>;
        innerInstance: CrmService_InstallationPos;
    }

    export class ObservableCrmService_Installation extends $data.Entity {
        constructor();
        constructor(initData: { Address?: KnockoutObservable<Crm.Rest.Model.ObservableCrm_Address>; Article?: KnockoutObservable<Crm.Article.Rest.Model.ObservableCrmArticle_Article>; ArticleKey?: KnockoutObservable<Edm.Guid>; BackgroundInfo?: KnockoutObservable<Edm.String>; CampaignSource?: KnockoutObservable<Edm.Guid>; Company?: KnockoutObservable<Crm.Rest.Model.ObservableCrm_Company>; CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; CustomItemDesc?: KnockoutObservable<Edm.String>; CustomItemNo?: KnockoutObservable<Edm.String>; Description?: KnockoutObservable<Edm.String>; DomainId?: KnockoutObservable<Edm.Guid>; ExactPlace?: KnockoutObservable<Edm.String>; ExternalReference?: KnockoutObservable<Edm.String>; FolderId?: KnockoutObservable<Edm.Guid>; Id?: KnockoutObservable<Edm.Guid>; InstallationNo?: KnockoutObservable<Edm.String>; InstallationTypeKey?: KnockoutObservable<Edm.String>; IsActive?: KnockoutObservable<Edm.Boolean>; KickOffDate?: KnockoutObservable<Edm.DateTimeOffset>; LanguageKey?: KnockoutObservable<Edm.String>; LastActivity?: KnockoutObservable<Edm.DateTimeOffset>; LegacyId?: KnockoutObservable<Edm.String>; LegacyInstallationId?: KnockoutObservable<Edm.String>; LegacyName?: KnockoutObservable<Edm.String>; LocationAddressKey?: KnockoutObservable<Edm.Guid>; LocationContactId?: KnockoutObservable<Edm.Guid>; LocationPersonId?: KnockoutObservable<Edm.Guid>; ManufactureDate?: KnockoutObservable<Edm.DateTimeOffset>; ManufacturerKey?: KnockoutObservable<Edm.String>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; Name?: KnockoutObservable<Edm.String>; Notes?: KnockoutObservableArray<Crm.Rest.Model.ObservableCrm_Note>; ParentId?: KnockoutObservable<Edm.Guid>; ParentName?: KnockoutObservable<Edm.String>; ParentType?: KnockoutObservable<Edm.String>; Person?: KnockoutObservable<Crm.Rest.Model.ObservableCrm_Person>; PreferredUser?: KnockoutObservable<Edm.String>; PreferredUserUser?: KnockoutObservable<Main.Rest.Model.ObservableMain_User>; ResponsibleUser?: KnockoutObservable<Edm.String>; ResponsibleUserUser?: KnockoutObservable<Main.Rest.Model.ObservableMain_User>; Room?: KnockoutObservable<Edm.String>; ServiceContractInstallationRelationships?: KnockoutObservableArray<Crm.Service.Rest.Model.ObservableCrmService_ServiceContractInstallationRelationship>; ServiceObject?: KnockoutObservable<Crm.Service.Rest.Model.ObservableCrmService_ServiceObject>; SourceTypeKey?: KnockoutObservable<Edm.String>; Station?: KnockoutObservable<Crm.Rest.Model.ObservableCrm_Station>; StationKey?: KnockoutObservable<Edm.Guid>; StatisticsKeyProductTypeKey?: KnockoutObservable<Edm.String>; StatusKey?: KnockoutObservable<Edm.String>; Tags?: KnockoutObservableArray<Crm.Rest.Model.ObservableCrm_Tag>; TechnicianInformation?: KnockoutObservable<Edm.String>; Visibility?: KnockoutObservable<Crm.Library.BaseModel.Visibility>; VisibleToUserIds?: KnockoutObservableArray<Edm.String>; VisibleToUsergroupIds?: KnockoutObservableArray<Edm.Guid>; WarrantyFrom?: KnockoutObservable<Edm.DateTimeOffset>; WarrantyUntil?: KnockoutObservable<Edm.DateTimeOffset> });

        Address: KnockoutObservable<Crm.Rest.Model.ObservableCrm_Address>;
        Article: KnockoutObservable<Crm.Article.Rest.Model.ObservableCrmArticle_Article>;
        ArticleKey: KnockoutObservable<Edm.Guid>;
        BackgroundInfo: KnockoutObservable<Edm.String>;
        CampaignSource: KnockoutObservable<Edm.Guid>;
        Company: KnockoutObservable<Crm.Rest.Model.ObservableCrm_Company>;
        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        CustomItemDesc: KnockoutObservable<Edm.String>;
        CustomItemNo: KnockoutObservable<Edm.String>;
        Description: KnockoutObservable<Edm.String>;
        DomainId: KnockoutObservable<Edm.Guid>;
        ExactPlace: KnockoutObservable<Edm.String>;
        ExternalReference: KnockoutObservable<Edm.String>;
        FolderId: KnockoutObservable<Edm.Guid>;
        Id: KnockoutObservable<Edm.Guid>;
        InstallationNo: KnockoutObservable<Edm.String>;
        InstallationTypeKey: KnockoutObservable<Edm.String>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        KickOffDate: KnockoutObservable<Edm.DateTimeOffset>;
        LanguageKey: KnockoutObservable<Edm.String>;
        LastActivity: KnockoutObservable<Edm.DateTimeOffset>;
        LegacyId: KnockoutObservable<Edm.String>;
        LegacyInstallationId: KnockoutObservable<Edm.String>;
        LegacyName: KnockoutObservable<Edm.String>;
        LocationAddressKey: KnockoutObservable<Edm.Guid>;
        LocationContactId: KnockoutObservable<Edm.Guid>;
        LocationPersonId: KnockoutObservable<Edm.Guid>;
        ManufactureDate: KnockoutObservable<Edm.DateTimeOffset>;
        ManufacturerKey: KnockoutObservable<Edm.String>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        Name: KnockoutObservable<Edm.String>;
        Notes: KnockoutObservableArray<Crm.Rest.Model.ObservableCrm_Note>;
        ParentId: KnockoutObservable<Edm.Guid>;
        ParentName: KnockoutObservable<Edm.String>;
        ParentType: KnockoutObservable<Edm.String>;
        Person: KnockoutObservable<Crm.Rest.Model.ObservableCrm_Person>;
        PreferredUser: KnockoutObservable<Edm.String>;
        PreferredUserUser: KnockoutObservable<Main.Rest.Model.ObservableMain_User>;
        ResponsibleUser: KnockoutObservable<Edm.String>;
        ResponsibleUserUser: KnockoutObservable<Main.Rest.Model.ObservableMain_User>;
        Room: KnockoutObservable<Edm.String>;
        ServiceContractInstallationRelationships: KnockoutObservableArray<Crm.Service.Rest.Model.ObservableCrmService_ServiceContractInstallationRelationship>;
        ServiceObject: KnockoutObservable<Crm.Service.Rest.Model.ObservableCrmService_ServiceObject>;
        SourceTypeKey: KnockoutObservable<Edm.String>;
        Station: KnockoutObservable<Crm.Rest.Model.ObservableCrm_Station>;
        StationKey: KnockoutObservable<Edm.Guid>;
        StatisticsKeyProductTypeKey: KnockoutObservable<Edm.String>;
        StatusKey: KnockoutObservable<Edm.String>;
        Tags: KnockoutObservableArray<Crm.Rest.Model.ObservableCrm_Tag>;
        TechnicianInformation: KnockoutObservable<Edm.String>;
        Visibility: KnockoutObservable<Crm.Library.BaseModel.Visibility>;
        VisibleToUserIds: KnockoutObservableArray<Edm.String>;
        VisibleToUsergroupIds: KnockoutObservableArray<Edm.Guid>;
        WarrantyFrom: KnockoutObservable<Edm.DateTimeOffset>;
        WarrantyUntil: KnockoutObservable<Edm.DateTimeOffset>;
        innerInstance: CrmService_Installation;
    }

    export class ObservableCrmService_MaintenancePlan extends $data.Entity {
        constructor();
        constructor(initData: { AllowPrematureMaintenance?: KnockoutObservable<Edm.Boolean>; BackgroundInfo?: KnockoutObservable<Edm.String>; CampaignSource?: KnockoutObservable<Edm.Guid>; CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; DomainId?: KnockoutObservable<Edm.Guid>; FirstDate?: KnockoutObservable<Edm.DateTimeOffset>; GenerateMaintenanceOrders?: KnockoutObservable<Edm.Boolean>; Id?: KnockoutObservable<Edm.Guid>; IsActive?: KnockoutObservable<Edm.Boolean>; LanguageKey?: KnockoutObservable<Edm.String>; LastActivity?: KnockoutObservable<Edm.DateTimeOffset>; LegacyId?: KnockoutObservable<Edm.String>; LegacyName?: KnockoutObservable<Edm.String>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; Name?: KnockoutObservable<Edm.String>; NextDate?: KnockoutObservable<Edm.DateTimeOffset>; Notes?: KnockoutObservableArray<Crm.Rest.Model.ObservableCrm_Note>; ParentId?: KnockoutObservable<Edm.Guid>; ParentName?: KnockoutObservable<Edm.String>; ParentType?: KnockoutObservable<Edm.String>; ResponsibleUser?: KnockoutObservable<Edm.String>; RhythmUnitKey?: KnockoutObservable<Edm.String>; RhythmValue?: KnockoutObservable<Edm.Int32>; ServiceContract?: KnockoutObservable<Crm.Service.Rest.Model.ObservableCrmService_ServiceContract>; ServiceContractId?: KnockoutObservable<Edm.Guid>; ServiceOrderTemplate?: KnockoutObservable<Crm.Service.Rest.Model.ObservableCrmService_ServiceOrderHead>; ServiceOrderTemplateId?: KnockoutObservable<Edm.Guid>; ServiceOrders?: KnockoutObservableArray<Crm.Service.Rest.Model.ObservableCrmService_ServiceOrderHead>; SourceTypeKey?: KnockoutObservable<Edm.String>; Visibility?: KnockoutObservable<Crm.Library.BaseModel.Visibility>; VisibleToUserIds?: KnockoutObservableArray<Edm.String>; VisibleToUsergroupIds?: KnockoutObservableArray<Edm.Guid> });

        AllowPrematureMaintenance: KnockoutObservable<Edm.Boolean>;
        BackgroundInfo: KnockoutObservable<Edm.String>;
        CampaignSource: KnockoutObservable<Edm.Guid>;
        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        DomainId: KnockoutObservable<Edm.Guid>;
        FirstDate: KnockoutObservable<Edm.DateTimeOffset>;
        GenerateMaintenanceOrders: KnockoutObservable<Edm.Boolean>;
        Id: KnockoutObservable<Edm.Guid>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        LanguageKey: KnockoutObservable<Edm.String>;
        LastActivity: KnockoutObservable<Edm.DateTimeOffset>;
        LegacyId: KnockoutObservable<Edm.String>;
        LegacyName: KnockoutObservable<Edm.String>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        Name: KnockoutObservable<Edm.String>;
        NextDate: KnockoutObservable<Edm.DateTimeOffset>;
        Notes: KnockoutObservableArray<Crm.Rest.Model.ObservableCrm_Note>;
        ParentId: KnockoutObservable<Edm.Guid>;
        ParentName: KnockoutObservable<Edm.String>;
        ParentType: KnockoutObservable<Edm.String>;
        ResponsibleUser: KnockoutObservable<Edm.String>;
        RhythmUnitKey: KnockoutObservable<Edm.String>;
        RhythmValue: KnockoutObservable<Edm.Int32>;
        ServiceContract: KnockoutObservable<Crm.Service.Rest.Model.ObservableCrmService_ServiceContract>;
        ServiceContractId: KnockoutObservable<Edm.Guid>;
        ServiceOrderTemplate: KnockoutObservable<Crm.Service.Rest.Model.ObservableCrmService_ServiceOrderHead>;
        ServiceOrderTemplateId: KnockoutObservable<Edm.Guid>;
        ServiceOrders: KnockoutObservableArray<Crm.Service.Rest.Model.ObservableCrmService_ServiceOrderHead>;
        SourceTypeKey: KnockoutObservable<Edm.String>;
        Visibility: KnockoutObservable<Crm.Library.BaseModel.Visibility>;
        VisibleToUserIds: KnockoutObservableArray<Edm.String>;
        VisibleToUsergroupIds: KnockoutObservableArray<Edm.Guid>;
        innerInstance: CrmService_MaintenancePlan;
    }

    export class ObservableCrmService_ReplenishmentOrderItem extends $data.Entity {
        constructor();
        constructor(initData: { Article?: KnockoutObservable<Crm.Article.Rest.Model.ObservableCrmArticle_Article>; ArticleId?: KnockoutObservable<Edm.Guid>; CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; Description?: KnockoutObservable<Edm.String>; DomainId?: KnockoutObservable<Edm.Guid>; Id?: KnockoutObservable<Edm.Guid>; IsActive?: KnockoutObservable<Edm.Boolean>; MaterialNo?: KnockoutObservable<Edm.String>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; Quantity?: KnockoutObservable<Edm.Decimal>; QuantityUnitEntry?: KnockoutObservable<Crm.Article.Rest.Model.ObservableCrmArticle_QuantityUnitEntry>; QuantityUnitEntryKey?: KnockoutObservable<Edm.Guid>; QuantityUnitKey?: KnockoutObservable<Edm.String>; Remark?: KnockoutObservable<Edm.String>; ReplenishmentOrder?: KnockoutObservable<Crm.Service.Rest.Model.ObservableCrmService_ReplenishmentOrder>; ReplenishmentOrderId?: KnockoutObservable<Edm.Guid>; ServiceOrderMaterials?: KnockoutObservableArray<Crm.Service.Rest.Model.ObservableCrmService_ServiceOrderMaterial> });

        Article: KnockoutObservable<Crm.Article.Rest.Model.ObservableCrmArticle_Article>;
        ArticleId: KnockoutObservable<Edm.Guid>;
        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        Description: KnockoutObservable<Edm.String>;
        DomainId: KnockoutObservable<Edm.Guid>;
        Id: KnockoutObservable<Edm.Guid>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        MaterialNo: KnockoutObservable<Edm.String>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        Quantity: KnockoutObservable<Edm.Decimal>;
        QuantityUnitEntry: KnockoutObservable<Crm.Article.Rest.Model.ObservableCrmArticle_QuantityUnitEntry>;
        QuantityUnitEntryKey: KnockoutObservable<Edm.Guid>;
        QuantityUnitKey: KnockoutObservable<Edm.String>;
        Remark: KnockoutObservable<Edm.String>;
        ReplenishmentOrder: KnockoutObservable<Crm.Service.Rest.Model.ObservableCrmService_ReplenishmentOrder>;
        ReplenishmentOrderId: KnockoutObservable<Edm.Guid>;
        ServiceOrderMaterials: KnockoutObservableArray<Crm.Service.Rest.Model.ObservableCrmService_ServiceOrderMaterial>;
        innerInstance: CrmService_ReplenishmentOrderItem;
    }

    export class ObservableCrmService_ReplenishmentOrder extends $data.Entity {
        constructor();
        constructor(initData: { CloseDate?: KnockoutObservable<Edm.DateTimeOffset>; ClosedBy?: KnockoutObservable<Edm.String>; CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; DomainId?: KnockoutObservable<Edm.Guid>; Id?: KnockoutObservable<Edm.Guid>; IsActive?: KnockoutObservable<Edm.Boolean>; IsClosed?: KnockoutObservable<Edm.Boolean>; IsExported?: KnockoutObservable<Edm.Boolean>; Items?: KnockoutObservableArray<Crm.Service.Rest.Model.ObservableCrmService_ReplenishmentOrderItem>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; ResponsibleUser?: KnockoutObservable<Edm.String>; ResponsibleUserObject?: KnockoutObservable<Main.Rest.Model.ObservableMain_User> });

        CloseDate: KnockoutObservable<Edm.DateTimeOffset>;
        ClosedBy: KnockoutObservable<Edm.String>;
        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        DomainId: KnockoutObservable<Edm.Guid>;
        Id: KnockoutObservable<Edm.Guid>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        IsClosed: KnockoutObservable<Edm.Boolean>;
        IsExported: KnockoutObservable<Edm.Boolean>;
        Items: KnockoutObservableArray<Crm.Service.Rest.Model.ObservableCrmService_ReplenishmentOrderItem>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        ResponsibleUser: KnockoutObservable<Edm.String>;
        ResponsibleUserObject: KnockoutObservable<Main.Rest.Model.ObservableMain_User>;
        innerInstance: CrmService_ReplenishmentOrder;
    }

    export class ObservableCrmService_ServiceCase extends $data.Entity {
        constructor();
        constructor(initData: { AffectedCompany?: KnockoutObservable<Crm.Rest.Model.ObservableCrm_Company>; AffectedCompanyKey?: KnockoutObservable<Edm.Guid>; AffectedInstallation?: KnockoutObservable<Crm.Service.Rest.Model.ObservableCrmService_Installation>; AffectedInstallationKey?: KnockoutObservable<Edm.Guid>; BackgroundInfo?: KnockoutObservable<Edm.String>; CampaignSource?: KnockoutObservable<Edm.Guid>; CategoryKey?: KnockoutObservable<Edm.String>; CompletionDate?: KnockoutObservable<Edm.DateTimeOffset>; CompletionServiceOrder?: KnockoutObservable<Crm.Service.Rest.Model.ObservableCrmService_ServiceOrderHead>; CompletionServiceOrderId?: KnockoutObservable<Edm.Guid>; CompletionUser?: KnockoutObservable<Edm.String>; CompletionUserUser?: KnockoutObservable<Main.Rest.Model.ObservableMain_User>; ContactPerson?: KnockoutObservable<Crm.Rest.Model.ObservableCrm_Person>; ContactPersonId?: KnockoutObservable<Edm.Guid>; CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; DomainId?: KnockoutObservable<Edm.Guid>; ErrorCodeKey?: KnockoutObservable<Edm.String>; ErrorMessage?: KnockoutObservable<Edm.String>; Executed?: KnockoutObservable<Edm.DateTimeOffset>; ExtensionValues?: KnockoutObservable<Default.ObservableCrmService_ServiceCase_ExtensionValues>; Id?: KnockoutObservable<Edm.Guid>; IsActive?: KnockoutObservable<Edm.Boolean>; LanguageKey?: KnockoutObservable<Edm.String>; LastActivity?: KnockoutObservable<Edm.DateTimeOffset>; LegacyId?: KnockoutObservable<Edm.String>; LegacyName?: KnockoutObservable<Edm.String>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; Name?: KnockoutObservable<Edm.String>; Notes?: KnockoutObservableArray<Crm.Rest.Model.ObservableCrm_Note>; OriginatingServiceOrder?: KnockoutObservable<Crm.Service.Rest.Model.ObservableCrmService_ServiceOrderHead>; OriginatingServiceOrderId?: KnockoutObservable<Edm.Guid>; OriginatingServiceOrderTime?: KnockoutObservable<Crm.Service.Rest.Model.ObservableCrmService_ServiceOrderTime>; OriginatingServiceOrderTimeId?: KnockoutObservable<Edm.Guid>; ParentId?: KnockoutObservable<Edm.Guid>; ParentName?: KnockoutObservable<Edm.String>; ParentType?: KnockoutObservable<Edm.String>; PickedUpDate?: KnockoutObservable<Edm.DateTimeOffset>; Planned?: KnockoutObservable<Edm.DateTimeOffset>; PriorityKey?: KnockoutObservable<Edm.String>; Reported?: KnockoutObservable<Edm.DateTimeOffset>; RequiredAssetKeys?: KnockoutObservableArray<Edm.String>; RequiredSkillKeys?: KnockoutObservableArray<Edm.String>; ResponsibleUser?: KnockoutObservable<Edm.String>; ResponsibleUserUser?: KnockoutObservable<Main.Rest.Model.ObservableMain_User>; ServiceCaseCreateDate?: KnockoutObservable<Edm.DateTimeOffset>; ServiceCaseCreateUser?: KnockoutObservable<Edm.String>; ServiceCaseNo?: KnockoutObservable<Edm.String>; ServiceCaseTemplateId?: KnockoutObservable<Edm.Guid>; ServiceObject?: KnockoutObservable<Crm.Service.Rest.Model.ObservableCrmService_ServiceObject>; ServiceObjectId?: KnockoutObservable<Edm.Guid>; ServiceOrderErrorTypes?: KnockoutObservableArray<Crm.Service.Rest.Model.ObservableCrmService_ServiceOrderErrorType>; ServiceOrderTime?: KnockoutObservable<Crm.Service.Rest.Model.ObservableCrmService_ServiceOrderTime>; ServiceOrderTimeId?: KnockoutObservable<Edm.Guid>; SourceTypeKey?: KnockoutObservable<Edm.String>; Station?: KnockoutObservable<Crm.Rest.Model.ObservableCrm_Station>; StationKey?: KnockoutObservable<Edm.Guid>; StatisticsKeyAssemblyGroupKey?: KnockoutObservable<Edm.String>; StatisticsKeyCauseKey?: KnockoutObservable<Edm.String>; StatisticsKeyCauserKey?: KnockoutObservable<Edm.String>; StatisticsKeyFaultImageKey?: KnockoutObservable<Edm.String>; StatisticsKeyMainAssemblyKey?: KnockoutObservable<Edm.String>; StatisticsKeyProductTypeKey?: KnockoutObservable<Edm.String>; StatisticsKeyRemedyKey?: KnockoutObservable<Edm.String>; StatisticsKeySubAssemblyKey?: KnockoutObservable<Edm.String>; StatisticsKeyWeightingKey?: KnockoutObservable<Edm.String>; StatusKey?: KnockoutObservable<Edm.Int32>; Tags?: KnockoutObservableArray<Crm.Rest.Model.ObservableCrm_Tag>; UserGroup?: KnockoutObservable<Main.Rest.Model.ObservableMain_Usergroup>; UserGroupKey?: KnockoutObservable<Edm.Guid>; Visibility?: KnockoutObservable<Crm.Library.BaseModel.Visibility>; VisibleToUserIds?: KnockoutObservableArray<Edm.String>; VisibleToUsergroupIds?: KnockoutObservableArray<Edm.Guid> });

        AffectedCompany: KnockoutObservable<Crm.Rest.Model.ObservableCrm_Company>;
        AffectedCompanyKey: KnockoutObservable<Edm.Guid>;
        AffectedInstallation: KnockoutObservable<Crm.Service.Rest.Model.ObservableCrmService_Installation>;
        AffectedInstallationKey: KnockoutObservable<Edm.Guid>;
        BackgroundInfo: KnockoutObservable<Edm.String>;
        CampaignSource: KnockoutObservable<Edm.Guid>;
        CategoryKey: KnockoutObservable<Edm.String>;
        CompletionDate: KnockoutObservable<Edm.DateTimeOffset>;
        CompletionServiceOrder: KnockoutObservable<Crm.Service.Rest.Model.ObservableCrmService_ServiceOrderHead>;
        CompletionServiceOrderId: KnockoutObservable<Edm.Guid>;
        CompletionUser: KnockoutObservable<Edm.String>;
        CompletionUserUser: KnockoutObservable<Main.Rest.Model.ObservableMain_User>;
        ContactPerson: KnockoutObservable<Crm.Rest.Model.ObservableCrm_Person>;
        ContactPersonId: KnockoutObservable<Edm.Guid>;
        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        DomainId: KnockoutObservable<Edm.Guid>;
        ErrorCodeKey: KnockoutObservable<Edm.String>;
        ErrorMessage: KnockoutObservable<Edm.String>;
        Executed: KnockoutObservable<Edm.DateTimeOffset>;
        ExtensionValues: KnockoutObservable<Default.ObservableCrmService_ServiceCase_ExtensionValues>;
        Id: KnockoutObservable<Edm.Guid>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        LanguageKey: KnockoutObservable<Edm.String>;
        LastActivity: KnockoutObservable<Edm.DateTimeOffset>;
        LegacyId: KnockoutObservable<Edm.String>;
        LegacyName: KnockoutObservable<Edm.String>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        Name: KnockoutObservable<Edm.String>;
        Notes: KnockoutObservableArray<Crm.Rest.Model.ObservableCrm_Note>;
        OriginatingServiceOrder: KnockoutObservable<Crm.Service.Rest.Model.ObservableCrmService_ServiceOrderHead>;
        OriginatingServiceOrderId: KnockoutObservable<Edm.Guid>;
        OriginatingServiceOrderTime: KnockoutObservable<Crm.Service.Rest.Model.ObservableCrmService_ServiceOrderTime>;
        OriginatingServiceOrderTimeId: KnockoutObservable<Edm.Guid>;
        ParentId: KnockoutObservable<Edm.Guid>;
        ParentName: KnockoutObservable<Edm.String>;
        ParentType: KnockoutObservable<Edm.String>;
        PickedUpDate: KnockoutObservable<Edm.DateTimeOffset>;
        Planned: KnockoutObservable<Edm.DateTimeOffset>;
        PriorityKey: KnockoutObservable<Edm.String>;
        Reported: KnockoutObservable<Edm.DateTimeOffset>;
        RequiredAssetKeys: KnockoutObservableArray<Edm.String>;
        RequiredSkillKeys: KnockoutObservableArray<Edm.String>;
        ResponsibleUser: KnockoutObservable<Edm.String>;
        ResponsibleUserUser: KnockoutObservable<Main.Rest.Model.ObservableMain_User>;
        ServiceCaseCreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        ServiceCaseCreateUser: KnockoutObservable<Edm.String>;
        ServiceCaseNo: KnockoutObservable<Edm.String>;
        ServiceCaseTemplateId: KnockoutObservable<Edm.Guid>;
        ServiceObject: KnockoutObservable<Crm.Service.Rest.Model.ObservableCrmService_ServiceObject>;
        ServiceObjectId: KnockoutObservable<Edm.Guid>;
        ServiceOrderErrorTypes: KnockoutObservableArray<Crm.Service.Rest.Model.ObservableCrmService_ServiceOrderErrorType>;
        ServiceOrderTime: KnockoutObservable<Crm.Service.Rest.Model.ObservableCrmService_ServiceOrderTime>;
        ServiceOrderTimeId: KnockoutObservable<Edm.Guid>;
        SourceTypeKey: KnockoutObservable<Edm.String>;
        Station: KnockoutObservable<Crm.Rest.Model.ObservableCrm_Station>;
        StationKey: KnockoutObservable<Edm.Guid>;
        StatisticsKeyAssemblyGroupKey: KnockoutObservable<Edm.String>;
        StatisticsKeyCauseKey: KnockoutObservable<Edm.String>;
        StatisticsKeyCauserKey: KnockoutObservable<Edm.String>;
        StatisticsKeyFaultImageKey: KnockoutObservable<Edm.String>;
        StatisticsKeyMainAssemblyKey: KnockoutObservable<Edm.String>;
        StatisticsKeyProductTypeKey: KnockoutObservable<Edm.String>;
        StatisticsKeyRemedyKey: KnockoutObservable<Edm.String>;
        StatisticsKeySubAssemblyKey: KnockoutObservable<Edm.String>;
        StatisticsKeyWeightingKey: KnockoutObservable<Edm.String>;
        StatusKey: KnockoutObservable<Edm.Int32>;
        Tags: KnockoutObservableArray<Crm.Rest.Model.ObservableCrm_Tag>;
        UserGroup: KnockoutObservable<Main.Rest.Model.ObservableMain_Usergroup>;
        UserGroupKey: KnockoutObservable<Edm.Guid>;
        Visibility: KnockoutObservable<Crm.Library.BaseModel.Visibility>;
        VisibleToUserIds: KnockoutObservableArray<Edm.String>;
        VisibleToUsergroupIds: KnockoutObservableArray<Edm.Guid>;
        innerInstance: CrmService_ServiceCase;
    }

    export class ObservableCrmService_ServiceCaseTemplate extends $data.Entity {
        constructor();
        constructor(initData: { CategoryKey?: KnockoutObservable<Edm.String>; CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; DomainId?: KnockoutObservable<Edm.Guid>; ExtensionValues?: KnockoutObservable<Default.ObservableCrmService_ServiceCaseTemplate_ExtensionValues>; Id?: KnockoutObservable<Edm.Guid>; IsActive?: KnockoutObservable<Edm.Boolean>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; Name?: KnockoutObservable<Edm.String>; PriorityKey?: KnockoutObservable<Edm.String>; RequiredAssetKeys?: KnockoutObservableArray<Edm.String>; RequiredSkillKeys?: KnockoutObservableArray<Edm.String>; ResponsibleUser?: KnockoutObservable<Edm.String>; ResponsibleUserUser?: KnockoutObservable<Main.Rest.Model.ObservableMain_User>; UserGroup?: KnockoutObservable<Main.Rest.Model.ObservableMain_Usergroup>; UserGroupKey?: KnockoutObservable<Edm.Guid> });

        CategoryKey: KnockoutObservable<Edm.String>;
        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        DomainId: KnockoutObservable<Edm.Guid>;
        ExtensionValues: KnockoutObservable<Default.ObservableCrmService_ServiceCaseTemplate_ExtensionValues>;
        Id: KnockoutObservable<Edm.Guid>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        Name: KnockoutObservable<Edm.String>;
        PriorityKey: KnockoutObservable<Edm.String>;
        RequiredAssetKeys: KnockoutObservableArray<Edm.String>;
        RequiredSkillKeys: KnockoutObservableArray<Edm.String>;
        ResponsibleUser: KnockoutObservable<Edm.String>;
        ResponsibleUserUser: KnockoutObservable<Main.Rest.Model.ObservableMain_User>;
        UserGroup: KnockoutObservable<Main.Rest.Model.ObservableMain_Usergroup>;
        UserGroupKey: KnockoutObservable<Edm.Guid>;
        innerInstance: CrmService_ServiceCaseTemplate;
    }

    export class ObservableCrmService_ServiceContractAddressRelationship extends $data.Entity {
        constructor();
        constructor(initData: { Child?: KnockoutObservable<Crm.Rest.Model.ObservableCrm_Address>; ChildId?: KnockoutObservable<Edm.Guid>; CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; DomainId?: KnockoutObservable<Edm.Guid>; Id?: KnockoutObservable<Edm.Guid>; Information?: KnockoutObservable<Edm.String>; IsActive?: KnockoutObservable<Edm.Boolean>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; Parent?: KnockoutObservable<Crm.Service.Rest.Model.ObservableCrmService_ServiceContract>; ParentId?: KnockoutObservable<Edm.Guid>; RelationshipTypeKey?: KnockoutObservable<Edm.String> });

        Child: KnockoutObservable<Crm.Rest.Model.ObservableCrm_Address>;
        ChildId: KnockoutObservable<Edm.Guid>;
        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        DomainId: KnockoutObservable<Edm.Guid>;
        Id: KnockoutObservable<Edm.Guid>;
        Information: KnockoutObservable<Edm.String>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        Parent: KnockoutObservable<Crm.Service.Rest.Model.ObservableCrmService_ServiceContract>;
        ParentId: KnockoutObservable<Edm.Guid>;
        RelationshipTypeKey: KnockoutObservable<Edm.String>;
        innerInstance: CrmService_ServiceContractAddressRelationship;
    }

    export class ObservableCrmService_ServiceContractInstallationRelationship extends $data.Entity {
        constructor();
        constructor(initData: { Child?: KnockoutObservable<Crm.Service.Rest.Model.ObservableCrmService_Installation>; ChildId?: KnockoutObservable<Edm.Guid>; CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; DomainId?: KnockoutObservable<Edm.Guid>; Id?: KnockoutObservable<Edm.Guid>; Information?: KnockoutObservable<Edm.String>; IsActive?: KnockoutObservable<Edm.Boolean>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; Parent?: KnockoutObservable<Crm.Service.Rest.Model.ObservableCrmService_ServiceContract>; ParentId?: KnockoutObservable<Edm.Guid>; TimeAllocation?: KnockoutObservable<Edm.Duration> });

        Child: KnockoutObservable<Crm.Service.Rest.Model.ObservableCrmService_Installation>;
        ChildId: KnockoutObservable<Edm.Guid>;
        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        DomainId: KnockoutObservable<Edm.Guid>;
        Id: KnockoutObservable<Edm.Guid>;
        Information: KnockoutObservable<Edm.String>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        Parent: KnockoutObservable<Crm.Service.Rest.Model.ObservableCrmService_ServiceContract>;
        ParentId: KnockoutObservable<Edm.Guid>;
        TimeAllocation: KnockoutObservable<Edm.Duration>;
        innerInstance: CrmService_ServiceContractInstallationRelationship;
    }

    export class ObservableCrmService_ServiceContract extends $data.Entity {
        constructor();
        constructor(initData: { BackgroundInfo?: KnockoutObservable<Edm.String>; CampaignSource?: KnockoutObservable<Edm.Guid>; ContractNo?: KnockoutObservable<Edm.String>; ContractTypeKey?: KnockoutObservable<Edm.String>; CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; DomainId?: KnockoutObservable<Edm.Guid>; ExternalReference?: KnockoutObservable<Edm.String>; FirstAnswerUnitKey?: KnockoutObservable<Edm.String>; FirstAnswerValue?: KnockoutObservable<Edm.Int16>; Id?: KnockoutObservable<Edm.Guid>; Installations?: KnockoutObservableArray<Crm.Service.Rest.Model.ObservableCrmService_ServiceContractInstallationRelationship>; InternalInvoiceInformation?: KnockoutObservable<Edm.String>; InvoiceAddress?: KnockoutObservable<Crm.Rest.Model.ObservableCrm_Address>; InvoiceAddressKey?: KnockoutObservable<Edm.Guid>; InvoiceRecipient?: KnockoutObservable<Crm.Rest.Model.ObservableCrm_Company>; InvoiceRecipientId?: KnockoutObservable<Edm.Guid>; InvoiceSpecialConditions?: KnockoutObservable<Edm.String>; InvoicedUntil?: KnockoutObservable<Edm.DateTimeOffset>; IsActive?: KnockoutObservable<Edm.Boolean>; LanguageKey?: KnockoutObservable<Edm.String>; LastActivity?: KnockoutObservable<Edm.DateTimeOffset>; LastInvoiceNo?: KnockoutObservable<Edm.String>; LegacyId?: KnockoutObservable<Edm.String>; LegacyName?: KnockoutObservable<Edm.String>; MaintenancePlans?: KnockoutObservableArray<Crm.Service.Rest.Model.ObservableCrmService_MaintenancePlan>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; Name?: KnockoutObservable<Edm.String>; NoPaymentsUntil?: KnockoutObservable<Edm.DateTimeOffset>; Notes?: KnockoutObservableArray<Crm.Rest.Model.ObservableCrm_Note>; ParentCompany?: KnockoutObservable<Crm.Rest.Model.ObservableCrm_Company>; ParentId?: KnockoutObservable<Edm.Guid>; ParentName?: KnockoutObservable<Edm.String>; ParentType?: KnockoutObservable<Edm.String>; Payer?: KnockoutObservable<Crm.Rest.Model.ObservableCrm_Company>; PayerAddress?: KnockoutObservable<Crm.Rest.Model.ObservableCrm_Address>; PayerAddressId?: KnockoutObservable<Edm.Guid>; PayerId?: KnockoutObservable<Edm.Guid>; PaymentConditionKey?: KnockoutObservable<Edm.String>; PaymentIntervalKey?: KnockoutObservable<Edm.String>; PaymentTypeKey?: KnockoutObservable<Edm.String>; Price?: KnockoutObservable<Edm.Decimal>; PriceCurrencyKey?: KnockoutObservable<Edm.String>; PriceGuaranteedUntil?: KnockoutObservable<Edm.DateTimeOffset>; ResponsibleUser?: KnockoutObservable<Edm.String>; ResponsibleUserUser?: KnockoutObservable<Main.Rest.Model.ObservableMain_User>; ServiceCompletedUnitKey?: KnockoutObservable<Edm.String>; ServiceCompletedValue?: KnockoutObservable<Edm.Int16>; ServiceObject?: KnockoutObservable<Crm.Service.Rest.Model.ObservableCrmService_ServiceObject>; ServiceObjectId?: KnockoutObservable<Edm.Guid>; ServiceProvisionPerTimeSpanUnitKey?: KnockoutObservable<Edm.String>; ServiceProvisionUnitKey?: KnockoutObservable<Edm.String>; ServiceProvisionValue?: KnockoutObservable<Edm.Decimal>; SourceTypeKey?: KnockoutObservable<Edm.String>; SparePartsBudgetInvoiceTypeKey?: KnockoutObservable<Edm.String>; SparePartsPerTimeSpanUnitKey?: KnockoutObservable<Edm.String>; SparePartsUnitKey?: KnockoutObservable<Edm.String>; SparePartsValue?: KnockoutObservable<Edm.Decimal>; StatusKey?: KnockoutObservable<Edm.String>; Tags?: KnockoutObservableArray<Crm.Rest.Model.ObservableCrm_Tag>; ValidFrom?: KnockoutObservable<Edm.DateTimeOffset>; ValidTo?: KnockoutObservable<Edm.DateTimeOffset>; Visibility?: KnockoutObservable<Crm.Library.BaseModel.Visibility>; VisibleToUserIds?: KnockoutObservableArray<Edm.String>; VisibleToUsergroupIds?: KnockoutObservableArray<Edm.Guid> });

        BackgroundInfo: KnockoutObservable<Edm.String>;
        CampaignSource: KnockoutObservable<Edm.Guid>;
        ContractNo: KnockoutObservable<Edm.String>;
        ContractTypeKey: KnockoutObservable<Edm.String>;
        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        DomainId: KnockoutObservable<Edm.Guid>;
        ExternalReference: KnockoutObservable<Edm.String>;
        FirstAnswerUnitKey: KnockoutObservable<Edm.String>;
        FirstAnswerValue: KnockoutObservable<Edm.Int16>;
        Id: KnockoutObservable<Edm.Guid>;
        Installations: KnockoutObservableArray<Crm.Service.Rest.Model.ObservableCrmService_ServiceContractInstallationRelationship>;
        InternalInvoiceInformation: KnockoutObservable<Edm.String>;
        InvoiceAddress: KnockoutObservable<Crm.Rest.Model.ObservableCrm_Address>;
        InvoiceAddressKey: KnockoutObservable<Edm.Guid>;
        InvoiceRecipient: KnockoutObservable<Crm.Rest.Model.ObservableCrm_Company>;
        InvoiceRecipientId: KnockoutObservable<Edm.Guid>;
        InvoiceSpecialConditions: KnockoutObservable<Edm.String>;
        InvoicedUntil: KnockoutObservable<Edm.DateTimeOffset>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        LanguageKey: KnockoutObservable<Edm.String>;
        LastActivity: KnockoutObservable<Edm.DateTimeOffset>;
        LastInvoiceNo: KnockoutObservable<Edm.String>;
        LegacyId: KnockoutObservable<Edm.String>;
        LegacyName: KnockoutObservable<Edm.String>;
        MaintenancePlans: KnockoutObservableArray<Crm.Service.Rest.Model.ObservableCrmService_MaintenancePlan>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        Name: KnockoutObservable<Edm.String>;
        NoPaymentsUntil: KnockoutObservable<Edm.DateTimeOffset>;
        Notes: KnockoutObservableArray<Crm.Rest.Model.ObservableCrm_Note>;
        ParentCompany: KnockoutObservable<Crm.Rest.Model.ObservableCrm_Company>;
        ParentId: KnockoutObservable<Edm.Guid>;
        ParentName: KnockoutObservable<Edm.String>;
        ParentType: KnockoutObservable<Edm.String>;
        Payer: KnockoutObservable<Crm.Rest.Model.ObservableCrm_Company>;
        PayerAddress: KnockoutObservable<Crm.Rest.Model.ObservableCrm_Address>;
        PayerAddressId: KnockoutObservable<Edm.Guid>;
        PayerId: KnockoutObservable<Edm.Guid>;
        PaymentConditionKey: KnockoutObservable<Edm.String>;
        PaymentIntervalKey: KnockoutObservable<Edm.String>;
        PaymentTypeKey: KnockoutObservable<Edm.String>;
        Price: KnockoutObservable<Edm.Decimal>;
        PriceCurrencyKey: KnockoutObservable<Edm.String>;
        PriceGuaranteedUntil: KnockoutObservable<Edm.DateTimeOffset>;
        ResponsibleUser: KnockoutObservable<Edm.String>;
        ResponsibleUserUser: KnockoutObservable<Main.Rest.Model.ObservableMain_User>;
        ServiceCompletedUnitKey: KnockoutObservable<Edm.String>;
        ServiceCompletedValue: KnockoutObservable<Edm.Int16>;
        ServiceObject: KnockoutObservable<Crm.Service.Rest.Model.ObservableCrmService_ServiceObject>;
        ServiceObjectId: KnockoutObservable<Edm.Guid>;
        ServiceProvisionPerTimeSpanUnitKey: KnockoutObservable<Edm.String>;
        ServiceProvisionUnitKey: KnockoutObservable<Edm.String>;
        ServiceProvisionValue: KnockoutObservable<Edm.Decimal>;
        SourceTypeKey: KnockoutObservable<Edm.String>;
        SparePartsBudgetInvoiceTypeKey: KnockoutObservable<Edm.String>;
        SparePartsPerTimeSpanUnitKey: KnockoutObservable<Edm.String>;
        SparePartsUnitKey: KnockoutObservable<Edm.String>;
        SparePartsValue: KnockoutObservable<Edm.Decimal>;
        StatusKey: KnockoutObservable<Edm.String>;
        Tags: KnockoutObservableArray<Crm.Rest.Model.ObservableCrm_Tag>;
        ValidFrom: KnockoutObservable<Edm.DateTimeOffset>;
        ValidTo: KnockoutObservable<Edm.DateTimeOffset>;
        Visibility: KnockoutObservable<Crm.Library.BaseModel.Visibility>;
        VisibleToUserIds: KnockoutObservableArray<Edm.String>;
        VisibleToUsergroupIds: KnockoutObservableArray<Edm.Guid>;
        innerInstance: CrmService_ServiceContract;
    }

    export class ObservableCrmService_ServiceObject extends $data.Entity {
        constructor();
        constructor(initData: { Addresses?: KnockoutObservableArray<Crm.Rest.Model.ObservableCrm_Address>; BackgroundInfo?: KnockoutObservable<Edm.String>; CampaignSource?: KnockoutObservable<Edm.Guid>; CategoryKey?: KnockoutObservable<Edm.String>; CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; DomainId?: KnockoutObservable<Edm.Guid>; Id?: KnockoutObservable<Edm.Guid>; Installations?: KnockoutObservableArray<Crm.Service.Rest.Model.ObservableCrmService_Installation>; IsActive?: KnockoutObservable<Edm.Boolean>; LanguageKey?: KnockoutObservable<Edm.String>; LastActivity?: KnockoutObservable<Edm.DateTimeOffset>; LegacyId?: KnockoutObservable<Edm.String>; LegacyName?: KnockoutObservable<Edm.String>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; Name?: KnockoutObservable<Edm.String>; Notes?: KnockoutObservableArray<Crm.Rest.Model.ObservableCrm_Note>; ObjectNo?: KnockoutObservable<Edm.String>; ParentId?: KnockoutObservable<Edm.Guid>; ParentName?: KnockoutObservable<Edm.String>; ParentType?: KnockoutObservable<Edm.String>; ResponsibleUser?: KnockoutObservable<Edm.String>; ResponsibleUserUser?: KnockoutObservable<Main.Rest.Model.ObservableMain_User>; SourceTypeKey?: KnockoutObservable<Edm.String>; StandardAddress?: KnockoutObservable<Crm.Rest.Model.ObservableCrm_Address>; StandardAddressId?: KnockoutObservable<Edm.Guid>; Tags?: KnockoutObservableArray<Crm.Rest.Model.ObservableCrm_Tag>; Visibility?: KnockoutObservable<Crm.Library.BaseModel.Visibility>; VisibleToUserIds?: KnockoutObservableArray<Edm.String>; VisibleToUsergroupIds?: KnockoutObservableArray<Edm.Guid> });

        Addresses: KnockoutObservableArray<Crm.Rest.Model.ObservableCrm_Address>;
        BackgroundInfo: KnockoutObservable<Edm.String>;
        CampaignSource: KnockoutObservable<Edm.Guid>;
        CategoryKey: KnockoutObservable<Edm.String>;
        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        DomainId: KnockoutObservable<Edm.Guid>;
        Id: KnockoutObservable<Edm.Guid>;
        Installations: KnockoutObservableArray<Crm.Service.Rest.Model.ObservableCrmService_Installation>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        LanguageKey: KnockoutObservable<Edm.String>;
        LastActivity: KnockoutObservable<Edm.DateTimeOffset>;
        LegacyId: KnockoutObservable<Edm.String>;
        LegacyName: KnockoutObservable<Edm.String>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        Name: KnockoutObservable<Edm.String>;
        Notes: KnockoutObservableArray<Crm.Rest.Model.ObservableCrm_Note>;
        ObjectNo: KnockoutObservable<Edm.String>;
        ParentId: KnockoutObservable<Edm.Guid>;
        ParentName: KnockoutObservable<Edm.String>;
        ParentType: KnockoutObservable<Edm.String>;
        ResponsibleUser: KnockoutObservable<Edm.String>;
        ResponsibleUserUser: KnockoutObservable<Main.Rest.Model.ObservableMain_User>;
        SourceTypeKey: KnockoutObservable<Edm.String>;
        StandardAddress: KnockoutObservable<Crm.Rest.Model.ObservableCrm_Address>;
        StandardAddressId: KnockoutObservable<Edm.Guid>;
        Tags: KnockoutObservableArray<Crm.Rest.Model.ObservableCrm_Tag>;
        Visibility: KnockoutObservable<Crm.Library.BaseModel.Visibility>;
        VisibleToUserIds: KnockoutObservableArray<Edm.String>;
        VisibleToUsergroupIds: KnockoutObservableArray<Edm.Guid>;
        innerInstance: CrmService_ServiceObject;
    }

    export class ObservableCrmService_ServiceOrderDispatchReportRecipient extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; Dispatch?: KnockoutObservable<Crm.Service.Rest.Model.ObservableCrmService_ServiceOrderDispatch>; DispatchId?: KnockoutObservable<Edm.Guid>; Email?: KnockoutObservable<Edm.String>; Id?: KnockoutObservable<Edm.Guid>; IsActive?: KnockoutObservable<Edm.Boolean>; Language?: KnockoutObservable<Edm.String>; Locale?: KnockoutObservable<Edm.String>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String> });

        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        Dispatch: KnockoutObservable<Crm.Service.Rest.Model.ObservableCrmService_ServiceOrderDispatch>;
        DispatchId: KnockoutObservable<Edm.Guid>;
        Email: KnockoutObservable<Edm.String>;
        Id: KnockoutObservable<Edm.Guid>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        Language: KnockoutObservable<Edm.String>;
        Locale: KnockoutObservable<Edm.String>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        innerInstance: CrmService_ServiceOrderDispatchReportRecipient;
    }

    export class ObservableCrmService_ServiceOrderErrorCause extends $data.Entity {
        constructor();
        constructor(initData: { ChildServiceOrderErrorCauses?: KnockoutObservableArray<Crm.Service.Rest.Model.ObservableCrmService_ServiceOrderErrorCause>; CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; Description?: KnockoutObservable<Edm.String>; DispatchId?: KnockoutObservable<Edm.Guid>; DomainId?: KnockoutObservable<Edm.Guid>; Id?: KnockoutObservable<Edm.Guid>; InternalRemark?: KnockoutObservable<Edm.String>; IsActive?: KnockoutObservable<Edm.Boolean>; IsConfirmed?: KnockoutObservable<Edm.Boolean>; IsExported?: KnockoutObservable<Edm.Boolean>; IsSuspected?: KnockoutObservable<Edm.Boolean>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; ParentServiceOrderErrorCause?: KnockoutObservable<Crm.Service.Rest.Model.ObservableCrmService_ServiceOrderErrorCause>; ParentServiceOrderErrorCauseId?: KnockoutObservable<Edm.Guid>; ServiceOrderDispatch?: KnockoutObservable<Crm.Service.Rest.Model.ObservableCrmService_ServiceOrderDispatch>; ServiceOrderErrorType?: KnockoutObservable<Crm.Service.Rest.Model.ObservableCrmService_ServiceOrderErrorType>; ServiceOrderErrorTypeId?: KnockoutObservable<Edm.Guid>; StatisticsKeyCauseKey?: KnockoutObservable<Edm.String> });

        ChildServiceOrderErrorCauses: KnockoutObservableArray<Crm.Service.Rest.Model.ObservableCrmService_ServiceOrderErrorCause>;
        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        Description: KnockoutObservable<Edm.String>;
        DispatchId: KnockoutObservable<Edm.Guid>;
        DomainId: KnockoutObservable<Edm.Guid>;
        Id: KnockoutObservable<Edm.Guid>;
        InternalRemark: KnockoutObservable<Edm.String>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        IsConfirmed: KnockoutObservable<Edm.Boolean>;
        IsExported: KnockoutObservable<Edm.Boolean>;
        IsSuspected: KnockoutObservable<Edm.Boolean>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        ParentServiceOrderErrorCause: KnockoutObservable<Crm.Service.Rest.Model.ObservableCrmService_ServiceOrderErrorCause>;
        ParentServiceOrderErrorCauseId: KnockoutObservable<Edm.Guid>;
        ServiceOrderDispatch: KnockoutObservable<Crm.Service.Rest.Model.ObservableCrmService_ServiceOrderDispatch>;
        ServiceOrderErrorType: KnockoutObservable<Crm.Service.Rest.Model.ObservableCrmService_ServiceOrderErrorType>;
        ServiceOrderErrorTypeId: KnockoutObservable<Edm.Guid>;
        StatisticsKeyCauseKey: KnockoutObservable<Edm.String>;
        innerInstance: CrmService_ServiceOrderErrorCause;
    }

    export class ObservableCrmService_ServiceOrderErrorType extends $data.Entity {
        constructor();
        constructor(initData: { ChildServiceOrderErrorTypes?: KnockoutObservableArray<Crm.Service.Rest.Model.ObservableCrmService_ServiceOrderErrorType>; CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; Description?: KnockoutObservable<Edm.String>; DispatchId?: KnockoutObservable<Edm.Guid>; DomainId?: KnockoutObservable<Edm.Guid>; Id?: KnockoutObservable<Edm.Guid>; InternalRemark?: KnockoutObservable<Edm.String>; IsActive?: KnockoutObservable<Edm.Boolean>; IsConfirmed?: KnockoutObservable<Edm.Boolean>; IsExported?: KnockoutObservable<Edm.Boolean>; IsMainErrorType?: KnockoutObservable<Edm.Boolean>; IsSuspected?: KnockoutObservable<Edm.Boolean>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; OrderId?: KnockoutObservable<Edm.Guid>; ParentServiceOrderErrorType?: KnockoutObservable<Crm.Service.Rest.Model.ObservableCrmService_ServiceOrderErrorType>; ParentServiceOrderErrorTypeId?: KnockoutObservable<Edm.Guid>; ServiceCase?: KnockoutObservable<Crm.Service.Rest.Model.ObservableCrmService_ServiceCase>; ServiceCaseId?: KnockoutObservable<Edm.Guid>; ServiceOrder?: KnockoutObservable<Crm.Service.Rest.Model.ObservableCrmService_ServiceOrderHead>; ServiceOrderDispatch?: KnockoutObservable<Crm.Service.Rest.Model.ObservableCrmService_ServiceOrderDispatch>; ServiceOrderErrorCauses?: KnockoutObservableArray<Crm.Service.Rest.Model.ObservableCrmService_ServiceOrderErrorCause>; ServiceOrderTime?: KnockoutObservable<Crm.Service.Rest.Model.ObservableCrmService_ServiceOrderTime>; ServiceOrderTimeId?: KnockoutObservable<Edm.Guid>; StatisticsKeyFaultImageKey?: KnockoutObservable<Edm.String> });

        ChildServiceOrderErrorTypes: KnockoutObservableArray<Crm.Service.Rest.Model.ObservableCrmService_ServiceOrderErrorType>;
        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        Description: KnockoutObservable<Edm.String>;
        DispatchId: KnockoutObservable<Edm.Guid>;
        DomainId: KnockoutObservable<Edm.Guid>;
        Id: KnockoutObservable<Edm.Guid>;
        InternalRemark: KnockoutObservable<Edm.String>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        IsConfirmed: KnockoutObservable<Edm.Boolean>;
        IsExported: KnockoutObservable<Edm.Boolean>;
        IsMainErrorType: KnockoutObservable<Edm.Boolean>;
        IsSuspected: KnockoutObservable<Edm.Boolean>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        OrderId: KnockoutObservable<Edm.Guid>;
        ParentServiceOrderErrorType: KnockoutObservable<Crm.Service.Rest.Model.ObservableCrmService_ServiceOrderErrorType>;
        ParentServiceOrderErrorTypeId: KnockoutObservable<Edm.Guid>;
        ServiceCase: KnockoutObservable<Crm.Service.Rest.Model.ObservableCrmService_ServiceCase>;
        ServiceCaseId: KnockoutObservable<Edm.Guid>;
        ServiceOrder: KnockoutObservable<Crm.Service.Rest.Model.ObservableCrmService_ServiceOrderHead>;
        ServiceOrderDispatch: KnockoutObservable<Crm.Service.Rest.Model.ObservableCrmService_ServiceOrderDispatch>;
        ServiceOrderErrorCauses: KnockoutObservableArray<Crm.Service.Rest.Model.ObservableCrmService_ServiceOrderErrorCause>;
        ServiceOrderTime: KnockoutObservable<Crm.Service.Rest.Model.ObservableCrmService_ServiceOrderTime>;
        ServiceOrderTimeId: KnockoutObservable<Edm.Guid>;
        StatisticsKeyFaultImageKey: KnockoutObservable<Edm.String>;
        innerInstance: CrmService_ServiceOrderErrorType;
    }

    export class ObservableCrmService_ServiceOrderExpensePosting extends $data.Entity {
        constructor();
        constructor(initData: { Amount?: KnockoutObservable<Edm.Decimal>; Article?: KnockoutObservable<Crm.Article.Rest.Model.ObservableCrmArticle_Article>; ArticleId?: KnockoutObservable<Edm.Guid>; CostCenterKey?: KnockoutObservable<Edm.String>; CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; CurrencyKey?: KnockoutObservable<Edm.String>; Date?: KnockoutObservable<Edm.DateTimeOffset>; Description?: KnockoutObservable<Edm.String>; DispatchId?: KnockoutObservable<Edm.Guid>; DomainId?: KnockoutObservable<Edm.Guid>; ExpenseTypeKey?: KnockoutObservable<Edm.String>; FileResource?: KnockoutObservable<Crm.Rest.Model.ObservableCrm_FileResource>; FileResourceKey?: KnockoutObservable<Edm.Guid>; Id?: KnockoutObservable<Edm.Guid>; IsActive?: KnockoutObservable<Edm.Boolean>; IsClosed?: KnockoutObservable<Edm.Boolean>; IsExported?: KnockoutObservable<Edm.Boolean>; ItemNo?: KnockoutObservable<Edm.String>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; OrderId?: KnockoutObservable<Edm.Guid>; PerDiemReport?: KnockoutObservable<Crm.PerDiem.Rest.Model.ObservableCrmPerDiem_PerDiemReport>; PerDiemReportId?: KnockoutObservable<Edm.Guid>; ResponsibleUser?: KnockoutObservable<Edm.String>; ResponsibleUserObject?: KnockoutObservable<Main.Rest.Model.ObservableMain_User>; ServiceOrder?: KnockoutObservable<Crm.Service.Rest.Model.ObservableCrmService_ServiceOrderHead>; ServiceOrderDispatch?: KnockoutObservable<Crm.Service.Rest.Model.ObservableCrmService_ServiceOrderDispatch>; ServiceOrderTime?: KnockoutObservable<Crm.Service.Rest.Model.ObservableCrmService_ServiceOrderTime>; ServiceOrderTimeId?: KnockoutObservable<Edm.Guid> });

        Amount: KnockoutObservable<Edm.Decimal>;
        Article: KnockoutObservable<Crm.Article.Rest.Model.ObservableCrmArticle_Article>;
        ArticleId: KnockoutObservable<Edm.Guid>;
        CostCenterKey: KnockoutObservable<Edm.String>;
        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        CurrencyKey: KnockoutObservable<Edm.String>;
        Date: KnockoutObservable<Edm.DateTimeOffset>;
        Description: KnockoutObservable<Edm.String>;
        DispatchId: KnockoutObservable<Edm.Guid>;
        DomainId: KnockoutObservable<Edm.Guid>;
        ExpenseTypeKey: KnockoutObservable<Edm.String>;
        FileResource: KnockoutObservable<Crm.Rest.Model.ObservableCrm_FileResource>;
        FileResourceKey: KnockoutObservable<Edm.Guid>;
        Id: KnockoutObservable<Edm.Guid>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        IsClosed: KnockoutObservable<Edm.Boolean>;
        IsExported: KnockoutObservable<Edm.Boolean>;
        ItemNo: KnockoutObservable<Edm.String>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        OrderId: KnockoutObservable<Edm.Guid>;
        PerDiemReport: KnockoutObservable<Crm.PerDiem.Rest.Model.ObservableCrmPerDiem_PerDiemReport>;
        PerDiemReportId: KnockoutObservable<Edm.Guid>;
        ResponsibleUser: KnockoutObservable<Edm.String>;
        ResponsibleUserObject: KnockoutObservable<Main.Rest.Model.ObservableMain_User>;
        ServiceOrder: KnockoutObservable<Crm.Service.Rest.Model.ObservableCrmService_ServiceOrderHead>;
        ServiceOrderDispatch: KnockoutObservable<Crm.Service.Rest.Model.ObservableCrmService_ServiceOrderDispatch>;
        ServiceOrderTime: KnockoutObservable<Crm.Service.Rest.Model.ObservableCrmService_ServiceOrderTime>;
        ServiceOrderTimeId: KnockoutObservable<Edm.Guid>;
        innerInstance: CrmService_ServiceOrderExpensePosting;
    }

    export class ObservableCrmService_ServiceOrderHead extends $data.Entity {
        constructor();
        constructor(initData: { BackgroundInfo?: KnockoutObservable<Edm.String>; CampaignSource?: KnockoutObservable<Edm.Guid>; City?: KnockoutObservable<Edm.String>; CloseReason?: KnockoutObservable<Edm.String>; Closed?: KnockoutObservable<Edm.DateTimeOffset>; CommissionNo?: KnockoutObservable<Edm.String>; CommissioningStatusKey?: KnockoutObservable<Edm.String>; Company?: KnockoutObservable<Crm.Rest.Model.ObservableCrm_Company>; CountryKey?: KnockoutObservable<Edm.String>; CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; CurrencyKey?: KnockoutObservable<Edm.String>; CustomerContactId?: KnockoutObservable<Edm.Guid>; Deadline?: KnockoutObservable<Edm.DateTimeOffset>; Dispatches?: KnockoutObservableArray<Crm.Service.Rest.Model.ObservableCrmService_ServiceOrderDispatch>; DocumentAttributes?: KnockoutObservableArray<Crm.Rest.Model.ObservableCrm_DocumentAttribute>; DomainId?: KnockoutObservable<Edm.Guid>; ErrorCodeKey?: KnockoutObservable<Edm.String>; ErrorMessage?: KnockoutObservable<Edm.String>; Id?: KnockoutObservable<Edm.Guid>; Initiator?: KnockoutObservable<Crm.Rest.Model.ObservableCrm_Company>; InitiatorId?: KnockoutObservable<Edm.Guid>; InitiatorPerson?: KnockoutObservable<Crm.Rest.Model.ObservableCrm_Person>; InitiatorPersonId?: KnockoutObservable<Edm.Guid>; Installation?: KnockoutObservable<Crm.Service.Rest.Model.ObservableCrmService_Installation>; InstallationId?: KnockoutObservable<Edm.Guid>; InvoiceRecipient?: KnockoutObservable<Crm.Rest.Model.ObservableCrm_Company>; InvoiceRecipientAddress?: KnockoutObservable<Crm.Rest.Model.ObservableCrm_Address>; InvoiceRecipientAddressId?: KnockoutObservable<Edm.Guid>; InvoiceRecipientId?: KnockoutObservable<Edm.Guid>; InvoicingTypeKey?: KnockoutObservable<Edm.String>; IsActive?: KnockoutObservable<Edm.Boolean>; IsCostLumpSum?: KnockoutObservable<Edm.Boolean>; IsGeocoded?: KnockoutObservable<Edm.Boolean>; IsMaterialLumpSum?: KnockoutObservable<Edm.Boolean>; IsTemplate?: KnockoutObservable<Edm.Boolean>; IsTimeLumpSum?: KnockoutObservable<Edm.Boolean>; LanguageKey?: KnockoutObservable<Edm.String>; LastActivity?: KnockoutObservable<Edm.DateTimeOffset>; Latitude?: KnockoutObservable<Edm.Double>; LegacyId?: KnockoutObservable<Edm.String>; LegacyName?: KnockoutObservable<Edm.String>; Longitude?: KnockoutObservable<Edm.Double>; MaintenancePlanId?: KnockoutObservable<Edm.Guid>; MaintenancePlanningRun?: KnockoutObservable<Edm.Guid>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; Name?: KnockoutObservable<Edm.String>; Name1?: KnockoutObservable<Edm.String>; Name2?: KnockoutObservable<Edm.String>; Name3?: KnockoutObservable<Edm.String>; NoInvoiceReasonKey?: KnockoutObservable<Edm.String>; Notes?: KnockoutObservableArray<Crm.Rest.Model.ObservableCrm_Note>; OrderNo?: KnockoutObservable<Edm.String>; ParentId?: KnockoutObservable<Edm.Guid>; ParentName?: KnockoutObservable<Edm.String>; ParentType?: KnockoutObservable<Edm.String>; Payer?: KnockoutObservable<Crm.Rest.Model.ObservableCrm_Company>; PayerAddress?: KnockoutObservable<Crm.Rest.Model.ObservableCrm_Address>; PayerAddressId?: KnockoutObservable<Edm.Guid>; PayerId?: KnockoutObservable<Edm.Guid>; Planned?: KnockoutObservable<Edm.DateTimeOffset>; PlannedDateFix?: KnockoutObservable<Edm.Boolean>; PlannedTime?: KnockoutObservable<Edm.Duration>; PreferredTechnician?: KnockoutObservable<Edm.String>; PreferredTechnicianUser?: KnockoutObservable<Main.Rest.Model.ObservableMain_User>; PreferredTechnicianUsergroupKey?: KnockoutObservable<Edm.Guid>; PreferredTechnicianUsergroupObject?: KnockoutObservable<Main.Rest.Model.ObservableMain_Usergroup>; PrematureDate?: KnockoutObservable<Edm.DateTimeOffset>; PrematureTime?: KnockoutObservable<Edm.Duration>; PriorityKey?: KnockoutObservable<Edm.String>; PurchaseDate?: KnockoutObservable<Edm.DateTimeOffset>; PurchaseOrderNo?: KnockoutObservable<Edm.String>; RegionKey?: KnockoutObservable<Edm.String>; ReportRecipients?: KnockoutObservableArray<Edm.String>; Reported?: KnockoutObservable<Edm.DateTimeOffset>; RequiredAssetKeys?: KnockoutObservableArray<Edm.String>; RequiredSkillKeys?: KnockoutObservableArray<Edm.String>; ResponsibleUser?: KnockoutObservable<Edm.String>; ResponsibleUserUser?: KnockoutObservable<Main.Rest.Model.ObservableMain_User>; ServiceCase?: KnockoutObservable<Crm.Service.Rest.Model.ObservableCrmService_ServiceCase>; ServiceCaseKey?: KnockoutObservable<Edm.Guid>; ServiceCaseNo?: KnockoutObservable<Edm.String>; ServiceContract?: KnockoutObservable<Crm.Service.Rest.Model.ObservableCrmService_ServiceContract>; ServiceContractId?: KnockoutObservable<Edm.Guid>; ServiceLocationEmail?: KnockoutObservable<Edm.String>; ServiceLocationFax?: KnockoutObservable<Edm.String>; ServiceLocationMobile?: KnockoutObservable<Edm.String>; ServiceLocationPhone?: KnockoutObservable<Edm.String>; ServiceLocationResponsiblePerson?: KnockoutObservable<Edm.String>; ServiceObject?: KnockoutObservable<Crm.Service.Rest.Model.ObservableCrmService_ServiceObject>; ServiceObjectId?: KnockoutObservable<Edm.Guid>; ServiceOrderErrorTypes?: KnockoutObservableArray<Crm.Service.Rest.Model.ObservableCrmService_ServiceOrderErrorType>; ServiceOrderExpensePostings?: KnockoutObservableArray<Crm.Service.Rest.Model.ObservableCrmService_ServiceOrderExpensePosting>; ServiceOrderMaterials?: KnockoutObservableArray<Crm.Service.Rest.Model.ObservableCrmService_ServiceOrderMaterial>; ServiceOrderStatisticsKeys?: KnockoutObservableArray<Crm.Service.Rest.Model.ObservableCrmService_ServiceOrderStatisticsKey>; ServiceOrderTemplate?: KnockoutObservable<Crm.Service.Rest.Model.ObservableCrmService_ServiceOrderHead>; ServiceOrderTemplateId?: KnockoutObservable<Edm.Guid>; ServiceOrderTimePostings?: KnockoutObservableArray<Crm.Service.Rest.Model.ObservableCrmService_ServiceOrderTimePosting>; ServiceOrderTimes?: KnockoutObservableArray<Crm.Service.Rest.Model.ObservableCrmService_ServiceOrderTime>; SourceTypeKey?: KnockoutObservable<Edm.String>; Station?: KnockoutObservable<Crm.Rest.Model.ObservableCrm_Station>; StationKey?: KnockoutObservable<Edm.Guid>; StatusKey?: KnockoutObservable<Edm.String>; Street?: KnockoutObservable<Edm.String>; Tags?: KnockoutObservableArray<Crm.Rest.Model.ObservableCrm_Tag>; TypeKey?: KnockoutObservable<Edm.String>; UserGroup?: KnockoutObservable<Main.Rest.Model.ObservableMain_Usergroup>; UserGroupKey?: KnockoutObservable<Edm.Guid>; Visibility?: KnockoutObservable<Crm.Library.BaseModel.Visibility>; VisibleToUserIds?: KnockoutObservableArray<Edm.String>; VisibleToUsergroupIds?: KnockoutObservableArray<Edm.Guid>; ZipCode?: KnockoutObservable<Edm.String> });

        BackgroundInfo: KnockoutObservable<Edm.String>;
        CampaignSource: KnockoutObservable<Edm.Guid>;
        City: KnockoutObservable<Edm.String>;
        CloseReason: KnockoutObservable<Edm.String>;
        Closed: KnockoutObservable<Edm.DateTimeOffset>;
        CommissionNo: KnockoutObservable<Edm.String>;
        CommissioningStatusKey: KnockoutObservable<Edm.String>;
        Company: KnockoutObservable<Crm.Rest.Model.ObservableCrm_Company>;
        CountryKey: KnockoutObservable<Edm.String>;
        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        CurrencyKey: KnockoutObservable<Edm.String>;
        CustomerContactId: KnockoutObservable<Edm.Guid>;
        Deadline: KnockoutObservable<Edm.DateTimeOffset>;
        Dispatches: KnockoutObservableArray<Crm.Service.Rest.Model.ObservableCrmService_ServiceOrderDispatch>;
        DocumentAttributes: KnockoutObservableArray<Crm.Rest.Model.ObservableCrm_DocumentAttribute>;
        DomainId: KnockoutObservable<Edm.Guid>;
        ErrorCodeKey: KnockoutObservable<Edm.String>;
        ErrorMessage: KnockoutObservable<Edm.String>;
        Id: KnockoutObservable<Edm.Guid>;
        Initiator: KnockoutObservable<Crm.Rest.Model.ObservableCrm_Company>;
        InitiatorId: KnockoutObservable<Edm.Guid>;
        InitiatorPerson: KnockoutObservable<Crm.Rest.Model.ObservableCrm_Person>;
        InitiatorPersonId: KnockoutObservable<Edm.Guid>;
        Installation: KnockoutObservable<Crm.Service.Rest.Model.ObservableCrmService_Installation>;
        InstallationId: KnockoutObservable<Edm.Guid>;
        InvoiceRecipient: KnockoutObservable<Crm.Rest.Model.ObservableCrm_Company>;
        InvoiceRecipientAddress: KnockoutObservable<Crm.Rest.Model.ObservableCrm_Address>;
        InvoiceRecipientAddressId: KnockoutObservable<Edm.Guid>;
        InvoiceRecipientId: KnockoutObservable<Edm.Guid>;
        InvoicingTypeKey: KnockoutObservable<Edm.String>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        IsCostLumpSum: KnockoutObservable<Edm.Boolean>;
        IsGeocoded: KnockoutObservable<Edm.Boolean>;
        IsMaterialLumpSum: KnockoutObservable<Edm.Boolean>;
        IsTemplate: KnockoutObservable<Edm.Boolean>;
        IsTimeLumpSum: KnockoutObservable<Edm.Boolean>;
        LanguageKey: KnockoutObservable<Edm.String>;
        LastActivity: KnockoutObservable<Edm.DateTimeOffset>;
        Latitude: KnockoutObservable<Edm.Double>;
        LegacyId: KnockoutObservable<Edm.String>;
        LegacyName: KnockoutObservable<Edm.String>;
        Longitude: KnockoutObservable<Edm.Double>;
        MaintenancePlanId: KnockoutObservable<Edm.Guid>;
        MaintenancePlanningRun: KnockoutObservable<Edm.Guid>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        Name: KnockoutObservable<Edm.String>;
        Name1: KnockoutObservable<Edm.String>;
        Name2: KnockoutObservable<Edm.String>;
        Name3: KnockoutObservable<Edm.String>;
        NoInvoiceReasonKey: KnockoutObservable<Edm.String>;
        Notes: KnockoutObservableArray<Crm.Rest.Model.ObservableCrm_Note>;
        OrderNo: KnockoutObservable<Edm.String>;
        ParentId: KnockoutObservable<Edm.Guid>;
        ParentName: KnockoutObservable<Edm.String>;
        ParentType: KnockoutObservable<Edm.String>;
        Payer: KnockoutObservable<Crm.Rest.Model.ObservableCrm_Company>;
        PayerAddress: KnockoutObservable<Crm.Rest.Model.ObservableCrm_Address>;
        PayerAddressId: KnockoutObservable<Edm.Guid>;
        PayerId: KnockoutObservable<Edm.Guid>;
        Planned: KnockoutObservable<Edm.DateTimeOffset>;
        PlannedDateFix: KnockoutObservable<Edm.Boolean>;
        PlannedTime: KnockoutObservable<Edm.Duration>;
        PreferredTechnician: KnockoutObservable<Edm.String>;
        PreferredTechnicianUser: KnockoutObservable<Main.Rest.Model.ObservableMain_User>;
        PreferredTechnicianUsergroupKey: KnockoutObservable<Edm.Guid>;
        PreferredTechnicianUsergroupObject: KnockoutObservable<Main.Rest.Model.ObservableMain_Usergroup>;
        PrematureDate: KnockoutObservable<Edm.DateTimeOffset>;
        PrematureTime: KnockoutObservable<Edm.Duration>;
        PriorityKey: KnockoutObservable<Edm.String>;
        PurchaseDate: KnockoutObservable<Edm.DateTimeOffset>;
        PurchaseOrderNo: KnockoutObservable<Edm.String>;
        RegionKey: KnockoutObservable<Edm.String>;
        ReportRecipients: KnockoutObservableArray<Edm.String>;
        Reported: KnockoutObservable<Edm.DateTimeOffset>;
        RequiredAssetKeys: KnockoutObservableArray<Edm.String>;
        RequiredSkillKeys: KnockoutObservableArray<Edm.String>;
        ResponsibleUser: KnockoutObservable<Edm.String>;
        ResponsibleUserUser: KnockoutObservable<Main.Rest.Model.ObservableMain_User>;
        ServiceCase: KnockoutObservable<Crm.Service.Rest.Model.ObservableCrmService_ServiceCase>;
        ServiceCaseKey: KnockoutObservable<Edm.Guid>;
        ServiceCaseNo: KnockoutObservable<Edm.String>;
        ServiceContract: KnockoutObservable<Crm.Service.Rest.Model.ObservableCrmService_ServiceContract>;
        ServiceContractId: KnockoutObservable<Edm.Guid>;
        ServiceLocationEmail: KnockoutObservable<Edm.String>;
        ServiceLocationFax: KnockoutObservable<Edm.String>;
        ServiceLocationMobile: KnockoutObservable<Edm.String>;
        ServiceLocationPhone: KnockoutObservable<Edm.String>;
        ServiceLocationResponsiblePerson: KnockoutObservable<Edm.String>;
        ServiceObject: KnockoutObservable<Crm.Service.Rest.Model.ObservableCrmService_ServiceObject>;
        ServiceObjectId: KnockoutObservable<Edm.Guid>;
        ServiceOrderErrorTypes: KnockoutObservableArray<Crm.Service.Rest.Model.ObservableCrmService_ServiceOrderErrorType>;
        ServiceOrderExpensePostings: KnockoutObservableArray<Crm.Service.Rest.Model.ObservableCrmService_ServiceOrderExpensePosting>;
        ServiceOrderMaterials: KnockoutObservableArray<Crm.Service.Rest.Model.ObservableCrmService_ServiceOrderMaterial>;
        ServiceOrderStatisticsKeys: KnockoutObservableArray<Crm.Service.Rest.Model.ObservableCrmService_ServiceOrderStatisticsKey>;
        ServiceOrderTemplate: KnockoutObservable<Crm.Service.Rest.Model.ObservableCrmService_ServiceOrderHead>;
        ServiceOrderTemplateId: KnockoutObservable<Edm.Guid>;
        ServiceOrderTimePostings: KnockoutObservableArray<Crm.Service.Rest.Model.ObservableCrmService_ServiceOrderTimePosting>;
        ServiceOrderTimes: KnockoutObservableArray<Crm.Service.Rest.Model.ObservableCrmService_ServiceOrderTime>;
        SourceTypeKey: KnockoutObservable<Edm.String>;
        Station: KnockoutObservable<Crm.Rest.Model.ObservableCrm_Station>;
        StationKey: KnockoutObservable<Edm.Guid>;
        StatusKey: KnockoutObservable<Edm.String>;
        Street: KnockoutObservable<Edm.String>;
        Tags: KnockoutObservableArray<Crm.Rest.Model.ObservableCrm_Tag>;
        TypeKey: KnockoutObservable<Edm.String>;
        UserGroup: KnockoutObservable<Main.Rest.Model.ObservableMain_Usergroup>;
        UserGroupKey: KnockoutObservable<Edm.Guid>;
        Visibility: KnockoutObservable<Crm.Library.BaseModel.Visibility>;
        VisibleToUserIds: KnockoutObservableArray<Edm.String>;
        VisibleToUsergroupIds: KnockoutObservableArray<Edm.Guid>;
        ZipCode: KnockoutObservable<Edm.String>;
        innerInstance: CrmService_ServiceOrderHead;
    }

    export class ObservableCrmService_ServiceOrderMaterial extends $data.Entity {
        constructor();
        constructor(initData: { Article?: KnockoutObservable<Crm.Article.Rest.Model.ObservableCrmArticle_Article>; ArticleId?: KnockoutObservable<Edm.Guid>; ArticleTypeKey?: KnockoutObservable<Edm.String>; BatchNo?: KnockoutObservable<Edm.String>; ChildServiceOrderMaterials?: KnockoutObservableArray<Crm.Service.Rest.Model.ObservableCrmService_ServiceOrderMaterial>; CommissioningStatusKey?: KnockoutObservable<Edm.String>; CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; Description?: KnockoutObservable<Edm.String>; Discount?: KnockoutObservable<Edm.Decimal>; DiscountType?: KnockoutObservable<Crm.Article.Model.Enums.DiscountType>; DispatchId?: KnockoutObservable<Edm.Guid>; DocumentAttributes?: KnockoutObservableArray<Crm.Rest.Model.ObservableCrm_DocumentAttribute>; DomainId?: KnockoutObservable<Edm.Guid>; ExternalRemark?: KnockoutObservable<Edm.String>; FromLocation?: KnockoutObservable<Edm.String>; FromStorageArea?: KnockoutObservable<Edm.String>; FromWarehouse?: KnockoutObservable<Edm.String>; Id?: KnockoutObservable<Edm.Guid>; InternalRemark?: KnockoutObservable<Edm.String>; IsActive?: KnockoutObservable<Edm.Boolean>; IsBatch?: KnockoutObservable<Edm.Boolean>; IsInstalled?: KnockoutObservable<Edm.Boolean>; IsSerial?: KnockoutObservable<Edm.Boolean>; ItemNo?: KnockoutObservable<Edm.String>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; NoPreviousSerialNoReasonKey?: KnockoutObservable<Edm.String>; OrderId?: KnockoutObservable<Edm.Guid>; ParentServiceOrderMaterial?: KnockoutObservable<Crm.Service.Rest.Model.ObservableCrmService_ServiceOrderMaterial>; ParentServiceOrderMaterialId?: KnockoutObservable<Edm.Guid>; ParentServiceOrderMaterialVersion?: KnockoutObservable<Edm.Int64>; PosNo?: KnockoutObservable<Edm.String>; PreviousSerialNo?: KnockoutObservable<Edm.String>; Price?: KnockoutObservable<Edm.Decimal>; Quantity?: KnockoutObservable<Edm.Decimal>; QuantityUnitEntry?: KnockoutObservable<Crm.Article.Rest.Model.ObservableCrmArticle_QuantityUnitEntry>; QuantityUnitEntryKey?: KnockoutObservable<Edm.Guid>; QuantityUnitKey?: KnockoutObservable<Edm.String>; ReplenishmentOrderItem?: KnockoutObservable<Crm.Service.Rest.Model.ObservableCrmService_ReplenishmentOrderItem>; ReplenishmentOrderItemId?: KnockoutObservable<Edm.Guid>; Serial?: KnockoutObservable<Crm.Article.Rest.Model.ObservableCrmArticle_Serial>; SerialId?: KnockoutObservable<Edm.Guid>; SerialNo?: KnockoutObservable<Edm.String>; ServiceOrderDispatch?: KnockoutObservable<Crm.Service.Rest.Model.ObservableCrmService_ServiceOrderDispatch>; ServiceOrderHead?: KnockoutObservable<Crm.Service.Rest.Model.ObservableCrmService_ServiceOrderHead>; ServiceOrderMaterialType?: KnockoutObservable<Edm.String>; ServiceOrderTime?: KnockoutObservable<Crm.Service.Rest.Model.ObservableCrmService_ServiceOrderTime>; ServiceOrderTimeId?: KnockoutObservable<Edm.Guid>; SignedByCustomer?: KnockoutObservable<Edm.Boolean>; ToLocation?: KnockoutObservable<Edm.String>; ToWarehouse?: KnockoutObservable<Edm.String>; TotalValue?: KnockoutObservable<Edm.Decimal>; Version?: KnockoutObservable<Edm.Int64> });

        Article: KnockoutObservable<Crm.Article.Rest.Model.ObservableCrmArticle_Article>;
        ArticleId: KnockoutObservable<Edm.Guid>;
        ArticleTypeKey: KnockoutObservable<Edm.String>;
        BatchNo: KnockoutObservable<Edm.String>;
        ChildServiceOrderMaterials: KnockoutObservableArray<Crm.Service.Rest.Model.ObservableCrmService_ServiceOrderMaterial>;
        CommissioningStatusKey: KnockoutObservable<Edm.String>;
        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        Description: KnockoutObservable<Edm.String>;
        Discount: KnockoutObservable<Edm.Decimal>;
        DiscountType: KnockoutObservable<Crm.Article.Model.Enums.DiscountType>;
        DispatchId: KnockoutObservable<Edm.Guid>;
        DocumentAttributes: KnockoutObservableArray<Crm.Rest.Model.ObservableCrm_DocumentAttribute>;
        DomainId: KnockoutObservable<Edm.Guid>;
        ExternalRemark: KnockoutObservable<Edm.String>;
        FromLocation: KnockoutObservable<Edm.String>;
        FromStorageArea: KnockoutObservable<Edm.String>;
        FromWarehouse: KnockoutObservable<Edm.String>;
        Id: KnockoutObservable<Edm.Guid>;
        InternalRemark: KnockoutObservable<Edm.String>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        IsBatch: KnockoutObservable<Edm.Boolean>;
        IsInstalled: KnockoutObservable<Edm.Boolean>;
        IsSerial: KnockoutObservable<Edm.Boolean>;
        ItemNo: KnockoutObservable<Edm.String>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        NoPreviousSerialNoReasonKey: KnockoutObservable<Edm.String>;
        OrderId: KnockoutObservable<Edm.Guid>;
        ParentServiceOrderMaterial: KnockoutObservable<Crm.Service.Rest.Model.ObservableCrmService_ServiceOrderMaterial>;
        ParentServiceOrderMaterialId: KnockoutObservable<Edm.Guid>;
        ParentServiceOrderMaterialVersion: KnockoutObservable<Edm.Int64>;
        PosNo: KnockoutObservable<Edm.String>;
        PreviousSerialNo: KnockoutObservable<Edm.String>;
        Price: KnockoutObservable<Edm.Decimal>;
        Quantity: KnockoutObservable<Edm.Decimal>;
        QuantityUnitEntry: KnockoutObservable<Crm.Article.Rest.Model.ObservableCrmArticle_QuantityUnitEntry>;
        QuantityUnitEntryKey: KnockoutObservable<Edm.Guid>;
        QuantityUnitKey: KnockoutObservable<Edm.String>;
        ReplenishmentOrderItem: KnockoutObservable<Crm.Service.Rest.Model.ObservableCrmService_ReplenishmentOrderItem>;
        ReplenishmentOrderItemId: KnockoutObservable<Edm.Guid>;
        Serial: KnockoutObservable<Crm.Article.Rest.Model.ObservableCrmArticle_Serial>;
        SerialId: KnockoutObservable<Edm.Guid>;
        SerialNo: KnockoutObservable<Edm.String>;
        ServiceOrderDispatch: KnockoutObservable<Crm.Service.Rest.Model.ObservableCrmService_ServiceOrderDispatch>;
        ServiceOrderHead: KnockoutObservable<Crm.Service.Rest.Model.ObservableCrmService_ServiceOrderHead>;
        ServiceOrderMaterialType: KnockoutObservable<Edm.String>;
        ServiceOrderTime: KnockoutObservable<Crm.Service.Rest.Model.ObservableCrmService_ServiceOrderTime>;
        ServiceOrderTimeId: KnockoutObservable<Edm.Guid>;
        SignedByCustomer: KnockoutObservable<Edm.Boolean>;
        ToLocation: KnockoutObservable<Edm.String>;
        ToWarehouse: KnockoutObservable<Edm.String>;
        TotalValue: KnockoutObservable<Edm.Decimal>;
        Version: KnockoutObservable<Edm.Int64>;
        innerInstance: CrmService_ServiceOrderMaterial;
    }

    export class ObservableCrmService_ServiceOrderStatisticsKey extends $data.Entity {
        constructor();
        constructor(initData: { AssemblyGroupKey?: KnockoutObservable<Edm.String>; CauseKey?: KnockoutObservable<Edm.String>; CauserKey?: KnockoutObservable<Edm.String>; CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; Dispatch?: KnockoutObservable<Crm.Service.Rest.Model.ObservableCrmService_ServiceOrderDispatch>; DispatchId?: KnockoutObservable<Edm.Guid>; DomainId?: KnockoutObservable<Edm.Guid>; FaultImageKey?: KnockoutObservable<Edm.String>; Id?: KnockoutObservable<Edm.Guid>; IsActive?: KnockoutObservable<Edm.Boolean>; MainAssemblyKey?: KnockoutObservable<Edm.String>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; ProductTypeKey?: KnockoutObservable<Edm.String>; RemedyKey?: KnockoutObservable<Edm.String>; ServiceOrder?: KnockoutObservable<Crm.Service.Rest.Model.ObservableCrmService_ServiceOrderHead>; ServiceOrderId?: KnockoutObservable<Edm.Guid>; SubAssemblyKey?: KnockoutObservable<Edm.String>; WeightingKey?: KnockoutObservable<Edm.String> });

        AssemblyGroupKey: KnockoutObservable<Edm.String>;
        CauseKey: KnockoutObservable<Edm.String>;
        CauserKey: KnockoutObservable<Edm.String>;
        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        Dispatch: KnockoutObservable<Crm.Service.Rest.Model.ObservableCrmService_ServiceOrderDispatch>;
        DispatchId: KnockoutObservable<Edm.Guid>;
        DomainId: KnockoutObservable<Edm.Guid>;
        FaultImageKey: KnockoutObservable<Edm.String>;
        Id: KnockoutObservable<Edm.Guid>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        MainAssemblyKey: KnockoutObservable<Edm.String>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        ProductTypeKey: KnockoutObservable<Edm.String>;
        RemedyKey: KnockoutObservable<Edm.String>;
        ServiceOrder: KnockoutObservable<Crm.Service.Rest.Model.ObservableCrmService_ServiceOrderHead>;
        ServiceOrderId: KnockoutObservable<Edm.Guid>;
        SubAssemblyKey: KnockoutObservable<Edm.String>;
        WeightingKey: KnockoutObservable<Edm.String>;
        innerInstance: CrmService_ServiceOrderStatisticsKey;
    }

    export class ObservableCrmService_ServiceOrderTimeDispatch extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; Id?: KnockoutObservable<Edm.Guid>; IsActive?: KnockoutObservable<Edm.Boolean>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; ServiceOrderDispatch?: KnockoutObservable<Crm.Service.Rest.Model.ObservableCrmService_ServiceOrderDispatch>; ServiceOrderDispatchId?: KnockoutObservable<Edm.Guid>; ServiceOrderTime?: KnockoutObservable<Crm.Service.Rest.Model.ObservableCrmService_ServiceOrderTime>; ServiceOrderTimeId?: KnockoutObservable<Edm.Guid> });

        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        Id: KnockoutObservable<Edm.Guid>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        ServiceOrderDispatch: KnockoutObservable<Crm.Service.Rest.Model.ObservableCrmService_ServiceOrderDispatch>;
        ServiceOrderDispatchId: KnockoutObservable<Edm.Guid>;
        ServiceOrderTime: KnockoutObservable<Crm.Service.Rest.Model.ObservableCrmService_ServiceOrderTime>;
        ServiceOrderTimeId: KnockoutObservable<Edm.Guid>;
        innerInstance: CrmService_ServiceOrderTimeDispatch;
    }

    export class ObservableCrmService_ServiceOrderTimePosting extends $data.Entity {
        constructor();
        constructor(initData: { Article?: KnockoutObservable<Crm.Article.Rest.Model.ObservableCrmArticle_Article>; ArticleId?: KnockoutObservable<Edm.Guid>; BorderCrossingTime?: KnockoutObservable<Edm.DateTimeOffset>; BorderCrossingTimeZone?: KnockoutObservable<Edm.String>; Break?: KnockoutObservable<Edm.Duration>; ChildServiceOrderTimePostings?: KnockoutObservableArray<Crm.Service.Rest.Model.ObservableCrmService_ServiceOrderTimePosting>; CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; Description?: KnockoutObservable<Edm.String>; DispatchId?: KnockoutObservable<Edm.Guid>; Distance?: KnockoutObservable<Edm.Int32>; DistanceUnitKey?: KnockoutObservable<Edm.String>; DomainId?: KnockoutObservable<Edm.Guid>; DriverTypeKey?: KnockoutObservable<Edm.String>; Duration?: KnockoutObservable<Edm.Duration>; From?: KnockoutObservable<Edm.DateTimeOffset>; Id?: KnockoutObservable<Edm.Guid>; InternalRemark?: KnockoutObservable<Edm.String>; IsActive?: KnockoutObservable<Edm.Boolean>; IsClosed?: KnockoutObservable<Edm.Boolean>; ItemNo?: KnockoutObservable<Edm.String>; LicensePlate?: KnockoutObservable<Edm.String>; LocationFrom?: KnockoutObservable<Edm.String>; LocationTo?: KnockoutObservable<Edm.String>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; OrderId?: KnockoutObservable<Edm.Guid>; ParentServiceOrderTimePosting?: KnockoutObservable<Crm.Service.Rest.Model.ObservableCrmService_ServiceOrderTimePosting>; ParentServiceOrderTimePostingId?: KnockoutObservable<Edm.Guid>; ParentServiceOrderTimePostingVersion?: KnockoutObservable<Edm.Int64>; PerDiemReport?: KnockoutObservable<Crm.PerDiem.Rest.Model.ObservableCrmPerDiem_PerDiemReport>; PerDiemReportId?: KnockoutObservable<Edm.Guid>; ResponsibleUser?: KnockoutObservable<Edm.String>; ResponsibleUserObject?: KnockoutObservable<Main.Rest.Model.ObservableMain_User>; ServiceOrder?: KnockoutObservable<Crm.Service.Rest.Model.ObservableCrmService_ServiceOrderHead>; ServiceOrderDispatch?: KnockoutObservable<Crm.Service.Rest.Model.ObservableCrmService_ServiceOrderDispatch>; ServiceOrderTime?: KnockoutObservable<Crm.Service.Rest.Model.ObservableCrmService_ServiceOrderTime>; ServiceOrderTimeId?: KnockoutObservable<Edm.Guid>; ServiceOrderTimePostingType?: KnockoutObservable<Edm.String>; TimeZoneFrom?: KnockoutObservable<Edm.String>; TimeZoneTo?: KnockoutObservable<Edm.String>; To?: KnockoutObservable<Edm.DateTimeOffset>; TravelTypeKey?: KnockoutObservable<Edm.String>; User?: KnockoutObservable<Main.Rest.Model.ObservableMain_User>; Username?: KnockoutObservable<Edm.String>; Version?: KnockoutObservable<Edm.Int64> });

        Article: KnockoutObservable<Crm.Article.Rest.Model.ObservableCrmArticle_Article>;
        ArticleId: KnockoutObservable<Edm.Guid>;
        BorderCrossingTime: KnockoutObservable<Edm.DateTimeOffset>;
        BorderCrossingTimeZone: KnockoutObservable<Edm.String>;
        Break: KnockoutObservable<Edm.Duration>;
        ChildServiceOrderTimePostings: KnockoutObservableArray<Crm.Service.Rest.Model.ObservableCrmService_ServiceOrderTimePosting>;
        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        Description: KnockoutObservable<Edm.String>;
        DispatchId: KnockoutObservable<Edm.Guid>;
        Distance: KnockoutObservable<Edm.Int32>;
        DistanceUnitKey: KnockoutObservable<Edm.String>;
        DomainId: KnockoutObservable<Edm.Guid>;
        DriverTypeKey: KnockoutObservable<Edm.String>;
        Duration: KnockoutObservable<Edm.Duration>;
        From: KnockoutObservable<Edm.DateTimeOffset>;
        Id: KnockoutObservable<Edm.Guid>;
        InternalRemark: KnockoutObservable<Edm.String>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        IsClosed: KnockoutObservable<Edm.Boolean>;
        ItemNo: KnockoutObservable<Edm.String>;
        LicensePlate: KnockoutObservable<Edm.String>;
        LocationFrom: KnockoutObservable<Edm.String>;
        LocationTo: KnockoutObservable<Edm.String>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        OrderId: KnockoutObservable<Edm.Guid>;
        ParentServiceOrderTimePosting: KnockoutObservable<Crm.Service.Rest.Model.ObservableCrmService_ServiceOrderTimePosting>;
        ParentServiceOrderTimePostingId: KnockoutObservable<Edm.Guid>;
        ParentServiceOrderTimePostingVersion: KnockoutObservable<Edm.Int64>;
        PerDiemReport: KnockoutObservable<Crm.PerDiem.Rest.Model.ObservableCrmPerDiem_PerDiemReport>;
        PerDiemReportId: KnockoutObservable<Edm.Guid>;
        ResponsibleUser: KnockoutObservable<Edm.String>;
        ResponsibleUserObject: KnockoutObservable<Main.Rest.Model.ObservableMain_User>;
        ServiceOrder: KnockoutObservable<Crm.Service.Rest.Model.ObservableCrmService_ServiceOrderHead>;
        ServiceOrderDispatch: KnockoutObservable<Crm.Service.Rest.Model.ObservableCrmService_ServiceOrderDispatch>;
        ServiceOrderTime: KnockoutObservable<Crm.Service.Rest.Model.ObservableCrmService_ServiceOrderTime>;
        ServiceOrderTimeId: KnockoutObservable<Edm.Guid>;
        ServiceOrderTimePostingType: KnockoutObservable<Edm.String>;
        TimeZoneFrom: KnockoutObservable<Edm.String>;
        TimeZoneTo: KnockoutObservable<Edm.String>;
        To: KnockoutObservable<Edm.DateTimeOffset>;
        TravelTypeKey: KnockoutObservable<Edm.String>;
        User: KnockoutObservable<Main.Rest.Model.ObservableMain_User>;
        Username: KnockoutObservable<Edm.String>;
        Version: KnockoutObservable<Edm.Int64>;
        innerInstance: CrmService_ServiceOrderTimePosting;
    }

    export class ObservableCrmService_ServiceOrderTime extends $data.Entity {
        constructor();
        constructor(initData: { ActualDuration?: KnockoutObservable<Edm.Duration>; Article?: KnockoutObservable<Crm.Article.Rest.Model.ObservableCrmArticle_Article>; ArticleId?: KnockoutObservable<Edm.Guid>; CausingItemNo?: KnockoutObservable<Edm.String>; CausingItemPreviousSerialNo?: KnockoutObservable<Edm.String>; CausingItemSerialNo?: KnockoutObservable<Edm.String>; Comment?: KnockoutObservable<Edm.String>; CompleteDate?: KnockoutObservable<Edm.DateTimeOffset>; CompleteUser?: KnockoutObservable<Edm.String>; CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; Description?: KnockoutObservable<Edm.String>; Diagnosis?: KnockoutObservable<Edm.String>; Discount?: KnockoutObservable<Edm.Decimal>; DiscountType?: KnockoutObservable<Crm.Article.Model.Enums.DiscountType>; DomainId?: KnockoutObservable<Edm.Guid>; EstimatedDuration?: KnockoutObservable<Edm.Duration>; ExpensePostings?: KnockoutObservableArray<Crm.Service.Rest.Model.ObservableCrmService_ServiceOrderExpensePosting>; ExtensionValues?: KnockoutObservable<Default.ObservableCrmService_ServiceOrderTime_ExtensionValues>; Id?: KnockoutObservable<Edm.Guid>; Installation?: KnockoutObservable<Crm.Service.Rest.Model.ObservableCrmService_Installation>; InstallationId?: KnockoutObservable<Edm.Guid>; InvoiceDuration?: KnockoutObservable<Edm.Duration>; InvoicingTypeKey?: KnockoutObservable<Edm.String>; IsActive?: KnockoutObservable<Edm.Boolean>; IsCostLumpSum?: KnockoutObservable<Edm.Boolean>; IsMaterialLumpSum?: KnockoutObservable<Edm.Boolean>; IsTimeLumpSum?: KnockoutObservable<Edm.Boolean>; ItemNo?: KnockoutObservable<Edm.String>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; NoCausingItemPreviousSerialNoReasonKey?: KnockoutObservable<Edm.String>; NoCausingItemSerialNoReasonKey?: KnockoutObservable<Edm.String>; OrderId?: KnockoutObservable<Edm.Guid>; PosNo?: KnockoutObservable<Edm.String>; Postings?: KnockoutObservableArray<Crm.Service.Rest.Model.ObservableCrmService_ServiceOrderTimePosting>; Price?: KnockoutObservable<Edm.Decimal>; ServiceCases?: KnockoutObservableArray<Crm.Service.Rest.Model.ObservableCrmService_ServiceCase>; ServiceOrderErrorTypes?: KnockoutObservableArray<Crm.Service.Rest.Model.ObservableCrmService_ServiceOrderErrorType>; ServiceOrderMaterials?: KnockoutObservableArray<Crm.Service.Rest.Model.ObservableCrmService_ServiceOrderMaterial>; ServiceOrderTimeDispatches?: KnockoutObservableArray<Crm.Service.Rest.Model.ObservableCrmService_ServiceOrderTimeDispatch>; StatusKey?: KnockoutObservable<Edm.String>; TimeZone?: KnockoutObservable<Edm.String>; TotalValue?: KnockoutObservable<Edm.Decimal> });

        ActualDuration: KnockoutObservable<Edm.Duration>;
        Article: KnockoutObservable<Crm.Article.Rest.Model.ObservableCrmArticle_Article>;
        ArticleId: KnockoutObservable<Edm.Guid>;
        CausingItemNo: KnockoutObservable<Edm.String>;
        CausingItemPreviousSerialNo: KnockoutObservable<Edm.String>;
        CausingItemSerialNo: KnockoutObservable<Edm.String>;
        Comment: KnockoutObservable<Edm.String>;
        CompleteDate: KnockoutObservable<Edm.DateTimeOffset>;
        CompleteUser: KnockoutObservable<Edm.String>;
        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        Description: KnockoutObservable<Edm.String>;
        Diagnosis: KnockoutObservable<Edm.String>;
        Discount: KnockoutObservable<Edm.Decimal>;
        DiscountType: KnockoutObservable<Crm.Article.Model.Enums.DiscountType>;
        DomainId: KnockoutObservable<Edm.Guid>;
        EstimatedDuration: KnockoutObservable<Edm.Duration>;
        ExpensePostings: KnockoutObservableArray<Crm.Service.Rest.Model.ObservableCrmService_ServiceOrderExpensePosting>;
        ExtensionValues: KnockoutObservable<Default.ObservableCrmService_ServiceOrderTime_ExtensionValues>;
        Id: KnockoutObservable<Edm.Guid>;
        Installation: KnockoutObservable<Crm.Service.Rest.Model.ObservableCrmService_Installation>;
        InstallationId: KnockoutObservable<Edm.Guid>;
        InvoiceDuration: KnockoutObservable<Edm.Duration>;
        InvoicingTypeKey: KnockoutObservable<Edm.String>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        IsCostLumpSum: KnockoutObservable<Edm.Boolean>;
        IsMaterialLumpSum: KnockoutObservable<Edm.Boolean>;
        IsTimeLumpSum: KnockoutObservable<Edm.Boolean>;
        ItemNo: KnockoutObservable<Edm.String>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        NoCausingItemPreviousSerialNoReasonKey: KnockoutObservable<Edm.String>;
        NoCausingItemSerialNoReasonKey: KnockoutObservable<Edm.String>;
        OrderId: KnockoutObservable<Edm.Guid>;
        PosNo: KnockoutObservable<Edm.String>;
        Postings: KnockoutObservableArray<Crm.Service.Rest.Model.ObservableCrmService_ServiceOrderTimePosting>;
        Price: KnockoutObservable<Edm.Decimal>;
        ServiceCases: KnockoutObservableArray<Crm.Service.Rest.Model.ObservableCrmService_ServiceCase>;
        ServiceOrderErrorTypes: KnockoutObservableArray<Crm.Service.Rest.Model.ObservableCrmService_ServiceOrderErrorType>;
        ServiceOrderMaterials: KnockoutObservableArray<Crm.Service.Rest.Model.ObservableCrmService_ServiceOrderMaterial>;
        ServiceOrderTimeDispatches: KnockoutObservableArray<Crm.Service.Rest.Model.ObservableCrmService_ServiceOrderTimeDispatch>;
        StatusKey: KnockoutObservable<Edm.String>;
        TimeZone: KnockoutObservable<Edm.String>;
        TotalValue: KnockoutObservable<Edm.Decimal>;
        innerInstance: CrmService_ServiceOrderTime;
    }

    export class CrmService_RdsPpStructure extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; Description?: Edm.String; DomainId?: Edm.Guid; Id?: Edm.Guid; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; ParentRdsPpStructureKey?: Edm.Guid; RdsPpClassification?: Edm.String });

        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        Description: Edm.String;
        DomainId: Edm.Guid;
        Id: Edm.Guid;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        ParentRdsPpStructureKey: Edm.Guid;
        RdsPpClassification: Edm.String;
        asKoObservable(): ObservableCrmService_RdsPpStructure;
        static create(): CrmService_RdsPpStructure;
        static create(initData:any): CrmService_RdsPpStructure;
    }

    export class CrmService_InstallationPosSerial extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; DomainId?: Edm.Guid; Id?: Edm.Guid; InstallationPosId?: Edm.Guid; IsInstalled?: Edm.Boolean; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; SerialNo?: Edm.String });

        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        DomainId: Edm.Guid;
        Id: Edm.Guid;
        InstallationPosId: Edm.Guid;
        IsInstalled: Edm.Boolean;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        SerialNo: Edm.String;
        asKoObservable(): ObservableCrmService_InstallationPosSerial;
        static create(): CrmService_InstallationPosSerial;
        static create(initData:any): CrmService_InstallationPosSerial;
    }

    export class CrmService_ServiceOrderDispatch extends $data.Entity {
        constructor();
        constructor(initData: { CancellationReasonKey?: Edm.String; CancellationRemark?: Edm.String; CloseDate?: Edm.DateTimeOffset; ComponentKey?: Edm.String; CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; CurrentServiceOrderTime?: Crm.Service.Rest.Model.CrmService_ServiceOrderTime; CurrentServiceOrderTimeId?: Edm.Guid; Date?: Edm.DateTimeOffset; Diagnosis?: Edm.String; DispatchNo?: Edm.String; DispatchedUser?: Main.Rest.Model.Main_User; DomainId?: Edm.Guid; EndDate?: Edm.DateTimeOffset; ExtensionValues?: Default.CrmService_ServiceOrderDispatch_ExtensionValues; FollowUpServiceOrder?: Edm.Boolean; FollowUpServiceOrderRemark?: Edm.String; Id?: Edm.Guid; InfoForTechnician?: Edm.String; IsActive?: Edm.Boolean; IsFixed?: Edm.Boolean; LatitudeOnDispatchStart?: Edm.Double; LongitudeOnDispatchStart?: Edm.Double; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; NetWorkMinutes?: Edm.Int32; OrderId?: Edm.Guid; OrderNo?: Edm.String; RejectReasonKey?: Edm.String; RejectRemark?: Edm.String; Remark?: Edm.String; ReportRecipients?: Crm.Service.Rest.Model.CrmService_ServiceOrderDispatchReportRecipient[]; RequiredOperations?: Edm.String; ServiceOrder?: Crm.Service.Rest.Model.CrmService_ServiceOrderHead; ServiceOrderErrorTypes?: Crm.Service.Rest.Model.CrmService_ServiceOrderErrorType[]; ServiceOrderExpensePostings?: Crm.Service.Rest.Model.CrmService_ServiceOrderExpensePosting[]; ServiceOrderMaterial?: Crm.Service.Rest.Model.CrmService_ServiceOrderMaterial[]; ServiceOrderTimeDispatches?: Crm.Service.Rest.Model.CrmService_ServiceOrderTimeDispatch[]; ServiceOrderTimePostings?: Crm.Service.Rest.Model.CrmService_ServiceOrderTimePosting[]; SignPrivacyPolicyAccepted?: Edm.Boolean; SignatureContactName?: Edm.String; SignatureDate?: Edm.DateTimeOffset; SignatureJson?: Edm.String; SignatureOriginatorDate?: Edm.DateTimeOffset; SignatureOriginatorJson?: Edm.String; SignatureOriginatorName?: Edm.String; SignatureTechnicianDate?: Edm.DateTimeOffset; SignatureTechnicianJson?: Edm.String; SignatureTechnicianName?: Edm.String; StatusKey?: Edm.String; TimeZone?: Edm.String; Username?: Edm.String });

        CancellationReasonKey: Edm.String;
        CancellationRemark: Edm.String;
        CloseDate: Edm.DateTimeOffset;
        ComponentKey: Edm.String;
        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        CurrentServiceOrderTime: Crm.Service.Rest.Model.CrmService_ServiceOrderTime;
        CurrentServiceOrderTimeId: Edm.Guid;
        Date: Edm.DateTimeOffset;
        Diagnosis: Edm.String;
        DispatchNo: Edm.String;
        DispatchedUser: Main.Rest.Model.Main_User;
        DomainId: Edm.Guid;
        EndDate: Edm.DateTimeOffset;
        ExtensionValues: Default.CrmService_ServiceOrderDispatch_ExtensionValues;
        FollowUpServiceOrder: Edm.Boolean;
        FollowUpServiceOrderRemark: Edm.String;
        Id: Edm.Guid;
        InfoForTechnician: Edm.String;
        IsActive: Edm.Boolean;
        IsFixed: Edm.Boolean;
        LatitudeOnDispatchStart: Edm.Double;
        LongitudeOnDispatchStart: Edm.Double;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        NetWorkMinutes: Edm.Int32;
        OrderId: Edm.Guid;
        OrderNo: Edm.String;
        RejectReasonKey: Edm.String;
        RejectRemark: Edm.String;
        Remark: Edm.String;
        ReportRecipients: Crm.Service.Rest.Model.CrmService_ServiceOrderDispatchReportRecipient[];
        RequiredOperations: Edm.String;
        ServiceOrder: Crm.Service.Rest.Model.CrmService_ServiceOrderHead;
        ServiceOrderErrorTypes: Crm.Service.Rest.Model.CrmService_ServiceOrderErrorType[];
        ServiceOrderExpensePostings: Crm.Service.Rest.Model.CrmService_ServiceOrderExpensePosting[];
        ServiceOrderMaterial: Crm.Service.Rest.Model.CrmService_ServiceOrderMaterial[];
        ServiceOrderTimeDispatches: Crm.Service.Rest.Model.CrmService_ServiceOrderTimeDispatch[];
        ServiceOrderTimePostings: Crm.Service.Rest.Model.CrmService_ServiceOrderTimePosting[];
        SignPrivacyPolicyAccepted: Edm.Boolean;
        SignatureContactName: Edm.String;
        SignatureDate: Edm.DateTimeOffset;
        SignatureJson: Edm.String;
        SignatureOriginatorDate: Edm.DateTimeOffset;
        SignatureOriginatorJson: Edm.String;
        SignatureOriginatorName: Edm.String;
        SignatureTechnicianDate: Edm.DateTimeOffset;
        SignatureTechnicianJson: Edm.String;
        SignatureTechnicianName: Edm.String;
        StatusKey: Edm.String;
        TimeZone: Edm.String;
        Username: Edm.String;
        asKoObservable(): ObservableCrmService_ServiceOrderDispatch;
        static create(): CrmService_ServiceOrderDispatch;
        static create(initData:any): CrmService_ServiceOrderDispatch;
    }

    export class CrmService_InstallationAddressRelationship extends $data.Entity {
        constructor();
        constructor(initData: { Child?: Crm.Rest.Model.Crm_Address; ChildId?: Edm.Guid; CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; DomainId?: Edm.Guid; Id?: Edm.Guid; Information?: Edm.String; IsActive?: Edm.Boolean; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; Parent?: Crm.Service.Rest.Model.CrmService_Installation; ParentId?: Edm.Guid; RelationshipTypeKey?: Edm.String });

        Child: Crm.Rest.Model.Crm_Address;
        ChildId: Edm.Guid;
        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        DomainId: Edm.Guid;
        Id: Edm.Guid;
        Information: Edm.String;
        IsActive: Edm.Boolean;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        Parent: Crm.Service.Rest.Model.CrmService_Installation;
        ParentId: Edm.Guid;
        RelationshipTypeKey: Edm.String;
        asKoObservable(): ObservableCrmService_InstallationAddressRelationship;
        static create(): CrmService_InstallationAddressRelationship;
        static create(initData:any): CrmService_InstallationAddressRelationship;
    }

    export class CrmService_InstallationCompanyRelationship extends $data.Entity {
        constructor();
        constructor(initData: { Child?: Crm.Rest.Model.Crm_Company; ChildId?: Edm.Guid; CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; DomainId?: Edm.Guid; Id?: Edm.Guid; Information?: Edm.String; IsActive?: Edm.Boolean; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; Parent?: Crm.Service.Rest.Model.CrmService_Installation; ParentId?: Edm.Guid; RelationshipTypeKey?: Edm.String });

        Child: Crm.Rest.Model.Crm_Company;
        ChildId: Edm.Guid;
        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        DomainId: Edm.Guid;
        Id: Edm.Guid;
        Information: Edm.String;
        IsActive: Edm.Boolean;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        Parent: Crm.Service.Rest.Model.CrmService_Installation;
        ParentId: Edm.Guid;
        RelationshipTypeKey: Edm.String;
        asKoObservable(): ObservableCrmService_InstallationCompanyRelationship;
        static create(): CrmService_InstallationCompanyRelationship;
        static create(initData:any): CrmService_InstallationCompanyRelationship;
    }

    export class CrmService_InstallationPersonRelationship extends $data.Entity {
        constructor();
        constructor(initData: { Child?: Crm.Rest.Model.Crm_Person; ChildId?: Edm.Guid; CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; DomainId?: Edm.Guid; Id?: Edm.Guid; Information?: Edm.String; IsActive?: Edm.Boolean; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; Parent?: Crm.Service.Rest.Model.CrmService_Installation; ParentId?: Edm.Guid; RelationshipTypeKey?: Edm.String });

        Child: Crm.Rest.Model.Crm_Person;
        ChildId: Edm.Guid;
        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        DomainId: Edm.Guid;
        Id: Edm.Guid;
        Information: Edm.String;
        IsActive: Edm.Boolean;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        Parent: Crm.Service.Rest.Model.CrmService_Installation;
        ParentId: Edm.Guid;
        RelationshipTypeKey: Edm.String;
        asKoObservable(): ObservableCrmService_InstallationPersonRelationship;
        static create(): CrmService_InstallationPersonRelationship;
        static create(initData:any): CrmService_InstallationPersonRelationship;
    }

    export class CrmService_InstallationPos extends $data.Entity {
        constructor();
        constructor(initData: { Article?: Crm.Article.Rest.Model.CrmArticle_Article; ArticleId?: Edm.Guid; BatchNo?: Edm.String; Children?: Crm.Service.Rest.Model.CrmService_InstallationPos[]; Comment?: Edm.String; CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; Description?: Edm.String; DomainId?: Edm.Guid; GroupLevel?: Edm.Int32; Id?: Edm.Guid; InstallDate?: Edm.DateTimeOffset; Installation?: Crm.Service.Rest.Model.CrmService_Installation; InstallationId?: Edm.Guid; IsActive?: Edm.Boolean; IsGroupItem?: Edm.Boolean; IsInstalled?: Edm.Boolean; IsSerial?: Edm.Boolean; ItemNo?: Edm.String; LegacyInstallationId?: Edm.String; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; Parent?: Crm.Service.Rest.Model.CrmService_InstallationPos; PosNo?: Edm.String; Quantity?: Edm.Decimal; QuantityUnitEntry?: Crm.Article.Rest.Model.CrmArticle_QuantityUnitEntry; QuantityUnitEntryKey?: Edm.Guid; QuantityUnitKey?: Edm.String; RdsPpClassification?: Edm.String; ReferenceId?: Edm.Guid; RelatedInstallation?: Crm.Service.Rest.Model.CrmService_Installation; RelatedInstallationId?: Edm.Guid; RemoveDate?: Edm.DateTimeOffset; SerialNo?: Edm.String; Supplier?: Edm.String; WarrantyEndCustomer?: Edm.DateTimeOffset; WarrantyEndSupplier?: Edm.DateTimeOffset; WarrantyStartCustomer?: Edm.DateTimeOffset; WarrantyStartSupplier?: Edm.DateTimeOffset });

        Article: Crm.Article.Rest.Model.CrmArticle_Article;
        ArticleId: Edm.Guid;
        BatchNo: Edm.String;
        Children: Crm.Service.Rest.Model.CrmService_InstallationPos[];
        Comment: Edm.String;
        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        Description: Edm.String;
        DomainId: Edm.Guid;
        GroupLevel: Edm.Int32;
        Id: Edm.Guid;
        InstallDate: Edm.DateTimeOffset;
        Installation: Crm.Service.Rest.Model.CrmService_Installation;
        InstallationId: Edm.Guid;
        IsActive: Edm.Boolean;
        IsGroupItem: Edm.Boolean;
        IsInstalled: Edm.Boolean;
        IsSerial: Edm.Boolean;
        ItemNo: Edm.String;
        LegacyInstallationId: Edm.String;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        Parent: Crm.Service.Rest.Model.CrmService_InstallationPos;
        PosNo: Edm.String;
        Quantity: Edm.Decimal;
        QuantityUnitEntry: Crm.Article.Rest.Model.CrmArticle_QuantityUnitEntry;
        QuantityUnitEntryKey: Edm.Guid;
        QuantityUnitKey: Edm.String;
        RdsPpClassification: Edm.String;
        ReferenceId: Edm.Guid;
        RelatedInstallation: Crm.Service.Rest.Model.CrmService_Installation;
        RelatedInstallationId: Edm.Guid;
        RemoveDate: Edm.DateTimeOffset;
        SerialNo: Edm.String;
        Supplier: Edm.String;
        WarrantyEndCustomer: Edm.DateTimeOffset;
        WarrantyEndSupplier: Edm.DateTimeOffset;
        WarrantyStartCustomer: Edm.DateTimeOffset;
        WarrantyStartSupplier: Edm.DateTimeOffset;
        asKoObservable(): ObservableCrmService_InstallationPos;
        static create(): CrmService_InstallationPos;
        static create(initData:any): CrmService_InstallationPos;
    }

    export class CrmService_Installation extends $data.Entity {
        constructor();
        constructor(initData: { Address?: Crm.Rest.Model.Crm_Address; Article?: Crm.Article.Rest.Model.CrmArticle_Article; ArticleKey?: Edm.Guid; BackgroundInfo?: Edm.String; CampaignSource?: Edm.Guid; Company?: Crm.Rest.Model.Crm_Company; CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; CustomItemDesc?: Edm.String; CustomItemNo?: Edm.String; Description?: Edm.String; DomainId?: Edm.Guid; ExactPlace?: Edm.String; ExternalReference?: Edm.String; FolderId?: Edm.Guid; Id?: Edm.Guid; InstallationNo?: Edm.String; InstallationTypeKey?: Edm.String; IsActive?: Edm.Boolean; KickOffDate?: Edm.DateTimeOffset; LanguageKey?: Edm.String; LastActivity?: Edm.DateTimeOffset; LegacyId?: Edm.String; LegacyInstallationId?: Edm.String; LegacyName?: Edm.String; LocationAddressKey?: Edm.Guid; LocationContactId?: Edm.Guid; LocationPersonId?: Edm.Guid; ManufactureDate?: Edm.DateTimeOffset; ManufacturerKey?: Edm.String; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; Name?: Edm.String; Notes?: Crm.Rest.Model.Crm_Note[]; ParentId?: Edm.Guid; ParentName?: Edm.String; ParentType?: Edm.String; Person?: Crm.Rest.Model.Crm_Person; PreferredUser?: Edm.String; PreferredUserUser?: Main.Rest.Model.Main_User; ResponsibleUser?: Edm.String; ResponsibleUserUser?: Main.Rest.Model.Main_User; Room?: Edm.String; ServiceContractInstallationRelationships?: Crm.Service.Rest.Model.CrmService_ServiceContractInstallationRelationship[]; ServiceObject?: Crm.Service.Rest.Model.CrmService_ServiceObject; SourceTypeKey?: Edm.String; Station?: Crm.Rest.Model.Crm_Station; StationKey?: Edm.Guid; StatisticsKeyProductTypeKey?: Edm.String; StatusKey?: Edm.String; Tags?: Crm.Rest.Model.Crm_Tag[]; TechnicianInformation?: Edm.String; Visibility?: Crm.Library.BaseModel.Visibility; VisibleToUserIds?: Edm.String[]; VisibleToUsergroupIds?: Edm.Guid[]; WarrantyFrom?: Edm.DateTimeOffset; WarrantyUntil?: Edm.DateTimeOffset });

        Address: Crm.Rest.Model.Crm_Address;
        Article: Crm.Article.Rest.Model.CrmArticle_Article;
        ArticleKey: Edm.Guid;
        BackgroundInfo: Edm.String;
        CampaignSource: Edm.Guid;
        Company: Crm.Rest.Model.Crm_Company;
        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        CustomItemDesc: Edm.String;
        CustomItemNo: Edm.String;
        Description: Edm.String;
        DomainId: Edm.Guid;
        ExactPlace: Edm.String;
        ExternalReference: Edm.String;
        FolderId: Edm.Guid;
        Id: Edm.Guid;
        InstallationNo: Edm.String;
        InstallationTypeKey: Edm.String;
        IsActive: Edm.Boolean;
        KickOffDate: Edm.DateTimeOffset;
        LanguageKey: Edm.String;
        LastActivity: Edm.DateTimeOffset;
        LegacyId: Edm.String;
        LegacyInstallationId: Edm.String;
        LegacyName: Edm.String;
        LocationAddressKey: Edm.Guid;
        LocationContactId: Edm.Guid;
        LocationPersonId: Edm.Guid;
        ManufactureDate: Edm.DateTimeOffset;
        ManufacturerKey: Edm.String;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        Name: Edm.String;
        Notes: Crm.Rest.Model.Crm_Note[];
        ParentId: Edm.Guid;
        ParentName: Edm.String;
        ParentType: Edm.String;
        Person: Crm.Rest.Model.Crm_Person;
        PreferredUser: Edm.String;
        PreferredUserUser: Main.Rest.Model.Main_User;
        ResponsibleUser: Edm.String;
        ResponsibleUserUser: Main.Rest.Model.Main_User;
        Room: Edm.String;
        ServiceContractInstallationRelationships: Crm.Service.Rest.Model.CrmService_ServiceContractInstallationRelationship[];
        ServiceObject: Crm.Service.Rest.Model.CrmService_ServiceObject;
        SourceTypeKey: Edm.String;
        Station: Crm.Rest.Model.Crm_Station;
        StationKey: Edm.Guid;
        StatisticsKeyProductTypeKey: Edm.String;
        StatusKey: Edm.String;
        Tags: Crm.Rest.Model.Crm_Tag[];
        TechnicianInformation: Edm.String;
        Visibility: Crm.Library.BaseModel.Visibility;
        VisibleToUserIds: Edm.String[];
        VisibleToUsergroupIds: Edm.Guid[];
        WarrantyFrom: Edm.DateTimeOffset;
        WarrantyUntil: Edm.DateTimeOffset;
        asKoObservable(): ObservableCrmService_Installation;
        static create(): CrmService_Installation;
        static create(initData:any): CrmService_Installation;
    }

    export class CrmService_MaintenancePlan extends $data.Entity {
        constructor();
        constructor(initData: { AllowPrematureMaintenance?: Edm.Boolean; BackgroundInfo?: Edm.String; CampaignSource?: Edm.Guid; CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; DomainId?: Edm.Guid; FirstDate?: Edm.DateTimeOffset; GenerateMaintenanceOrders?: Edm.Boolean; Id?: Edm.Guid; IsActive?: Edm.Boolean; LanguageKey?: Edm.String; LastActivity?: Edm.DateTimeOffset; LegacyId?: Edm.String; LegacyName?: Edm.String; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; Name?: Edm.String; NextDate?: Edm.DateTimeOffset; Notes?: Crm.Rest.Model.Crm_Note[]; ParentId?: Edm.Guid; ParentName?: Edm.String; ParentType?: Edm.String; ResponsibleUser?: Edm.String; RhythmUnitKey?: Edm.String; RhythmValue?: Edm.Int32; ServiceContract?: Crm.Service.Rest.Model.CrmService_ServiceContract; ServiceContractId?: Edm.Guid; ServiceOrderTemplate?: Crm.Service.Rest.Model.CrmService_ServiceOrderHead; ServiceOrderTemplateId?: Edm.Guid; ServiceOrders?: Crm.Service.Rest.Model.CrmService_ServiceOrderHead[]; SourceTypeKey?: Edm.String; Visibility?: Crm.Library.BaseModel.Visibility; VisibleToUserIds?: Edm.String[]; VisibleToUsergroupIds?: Edm.Guid[] });

        AllowPrematureMaintenance: Edm.Boolean;
        BackgroundInfo: Edm.String;
        CampaignSource: Edm.Guid;
        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        DomainId: Edm.Guid;
        FirstDate: Edm.DateTimeOffset;
        GenerateMaintenanceOrders: Edm.Boolean;
        Id: Edm.Guid;
        IsActive: Edm.Boolean;
        LanguageKey: Edm.String;
        LastActivity: Edm.DateTimeOffset;
        LegacyId: Edm.String;
        LegacyName: Edm.String;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        Name: Edm.String;
        NextDate: Edm.DateTimeOffset;
        Notes: Crm.Rest.Model.Crm_Note[];
        ParentId: Edm.Guid;
        ParentName: Edm.String;
        ParentType: Edm.String;
        ResponsibleUser: Edm.String;
        RhythmUnitKey: Edm.String;
        RhythmValue: Edm.Int32;
        ServiceContract: Crm.Service.Rest.Model.CrmService_ServiceContract;
        ServiceContractId: Edm.Guid;
        ServiceOrderTemplate: Crm.Service.Rest.Model.CrmService_ServiceOrderHead;
        ServiceOrderTemplateId: Edm.Guid;
        ServiceOrders: Crm.Service.Rest.Model.CrmService_ServiceOrderHead[];
        SourceTypeKey: Edm.String;
        Visibility: Crm.Library.BaseModel.Visibility;
        VisibleToUserIds: Edm.String[];
        VisibleToUsergroupIds: Edm.Guid[];
        asKoObservable(): ObservableCrmService_MaintenancePlan;
        static create(): CrmService_MaintenancePlan;
        static create(initData:any): CrmService_MaintenancePlan;
    }

    export class CrmService_ReplenishmentOrderItem extends $data.Entity {
        constructor();
        constructor(initData: { Article?: Crm.Article.Rest.Model.CrmArticle_Article; ArticleId?: Edm.Guid; CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; Description?: Edm.String; DomainId?: Edm.Guid; Id?: Edm.Guid; IsActive?: Edm.Boolean; MaterialNo?: Edm.String; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; Quantity?: Edm.Decimal; QuantityUnitEntry?: Crm.Article.Rest.Model.CrmArticle_QuantityUnitEntry; QuantityUnitEntryKey?: Edm.Guid; QuantityUnitKey?: Edm.String; Remark?: Edm.String; ReplenishmentOrder?: Crm.Service.Rest.Model.CrmService_ReplenishmentOrder; ReplenishmentOrderId?: Edm.Guid; ServiceOrderMaterials?: Crm.Service.Rest.Model.CrmService_ServiceOrderMaterial[] });

        Article: Crm.Article.Rest.Model.CrmArticle_Article;
        ArticleId: Edm.Guid;
        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        Description: Edm.String;
        DomainId: Edm.Guid;
        Id: Edm.Guid;
        IsActive: Edm.Boolean;
        MaterialNo: Edm.String;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        Quantity: Edm.Decimal;
        QuantityUnitEntry: Crm.Article.Rest.Model.CrmArticle_QuantityUnitEntry;
        QuantityUnitEntryKey: Edm.Guid;
        QuantityUnitKey: Edm.String;
        Remark: Edm.String;
        ReplenishmentOrder: Crm.Service.Rest.Model.CrmService_ReplenishmentOrder;
        ReplenishmentOrderId: Edm.Guid;
        ServiceOrderMaterials: Crm.Service.Rest.Model.CrmService_ServiceOrderMaterial[];
        asKoObservable(): ObservableCrmService_ReplenishmentOrderItem;
        static create(): CrmService_ReplenishmentOrderItem;
        static create(initData:any): CrmService_ReplenishmentOrderItem;
    }

    export class CrmService_ReplenishmentOrder extends $data.Entity {
        constructor();
        constructor(initData: { CloseDate?: Edm.DateTimeOffset; ClosedBy?: Edm.String; CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; DomainId?: Edm.Guid; Id?: Edm.Guid; IsActive?: Edm.Boolean; IsClosed?: Edm.Boolean; IsExported?: Edm.Boolean; Items?: Crm.Service.Rest.Model.CrmService_ReplenishmentOrderItem[]; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; ResponsibleUser?: Edm.String; ResponsibleUserObject?: Main.Rest.Model.Main_User });

        CloseDate: Edm.DateTimeOffset;
        ClosedBy: Edm.String;
        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        DomainId: Edm.Guid;
        Id: Edm.Guid;
        IsActive: Edm.Boolean;
        IsClosed: Edm.Boolean;
        IsExported: Edm.Boolean;
        Items: Crm.Service.Rest.Model.CrmService_ReplenishmentOrderItem[];
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        ResponsibleUser: Edm.String;
        ResponsibleUserObject: Main.Rest.Model.Main_User;
        asKoObservable(): ObservableCrmService_ReplenishmentOrder;
        static create(): CrmService_ReplenishmentOrder;
        static create(initData:any): CrmService_ReplenishmentOrder;
    }

    export class CrmService_ServiceCase extends $data.Entity {
        constructor();
        constructor(initData: { AffectedCompany?: Crm.Rest.Model.Crm_Company; AffectedCompanyKey?: Edm.Guid; AffectedInstallation?: Crm.Service.Rest.Model.CrmService_Installation; AffectedInstallationKey?: Edm.Guid; BackgroundInfo?: Edm.String; CampaignSource?: Edm.Guid; CategoryKey?: Edm.String; CompletionDate?: Edm.DateTimeOffset; CompletionServiceOrder?: Crm.Service.Rest.Model.CrmService_ServiceOrderHead; CompletionServiceOrderId?: Edm.Guid; CompletionUser?: Edm.String; CompletionUserUser?: Main.Rest.Model.Main_User; ContactPerson?: Crm.Rest.Model.Crm_Person; ContactPersonId?: Edm.Guid; CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; DomainId?: Edm.Guid; ErrorCodeKey?: Edm.String; ErrorMessage?: Edm.String; Executed?: Edm.DateTimeOffset; ExtensionValues?: Default.CrmService_ServiceCase_ExtensionValues; Id?: Edm.Guid; IsActive?: Edm.Boolean; LanguageKey?: Edm.String; LastActivity?: Edm.DateTimeOffset; LegacyId?: Edm.String; LegacyName?: Edm.String; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; Name?: Edm.String; Notes?: Crm.Rest.Model.Crm_Note[]; OriginatingServiceOrder?: Crm.Service.Rest.Model.CrmService_ServiceOrderHead; OriginatingServiceOrderId?: Edm.Guid; OriginatingServiceOrderTime?: Crm.Service.Rest.Model.CrmService_ServiceOrderTime; OriginatingServiceOrderTimeId?: Edm.Guid; ParentId?: Edm.Guid; ParentName?: Edm.String; ParentType?: Edm.String; PickedUpDate?: Edm.DateTimeOffset; Planned?: Edm.DateTimeOffset; PriorityKey?: Edm.String; Reported?: Edm.DateTimeOffset; RequiredAssetKeys?: Edm.String[]; RequiredSkillKeys?: Edm.String[]; ResponsibleUser?: Edm.String; ResponsibleUserUser?: Main.Rest.Model.Main_User; ServiceCaseCreateDate?: Edm.DateTimeOffset; ServiceCaseCreateUser?: Edm.String; ServiceCaseNo?: Edm.String; ServiceCaseTemplateId?: Edm.Guid; ServiceObject?: Crm.Service.Rest.Model.CrmService_ServiceObject; ServiceObjectId?: Edm.Guid; ServiceOrderErrorTypes?: Crm.Service.Rest.Model.CrmService_ServiceOrderErrorType[]; ServiceOrderTime?: Crm.Service.Rest.Model.CrmService_ServiceOrderTime; ServiceOrderTimeId?: Edm.Guid; SourceTypeKey?: Edm.String; Station?: Crm.Rest.Model.Crm_Station; StationKey?: Edm.Guid; StatisticsKeyAssemblyGroupKey?: Edm.String; StatisticsKeyCauseKey?: Edm.String; StatisticsKeyCauserKey?: Edm.String; StatisticsKeyFaultImageKey?: Edm.String; StatisticsKeyMainAssemblyKey?: Edm.String; StatisticsKeyProductTypeKey?: Edm.String; StatisticsKeyRemedyKey?: Edm.String; StatisticsKeySubAssemblyKey?: Edm.String; StatisticsKeyWeightingKey?: Edm.String; StatusKey?: Edm.Int32; Tags?: Crm.Rest.Model.Crm_Tag[]; UserGroup?: Main.Rest.Model.Main_Usergroup; UserGroupKey?: Edm.Guid; Visibility?: Crm.Library.BaseModel.Visibility; VisibleToUserIds?: Edm.String[]; VisibleToUsergroupIds?: Edm.Guid[] });

        AffectedCompany: Crm.Rest.Model.Crm_Company;
        AffectedCompanyKey: Edm.Guid;
        AffectedInstallation: Crm.Service.Rest.Model.CrmService_Installation;
        AffectedInstallationKey: Edm.Guid;
        BackgroundInfo: Edm.String;
        CampaignSource: Edm.Guid;
        CategoryKey: Edm.String;
        CompletionDate: Edm.DateTimeOffset;
        CompletionServiceOrder: Crm.Service.Rest.Model.CrmService_ServiceOrderHead;
        CompletionServiceOrderId: Edm.Guid;
        CompletionUser: Edm.String;
        CompletionUserUser: Main.Rest.Model.Main_User;
        ContactPerson: Crm.Rest.Model.Crm_Person;
        ContactPersonId: Edm.Guid;
        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        DomainId: Edm.Guid;
        ErrorCodeKey: Edm.String;
        ErrorMessage: Edm.String;
        Executed: Edm.DateTimeOffset;
        ExtensionValues: Default.CrmService_ServiceCase_ExtensionValues;
        Id: Edm.Guid;
        IsActive: Edm.Boolean;
        LanguageKey: Edm.String;
        LastActivity: Edm.DateTimeOffset;
        LegacyId: Edm.String;
        LegacyName: Edm.String;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        Name: Edm.String;
        Notes: Crm.Rest.Model.Crm_Note[];
        OriginatingServiceOrder: Crm.Service.Rest.Model.CrmService_ServiceOrderHead;
        OriginatingServiceOrderId: Edm.Guid;
        OriginatingServiceOrderTime: Crm.Service.Rest.Model.CrmService_ServiceOrderTime;
        OriginatingServiceOrderTimeId: Edm.Guid;
        ParentId: Edm.Guid;
        ParentName: Edm.String;
        ParentType: Edm.String;
        PickedUpDate: Edm.DateTimeOffset;
        Planned: Edm.DateTimeOffset;
        PriorityKey: Edm.String;
        Reported: Edm.DateTimeOffset;
        RequiredAssetKeys: Edm.String[];
        RequiredSkillKeys: Edm.String[];
        ResponsibleUser: Edm.String;
        ResponsibleUserUser: Main.Rest.Model.Main_User;
        ServiceCaseCreateDate: Edm.DateTimeOffset;
        ServiceCaseCreateUser: Edm.String;
        ServiceCaseNo: Edm.String;
        ServiceCaseTemplateId: Edm.Guid;
        ServiceObject: Crm.Service.Rest.Model.CrmService_ServiceObject;
        ServiceObjectId: Edm.Guid;
        ServiceOrderErrorTypes: Crm.Service.Rest.Model.CrmService_ServiceOrderErrorType[];
        ServiceOrderTime: Crm.Service.Rest.Model.CrmService_ServiceOrderTime;
        ServiceOrderTimeId: Edm.Guid;
        SourceTypeKey: Edm.String;
        Station: Crm.Rest.Model.Crm_Station;
        StationKey: Edm.Guid;
        StatisticsKeyAssemblyGroupKey: Edm.String;
        StatisticsKeyCauseKey: Edm.String;
        StatisticsKeyCauserKey: Edm.String;
        StatisticsKeyFaultImageKey: Edm.String;
        StatisticsKeyMainAssemblyKey: Edm.String;
        StatisticsKeyProductTypeKey: Edm.String;
        StatisticsKeyRemedyKey: Edm.String;
        StatisticsKeySubAssemblyKey: Edm.String;
        StatisticsKeyWeightingKey: Edm.String;
        StatusKey: Edm.Int32;
        Tags: Crm.Rest.Model.Crm_Tag[];
        UserGroup: Main.Rest.Model.Main_Usergroup;
        UserGroupKey: Edm.Guid;
        Visibility: Crm.Library.BaseModel.Visibility;
        VisibleToUserIds: Edm.String[];
        VisibleToUsergroupIds: Edm.Guid[];
        asKoObservable(): ObservableCrmService_ServiceCase;
        static create(): CrmService_ServiceCase;
        static create(initData:any): CrmService_ServiceCase;
    }

    export class CrmService_ServiceCaseTemplate extends $data.Entity {
        constructor();
        constructor(initData: { CategoryKey?: Edm.String; CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; DomainId?: Edm.Guid; ExtensionValues?: Default.CrmService_ServiceCaseTemplate_ExtensionValues; Id?: Edm.Guid; IsActive?: Edm.Boolean; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; Name?: Edm.String; PriorityKey?: Edm.String; RequiredAssetKeys?: Edm.String[]; RequiredSkillKeys?: Edm.String[]; ResponsibleUser?: Edm.String; ResponsibleUserUser?: Main.Rest.Model.Main_User; UserGroup?: Main.Rest.Model.Main_Usergroup; UserGroupKey?: Edm.Guid });

        CategoryKey: Edm.String;
        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        DomainId: Edm.Guid;
        ExtensionValues: Default.CrmService_ServiceCaseTemplate_ExtensionValues;
        Id: Edm.Guid;
        IsActive: Edm.Boolean;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        Name: Edm.String;
        PriorityKey: Edm.String;
        RequiredAssetKeys: Edm.String[];
        RequiredSkillKeys: Edm.String[];
        ResponsibleUser: Edm.String;
        ResponsibleUserUser: Main.Rest.Model.Main_User;
        UserGroup: Main.Rest.Model.Main_Usergroup;
        UserGroupKey: Edm.Guid;
        asKoObservable(): ObservableCrmService_ServiceCaseTemplate;
        static create(): CrmService_ServiceCaseTemplate;
        static create(initData:any): CrmService_ServiceCaseTemplate;
    }

    export class CrmService_ServiceContractAddressRelationship extends $data.Entity {
        constructor();
        constructor(initData: { Child?: Crm.Rest.Model.Crm_Address; ChildId?: Edm.Guid; CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; DomainId?: Edm.Guid; Id?: Edm.Guid; Information?: Edm.String; IsActive?: Edm.Boolean; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; Parent?: Crm.Service.Rest.Model.CrmService_ServiceContract; ParentId?: Edm.Guid; RelationshipTypeKey?: Edm.String });

        Child: Crm.Rest.Model.Crm_Address;
        ChildId: Edm.Guid;
        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        DomainId: Edm.Guid;
        Id: Edm.Guid;
        Information: Edm.String;
        IsActive: Edm.Boolean;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        Parent: Crm.Service.Rest.Model.CrmService_ServiceContract;
        ParentId: Edm.Guid;
        RelationshipTypeKey: Edm.String;
        asKoObservable(): ObservableCrmService_ServiceContractAddressRelationship;
        static create(): CrmService_ServiceContractAddressRelationship;
        static create(initData:any): CrmService_ServiceContractAddressRelationship;
    }

    export class CrmService_ServiceContractInstallationRelationship extends $data.Entity {
        constructor();
        constructor(initData: { Child?: Crm.Service.Rest.Model.CrmService_Installation; ChildId?: Edm.Guid; CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; DomainId?: Edm.Guid; Id?: Edm.Guid; Information?: Edm.String; IsActive?: Edm.Boolean; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; Parent?: Crm.Service.Rest.Model.CrmService_ServiceContract; ParentId?: Edm.Guid; TimeAllocation?: Edm.Duration });

        Child: Crm.Service.Rest.Model.CrmService_Installation;
        ChildId: Edm.Guid;
        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        DomainId: Edm.Guid;
        Id: Edm.Guid;
        Information: Edm.String;
        IsActive: Edm.Boolean;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        Parent: Crm.Service.Rest.Model.CrmService_ServiceContract;
        ParentId: Edm.Guid;
        TimeAllocation: Edm.Duration;
        asKoObservable(): ObservableCrmService_ServiceContractInstallationRelationship;
        static create(): CrmService_ServiceContractInstallationRelationship;
        static create(initData:any): CrmService_ServiceContractInstallationRelationship;
    }

    export class CrmService_ServiceContract extends $data.Entity {
        constructor();
        constructor(initData: { BackgroundInfo?: Edm.String; CampaignSource?: Edm.Guid; ContractNo?: Edm.String; ContractTypeKey?: Edm.String; CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; DomainId?: Edm.Guid; ExternalReference?: Edm.String; FirstAnswerUnitKey?: Edm.String; FirstAnswerValue?: Edm.Int16; Id?: Edm.Guid; Installations?: Crm.Service.Rest.Model.CrmService_ServiceContractInstallationRelationship[]; InternalInvoiceInformation?: Edm.String; InvoiceAddress?: Crm.Rest.Model.Crm_Address; InvoiceAddressKey?: Edm.Guid; InvoiceRecipient?: Crm.Rest.Model.Crm_Company; InvoiceRecipientId?: Edm.Guid; InvoiceSpecialConditions?: Edm.String; InvoicedUntil?: Edm.DateTimeOffset; IsActive?: Edm.Boolean; LanguageKey?: Edm.String; LastActivity?: Edm.DateTimeOffset; LastInvoiceNo?: Edm.String; LegacyId?: Edm.String; LegacyName?: Edm.String; MaintenancePlans?: Crm.Service.Rest.Model.CrmService_MaintenancePlan[]; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; Name?: Edm.String; NoPaymentsUntil?: Edm.DateTimeOffset; Notes?: Crm.Rest.Model.Crm_Note[]; ParentCompany?: Crm.Rest.Model.Crm_Company; ParentId?: Edm.Guid; ParentName?: Edm.String; ParentType?: Edm.String; Payer?: Crm.Rest.Model.Crm_Company; PayerAddress?: Crm.Rest.Model.Crm_Address; PayerAddressId?: Edm.Guid; PayerId?: Edm.Guid; PaymentConditionKey?: Edm.String; PaymentIntervalKey?: Edm.String; PaymentTypeKey?: Edm.String; Price?: Edm.Decimal; PriceCurrencyKey?: Edm.String; PriceGuaranteedUntil?: Edm.DateTimeOffset; ResponsibleUser?: Edm.String; ResponsibleUserUser?: Main.Rest.Model.Main_User; ServiceCompletedUnitKey?: Edm.String; ServiceCompletedValue?: Edm.Int16; ServiceObject?: Crm.Service.Rest.Model.CrmService_ServiceObject; ServiceObjectId?: Edm.Guid; ServiceProvisionPerTimeSpanUnitKey?: Edm.String; ServiceProvisionUnitKey?: Edm.String; ServiceProvisionValue?: Edm.Decimal; SourceTypeKey?: Edm.String; SparePartsBudgetInvoiceTypeKey?: Edm.String; SparePartsPerTimeSpanUnitKey?: Edm.String; SparePartsUnitKey?: Edm.String; SparePartsValue?: Edm.Decimal; StatusKey?: Edm.String; Tags?: Crm.Rest.Model.Crm_Tag[]; ValidFrom?: Edm.DateTimeOffset; ValidTo?: Edm.DateTimeOffset; Visibility?: Crm.Library.BaseModel.Visibility; VisibleToUserIds?: Edm.String[]; VisibleToUsergroupIds?: Edm.Guid[] });

        BackgroundInfo: Edm.String;
        CampaignSource: Edm.Guid;
        ContractNo: Edm.String;
        ContractTypeKey: Edm.String;
        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        DomainId: Edm.Guid;
        ExternalReference: Edm.String;
        FirstAnswerUnitKey: Edm.String;
        FirstAnswerValue: Edm.Int16;
        Id: Edm.Guid;
        Installations: Crm.Service.Rest.Model.CrmService_ServiceContractInstallationRelationship[];
        InternalInvoiceInformation: Edm.String;
        InvoiceAddress: Crm.Rest.Model.Crm_Address;
        InvoiceAddressKey: Edm.Guid;
        InvoiceRecipient: Crm.Rest.Model.Crm_Company;
        InvoiceRecipientId: Edm.Guid;
        InvoiceSpecialConditions: Edm.String;
        InvoicedUntil: Edm.DateTimeOffset;
        IsActive: Edm.Boolean;
        LanguageKey: Edm.String;
        LastActivity: Edm.DateTimeOffset;
        LastInvoiceNo: Edm.String;
        LegacyId: Edm.String;
        LegacyName: Edm.String;
        MaintenancePlans: Crm.Service.Rest.Model.CrmService_MaintenancePlan[];
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        Name: Edm.String;
        NoPaymentsUntil: Edm.DateTimeOffset;
        Notes: Crm.Rest.Model.Crm_Note[];
        ParentCompany: Crm.Rest.Model.Crm_Company;
        ParentId: Edm.Guid;
        ParentName: Edm.String;
        ParentType: Edm.String;
        Payer: Crm.Rest.Model.Crm_Company;
        PayerAddress: Crm.Rest.Model.Crm_Address;
        PayerAddressId: Edm.Guid;
        PayerId: Edm.Guid;
        PaymentConditionKey: Edm.String;
        PaymentIntervalKey: Edm.String;
        PaymentTypeKey: Edm.String;
        Price: Edm.Decimal;
        PriceCurrencyKey: Edm.String;
        PriceGuaranteedUntil: Edm.DateTimeOffset;
        ResponsibleUser: Edm.String;
        ResponsibleUserUser: Main.Rest.Model.Main_User;
        ServiceCompletedUnitKey: Edm.String;
        ServiceCompletedValue: Edm.Int16;
        ServiceObject: Crm.Service.Rest.Model.CrmService_ServiceObject;
        ServiceObjectId: Edm.Guid;
        ServiceProvisionPerTimeSpanUnitKey: Edm.String;
        ServiceProvisionUnitKey: Edm.String;
        ServiceProvisionValue: Edm.Decimal;
        SourceTypeKey: Edm.String;
        SparePartsBudgetInvoiceTypeKey: Edm.String;
        SparePartsPerTimeSpanUnitKey: Edm.String;
        SparePartsUnitKey: Edm.String;
        SparePartsValue: Edm.Decimal;
        StatusKey: Edm.String;
        Tags: Crm.Rest.Model.Crm_Tag[];
        ValidFrom: Edm.DateTimeOffset;
        ValidTo: Edm.DateTimeOffset;
        Visibility: Crm.Library.BaseModel.Visibility;
        VisibleToUserIds: Edm.String[];
        VisibleToUsergroupIds: Edm.Guid[];
        asKoObservable(): ObservableCrmService_ServiceContract;
        static create(): CrmService_ServiceContract;
        static create(initData:any): CrmService_ServiceContract;
    }

    export class CrmService_ServiceObject extends $data.Entity {
        constructor();
        constructor(initData: { Addresses?: Crm.Rest.Model.Crm_Address[]; BackgroundInfo?: Edm.String; CampaignSource?: Edm.Guid; CategoryKey?: Edm.String; CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; DomainId?: Edm.Guid; Id?: Edm.Guid; Installations?: Crm.Service.Rest.Model.CrmService_Installation[]; IsActive?: Edm.Boolean; LanguageKey?: Edm.String; LastActivity?: Edm.DateTimeOffset; LegacyId?: Edm.String; LegacyName?: Edm.String; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; Name?: Edm.String; Notes?: Crm.Rest.Model.Crm_Note[]; ObjectNo?: Edm.String; ParentId?: Edm.Guid; ParentName?: Edm.String; ParentType?: Edm.String; ResponsibleUser?: Edm.String; ResponsibleUserUser?: Main.Rest.Model.Main_User; SourceTypeKey?: Edm.String; StandardAddress?: Crm.Rest.Model.Crm_Address; StandardAddressId?: Edm.Guid; Tags?: Crm.Rest.Model.Crm_Tag[]; Visibility?: Crm.Library.BaseModel.Visibility; VisibleToUserIds?: Edm.String[]; VisibleToUsergroupIds?: Edm.Guid[] });

        Addresses: Crm.Rest.Model.Crm_Address[];
        BackgroundInfo: Edm.String;
        CampaignSource: Edm.Guid;
        CategoryKey: Edm.String;
        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        DomainId: Edm.Guid;
        Id: Edm.Guid;
        Installations: Crm.Service.Rest.Model.CrmService_Installation[];
        IsActive: Edm.Boolean;
        LanguageKey: Edm.String;
        LastActivity: Edm.DateTimeOffset;
        LegacyId: Edm.String;
        LegacyName: Edm.String;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        Name: Edm.String;
        Notes: Crm.Rest.Model.Crm_Note[];
        ObjectNo: Edm.String;
        ParentId: Edm.Guid;
        ParentName: Edm.String;
        ParentType: Edm.String;
        ResponsibleUser: Edm.String;
        ResponsibleUserUser: Main.Rest.Model.Main_User;
        SourceTypeKey: Edm.String;
        StandardAddress: Crm.Rest.Model.Crm_Address;
        StandardAddressId: Edm.Guid;
        Tags: Crm.Rest.Model.Crm_Tag[];
        Visibility: Crm.Library.BaseModel.Visibility;
        VisibleToUserIds: Edm.String[];
        VisibleToUsergroupIds: Edm.Guid[];
        asKoObservable(): ObservableCrmService_ServiceObject;
        static create(): CrmService_ServiceObject;
        static create(initData:any): CrmService_ServiceObject;
    }

    export class CrmService_ServiceOrderDispatchReportRecipient extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; Dispatch?: Crm.Service.Rest.Model.CrmService_ServiceOrderDispatch; DispatchId?: Edm.Guid; Email?: Edm.String; Id?: Edm.Guid; IsActive?: Edm.Boolean; Language?: Edm.String; Locale?: Edm.String; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String });

        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        Dispatch: Crm.Service.Rest.Model.CrmService_ServiceOrderDispatch;
        DispatchId: Edm.Guid;
        Email: Edm.String;
        Id: Edm.Guid;
        IsActive: Edm.Boolean;
        Language: Edm.String;
        Locale: Edm.String;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        asKoObservable(): ObservableCrmService_ServiceOrderDispatchReportRecipient;
        static create(): CrmService_ServiceOrderDispatchReportRecipient;
        static create(initData:any): CrmService_ServiceOrderDispatchReportRecipient;
    }

    export class CrmService_ServiceOrderErrorCause extends $data.Entity {
        constructor();
        constructor(initData: { ChildServiceOrderErrorCauses?: Crm.Service.Rest.Model.CrmService_ServiceOrderErrorCause[]; CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; Description?: Edm.String; DispatchId?: Edm.Guid; DomainId?: Edm.Guid; Id?: Edm.Guid; InternalRemark?: Edm.String; IsActive?: Edm.Boolean; IsConfirmed?: Edm.Boolean; IsExported?: Edm.Boolean; IsSuspected?: Edm.Boolean; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; ParentServiceOrderErrorCause?: Crm.Service.Rest.Model.CrmService_ServiceOrderErrorCause; ParentServiceOrderErrorCauseId?: Edm.Guid; ServiceOrderDispatch?: Crm.Service.Rest.Model.CrmService_ServiceOrderDispatch; ServiceOrderErrorType?: Crm.Service.Rest.Model.CrmService_ServiceOrderErrorType; ServiceOrderErrorTypeId?: Edm.Guid; StatisticsKeyCauseKey?: Edm.String });

        ChildServiceOrderErrorCauses: Crm.Service.Rest.Model.CrmService_ServiceOrderErrorCause[];
        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        Description: Edm.String;
        DispatchId: Edm.Guid;
        DomainId: Edm.Guid;
        Id: Edm.Guid;
        InternalRemark: Edm.String;
        IsActive: Edm.Boolean;
        IsConfirmed: Edm.Boolean;
        IsExported: Edm.Boolean;
        IsSuspected: Edm.Boolean;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        ParentServiceOrderErrorCause: Crm.Service.Rest.Model.CrmService_ServiceOrderErrorCause;
        ParentServiceOrderErrorCauseId: Edm.Guid;
        ServiceOrderDispatch: Crm.Service.Rest.Model.CrmService_ServiceOrderDispatch;
        ServiceOrderErrorType: Crm.Service.Rest.Model.CrmService_ServiceOrderErrorType;
        ServiceOrderErrorTypeId: Edm.Guid;
        StatisticsKeyCauseKey: Edm.String;
        asKoObservable(): ObservableCrmService_ServiceOrderErrorCause;
        static create(): CrmService_ServiceOrderErrorCause;
        static create(initData:any): CrmService_ServiceOrderErrorCause;
    }

    export class CrmService_ServiceOrderErrorType extends $data.Entity {
        constructor();
        constructor(initData: { ChildServiceOrderErrorTypes?: Crm.Service.Rest.Model.CrmService_ServiceOrderErrorType[]; CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; Description?: Edm.String; DispatchId?: Edm.Guid; DomainId?: Edm.Guid; Id?: Edm.Guid; InternalRemark?: Edm.String; IsActive?: Edm.Boolean; IsConfirmed?: Edm.Boolean; IsExported?: Edm.Boolean; IsMainErrorType?: Edm.Boolean; IsSuspected?: Edm.Boolean; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; OrderId?: Edm.Guid; ParentServiceOrderErrorType?: Crm.Service.Rest.Model.CrmService_ServiceOrderErrorType; ParentServiceOrderErrorTypeId?: Edm.Guid; ServiceCase?: Crm.Service.Rest.Model.CrmService_ServiceCase; ServiceCaseId?: Edm.Guid; ServiceOrder?: Crm.Service.Rest.Model.CrmService_ServiceOrderHead; ServiceOrderDispatch?: Crm.Service.Rest.Model.CrmService_ServiceOrderDispatch; ServiceOrderErrorCauses?: Crm.Service.Rest.Model.CrmService_ServiceOrderErrorCause[]; ServiceOrderTime?: Crm.Service.Rest.Model.CrmService_ServiceOrderTime; ServiceOrderTimeId?: Edm.Guid; StatisticsKeyFaultImageKey?: Edm.String });

        ChildServiceOrderErrorTypes: Crm.Service.Rest.Model.CrmService_ServiceOrderErrorType[];
        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        Description: Edm.String;
        DispatchId: Edm.Guid;
        DomainId: Edm.Guid;
        Id: Edm.Guid;
        InternalRemark: Edm.String;
        IsActive: Edm.Boolean;
        IsConfirmed: Edm.Boolean;
        IsExported: Edm.Boolean;
        IsMainErrorType: Edm.Boolean;
        IsSuspected: Edm.Boolean;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        OrderId: Edm.Guid;
        ParentServiceOrderErrorType: Crm.Service.Rest.Model.CrmService_ServiceOrderErrorType;
        ParentServiceOrderErrorTypeId: Edm.Guid;
        ServiceCase: Crm.Service.Rest.Model.CrmService_ServiceCase;
        ServiceCaseId: Edm.Guid;
        ServiceOrder: Crm.Service.Rest.Model.CrmService_ServiceOrderHead;
        ServiceOrderDispatch: Crm.Service.Rest.Model.CrmService_ServiceOrderDispatch;
        ServiceOrderErrorCauses: Crm.Service.Rest.Model.CrmService_ServiceOrderErrorCause[];
        ServiceOrderTime: Crm.Service.Rest.Model.CrmService_ServiceOrderTime;
        ServiceOrderTimeId: Edm.Guid;
        StatisticsKeyFaultImageKey: Edm.String;
        asKoObservable(): ObservableCrmService_ServiceOrderErrorType;
        static create(): CrmService_ServiceOrderErrorType;
        static create(initData:any): CrmService_ServiceOrderErrorType;
    }

    export class CrmService_ServiceOrderExpensePosting extends $data.Entity {
        constructor();
        constructor(initData: { Amount?: Edm.Decimal; Article?: Crm.Article.Rest.Model.CrmArticle_Article; ArticleId?: Edm.Guid; CostCenterKey?: Edm.String; CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; CurrencyKey?: Edm.String; Date?: Edm.DateTimeOffset; Description?: Edm.String; DispatchId?: Edm.Guid; DomainId?: Edm.Guid; ExpenseTypeKey?: Edm.String; FileResource?: Crm.Rest.Model.Crm_FileResource; FileResourceKey?: Edm.Guid; Id?: Edm.Guid; IsActive?: Edm.Boolean; IsClosed?: Edm.Boolean; IsExported?: Edm.Boolean; ItemNo?: Edm.String; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; OrderId?: Edm.Guid; PerDiemReport?: Crm.PerDiem.Rest.Model.CrmPerDiem_PerDiemReport; PerDiemReportId?: Edm.Guid; ResponsibleUser?: Edm.String; ResponsibleUserObject?: Main.Rest.Model.Main_User; ServiceOrder?: Crm.Service.Rest.Model.CrmService_ServiceOrderHead; ServiceOrderDispatch?: Crm.Service.Rest.Model.CrmService_ServiceOrderDispatch; ServiceOrderTime?: Crm.Service.Rest.Model.CrmService_ServiceOrderTime; ServiceOrderTimeId?: Edm.Guid });

        Amount: Edm.Decimal;
        Article: Crm.Article.Rest.Model.CrmArticle_Article;
        ArticleId: Edm.Guid;
        CostCenterKey: Edm.String;
        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        CurrencyKey: Edm.String;
        Date: Edm.DateTimeOffset;
        Description: Edm.String;
        DispatchId: Edm.Guid;
        DomainId: Edm.Guid;
        ExpenseTypeKey: Edm.String;
        FileResource: Crm.Rest.Model.Crm_FileResource;
        FileResourceKey: Edm.Guid;
        Id: Edm.Guid;
        IsActive: Edm.Boolean;
        IsClosed: Edm.Boolean;
        IsExported: Edm.Boolean;
        ItemNo: Edm.String;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        OrderId: Edm.Guid;
        PerDiemReport: Crm.PerDiem.Rest.Model.CrmPerDiem_PerDiemReport;
        PerDiemReportId: Edm.Guid;
        ResponsibleUser: Edm.String;
        ResponsibleUserObject: Main.Rest.Model.Main_User;
        ServiceOrder: Crm.Service.Rest.Model.CrmService_ServiceOrderHead;
        ServiceOrderDispatch: Crm.Service.Rest.Model.CrmService_ServiceOrderDispatch;
        ServiceOrderTime: Crm.Service.Rest.Model.CrmService_ServiceOrderTime;
        ServiceOrderTimeId: Edm.Guid;
        asKoObservable(): ObservableCrmService_ServiceOrderExpensePosting;
        static create(): CrmService_ServiceOrderExpensePosting;
        static create(initData:any): CrmService_ServiceOrderExpensePosting;
    }

    export class CrmService_ServiceOrderHead extends $data.Entity {
        constructor();
        constructor(initData: { BackgroundInfo?: Edm.String; CampaignSource?: Edm.Guid; City?: Edm.String; CloseReason?: Edm.String; Closed?: Edm.DateTimeOffset; CommissionNo?: Edm.String; CommissioningStatusKey?: Edm.String; Company?: Crm.Rest.Model.Crm_Company; CountryKey?: Edm.String; CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; CurrencyKey?: Edm.String; CustomerContactId?: Edm.Guid; Deadline?: Edm.DateTimeOffset; Dispatches?: Crm.Service.Rest.Model.CrmService_ServiceOrderDispatch[]; DocumentAttributes?: Crm.Rest.Model.Crm_DocumentAttribute[]; DomainId?: Edm.Guid; ErrorCodeKey?: Edm.String; ErrorMessage?: Edm.String; Id?: Edm.Guid; Initiator?: Crm.Rest.Model.Crm_Company; InitiatorId?: Edm.Guid; InitiatorPerson?: Crm.Rest.Model.Crm_Person; InitiatorPersonId?: Edm.Guid; Installation?: Crm.Service.Rest.Model.CrmService_Installation; InstallationId?: Edm.Guid; InvoiceRecipient?: Crm.Rest.Model.Crm_Company; InvoiceRecipientAddress?: Crm.Rest.Model.Crm_Address; InvoiceRecipientAddressId?: Edm.Guid; InvoiceRecipientId?: Edm.Guid; InvoicingTypeKey?: Edm.String; IsActive?: Edm.Boolean; IsCostLumpSum?: Edm.Boolean; IsGeocoded?: Edm.Boolean; IsMaterialLumpSum?: Edm.Boolean; IsTemplate?: Edm.Boolean; IsTimeLumpSum?: Edm.Boolean; LanguageKey?: Edm.String; LastActivity?: Edm.DateTimeOffset; Latitude?: Edm.Double; LegacyId?: Edm.String; LegacyName?: Edm.String; Longitude?: Edm.Double; MaintenancePlanId?: Edm.Guid; MaintenancePlanningRun?: Edm.Guid; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; Name?: Edm.String; Name1?: Edm.String; Name2?: Edm.String; Name3?: Edm.String; NoInvoiceReasonKey?: Edm.String; Notes?: Crm.Rest.Model.Crm_Note[]; OrderNo?: Edm.String; ParentId?: Edm.Guid; ParentName?: Edm.String; ParentType?: Edm.String; Payer?: Crm.Rest.Model.Crm_Company; PayerAddress?: Crm.Rest.Model.Crm_Address; PayerAddressId?: Edm.Guid; PayerId?: Edm.Guid; Planned?: Edm.DateTimeOffset; PlannedDateFix?: Edm.Boolean; PlannedTime?: Edm.Duration; PreferredTechnician?: Edm.String; PreferredTechnicianUser?: Main.Rest.Model.Main_User; PreferredTechnicianUsergroupKey?: Edm.Guid; PreferredTechnicianUsergroupObject?: Main.Rest.Model.Main_Usergroup; PrematureDate?: Edm.DateTimeOffset; PrematureTime?: Edm.Duration; PriorityKey?: Edm.String; PurchaseDate?: Edm.DateTimeOffset; PurchaseOrderNo?: Edm.String; RegionKey?: Edm.String; ReportRecipients?: Edm.String[]; Reported?: Edm.DateTimeOffset; RequiredAssetKeys?: Edm.String[]; RequiredSkillKeys?: Edm.String[]; ResponsibleUser?: Edm.String; ResponsibleUserUser?: Main.Rest.Model.Main_User; ServiceCase?: Crm.Service.Rest.Model.CrmService_ServiceCase; ServiceCaseKey?: Edm.Guid; ServiceCaseNo?: Edm.String; ServiceContract?: Crm.Service.Rest.Model.CrmService_ServiceContract; ServiceContractId?: Edm.Guid; ServiceLocationEmail?: Edm.String; ServiceLocationFax?: Edm.String; ServiceLocationMobile?: Edm.String; ServiceLocationPhone?: Edm.String; ServiceLocationResponsiblePerson?: Edm.String; ServiceObject?: Crm.Service.Rest.Model.CrmService_ServiceObject; ServiceObjectId?: Edm.Guid; ServiceOrderErrorTypes?: Crm.Service.Rest.Model.CrmService_ServiceOrderErrorType[]; ServiceOrderExpensePostings?: Crm.Service.Rest.Model.CrmService_ServiceOrderExpensePosting[]; ServiceOrderMaterials?: Crm.Service.Rest.Model.CrmService_ServiceOrderMaterial[]; ServiceOrderStatisticsKeys?: Crm.Service.Rest.Model.CrmService_ServiceOrderStatisticsKey[]; ServiceOrderTemplate?: Crm.Service.Rest.Model.CrmService_ServiceOrderHead; ServiceOrderTemplateId?: Edm.Guid; ServiceOrderTimePostings?: Crm.Service.Rest.Model.CrmService_ServiceOrderTimePosting[]; ServiceOrderTimes?: Crm.Service.Rest.Model.CrmService_ServiceOrderTime[]; SourceTypeKey?: Edm.String; Station?: Crm.Rest.Model.Crm_Station; StationKey?: Edm.Guid; StatusKey?: Edm.String; Street?: Edm.String; Tags?: Crm.Rest.Model.Crm_Tag[]; TypeKey?: Edm.String; UserGroup?: Main.Rest.Model.Main_Usergroup; UserGroupKey?: Edm.Guid; Visibility?: Crm.Library.BaseModel.Visibility; VisibleToUserIds?: Edm.String[]; VisibleToUsergroupIds?: Edm.Guid[]; ZipCode?: Edm.String });

        BackgroundInfo: Edm.String;
        CampaignSource: Edm.Guid;
        City: Edm.String;
        CloseReason: Edm.String;
        Closed: Edm.DateTimeOffset;
        CommissionNo: Edm.String;
        CommissioningStatusKey: Edm.String;
        Company: Crm.Rest.Model.Crm_Company;
        CountryKey: Edm.String;
        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        CurrencyKey: Edm.String;
        CustomerContactId: Edm.Guid;
        Deadline: Edm.DateTimeOffset;
        Dispatches: Crm.Service.Rest.Model.CrmService_ServiceOrderDispatch[];
        DocumentAttributes: Crm.Rest.Model.Crm_DocumentAttribute[];
        DomainId: Edm.Guid;
        ErrorCodeKey: Edm.String;
        ErrorMessage: Edm.String;
        Id: Edm.Guid;
        Initiator: Crm.Rest.Model.Crm_Company;
        InitiatorId: Edm.Guid;
        InitiatorPerson: Crm.Rest.Model.Crm_Person;
        InitiatorPersonId: Edm.Guid;
        Installation: Crm.Service.Rest.Model.CrmService_Installation;
        InstallationId: Edm.Guid;
        InvoiceRecipient: Crm.Rest.Model.Crm_Company;
        InvoiceRecipientAddress: Crm.Rest.Model.Crm_Address;
        InvoiceRecipientAddressId: Edm.Guid;
        InvoiceRecipientId: Edm.Guid;
        InvoicingTypeKey: Edm.String;
        IsActive: Edm.Boolean;
        IsCostLumpSum: Edm.Boolean;
        IsGeocoded: Edm.Boolean;
        IsMaterialLumpSum: Edm.Boolean;
        IsTemplate: Edm.Boolean;
        IsTimeLumpSum: Edm.Boolean;
        LanguageKey: Edm.String;
        LastActivity: Edm.DateTimeOffset;
        Latitude: Edm.Double;
        LegacyId: Edm.String;
        LegacyName: Edm.String;
        Longitude: Edm.Double;
        MaintenancePlanId: Edm.Guid;
        MaintenancePlanningRun: Edm.Guid;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        Name: Edm.String;
        Name1: Edm.String;
        Name2: Edm.String;
        Name3: Edm.String;
        NoInvoiceReasonKey: Edm.String;
        Notes: Crm.Rest.Model.Crm_Note[];
        OrderNo: Edm.String;
        ParentId: Edm.Guid;
        ParentName: Edm.String;
        ParentType: Edm.String;
        Payer: Crm.Rest.Model.Crm_Company;
        PayerAddress: Crm.Rest.Model.Crm_Address;
        PayerAddressId: Edm.Guid;
        PayerId: Edm.Guid;
        Planned: Edm.DateTimeOffset;
        PlannedDateFix: Edm.Boolean;
        PlannedTime: Edm.Duration;
        PreferredTechnician: Edm.String;
        PreferredTechnicianUser: Main.Rest.Model.Main_User;
        PreferredTechnicianUsergroupKey: Edm.Guid;
        PreferredTechnicianUsergroupObject: Main.Rest.Model.Main_Usergroup;
        PrematureDate: Edm.DateTimeOffset;
        PrematureTime: Edm.Duration;
        PriorityKey: Edm.String;
        PurchaseDate: Edm.DateTimeOffset;
        PurchaseOrderNo: Edm.String;
        RegionKey: Edm.String;
        ReportRecipients: Edm.String[];
        Reported: Edm.DateTimeOffset;
        RequiredAssetKeys: Edm.String[];
        RequiredSkillKeys: Edm.String[];
        ResponsibleUser: Edm.String;
        ResponsibleUserUser: Main.Rest.Model.Main_User;
        ServiceCase: Crm.Service.Rest.Model.CrmService_ServiceCase;
        ServiceCaseKey: Edm.Guid;
        ServiceCaseNo: Edm.String;
        ServiceContract: Crm.Service.Rest.Model.CrmService_ServiceContract;
        ServiceContractId: Edm.Guid;
        ServiceLocationEmail: Edm.String;
        ServiceLocationFax: Edm.String;
        ServiceLocationMobile: Edm.String;
        ServiceLocationPhone: Edm.String;
        ServiceLocationResponsiblePerson: Edm.String;
        ServiceObject: Crm.Service.Rest.Model.CrmService_ServiceObject;
        ServiceObjectId: Edm.Guid;
        ServiceOrderErrorTypes: Crm.Service.Rest.Model.CrmService_ServiceOrderErrorType[];
        ServiceOrderExpensePostings: Crm.Service.Rest.Model.CrmService_ServiceOrderExpensePosting[];
        ServiceOrderMaterials: Crm.Service.Rest.Model.CrmService_ServiceOrderMaterial[];
        ServiceOrderStatisticsKeys: Crm.Service.Rest.Model.CrmService_ServiceOrderStatisticsKey[];
        ServiceOrderTemplate: Crm.Service.Rest.Model.CrmService_ServiceOrderHead;
        ServiceOrderTemplateId: Edm.Guid;
        ServiceOrderTimePostings: Crm.Service.Rest.Model.CrmService_ServiceOrderTimePosting[];
        ServiceOrderTimes: Crm.Service.Rest.Model.CrmService_ServiceOrderTime[];
        SourceTypeKey: Edm.String;
        Station: Crm.Rest.Model.Crm_Station;
        StationKey: Edm.Guid;
        StatusKey: Edm.String;
        Street: Edm.String;
        Tags: Crm.Rest.Model.Crm_Tag[];
        TypeKey: Edm.String;
        UserGroup: Main.Rest.Model.Main_Usergroup;
        UserGroupKey: Edm.Guid;
        Visibility: Crm.Library.BaseModel.Visibility;
        VisibleToUserIds: Edm.String[];
        VisibleToUsergroupIds: Edm.Guid[];
        ZipCode: Edm.String;
        asKoObservable(): ObservableCrmService_ServiceOrderHead;
        static create(): CrmService_ServiceOrderHead;
        static create(initData:any): CrmService_ServiceOrderHead;
    }

    export class CrmService_ServiceOrderMaterial extends $data.Entity {
        constructor();
        constructor(initData: { Article?: Crm.Article.Rest.Model.CrmArticle_Article; ArticleId?: Edm.Guid; ArticleTypeKey?: Edm.String; BatchNo?: Edm.String; ChildServiceOrderMaterials?: Crm.Service.Rest.Model.CrmService_ServiceOrderMaterial[]; CommissioningStatusKey?: Edm.String; CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; Description?: Edm.String; Discount?: Edm.Decimal; DiscountType?: Crm.Article.Model.Enums.DiscountType; DispatchId?: Edm.Guid; DocumentAttributes?: Crm.Rest.Model.Crm_DocumentAttribute[]; DomainId?: Edm.Guid; ExternalRemark?: Edm.String; FromLocation?: Edm.String; FromStorageArea?: Edm.String; FromWarehouse?: Edm.String; Id?: Edm.Guid; InternalRemark?: Edm.String; IsActive?: Edm.Boolean; IsBatch?: Edm.Boolean; IsInstalled?: Edm.Boolean; IsSerial?: Edm.Boolean; ItemNo?: Edm.String; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; NoPreviousSerialNoReasonKey?: Edm.String; OrderId?: Edm.Guid; ParentServiceOrderMaterial?: Crm.Service.Rest.Model.CrmService_ServiceOrderMaterial; ParentServiceOrderMaterialId?: Edm.Guid; ParentServiceOrderMaterialVersion?: Edm.Int64; PosNo?: Edm.String; PreviousSerialNo?: Edm.String; Price?: Edm.Decimal; Quantity?: Edm.Decimal; QuantityUnitEntry?: Crm.Article.Rest.Model.CrmArticle_QuantityUnitEntry; QuantityUnitEntryKey?: Edm.Guid; QuantityUnitKey?: Edm.String; ReplenishmentOrderItem?: Crm.Service.Rest.Model.CrmService_ReplenishmentOrderItem; ReplenishmentOrderItemId?: Edm.Guid; Serial?: Crm.Article.Rest.Model.CrmArticle_Serial; SerialId?: Edm.Guid; SerialNo?: Edm.String; ServiceOrderDispatch?: Crm.Service.Rest.Model.CrmService_ServiceOrderDispatch; ServiceOrderHead?: Crm.Service.Rest.Model.CrmService_ServiceOrderHead; ServiceOrderMaterialType?: Edm.String; ServiceOrderTime?: Crm.Service.Rest.Model.CrmService_ServiceOrderTime; ServiceOrderTimeId?: Edm.Guid; SignedByCustomer?: Edm.Boolean; ToLocation?: Edm.String; ToWarehouse?: Edm.String; TotalValue?: Edm.Decimal; Version?: Edm.Int64 });

        Article: Crm.Article.Rest.Model.CrmArticle_Article;
        ArticleId: Edm.Guid;
        ArticleTypeKey: Edm.String;
        BatchNo: Edm.String;
        ChildServiceOrderMaterials: Crm.Service.Rest.Model.CrmService_ServiceOrderMaterial[];
        CommissioningStatusKey: Edm.String;
        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        Description: Edm.String;
        Discount: Edm.Decimal;
        DiscountType: Crm.Article.Model.Enums.DiscountType;
        DispatchId: Edm.Guid;
        DocumentAttributes: Crm.Rest.Model.Crm_DocumentAttribute[];
        DomainId: Edm.Guid;
        ExternalRemark: Edm.String;
        FromLocation: Edm.String;
        FromStorageArea: Edm.String;
        FromWarehouse: Edm.String;
        Id: Edm.Guid;
        InternalRemark: Edm.String;
        IsActive: Edm.Boolean;
        IsBatch: Edm.Boolean;
        IsInstalled: Edm.Boolean;
        IsSerial: Edm.Boolean;
        ItemNo: Edm.String;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        NoPreviousSerialNoReasonKey: Edm.String;
        OrderId: Edm.Guid;
        ParentServiceOrderMaterial: Crm.Service.Rest.Model.CrmService_ServiceOrderMaterial;
        ParentServiceOrderMaterialId: Edm.Guid;
        ParentServiceOrderMaterialVersion: Edm.Int64;
        PosNo: Edm.String;
        PreviousSerialNo: Edm.String;
        Price: Edm.Decimal;
        Quantity: Edm.Decimal;
        QuantityUnitEntry: Crm.Article.Rest.Model.CrmArticle_QuantityUnitEntry;
        QuantityUnitEntryKey: Edm.Guid;
        QuantityUnitKey: Edm.String;
        ReplenishmentOrderItem: Crm.Service.Rest.Model.CrmService_ReplenishmentOrderItem;
        ReplenishmentOrderItemId: Edm.Guid;
        Serial: Crm.Article.Rest.Model.CrmArticle_Serial;
        SerialId: Edm.Guid;
        SerialNo: Edm.String;
        ServiceOrderDispatch: Crm.Service.Rest.Model.CrmService_ServiceOrderDispatch;
        ServiceOrderHead: Crm.Service.Rest.Model.CrmService_ServiceOrderHead;
        ServiceOrderMaterialType: Edm.String;
        ServiceOrderTime: Crm.Service.Rest.Model.CrmService_ServiceOrderTime;
        ServiceOrderTimeId: Edm.Guid;
        SignedByCustomer: Edm.Boolean;
        ToLocation: Edm.String;
        ToWarehouse: Edm.String;
        TotalValue: Edm.Decimal;
        Version: Edm.Int64;
        asKoObservable(): ObservableCrmService_ServiceOrderMaterial;
        static create(): CrmService_ServiceOrderMaterial;
        static create(initData:any): CrmService_ServiceOrderMaterial;
    }

    export class CrmService_ServiceOrderStatisticsKey extends $data.Entity {
        constructor();
        constructor(initData: { AssemblyGroupKey?: Edm.String; CauseKey?: Edm.String; CauserKey?: Edm.String; CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; Dispatch?: Crm.Service.Rest.Model.CrmService_ServiceOrderDispatch; DispatchId?: Edm.Guid; DomainId?: Edm.Guid; FaultImageKey?: Edm.String; Id?: Edm.Guid; IsActive?: Edm.Boolean; MainAssemblyKey?: Edm.String; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; ProductTypeKey?: Edm.String; RemedyKey?: Edm.String; ServiceOrder?: Crm.Service.Rest.Model.CrmService_ServiceOrderHead; ServiceOrderId?: Edm.Guid; SubAssemblyKey?: Edm.String; WeightingKey?: Edm.String });

        AssemblyGroupKey: Edm.String;
        CauseKey: Edm.String;
        CauserKey: Edm.String;
        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        Dispatch: Crm.Service.Rest.Model.CrmService_ServiceOrderDispatch;
        DispatchId: Edm.Guid;
        DomainId: Edm.Guid;
        FaultImageKey: Edm.String;
        Id: Edm.Guid;
        IsActive: Edm.Boolean;
        MainAssemblyKey: Edm.String;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        ProductTypeKey: Edm.String;
        RemedyKey: Edm.String;
        ServiceOrder: Crm.Service.Rest.Model.CrmService_ServiceOrderHead;
        ServiceOrderId: Edm.Guid;
        SubAssemblyKey: Edm.String;
        WeightingKey: Edm.String;
        asKoObservable(): ObservableCrmService_ServiceOrderStatisticsKey;
        static create(): CrmService_ServiceOrderStatisticsKey;
        static create(initData:any): CrmService_ServiceOrderStatisticsKey;
    }

    export class CrmService_ServiceOrderTimeDispatch extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; Id?: Edm.Guid; IsActive?: Edm.Boolean; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; ServiceOrderDispatch?: Crm.Service.Rest.Model.CrmService_ServiceOrderDispatch; ServiceOrderDispatchId?: Edm.Guid; ServiceOrderTime?: Crm.Service.Rest.Model.CrmService_ServiceOrderTime; ServiceOrderTimeId?: Edm.Guid });

        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        Id: Edm.Guid;
        IsActive: Edm.Boolean;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        ServiceOrderDispatch: Crm.Service.Rest.Model.CrmService_ServiceOrderDispatch;
        ServiceOrderDispatchId: Edm.Guid;
        ServiceOrderTime: Crm.Service.Rest.Model.CrmService_ServiceOrderTime;
        ServiceOrderTimeId: Edm.Guid;
        asKoObservable(): ObservableCrmService_ServiceOrderTimeDispatch;
        static create(): CrmService_ServiceOrderTimeDispatch;
        static create(initData:any): CrmService_ServiceOrderTimeDispatch;
    }

    export class CrmService_ServiceOrderTimePosting extends $data.Entity {
        constructor();
        constructor(initData: { Article?: Crm.Article.Rest.Model.CrmArticle_Article; ArticleId?: Edm.Guid; BorderCrossingTime?: Edm.DateTimeOffset; BorderCrossingTimeZone?: Edm.String; Break?: Edm.Duration; ChildServiceOrderTimePostings?: Crm.Service.Rest.Model.CrmService_ServiceOrderTimePosting[]; CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; Description?: Edm.String; DispatchId?: Edm.Guid; Distance?: Edm.Int32; DistanceUnitKey?: Edm.String; DomainId?: Edm.Guid; DriverTypeKey?: Edm.String; Duration?: Edm.Duration; From?: Edm.DateTimeOffset; Id?: Edm.Guid; InternalRemark?: Edm.String; IsActive?: Edm.Boolean; IsClosed?: Edm.Boolean; ItemNo?: Edm.String; LicensePlate?: Edm.String; LocationFrom?: Edm.String; LocationTo?: Edm.String; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; OrderId?: Edm.Guid; ParentServiceOrderTimePosting?: Crm.Service.Rest.Model.CrmService_ServiceOrderTimePosting; ParentServiceOrderTimePostingId?: Edm.Guid; ParentServiceOrderTimePostingVersion?: Edm.Int64; PerDiemReport?: Crm.PerDiem.Rest.Model.CrmPerDiem_PerDiemReport; PerDiemReportId?: Edm.Guid; ResponsibleUser?: Edm.String; ResponsibleUserObject?: Main.Rest.Model.Main_User; ServiceOrder?: Crm.Service.Rest.Model.CrmService_ServiceOrderHead; ServiceOrderDispatch?: Crm.Service.Rest.Model.CrmService_ServiceOrderDispatch; ServiceOrderTime?: Crm.Service.Rest.Model.CrmService_ServiceOrderTime; ServiceOrderTimeId?: Edm.Guid; ServiceOrderTimePostingType?: Edm.String; TimeZoneFrom?: Edm.String; TimeZoneTo?: Edm.String; To?: Edm.DateTimeOffset; TravelTypeKey?: Edm.String; User?: Main.Rest.Model.Main_User; Username?: Edm.String; Version?: Edm.Int64 });

        Article: Crm.Article.Rest.Model.CrmArticle_Article;
        ArticleId: Edm.Guid;
        BorderCrossingTime: Edm.DateTimeOffset;
        BorderCrossingTimeZone: Edm.String;
        Break: Edm.Duration;
        ChildServiceOrderTimePostings: Crm.Service.Rest.Model.CrmService_ServiceOrderTimePosting[];
        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        Description: Edm.String;
        DispatchId: Edm.Guid;
        Distance: Edm.Int32;
        DistanceUnitKey: Edm.String;
        DomainId: Edm.Guid;
        DriverTypeKey: Edm.String;
        Duration: Edm.Duration;
        From: Edm.DateTimeOffset;
        Id: Edm.Guid;
        InternalRemark: Edm.String;
        IsActive: Edm.Boolean;
        IsClosed: Edm.Boolean;
        ItemNo: Edm.String;
        LicensePlate: Edm.String;
        LocationFrom: Edm.String;
        LocationTo: Edm.String;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        OrderId: Edm.Guid;
        ParentServiceOrderTimePosting: Crm.Service.Rest.Model.CrmService_ServiceOrderTimePosting;
        ParentServiceOrderTimePostingId: Edm.Guid;
        ParentServiceOrderTimePostingVersion: Edm.Int64;
        PerDiemReport: Crm.PerDiem.Rest.Model.CrmPerDiem_PerDiemReport;
        PerDiemReportId: Edm.Guid;
        ResponsibleUser: Edm.String;
        ResponsibleUserObject: Main.Rest.Model.Main_User;
        ServiceOrder: Crm.Service.Rest.Model.CrmService_ServiceOrderHead;
        ServiceOrderDispatch: Crm.Service.Rest.Model.CrmService_ServiceOrderDispatch;
        ServiceOrderTime: Crm.Service.Rest.Model.CrmService_ServiceOrderTime;
        ServiceOrderTimeId: Edm.Guid;
        ServiceOrderTimePostingType: Edm.String;
        TimeZoneFrom: Edm.String;
        TimeZoneTo: Edm.String;
        To: Edm.DateTimeOffset;
        TravelTypeKey: Edm.String;
        User: Main.Rest.Model.Main_User;
        Username: Edm.String;
        Version: Edm.Int64;
        asKoObservable(): ObservableCrmService_ServiceOrderTimePosting;
        static create(): CrmService_ServiceOrderTimePosting;
        static create(initData:any): CrmService_ServiceOrderTimePosting;
    }

    export class CrmService_ServiceOrderTime extends $data.Entity {
        constructor();
        constructor(initData: { ActualDuration?: Edm.Duration; Article?: Crm.Article.Rest.Model.CrmArticle_Article; ArticleId?: Edm.Guid; CausingItemNo?: Edm.String; CausingItemPreviousSerialNo?: Edm.String; CausingItemSerialNo?: Edm.String; Comment?: Edm.String; CompleteDate?: Edm.DateTimeOffset; CompleteUser?: Edm.String; CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; Description?: Edm.String; Diagnosis?: Edm.String; Discount?: Edm.Decimal; DiscountType?: Crm.Article.Model.Enums.DiscountType; DomainId?: Edm.Guid; EstimatedDuration?: Edm.Duration; ExpensePostings?: Crm.Service.Rest.Model.CrmService_ServiceOrderExpensePosting[]; ExtensionValues?: Default.CrmService_ServiceOrderTime_ExtensionValues; Id?: Edm.Guid; Installation?: Crm.Service.Rest.Model.CrmService_Installation; InstallationId?: Edm.Guid; InvoiceDuration?: Edm.Duration; InvoicingTypeKey?: Edm.String; IsActive?: Edm.Boolean; IsCostLumpSum?: Edm.Boolean; IsMaterialLumpSum?: Edm.Boolean; IsTimeLumpSum?: Edm.Boolean; ItemNo?: Edm.String; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; NoCausingItemPreviousSerialNoReasonKey?: Edm.String; NoCausingItemSerialNoReasonKey?: Edm.String; OrderId?: Edm.Guid; PosNo?: Edm.String; Postings?: Crm.Service.Rest.Model.CrmService_ServiceOrderTimePosting[]; Price?: Edm.Decimal; ServiceCases?: Crm.Service.Rest.Model.CrmService_ServiceCase[]; ServiceOrderErrorTypes?: Crm.Service.Rest.Model.CrmService_ServiceOrderErrorType[]; ServiceOrderMaterials?: Crm.Service.Rest.Model.CrmService_ServiceOrderMaterial[]; ServiceOrderTimeDispatches?: Crm.Service.Rest.Model.CrmService_ServiceOrderTimeDispatch[]; StatusKey?: Edm.String; TimeZone?: Edm.String; TotalValue?: Edm.Decimal });

        ActualDuration: Edm.Duration;
        Article: Crm.Article.Rest.Model.CrmArticle_Article;
        ArticleId: Edm.Guid;
        CausingItemNo: Edm.String;
        CausingItemPreviousSerialNo: Edm.String;
        CausingItemSerialNo: Edm.String;
        Comment: Edm.String;
        CompleteDate: Edm.DateTimeOffset;
        CompleteUser: Edm.String;
        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        Description: Edm.String;
        Diagnosis: Edm.String;
        Discount: Edm.Decimal;
        DiscountType: Crm.Article.Model.Enums.DiscountType;
        DomainId: Edm.Guid;
        EstimatedDuration: Edm.Duration;
        ExpensePostings: Crm.Service.Rest.Model.CrmService_ServiceOrderExpensePosting[];
        ExtensionValues: Default.CrmService_ServiceOrderTime_ExtensionValues;
        Id: Edm.Guid;
        Installation: Crm.Service.Rest.Model.CrmService_Installation;
        InstallationId: Edm.Guid;
        InvoiceDuration: Edm.Duration;
        InvoicingTypeKey: Edm.String;
        IsActive: Edm.Boolean;
        IsCostLumpSum: Edm.Boolean;
        IsMaterialLumpSum: Edm.Boolean;
        IsTimeLumpSum: Edm.Boolean;
        ItemNo: Edm.String;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        NoCausingItemPreviousSerialNoReasonKey: Edm.String;
        NoCausingItemSerialNoReasonKey: Edm.String;
        OrderId: Edm.Guid;
        PosNo: Edm.String;
        Postings: Crm.Service.Rest.Model.CrmService_ServiceOrderTimePosting[];
        Price: Edm.Decimal;
        ServiceCases: Crm.Service.Rest.Model.CrmService_ServiceCase[];
        ServiceOrderErrorTypes: Crm.Service.Rest.Model.CrmService_ServiceOrderErrorType[];
        ServiceOrderMaterials: Crm.Service.Rest.Model.CrmService_ServiceOrderMaterial[];
        ServiceOrderTimeDispatches: Crm.Service.Rest.Model.CrmService_ServiceOrderTimeDispatch[];
        StatusKey: Edm.String;
        TimeZone: Edm.String;
        TotalValue: Edm.Decimal;
        asKoObservable(): ObservableCrmService_ServiceOrderTime;
        static create(): CrmService_ServiceOrderTime;
        static create(initData:any): CrmService_ServiceOrderTime;
    }

}

namespace Crm.Project.Rest.Model {

    export class ObservableCrmProject_DocumentEntry extends $data.Entity {
        constructor();
        constructor(initData: { ContactKey?: KnockoutObservable<Edm.Guid>; CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; Document?: KnockoutObservable<Crm.Rest.Model.ObservableCrm_DocumentAttribute>; DocumentKey?: KnockoutObservable<Edm.Guid>; DomainId?: KnockoutObservable<Edm.Guid>; FeedbackReceived?: KnockoutObservable<Edm.Boolean>; Id?: KnockoutObservable<Edm.Guid>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; Person?: KnockoutObservable<Crm.Rest.Model.ObservableCrm_Person>; PersonKey?: KnockoutObservable<Edm.Guid>; SendDate?: KnockoutObservable<Edm.DateTimeOffset> });

        ContactKey: KnockoutObservable<Edm.Guid>;
        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        Document: KnockoutObservable<Crm.Rest.Model.ObservableCrm_DocumentAttribute>;
        DocumentKey: KnockoutObservable<Edm.Guid>;
        DomainId: KnockoutObservable<Edm.Guid>;
        FeedbackReceived: KnockoutObservable<Edm.Boolean>;
        Id: KnockoutObservable<Edm.Guid>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        Person: KnockoutObservable<Crm.Rest.Model.ObservableCrm_Person>;
        PersonKey: KnockoutObservable<Edm.Guid>;
        SendDate: KnockoutObservable<Edm.DateTimeOffset>;
        innerInstance: CrmProject_DocumentEntry;
    }

    export class ObservableCrmProject_PotentialContactRelationship extends $data.Entity {
        constructor();
        constructor(initData: { ChildCompany?: KnockoutObservable<Crm.Rest.Model.ObservableCrm_Company>; ChildId?: KnockoutObservable<Edm.Guid>; ChildPerson?: KnockoutObservable<Crm.Rest.Model.ObservableCrm_Person>; CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; DomainId?: KnockoutObservable<Edm.Guid>; Id?: KnockoutObservable<Edm.Guid>; Information?: KnockoutObservable<Edm.String>; IsActive?: KnockoutObservable<Edm.Boolean>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; ParentId?: KnockoutObservable<Edm.Guid>; Potential?: KnockoutObservable<Crm.Project.Rest.Model.ObservableCrmProject_Potential>; RelationshipTypeKey?: KnockoutObservable<Edm.String> });

        ChildCompany: KnockoutObservable<Crm.Rest.Model.ObservableCrm_Company>;
        ChildId: KnockoutObservable<Edm.Guid>;
        ChildPerson: KnockoutObservable<Crm.Rest.Model.ObservableCrm_Person>;
        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        DomainId: KnockoutObservable<Edm.Guid>;
        Id: KnockoutObservable<Edm.Guid>;
        Information: KnockoutObservable<Edm.String>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        ParentId: KnockoutObservable<Edm.Guid>;
        Potential: KnockoutObservable<Crm.Project.Rest.Model.ObservableCrmProject_Potential>;
        RelationshipTypeKey: KnockoutObservable<Edm.String>;
        innerInstance: CrmProject_PotentialContactRelationship;
    }

    export class ObservableCrmProject_Potential extends $data.Entity {
        constructor();
        constructor(initData: { BackgroundInfo?: KnockoutObservable<Edm.String>; CampaignSource?: KnockoutObservable<Edm.Guid>; CloseDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; DomainId?: KnockoutObservable<Edm.Guid>; Id?: KnockoutObservable<Edm.Guid>; IsActive?: KnockoutObservable<Edm.Boolean>; LanguageKey?: KnockoutObservable<Edm.String>; LastActivity?: KnockoutObservable<Edm.DateTimeOffset>; LastNoteDate?: KnockoutObservable<Edm.DateTimeOffset>; LegacyId?: KnockoutObservable<Edm.String>; LegacyName?: KnockoutObservable<Edm.String>; MasterProductFamily?: KnockoutObservable<Crm.Article.Rest.Model.ObservableCrmArticle_ProductFamily>; MasterProductFamilyKey?: KnockoutObservable<Edm.Guid>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; Name?: KnockoutObservable<Edm.String>; Notes?: KnockoutObservableArray<Crm.Rest.Model.ObservableCrm_Note>; Parent?: KnockoutObservable<Crm.Rest.Model.ObservableCrm_Company>; ParentId?: KnockoutObservable<Edm.Guid>; ParentName?: KnockoutObservable<Edm.String>; ParentType?: KnockoutObservable<Edm.String>; PotentialNo?: KnockoutObservable<Edm.String>; PriorityKey?: KnockoutObservable<Edm.String>; ProductFamily?: KnockoutObservable<Crm.Article.Rest.Model.ObservableCrmArticle_ProductFamily>; ProductFamilyKey?: KnockoutObservable<Edm.Guid>; ResponsibleUser?: KnockoutObservable<Edm.String>; ResponsibleUserUser?: KnockoutObservable<Main.Rest.Model.ObservableMain_User>; SourceTypeKey?: KnockoutObservable<Edm.String>; StatusDate?: KnockoutObservable<Edm.DateTimeOffset>; StatusKey?: KnockoutObservable<Edm.String>; Tags?: KnockoutObservableArray<Crm.Rest.Model.ObservableCrm_Tag>; Visibility?: KnockoutObservable<Crm.Library.BaseModel.Visibility>; VisibleToUserIds?: KnockoutObservableArray<Edm.String>; VisibleToUsergroupIds?: KnockoutObservableArray<Edm.Guid> });

        BackgroundInfo: KnockoutObservable<Edm.String>;
        CampaignSource: KnockoutObservable<Edm.Guid>;
        CloseDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        DomainId: KnockoutObservable<Edm.Guid>;
        Id: KnockoutObservable<Edm.Guid>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        LanguageKey: KnockoutObservable<Edm.String>;
        LastActivity: KnockoutObservable<Edm.DateTimeOffset>;
        LastNoteDate: KnockoutObservable<Edm.DateTimeOffset>;
        LegacyId: KnockoutObservable<Edm.String>;
        LegacyName: KnockoutObservable<Edm.String>;
        MasterProductFamily: KnockoutObservable<Crm.Article.Rest.Model.ObservableCrmArticle_ProductFamily>;
        MasterProductFamilyKey: KnockoutObservable<Edm.Guid>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        Name: KnockoutObservable<Edm.String>;
        Notes: KnockoutObservableArray<Crm.Rest.Model.ObservableCrm_Note>;
        Parent: KnockoutObservable<Crm.Rest.Model.ObservableCrm_Company>;
        ParentId: KnockoutObservable<Edm.Guid>;
        ParentName: KnockoutObservable<Edm.String>;
        ParentType: KnockoutObservable<Edm.String>;
        PotentialNo: KnockoutObservable<Edm.String>;
        PriorityKey: KnockoutObservable<Edm.String>;
        ProductFamily: KnockoutObservable<Crm.Article.Rest.Model.ObservableCrmArticle_ProductFamily>;
        ProductFamilyKey: KnockoutObservable<Edm.Guid>;
        ResponsibleUser: KnockoutObservable<Edm.String>;
        ResponsibleUserUser: KnockoutObservable<Main.Rest.Model.ObservableMain_User>;
        SourceTypeKey: KnockoutObservable<Edm.String>;
        StatusDate: KnockoutObservable<Edm.DateTimeOffset>;
        StatusKey: KnockoutObservable<Edm.String>;
        Tags: KnockoutObservableArray<Crm.Rest.Model.ObservableCrm_Tag>;
        Visibility: KnockoutObservable<Crm.Library.BaseModel.Visibility>;
        VisibleToUserIds: KnockoutObservableArray<Edm.String>;
        VisibleToUsergroupIds: KnockoutObservableArray<Edm.Guid>;
        innerInstance: CrmProject_Potential;
    }

    export class ObservableCrmProject_ProjectContactRelationship extends $data.Entity {
        constructor();
        constructor(initData: { ChildCompany?: KnockoutObservable<Crm.Rest.Model.ObservableCrm_Company>; ChildId?: KnockoutObservable<Edm.Guid>; ChildPerson?: KnockoutObservable<Crm.Rest.Model.ObservableCrm_Person>; CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; DomainId?: KnockoutObservable<Edm.Guid>; Id?: KnockoutObservable<Edm.Guid>; Information?: KnockoutObservable<Edm.String>; IsActive?: KnockoutObservable<Edm.Boolean>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; ParentId?: KnockoutObservable<Edm.Guid>; Project?: KnockoutObservable<Crm.Project.Rest.Model.ObservableCrmProject_Project>; RelationshipTypeKey?: KnockoutObservable<Edm.String> });

        ChildCompany: KnockoutObservable<Crm.Rest.Model.ObservableCrm_Company>;
        ChildId: KnockoutObservable<Edm.Guid>;
        ChildPerson: KnockoutObservable<Crm.Rest.Model.ObservableCrm_Person>;
        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        DomainId: KnockoutObservable<Edm.Guid>;
        Id: KnockoutObservable<Edm.Guid>;
        Information: KnockoutObservable<Edm.String>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        ParentId: KnockoutObservable<Edm.Guid>;
        Project: KnockoutObservable<Crm.Project.Rest.Model.ObservableCrmProject_Project>;
        RelationshipTypeKey: KnockoutObservable<Edm.String>;
        innerInstance: CrmProject_ProjectContactRelationship;
    }

    export class ObservableCrmProject_Project extends $data.Entity {
        constructor();
        constructor(initData: { AppMiteId?: KnockoutObservable<Edm.String>; BackgroundInfo?: KnockoutObservable<Edm.String>; Bravos?: KnockoutObservableArray<Crm.Rest.Model.ObservableCrm_Bravo>; BugtrackerId?: KnockoutObservable<Edm.String>; CampaignSource?: KnockoutObservable<Edm.Guid>; CategoryKey?: KnockoutObservable<Edm.String>; Competitor?: KnockoutObservable<Crm.Rest.Model.ObservableCrm_Company>; CompetitorId?: KnockoutObservable<Edm.Guid>; ContributionMargin?: KnockoutObservable<Edm.Decimal>; CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; CurrencyKey?: KnockoutObservable<Edm.String>; DomainId?: KnockoutObservable<Edm.Guid>; DueDate?: KnockoutObservable<Edm.DateTimeOffset>; ExtensionValues?: KnockoutObservable<Default.ObservableCrmProject_Project_ExtensionValues>; FolderId?: KnockoutObservable<Edm.Guid>; FolderName?: KnockoutObservable<Edm.String>; Id?: KnockoutObservable<Edm.Guid>; IsActive?: KnockoutObservable<Edm.Boolean>; LanguageKey?: KnockoutObservable<Edm.String>; LastActivity?: KnockoutObservable<Edm.DateTimeOffset>; LegacyId?: KnockoutObservable<Edm.String>; LegacyName?: KnockoutObservable<Edm.String>; MasterProductFamily?: KnockoutObservable<Crm.Article.Rest.Model.ObservableCrmArticle_ProductFamily>; MasterProductFamilyKey?: KnockoutObservable<Edm.Guid>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; Name?: KnockoutObservable<Edm.String>; Notes?: KnockoutObservableArray<Crm.Rest.Model.ObservableCrm_Note>; Parent?: KnockoutObservable<Crm.Rest.Model.ObservableCrm_Company>; ParentId?: KnockoutObservable<Edm.Guid>; ParentName?: KnockoutObservable<Edm.String>; ParentType?: KnockoutObservable<Edm.String>; Potential?: KnockoutObservable<Crm.Project.Rest.Model.ObservableCrmProject_Potential>; PotentialId?: KnockoutObservable<Edm.Guid>; ProductFamily?: KnockoutObservable<Crm.Article.Rest.Model.ObservableCrmArticle_ProductFamily>; ProductFamilyKey?: KnockoutObservable<Edm.Guid>; ProjectAddress?: KnockoutObservable<Crm.Rest.Model.ObservableCrm_Address>; ProjectAddressId?: KnockoutObservable<Edm.Guid>; ProjectLostReason?: KnockoutObservable<Edm.String>; ProjectLostReasonCategoryKey?: KnockoutObservable<Edm.String>; ProjectNo?: KnockoutObservable<Edm.String>; Rating?: KnockoutObservable<Edm.Int32>; ResponsibleUser?: KnockoutObservable<Edm.String>; ResponsibleUserUser?: KnockoutObservable<Main.Rest.Model.ObservableMain_User>; SourceTypeKey?: KnockoutObservable<Edm.String>; StatusDate?: KnockoutObservable<Edm.DateTimeOffset>; StatusInfo?: KnockoutObservable<Edm.String>; StatusKey?: KnockoutObservable<Edm.String>; Tags?: KnockoutObservableArray<Crm.Rest.Model.ObservableCrm_Tag>; Users?: KnockoutObservable<Edm.Int32>; Value?: KnockoutObservable<Edm.Decimal>; Visibility?: KnockoutObservable<Crm.Library.BaseModel.Visibility>; VisibleToUserIds?: KnockoutObservableArray<Edm.String>; VisibleToUsergroupIds?: KnockoutObservableArray<Edm.Guid>; WeightedContributionMargin?: KnockoutObservable<Edm.Single>; WeightedValue?: KnockoutObservable<Edm.Single> });

        AppMiteId: KnockoutObservable<Edm.String>;
        BackgroundInfo: KnockoutObservable<Edm.String>;
        Bravos: KnockoutObservableArray<Crm.Rest.Model.ObservableCrm_Bravo>;
        BugtrackerId: KnockoutObservable<Edm.String>;
        CampaignSource: KnockoutObservable<Edm.Guid>;
        CategoryKey: KnockoutObservable<Edm.String>;
        Competitor: KnockoutObservable<Crm.Rest.Model.ObservableCrm_Company>;
        CompetitorId: KnockoutObservable<Edm.Guid>;
        ContributionMargin: KnockoutObservable<Edm.Decimal>;
        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        CurrencyKey: KnockoutObservable<Edm.String>;
        DomainId: KnockoutObservable<Edm.Guid>;
        DueDate: KnockoutObservable<Edm.DateTimeOffset>;
        ExtensionValues: KnockoutObservable<Default.ObservableCrmProject_Project_ExtensionValues>;
        FolderId: KnockoutObservable<Edm.Guid>;
        FolderName: KnockoutObservable<Edm.String>;
        Id: KnockoutObservable<Edm.Guid>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        LanguageKey: KnockoutObservable<Edm.String>;
        LastActivity: KnockoutObservable<Edm.DateTimeOffset>;
        LegacyId: KnockoutObservable<Edm.String>;
        LegacyName: KnockoutObservable<Edm.String>;
        MasterProductFamily: KnockoutObservable<Crm.Article.Rest.Model.ObservableCrmArticle_ProductFamily>;
        MasterProductFamilyKey: KnockoutObservable<Edm.Guid>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        Name: KnockoutObservable<Edm.String>;
        Notes: KnockoutObservableArray<Crm.Rest.Model.ObservableCrm_Note>;
        Parent: KnockoutObservable<Crm.Rest.Model.ObservableCrm_Company>;
        ParentId: KnockoutObservable<Edm.Guid>;
        ParentName: KnockoutObservable<Edm.String>;
        ParentType: KnockoutObservable<Edm.String>;
        Potential: KnockoutObservable<Crm.Project.Rest.Model.ObservableCrmProject_Potential>;
        PotentialId: KnockoutObservable<Edm.Guid>;
        ProductFamily: KnockoutObservable<Crm.Article.Rest.Model.ObservableCrmArticle_ProductFamily>;
        ProductFamilyKey: KnockoutObservable<Edm.Guid>;
        ProjectAddress: KnockoutObservable<Crm.Rest.Model.ObservableCrm_Address>;
        ProjectAddressId: KnockoutObservable<Edm.Guid>;
        ProjectLostReason: KnockoutObservable<Edm.String>;
        ProjectLostReasonCategoryKey: KnockoutObservable<Edm.String>;
        ProjectNo: KnockoutObservable<Edm.String>;
        Rating: KnockoutObservable<Edm.Int32>;
        ResponsibleUser: KnockoutObservable<Edm.String>;
        ResponsibleUserUser: KnockoutObservable<Main.Rest.Model.ObservableMain_User>;
        SourceTypeKey: KnockoutObservable<Edm.String>;
        StatusDate: KnockoutObservable<Edm.DateTimeOffset>;
        StatusInfo: KnockoutObservable<Edm.String>;
        StatusKey: KnockoutObservable<Edm.String>;
        Tags: KnockoutObservableArray<Crm.Rest.Model.ObservableCrm_Tag>;
        Users: KnockoutObservable<Edm.Int32>;
        Value: KnockoutObservable<Edm.Decimal>;
        Visibility: KnockoutObservable<Crm.Library.BaseModel.Visibility>;
        VisibleToUserIds: KnockoutObservableArray<Edm.String>;
        VisibleToUsergroupIds: KnockoutObservableArray<Edm.Guid>;
        WeightedContributionMargin: KnockoutObservable<Edm.Single>;
        WeightedValue: KnockoutObservable<Edm.Single>;
        innerInstance: CrmProject_Project;
    }

    export class CrmProject_DocumentEntry extends $data.Entity {
        constructor();
        constructor(initData: { ContactKey?: Edm.Guid; CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; Document?: Crm.Rest.Model.Crm_DocumentAttribute; DocumentKey?: Edm.Guid; DomainId?: Edm.Guid; FeedbackReceived?: Edm.Boolean; Id?: Edm.Guid; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; Person?: Crm.Rest.Model.Crm_Person; PersonKey?: Edm.Guid; SendDate?: Edm.DateTimeOffset });

        ContactKey: Edm.Guid;
        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        Document: Crm.Rest.Model.Crm_DocumentAttribute;
        DocumentKey: Edm.Guid;
        DomainId: Edm.Guid;
        FeedbackReceived: Edm.Boolean;
        Id: Edm.Guid;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        Person: Crm.Rest.Model.Crm_Person;
        PersonKey: Edm.Guid;
        SendDate: Edm.DateTimeOffset;
        asKoObservable(): ObservableCrmProject_DocumentEntry;
        static create(): CrmProject_DocumentEntry;
        static create(initData:any): CrmProject_DocumentEntry;
    }

    export class CrmProject_PotentialContactRelationship extends $data.Entity {
        constructor();
        constructor(initData: { ChildCompany?: Crm.Rest.Model.Crm_Company; ChildId?: Edm.Guid; ChildPerson?: Crm.Rest.Model.Crm_Person; CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; DomainId?: Edm.Guid; Id?: Edm.Guid; Information?: Edm.String; IsActive?: Edm.Boolean; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; ParentId?: Edm.Guid; Potential?: Crm.Project.Rest.Model.CrmProject_Potential; RelationshipTypeKey?: Edm.String });

        ChildCompany: Crm.Rest.Model.Crm_Company;
        ChildId: Edm.Guid;
        ChildPerson: Crm.Rest.Model.Crm_Person;
        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        DomainId: Edm.Guid;
        Id: Edm.Guid;
        Information: Edm.String;
        IsActive: Edm.Boolean;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        ParentId: Edm.Guid;
        Potential: Crm.Project.Rest.Model.CrmProject_Potential;
        RelationshipTypeKey: Edm.String;
        asKoObservable(): ObservableCrmProject_PotentialContactRelationship;
        static create(): CrmProject_PotentialContactRelationship;
        static create(initData:any): CrmProject_PotentialContactRelationship;
    }

    export class CrmProject_Potential extends $data.Entity {
        constructor();
        constructor(initData: { BackgroundInfo?: Edm.String; CampaignSource?: Edm.Guid; CloseDate?: Edm.DateTimeOffset; CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; DomainId?: Edm.Guid; Id?: Edm.Guid; IsActive?: Edm.Boolean; LanguageKey?: Edm.String; LastActivity?: Edm.DateTimeOffset; LastNoteDate?: Edm.DateTimeOffset; LegacyId?: Edm.String; LegacyName?: Edm.String; MasterProductFamily?: Crm.Article.Rest.Model.CrmArticle_ProductFamily; MasterProductFamilyKey?: Edm.Guid; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; Name?: Edm.String; Notes?: Crm.Rest.Model.Crm_Note[]; Parent?: Crm.Rest.Model.Crm_Company; ParentId?: Edm.Guid; ParentName?: Edm.String; ParentType?: Edm.String; PotentialNo?: Edm.String; PriorityKey?: Edm.String; ProductFamily?: Crm.Article.Rest.Model.CrmArticle_ProductFamily; ProductFamilyKey?: Edm.Guid; ResponsibleUser?: Edm.String; ResponsibleUserUser?: Main.Rest.Model.Main_User; SourceTypeKey?: Edm.String; StatusDate?: Edm.DateTimeOffset; StatusKey?: Edm.String; Tags?: Crm.Rest.Model.Crm_Tag[]; Visibility?: Crm.Library.BaseModel.Visibility; VisibleToUserIds?: Edm.String[]; VisibleToUsergroupIds?: Edm.Guid[] });

        BackgroundInfo: Edm.String;
        CampaignSource: Edm.Guid;
        CloseDate: Edm.DateTimeOffset;
        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        DomainId: Edm.Guid;
        Id: Edm.Guid;
        IsActive: Edm.Boolean;
        LanguageKey: Edm.String;
        LastActivity: Edm.DateTimeOffset;
        LastNoteDate: Edm.DateTimeOffset;
        LegacyId: Edm.String;
        LegacyName: Edm.String;
        MasterProductFamily: Crm.Article.Rest.Model.CrmArticle_ProductFamily;
        MasterProductFamilyKey: Edm.Guid;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        Name: Edm.String;
        Notes: Crm.Rest.Model.Crm_Note[];
        Parent: Crm.Rest.Model.Crm_Company;
        ParentId: Edm.Guid;
        ParentName: Edm.String;
        ParentType: Edm.String;
        PotentialNo: Edm.String;
        PriorityKey: Edm.String;
        ProductFamily: Crm.Article.Rest.Model.CrmArticle_ProductFamily;
        ProductFamilyKey: Edm.Guid;
        ResponsibleUser: Edm.String;
        ResponsibleUserUser: Main.Rest.Model.Main_User;
        SourceTypeKey: Edm.String;
        StatusDate: Edm.DateTimeOffset;
        StatusKey: Edm.String;
        Tags: Crm.Rest.Model.Crm_Tag[];
        Visibility: Crm.Library.BaseModel.Visibility;
        VisibleToUserIds: Edm.String[];
        VisibleToUsergroupIds: Edm.Guid[];
        asKoObservable(): ObservableCrmProject_Potential;
        static create(): CrmProject_Potential;
        static create(initData:any): CrmProject_Potential;
    }

    export class CrmProject_ProjectContactRelationship extends $data.Entity {
        constructor();
        constructor(initData: { ChildCompany?: Crm.Rest.Model.Crm_Company; ChildId?: Edm.Guid; ChildPerson?: Crm.Rest.Model.Crm_Person; CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; DomainId?: Edm.Guid; Id?: Edm.Guid; Information?: Edm.String; IsActive?: Edm.Boolean; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; ParentId?: Edm.Guid; Project?: Crm.Project.Rest.Model.CrmProject_Project; RelationshipTypeKey?: Edm.String });

        ChildCompany: Crm.Rest.Model.Crm_Company;
        ChildId: Edm.Guid;
        ChildPerson: Crm.Rest.Model.Crm_Person;
        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        DomainId: Edm.Guid;
        Id: Edm.Guid;
        Information: Edm.String;
        IsActive: Edm.Boolean;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        ParentId: Edm.Guid;
        Project: Crm.Project.Rest.Model.CrmProject_Project;
        RelationshipTypeKey: Edm.String;
        asKoObservable(): ObservableCrmProject_ProjectContactRelationship;
        static create(): CrmProject_ProjectContactRelationship;
        static create(initData:any): CrmProject_ProjectContactRelationship;
    }

    export class CrmProject_Project extends $data.Entity {
        constructor();
        constructor(initData: { AppMiteId?: Edm.String; BackgroundInfo?: Edm.String; Bravos?: Crm.Rest.Model.Crm_Bravo[]; BugtrackerId?: Edm.String; CampaignSource?: Edm.Guid; CategoryKey?: Edm.String; Competitor?: Crm.Rest.Model.Crm_Company; CompetitorId?: Edm.Guid; ContributionMargin?: Edm.Decimal; CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; CurrencyKey?: Edm.String; DomainId?: Edm.Guid; DueDate?: Edm.DateTimeOffset; ExtensionValues?: Default.CrmProject_Project_ExtensionValues; FolderId?: Edm.Guid; FolderName?: Edm.String; Id?: Edm.Guid; IsActive?: Edm.Boolean; LanguageKey?: Edm.String; LastActivity?: Edm.DateTimeOffset; LegacyId?: Edm.String; LegacyName?: Edm.String; MasterProductFamily?: Crm.Article.Rest.Model.CrmArticle_ProductFamily; MasterProductFamilyKey?: Edm.Guid; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; Name?: Edm.String; Notes?: Crm.Rest.Model.Crm_Note[]; Parent?: Crm.Rest.Model.Crm_Company; ParentId?: Edm.Guid; ParentName?: Edm.String; ParentType?: Edm.String; Potential?: Crm.Project.Rest.Model.CrmProject_Potential; PotentialId?: Edm.Guid; ProductFamily?: Crm.Article.Rest.Model.CrmArticle_ProductFamily; ProductFamilyKey?: Edm.Guid; ProjectAddress?: Crm.Rest.Model.Crm_Address; ProjectAddressId?: Edm.Guid; ProjectLostReason?: Edm.String; ProjectLostReasonCategoryKey?: Edm.String; ProjectNo?: Edm.String; Rating?: Edm.Int32; ResponsibleUser?: Edm.String; ResponsibleUserUser?: Main.Rest.Model.Main_User; SourceTypeKey?: Edm.String; StatusDate?: Edm.DateTimeOffset; StatusInfo?: Edm.String; StatusKey?: Edm.String; Tags?: Crm.Rest.Model.Crm_Tag[]; Users?: Edm.Int32; Value?: Edm.Decimal; Visibility?: Crm.Library.BaseModel.Visibility; VisibleToUserIds?: Edm.String[]; VisibleToUsergroupIds?: Edm.Guid[]; WeightedContributionMargin?: Edm.Single; WeightedValue?: Edm.Single });

        AppMiteId: Edm.String;
        BackgroundInfo: Edm.String;
        Bravos: Crm.Rest.Model.Crm_Bravo[];
        BugtrackerId: Edm.String;
        CampaignSource: Edm.Guid;
        CategoryKey: Edm.String;
        Competitor: Crm.Rest.Model.Crm_Company;
        CompetitorId: Edm.Guid;
        ContributionMargin: Edm.Decimal;
        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        CurrencyKey: Edm.String;
        DomainId: Edm.Guid;
        DueDate: Edm.DateTimeOffset;
        ExtensionValues: Default.CrmProject_Project_ExtensionValues;
        FolderId: Edm.Guid;
        FolderName: Edm.String;
        Id: Edm.Guid;
        IsActive: Edm.Boolean;
        LanguageKey: Edm.String;
        LastActivity: Edm.DateTimeOffset;
        LegacyId: Edm.String;
        LegacyName: Edm.String;
        MasterProductFamily: Crm.Article.Rest.Model.CrmArticle_ProductFamily;
        MasterProductFamilyKey: Edm.Guid;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        Name: Edm.String;
        Notes: Crm.Rest.Model.Crm_Note[];
        Parent: Crm.Rest.Model.Crm_Company;
        ParentId: Edm.Guid;
        ParentName: Edm.String;
        ParentType: Edm.String;
        Potential: Crm.Project.Rest.Model.CrmProject_Potential;
        PotentialId: Edm.Guid;
        ProductFamily: Crm.Article.Rest.Model.CrmArticle_ProductFamily;
        ProductFamilyKey: Edm.Guid;
        ProjectAddress: Crm.Rest.Model.Crm_Address;
        ProjectAddressId: Edm.Guid;
        ProjectLostReason: Edm.String;
        ProjectLostReasonCategoryKey: Edm.String;
        ProjectNo: Edm.String;
        Rating: Edm.Int32;
        ResponsibleUser: Edm.String;
        ResponsibleUserUser: Main.Rest.Model.Main_User;
        SourceTypeKey: Edm.String;
        StatusDate: Edm.DateTimeOffset;
        StatusInfo: Edm.String;
        StatusKey: Edm.String;
        Tags: Crm.Rest.Model.Crm_Tag[];
        Users: Edm.Int32;
        Value: Edm.Decimal;
        Visibility: Crm.Library.BaseModel.Visibility;
        VisibleToUserIds: Edm.String[];
        VisibleToUsergroupIds: Edm.Guid[];
        WeightedContributionMargin: Edm.Single;
        WeightedValue: Edm.Single;
        asKoObservable(): ObservableCrmProject_Project;
        static create(): CrmProject_Project;
        static create(initData:any): CrmProject_Project;
    }

}

namespace Crm.PerDiem.Germany.Rest.Model.Lookups {

    export class ObservableCrmPerDiemGermany_PerDiemAllowanceAdjustment extends $data.Entity {
        constructor();
        constructor(initData: { AdjustmentFrom?: KnockoutObservable<Crm.PerDiem.Germany.Model.Enums.AdjustmentFrom>; AdjustmentValue?: KnockoutObservable<Edm.Decimal>; CountryKey?: KnockoutObservable<Edm.String>; CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; DomainId?: KnockoutObservable<Edm.Guid>; Favorite?: KnockoutObservable<Edm.Boolean>; Id?: KnockoutObservable<Edm.Guid>; IsActive?: KnockoutObservable<Edm.Boolean>; IsPercentage?: KnockoutObservable<Edm.Boolean>; Key?: KnockoutObservable<Edm.String>; Language?: KnockoutObservable<Edm.String>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; SortOrder?: KnockoutObservable<Edm.Int32>; ValidFrom?: KnockoutObservable<Edm.DateTimeOffset>; ValidTo?: KnockoutObservable<Edm.DateTimeOffset>; Value?: KnockoutObservable<Edm.String> });

        AdjustmentFrom: KnockoutObservable<Crm.PerDiem.Germany.Model.Enums.AdjustmentFrom>;
        AdjustmentValue: KnockoutObservable<Edm.Decimal>;
        CountryKey: KnockoutObservable<Edm.String>;
        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        DomainId: KnockoutObservable<Edm.Guid>;
        Favorite: KnockoutObservable<Edm.Boolean>;
        Id: KnockoutObservable<Edm.Guid>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        IsPercentage: KnockoutObservable<Edm.Boolean>;
        Key: KnockoutObservable<Edm.String>;
        Language: KnockoutObservable<Edm.String>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        SortOrder: KnockoutObservable<Edm.Int32>;
        ValidFrom: KnockoutObservable<Edm.DateTimeOffset>;
        ValidTo: KnockoutObservable<Edm.DateTimeOffset>;
        Value: KnockoutObservable<Edm.String>;
        innerInstance: CrmPerDiemGermany_PerDiemAllowanceAdjustment;
    }

    export class ObservableCrmPerDiemGermany_PerDiemAllowance extends $data.Entity {
        constructor();
        constructor(initData: { AllDayAmount?: KnockoutObservable<Edm.Decimal>; CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; CurrencyKey?: KnockoutObservable<Edm.String>; DomainId?: KnockoutObservable<Edm.Guid>; Favorite?: KnockoutObservable<Edm.Boolean>; Id?: KnockoutObservable<Edm.Guid>; IsActive?: KnockoutObservable<Edm.Boolean>; Key?: KnockoutObservable<Edm.String>; Language?: KnockoutObservable<Edm.String>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; PartialDayAmount?: KnockoutObservable<Edm.Decimal>; SortOrder?: KnockoutObservable<Edm.Int32>; ValidFrom?: KnockoutObservable<Edm.DateTimeOffset>; ValidTo?: KnockoutObservable<Edm.DateTimeOffset>; Value?: KnockoutObservable<Edm.String> });

        AllDayAmount: KnockoutObservable<Edm.Decimal>;
        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        CurrencyKey: KnockoutObservable<Edm.String>;
        DomainId: KnockoutObservable<Edm.Guid>;
        Favorite: KnockoutObservable<Edm.Boolean>;
        Id: KnockoutObservable<Edm.Guid>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        Key: KnockoutObservable<Edm.String>;
        Language: KnockoutObservable<Edm.String>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        PartialDayAmount: KnockoutObservable<Edm.Decimal>;
        SortOrder: KnockoutObservable<Edm.Int32>;
        ValidFrom: KnockoutObservable<Edm.DateTimeOffset>;
        ValidTo: KnockoutObservable<Edm.DateTimeOffset>;
        Value: KnockoutObservable<Edm.String>;
        innerInstance: CrmPerDiemGermany_PerDiemAllowance;
    }

    export class CrmPerDiemGermany_PerDiemAllowanceAdjustment extends $data.Entity {
        constructor();
        constructor(initData: { AdjustmentFrom?: Crm.PerDiem.Germany.Model.Enums.AdjustmentFrom; AdjustmentValue?: Edm.Decimal; CountryKey?: Edm.String; CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; DomainId?: Edm.Guid; Favorite?: Edm.Boolean; Id?: Edm.Guid; IsActive?: Edm.Boolean; IsPercentage?: Edm.Boolean; Key?: Edm.String; Language?: Edm.String; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; SortOrder?: Edm.Int32; ValidFrom?: Edm.DateTimeOffset; ValidTo?: Edm.DateTimeOffset; Value?: Edm.String });

        AdjustmentFrom: Crm.PerDiem.Germany.Model.Enums.AdjustmentFrom;
        AdjustmentValue: Edm.Decimal;
        CountryKey: Edm.String;
        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        DomainId: Edm.Guid;
        Favorite: Edm.Boolean;
        Id: Edm.Guid;
        IsActive: Edm.Boolean;
        IsPercentage: Edm.Boolean;
        Key: Edm.String;
        Language: Edm.String;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        SortOrder: Edm.Int32;
        ValidFrom: Edm.DateTimeOffset;
        ValidTo: Edm.DateTimeOffset;
        Value: Edm.String;
        asKoObservable(): ObservableCrmPerDiemGermany_PerDiemAllowanceAdjustment;
        static create(): CrmPerDiemGermany_PerDiemAllowanceAdjustment;
        static create(initData:any): CrmPerDiemGermany_PerDiemAllowanceAdjustment;
    }

    export class CrmPerDiemGermany_PerDiemAllowance extends $data.Entity {
        constructor();
        constructor(initData: { AllDayAmount?: Edm.Decimal; CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; CurrencyKey?: Edm.String; DomainId?: Edm.Guid; Favorite?: Edm.Boolean; Id?: Edm.Guid; IsActive?: Edm.Boolean; Key?: Edm.String; Language?: Edm.String; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; PartialDayAmount?: Edm.Decimal; SortOrder?: Edm.Int32; ValidFrom?: Edm.DateTimeOffset; ValidTo?: Edm.DateTimeOffset; Value?: Edm.String });

        AllDayAmount: Edm.Decimal;
        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        CurrencyKey: Edm.String;
        DomainId: Edm.Guid;
        Favorite: Edm.Boolean;
        Id: Edm.Guid;
        IsActive: Edm.Boolean;
        Key: Edm.String;
        Language: Edm.String;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        PartialDayAmount: Edm.Decimal;
        SortOrder: Edm.Int32;
        ValidFrom: Edm.DateTimeOffset;
        ValidTo: Edm.DateTimeOffset;
        Value: Edm.String;
        asKoObservable(): ObservableCrmPerDiemGermany_PerDiemAllowance;
        static create(): CrmPerDiemGermany_PerDiemAllowance;
        static create(initData:any): CrmPerDiemGermany_PerDiemAllowance;
    }

}

namespace Crm.PerDiem.Germany.Rest.Model {

    export class ObservableCrmPerDiemGermany_PerDiemAllowanceEntryAllowanceAdjustmentReference extends $data.Entity {
        constructor();
        constructor(initData: { AdjustmentFrom?: KnockoutObservable<Edm.String>; AdjustmentValue?: KnockoutObservable<Edm.Decimal>; CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; Id?: KnockoutObservable<Edm.Guid>; IsActive?: KnockoutObservable<Edm.Boolean>; IsPercentage?: KnockoutObservable<Edm.Boolean>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; PerDiemAllowanceAdjustmentKey?: KnockoutObservable<Edm.String>; PerDiemAllowanceEntryKey?: KnockoutObservable<Edm.Guid> });

        AdjustmentFrom: KnockoutObservable<Edm.String>;
        AdjustmentValue: KnockoutObservable<Edm.Decimal>;
        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        Id: KnockoutObservable<Edm.Guid>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        IsPercentage: KnockoutObservable<Edm.Boolean>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        PerDiemAllowanceAdjustmentKey: KnockoutObservable<Edm.String>;
        PerDiemAllowanceEntryKey: KnockoutObservable<Edm.Guid>;
        innerInstance: CrmPerDiemGermany_PerDiemAllowanceEntryAllowanceAdjustmentReference;
    }

    export class ObservableCrmPerDiemGermany_PerDiemAllowanceEntry extends $data.Entity {
        constructor();
        constructor(initData: { AdjustmentReferences?: KnockoutObservableArray<Crm.PerDiem.Germany.Rest.Model.ObservableCrmPerDiemGermany_PerDiemAllowanceEntryAllowanceAdjustmentReference>; AllDay?: KnockoutObservable<Edm.Boolean>; Amount?: KnockoutObservable<Edm.Decimal>; CostCenterKey?: KnockoutObservable<Edm.String>; CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; CurrencyKey?: KnockoutObservable<Edm.String>; Date?: KnockoutObservable<Edm.DateTimeOffset>; Description?: KnockoutObservable<Edm.String>; DispatchId?: KnockoutObservable<Edm.Guid>; DomainId?: KnockoutObservable<Edm.Guid>; Files?: KnockoutObservableArray<Crm.Rest.Model.ObservableCrm_FileResource>; Id?: KnockoutObservable<Edm.Guid>; IsActive?: KnockoutObservable<Edm.Boolean>; IsClosed?: KnockoutObservable<Edm.Boolean>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; PerDiemAllowanceKey?: KnockoutObservable<Edm.String>; PerDiemReport?: KnockoutObservable<Crm.PerDiem.Rest.Model.ObservableCrmPerDiem_PerDiemReport>; PerDiemReportId?: KnockoutObservable<Edm.Guid>; ResponsibleUser?: KnockoutObservable<Edm.String>; ResponsibleUserObject?: KnockoutObservable<Main.Rest.Model.ObservableMain_User> });

        AdjustmentReferences: KnockoutObservableArray<Crm.PerDiem.Germany.Rest.Model.ObservableCrmPerDiemGermany_PerDiemAllowanceEntryAllowanceAdjustmentReference>;
        AllDay: KnockoutObservable<Edm.Boolean>;
        Amount: KnockoutObservable<Edm.Decimal>;
        CostCenterKey: KnockoutObservable<Edm.String>;
        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        CurrencyKey: KnockoutObservable<Edm.String>;
        Date: KnockoutObservable<Edm.DateTimeOffset>;
        Description: KnockoutObservable<Edm.String>;
        DispatchId: KnockoutObservable<Edm.Guid>;
        DomainId: KnockoutObservable<Edm.Guid>;
        Files: KnockoutObservableArray<Crm.Rest.Model.ObservableCrm_FileResource>;
        Id: KnockoutObservable<Edm.Guid>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        IsClosed: KnockoutObservable<Edm.Boolean>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        PerDiemAllowanceKey: KnockoutObservable<Edm.String>;
        PerDiemReport: KnockoutObservable<Crm.PerDiem.Rest.Model.ObservableCrmPerDiem_PerDiemReport>;
        PerDiemReportId: KnockoutObservable<Edm.Guid>;
        ResponsibleUser: KnockoutObservable<Edm.String>;
        ResponsibleUserObject: KnockoutObservable<Main.Rest.Model.ObservableMain_User>;
        innerInstance: CrmPerDiemGermany_PerDiemAllowanceEntry;
    }

    export class CrmPerDiemGermany_PerDiemAllowanceEntryAllowanceAdjustmentReference extends $data.Entity {
        constructor();
        constructor(initData: { AdjustmentFrom?: Edm.String; AdjustmentValue?: Edm.Decimal; CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; Id?: Edm.Guid; IsActive?: Edm.Boolean; IsPercentage?: Edm.Boolean; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; PerDiemAllowanceAdjustmentKey?: Edm.String; PerDiemAllowanceEntryKey?: Edm.Guid });

        AdjustmentFrom: Edm.String;
        AdjustmentValue: Edm.Decimal;
        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        Id: Edm.Guid;
        IsActive: Edm.Boolean;
        IsPercentage: Edm.Boolean;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        PerDiemAllowanceAdjustmentKey: Edm.String;
        PerDiemAllowanceEntryKey: Edm.Guid;
        asKoObservable(): ObservableCrmPerDiemGermany_PerDiemAllowanceEntryAllowanceAdjustmentReference;
        static create(): CrmPerDiemGermany_PerDiemAllowanceEntryAllowanceAdjustmentReference;
        static create(initData:any): CrmPerDiemGermany_PerDiemAllowanceEntryAllowanceAdjustmentReference;
    }

    export class CrmPerDiemGermany_PerDiemAllowanceEntry extends $data.Entity {
        constructor();
        constructor(initData: { AdjustmentReferences?: Crm.PerDiem.Germany.Rest.Model.CrmPerDiemGermany_PerDiemAllowanceEntryAllowanceAdjustmentReference[]; AllDay?: Edm.Boolean; Amount?: Edm.Decimal; CostCenterKey?: Edm.String; CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; CurrencyKey?: Edm.String; Date?: Edm.DateTimeOffset; Description?: Edm.String; DispatchId?: Edm.Guid; DomainId?: Edm.Guid; Files?: Crm.Rest.Model.Crm_FileResource[]; Id?: Edm.Guid; IsActive?: Edm.Boolean; IsClosed?: Edm.Boolean; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; PerDiemAllowanceKey?: Edm.String; PerDiemReport?: Crm.PerDiem.Rest.Model.CrmPerDiem_PerDiemReport; PerDiemReportId?: Edm.Guid; ResponsibleUser?: Edm.String; ResponsibleUserObject?: Main.Rest.Model.Main_User });

        AdjustmentReferences: Crm.PerDiem.Germany.Rest.Model.CrmPerDiemGermany_PerDiemAllowanceEntryAllowanceAdjustmentReference[];
        AllDay: Edm.Boolean;
        Amount: Edm.Decimal;
        CostCenterKey: Edm.String;
        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        CurrencyKey: Edm.String;
        Date: Edm.DateTimeOffset;
        Description: Edm.String;
        DispatchId: Edm.Guid;
        DomainId: Edm.Guid;
        Files: Crm.Rest.Model.Crm_FileResource[];
        Id: Edm.Guid;
        IsActive: Edm.Boolean;
        IsClosed: Edm.Boolean;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        PerDiemAllowanceKey: Edm.String;
        PerDiemReport: Crm.PerDiem.Rest.Model.CrmPerDiem_PerDiemReport;
        PerDiemReportId: Edm.Guid;
        ResponsibleUser: Edm.String;
        ResponsibleUserObject: Main.Rest.Model.Main_User;
        asKoObservable(): ObservableCrmPerDiemGermany_PerDiemAllowanceEntry;
        static create(): CrmPerDiemGermany_PerDiemAllowanceEntry;
        static create(initData:any): CrmPerDiemGermany_PerDiemAllowanceEntry;
    }

}

namespace Crm.PerDiem.Rest.Model {

    export class ObservableCrmPerDiem_PerDiemReport extends $data.Entity {
        constructor();
        constructor(initData: { ApprovedBy?: KnockoutObservable<Edm.String>; ApprovedDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; DomainId?: KnockoutObservable<Edm.Guid>; From?: KnockoutObservable<Edm.DateTimeOffset>; Id?: KnockoutObservable<Edm.Guid>; IsActive?: KnockoutObservable<Edm.Boolean>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; StatusKey?: KnockoutObservable<Edm.String>; To?: KnockoutObservable<Edm.DateTimeOffset>; User?: KnockoutObservable<Main.Rest.Model.ObservableMain_User>; UserName?: KnockoutObservable<Edm.String> });

        ApprovedBy: KnockoutObservable<Edm.String>;
        ApprovedDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        DomainId: KnockoutObservable<Edm.Guid>;
        From: KnockoutObservable<Edm.DateTimeOffset>;
        Id: KnockoutObservable<Edm.Guid>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        StatusKey: KnockoutObservable<Edm.String>;
        To: KnockoutObservable<Edm.DateTimeOffset>;
        User: KnockoutObservable<Main.Rest.Model.ObservableMain_User>;
        UserName: KnockoutObservable<Edm.String>;
        innerInstance: CrmPerDiem_PerDiemReport;
    }

    export class ObservableCrmPerDiem_UserExpense extends $data.Entity {
        constructor();
        constructor(initData: { Amount?: KnockoutObservable<Edm.Decimal>; CostCenterKey?: KnockoutObservable<Edm.String>; CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; CurrencyKey?: KnockoutObservable<Edm.String>; Date?: KnockoutObservable<Edm.DateTimeOffset>; Description?: KnockoutObservable<Edm.String>; DomainId?: KnockoutObservable<Edm.Guid>; ExpenseTypeKey?: KnockoutObservable<Edm.String>; FileResource?: KnockoutObservable<Crm.Rest.Model.ObservableCrm_FileResource>; FileResourceKey?: KnockoutObservable<Edm.Guid>; Id?: KnockoutObservable<Edm.Guid>; IsActive?: KnockoutObservable<Edm.Boolean>; IsClosed?: KnockoutObservable<Edm.Boolean>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; PerDiemReport?: KnockoutObservable<Crm.PerDiem.Rest.Model.ObservableCrmPerDiem_PerDiemReport>; PerDiemReportId?: KnockoutObservable<Edm.Guid>; ResponsibleUser?: KnockoutObservable<Edm.String>; ResponsibleUserObject?: KnockoutObservable<Main.Rest.Model.ObservableMain_User> });

        Amount: KnockoutObservable<Edm.Decimal>;
        CostCenterKey: KnockoutObservable<Edm.String>;
        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        CurrencyKey: KnockoutObservable<Edm.String>;
        Date: KnockoutObservable<Edm.DateTimeOffset>;
        Description: KnockoutObservable<Edm.String>;
        DomainId: KnockoutObservable<Edm.Guid>;
        ExpenseTypeKey: KnockoutObservable<Edm.String>;
        FileResource: KnockoutObservable<Crm.Rest.Model.ObservableCrm_FileResource>;
        FileResourceKey: KnockoutObservable<Edm.Guid>;
        Id: KnockoutObservable<Edm.Guid>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        IsClosed: KnockoutObservable<Edm.Boolean>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        PerDiemReport: KnockoutObservable<Crm.PerDiem.Rest.Model.ObservableCrmPerDiem_PerDiemReport>;
        PerDiemReportId: KnockoutObservable<Edm.Guid>;
        ResponsibleUser: KnockoutObservable<Edm.String>;
        ResponsibleUserObject: KnockoutObservable<Main.Rest.Model.ObservableMain_User>;
        innerInstance: CrmPerDiem_UserExpense;
    }

    export class ObservableCrmPerDiem_UserTimeEntry extends $data.Entity {
        constructor();
        constructor(initData: { BorderCrossingTime?: KnockoutObservable<Edm.DateTimeOffset>; BorderCrossingTimeZone?: KnockoutObservable<Edm.String>; CostCenterKey?: KnockoutObservable<Edm.String>; CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; Description?: KnockoutObservable<Edm.String>; Distance?: KnockoutObservable<Edm.Int32>; DistanceUnitKey?: KnockoutObservable<Edm.String>; DomainId?: KnockoutObservable<Edm.Guid>; DriverTypeKey?: KnockoutObservable<Edm.String>; Duration?: KnockoutObservable<Edm.Duration>; From?: KnockoutObservable<Edm.DateTimeOffset>; Id?: KnockoutObservable<Edm.Guid>; IsActive?: KnockoutObservable<Edm.Boolean>; IsClosed?: KnockoutObservable<Edm.Boolean>; LicensePlate?: KnockoutObservable<Edm.String>; LocationFrom?: KnockoutObservable<Edm.String>; LocationTo?: KnockoutObservable<Edm.String>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; PerDiemReport?: KnockoutObservable<Crm.PerDiem.Rest.Model.ObservableCrmPerDiem_PerDiemReport>; PerDiemReportId?: KnockoutObservable<Edm.Guid>; ResponsibleUser?: KnockoutObservable<Edm.String>; ResponsibleUserObject?: KnockoutObservable<Main.Rest.Model.ObservableMain_User>; TimeEntryTypeKey?: KnockoutObservable<Edm.String>; TimeZoneFrom?: KnockoutObservable<Edm.String>; TimeZoneTo?: KnockoutObservable<Edm.String>; To?: KnockoutObservable<Edm.DateTimeOffset>; TravelTypeKey?: KnockoutObservable<Edm.String> });

        BorderCrossingTime: KnockoutObservable<Edm.DateTimeOffset>;
        BorderCrossingTimeZone: KnockoutObservable<Edm.String>;
        CostCenterKey: KnockoutObservable<Edm.String>;
        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        Description: KnockoutObservable<Edm.String>;
        Distance: KnockoutObservable<Edm.Int32>;
        DistanceUnitKey: KnockoutObservable<Edm.String>;
        DomainId: KnockoutObservable<Edm.Guid>;
        DriverTypeKey: KnockoutObservable<Edm.String>;
        Duration: KnockoutObservable<Edm.Duration>;
        From: KnockoutObservable<Edm.DateTimeOffset>;
        Id: KnockoutObservable<Edm.Guid>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        IsClosed: KnockoutObservable<Edm.Boolean>;
        LicensePlate: KnockoutObservable<Edm.String>;
        LocationFrom: KnockoutObservable<Edm.String>;
        LocationTo: KnockoutObservable<Edm.String>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        PerDiemReport: KnockoutObservable<Crm.PerDiem.Rest.Model.ObservableCrmPerDiem_PerDiemReport>;
        PerDiemReportId: KnockoutObservable<Edm.Guid>;
        ResponsibleUser: KnockoutObservable<Edm.String>;
        ResponsibleUserObject: KnockoutObservable<Main.Rest.Model.ObservableMain_User>;
        TimeEntryTypeKey: KnockoutObservable<Edm.String>;
        TimeZoneFrom: KnockoutObservable<Edm.String>;
        TimeZoneTo: KnockoutObservable<Edm.String>;
        To: KnockoutObservable<Edm.DateTimeOffset>;
        TravelTypeKey: KnockoutObservable<Edm.String>;
        innerInstance: CrmPerDiem_UserTimeEntry;
    }

    export class CrmPerDiem_PerDiemReport extends $data.Entity {
        constructor();
        constructor(initData: { ApprovedBy?: Edm.String; ApprovedDate?: Edm.DateTimeOffset; CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; DomainId?: Edm.Guid; From?: Edm.DateTimeOffset; Id?: Edm.Guid; IsActive?: Edm.Boolean; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; StatusKey?: Edm.String; To?: Edm.DateTimeOffset; User?: Main.Rest.Model.Main_User; UserName?: Edm.String });

        ApprovedBy: Edm.String;
        ApprovedDate: Edm.DateTimeOffset;
        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        DomainId: Edm.Guid;
        From: Edm.DateTimeOffset;
        Id: Edm.Guid;
        IsActive: Edm.Boolean;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        StatusKey: Edm.String;
        To: Edm.DateTimeOffset;
        User: Main.Rest.Model.Main_User;
        UserName: Edm.String;
        asKoObservable(): ObservableCrmPerDiem_PerDiemReport;
        static create(): CrmPerDiem_PerDiemReport;
        static create(initData:any): CrmPerDiem_PerDiemReport;
    }

    export class CrmPerDiem_UserExpense extends $data.Entity {
        constructor();
        constructor(initData: { Amount?: Edm.Decimal; CostCenterKey?: Edm.String; CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; CurrencyKey?: Edm.String; Date?: Edm.DateTimeOffset; Description?: Edm.String; DomainId?: Edm.Guid; ExpenseTypeKey?: Edm.String; FileResource?: Crm.Rest.Model.Crm_FileResource; FileResourceKey?: Edm.Guid; Id?: Edm.Guid; IsActive?: Edm.Boolean; IsClosed?: Edm.Boolean; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; PerDiemReport?: Crm.PerDiem.Rest.Model.CrmPerDiem_PerDiemReport; PerDiemReportId?: Edm.Guid; ResponsibleUser?: Edm.String; ResponsibleUserObject?: Main.Rest.Model.Main_User });

        Amount: Edm.Decimal;
        CostCenterKey: Edm.String;
        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        CurrencyKey: Edm.String;
        Date: Edm.DateTimeOffset;
        Description: Edm.String;
        DomainId: Edm.Guid;
        ExpenseTypeKey: Edm.String;
        FileResource: Crm.Rest.Model.Crm_FileResource;
        FileResourceKey: Edm.Guid;
        Id: Edm.Guid;
        IsActive: Edm.Boolean;
        IsClosed: Edm.Boolean;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        PerDiemReport: Crm.PerDiem.Rest.Model.CrmPerDiem_PerDiemReport;
        PerDiemReportId: Edm.Guid;
        ResponsibleUser: Edm.String;
        ResponsibleUserObject: Main.Rest.Model.Main_User;
        asKoObservable(): ObservableCrmPerDiem_UserExpense;
        static create(): CrmPerDiem_UserExpense;
        static create(initData:any): CrmPerDiem_UserExpense;
    }

    export class CrmPerDiem_UserTimeEntry extends $data.Entity {
        constructor();
        constructor(initData: { BorderCrossingTime?: Edm.DateTimeOffset; BorderCrossingTimeZone?: Edm.String; CostCenterKey?: Edm.String; CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; Description?: Edm.String; Distance?: Edm.Int32; DistanceUnitKey?: Edm.String; DomainId?: Edm.Guid; DriverTypeKey?: Edm.String; Duration?: Edm.Duration; From?: Edm.DateTimeOffset; Id?: Edm.Guid; IsActive?: Edm.Boolean; IsClosed?: Edm.Boolean; LicensePlate?: Edm.String; LocationFrom?: Edm.String; LocationTo?: Edm.String; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; PerDiemReport?: Crm.PerDiem.Rest.Model.CrmPerDiem_PerDiemReport; PerDiemReportId?: Edm.Guid; ResponsibleUser?: Edm.String; ResponsibleUserObject?: Main.Rest.Model.Main_User; TimeEntryTypeKey?: Edm.String; TimeZoneFrom?: Edm.String; TimeZoneTo?: Edm.String; To?: Edm.DateTimeOffset; TravelTypeKey?: Edm.String });

        BorderCrossingTime: Edm.DateTimeOffset;
        BorderCrossingTimeZone: Edm.String;
        CostCenterKey: Edm.String;
        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        Description: Edm.String;
        Distance: Edm.Int32;
        DistanceUnitKey: Edm.String;
        DomainId: Edm.Guid;
        DriverTypeKey: Edm.String;
        Duration: Edm.Duration;
        From: Edm.DateTimeOffset;
        Id: Edm.Guid;
        IsActive: Edm.Boolean;
        IsClosed: Edm.Boolean;
        LicensePlate: Edm.String;
        LocationFrom: Edm.String;
        LocationTo: Edm.String;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        PerDiemReport: Crm.PerDiem.Rest.Model.CrmPerDiem_PerDiemReport;
        PerDiemReportId: Edm.Guid;
        ResponsibleUser: Edm.String;
        ResponsibleUserObject: Main.Rest.Model.Main_User;
        TimeEntryTypeKey: Edm.String;
        TimeZoneFrom: Edm.String;
        TimeZoneTo: Edm.String;
        To: Edm.DateTimeOffset;
        TravelTypeKey: Edm.String;
        asKoObservable(): ObservableCrmPerDiem_UserTimeEntry;
        static create(): CrmPerDiem_UserTimeEntry;
        static create(initData:any): CrmPerDiem_UserTimeEntry;
    }

}

namespace Crm.Order.Rest.Model {

    export class ObservableCrmOrder_CalculationPosition extends $data.Entity {
        constructor();
        constructor(initData: { BaseOrderId?: KnockoutObservable<Edm.Guid>; CalculationPositionTypeKey?: KnockoutObservable<Edm.String>; CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; DomainId?: KnockoutObservable<Edm.Guid>; Id?: KnockoutObservable<Edm.Guid>; IsActive?: KnockoutObservable<Edm.Boolean>; IsExported?: KnockoutObservable<Edm.Boolean>; IsPercentage?: KnockoutObservable<Edm.Boolean>; LegacyId?: KnockoutObservable<Edm.String>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; PurchasePrice?: KnockoutObservable<Edm.Decimal>; Remark?: KnockoutObservable<Edm.String>; SalesPrice?: KnockoutObservable<Edm.Decimal> });

        BaseOrderId: KnockoutObservable<Edm.Guid>;
        CalculationPositionTypeKey: KnockoutObservable<Edm.String>;
        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        DomainId: KnockoutObservable<Edm.Guid>;
        Id: KnockoutObservable<Edm.Guid>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        IsExported: KnockoutObservable<Edm.Boolean>;
        IsPercentage: KnockoutObservable<Edm.Boolean>;
        LegacyId: KnockoutObservable<Edm.String>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        PurchasePrice: KnockoutObservable<Edm.Decimal>;
        Remark: KnockoutObservable<Edm.String>;
        SalesPrice: KnockoutObservable<Edm.Decimal>;
        innerInstance: CrmOrder_CalculationPosition;
    }

    export class ObservableCrmOrder_Offer extends $data.Entity {
        constructor();
        constructor(initData: { BillingAddress?: KnockoutObservable<Crm.Rest.Model.ObservableCrm_Address>; BillingAddressId?: KnockoutObservable<Edm.Guid>; CalculatedPrice?: KnockoutObservable<Edm.Decimal>; CalculatedPriceWithDiscount?: KnockoutObservable<Edm.Decimal>; CancelReasonCategoryKey?: KnockoutObservable<Edm.String>; CancelReasonText?: KnockoutObservable<Edm.String>; Comission?: KnockoutObservable<Edm.String>; CommunicationType?: KnockoutObservable<Edm.String>; Company?: KnockoutObservable<Crm.Rest.Model.ObservableCrm_Company>; ConfirmationSent?: KnockoutObservable<Edm.Boolean>; ContactAddress?: KnockoutObservable<Crm.Rest.Model.ObservableCrm_Address>; ContactAddressId?: KnockoutObservable<Edm.Guid>; ContactId?: KnockoutObservable<Edm.Guid>; ContactPersonId?: KnockoutObservable<Edm.Guid>; CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; CurrencyKey?: KnockoutObservable<Edm.String>; CustomFax?: KnockoutObservable<Edm.String>; CustomerOrderNumber?: KnockoutObservable<Edm.String>; DeliveryAddress?: KnockoutObservable<Crm.Rest.Model.ObservableCrm_Address>; DeliveryAddressId?: KnockoutObservable<Edm.Guid>; DeliveryDate?: KnockoutObservable<Edm.DateTimeOffset>; Discount?: KnockoutObservable<Edm.Decimal>; DiscountType?: KnockoutObservable<Crm.Article.Model.Enums.DiscountType>; DocumentNo?: KnockoutObservable<Edm.String>; DomainId?: KnockoutObservable<Edm.Guid>; ExportDate?: KnockoutObservable<Edm.DateTimeOffset>; ExtensionValues?: KnockoutObservable<Default.ObservableCrmOrder_Offer_ExtensionValues>; Id?: KnockoutObservable<Edm.Guid>; IsActive?: KnockoutObservable<Edm.Boolean>; IsExported?: KnockoutObservable<Edm.Boolean>; IsLocked?: KnockoutObservable<Edm.Boolean>; IsOffer?: KnockoutObservable<Edm.Boolean>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; OrderCategoryKey?: KnockoutObservable<Edm.String>; OrderDate?: KnockoutObservable<Edm.DateTimeOffset>; OrderEntryType?: KnockoutObservable<Edm.String>; OrderNo?: KnockoutObservable<Edm.String>; OrderRecipients?: KnockoutObservableArray<Crm.Order.Rest.Model.ObservableCrmOrder_OrderRecipient>; OrderType?: KnockoutObservable<Edm.String>; Person?: KnockoutObservable<Crm.Rest.Model.ObservableCrm_Person>; Price?: KnockoutObservable<Edm.Decimal>; PrivateDescription?: KnockoutObservable<Edm.String>; PublicDescription?: KnockoutObservable<Edm.String>; ReadyForExport?: KnockoutObservable<Edm.Boolean>; RealizedDiscount?: KnockoutObservable<Edm.Decimal>; Representative?: KnockoutObservable<Edm.String>; ResponsibleUser?: KnockoutObservable<Edm.String>; ResponsibleUserUser?: KnockoutObservable<Main.Rest.Model.ObservableMain_User>; SendConfirmation?: KnockoutObservable<Edm.Boolean>; SignPrivacyPolicyAccepted?: KnockoutObservable<Edm.Boolean>; Signature?: KnockoutObservable<Edm.String>; SignatureDate?: KnockoutObservable<Edm.DateTimeOffset>; SignatureName?: KnockoutObservable<Edm.String>; StatusKey?: KnockoutObservable<Edm.String>; ValidTo?: KnockoutObservable<Edm.DateTimeOffset>; Visibility?: KnockoutObservable<Crm.Library.BaseModel.Visibility>; VisibleToUserIds?: KnockoutObservableArray<Edm.String>; VisibleToUsergroupIds?: KnockoutObservableArray<Edm.Guid> });

        BillingAddress: KnockoutObservable<Crm.Rest.Model.ObservableCrm_Address>;
        BillingAddressId: KnockoutObservable<Edm.Guid>;
        CalculatedPrice: KnockoutObservable<Edm.Decimal>;
        CalculatedPriceWithDiscount: KnockoutObservable<Edm.Decimal>;
        CancelReasonCategoryKey: KnockoutObservable<Edm.String>;
        CancelReasonText: KnockoutObservable<Edm.String>;
        Comission: KnockoutObservable<Edm.String>;
        CommunicationType: KnockoutObservable<Edm.String>;
        Company: KnockoutObservable<Crm.Rest.Model.ObservableCrm_Company>;
        ConfirmationSent: KnockoutObservable<Edm.Boolean>;
        ContactAddress: KnockoutObservable<Crm.Rest.Model.ObservableCrm_Address>;
        ContactAddressId: KnockoutObservable<Edm.Guid>;
        ContactId: KnockoutObservable<Edm.Guid>;
        ContactPersonId: KnockoutObservable<Edm.Guid>;
        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        CurrencyKey: KnockoutObservable<Edm.String>;
        CustomFax: KnockoutObservable<Edm.String>;
        CustomerOrderNumber: KnockoutObservable<Edm.String>;
        DeliveryAddress: KnockoutObservable<Crm.Rest.Model.ObservableCrm_Address>;
        DeliveryAddressId: KnockoutObservable<Edm.Guid>;
        DeliveryDate: KnockoutObservable<Edm.DateTimeOffset>;
        Discount: KnockoutObservable<Edm.Decimal>;
        DiscountType: KnockoutObservable<Crm.Article.Model.Enums.DiscountType>;
        DocumentNo: KnockoutObservable<Edm.String>;
        DomainId: KnockoutObservable<Edm.Guid>;
        ExportDate: KnockoutObservable<Edm.DateTimeOffset>;
        ExtensionValues: KnockoutObservable<Default.ObservableCrmOrder_Offer_ExtensionValues>;
        Id: KnockoutObservable<Edm.Guid>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        IsExported: KnockoutObservable<Edm.Boolean>;
        IsLocked: KnockoutObservable<Edm.Boolean>;
        IsOffer: KnockoutObservable<Edm.Boolean>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        OrderCategoryKey: KnockoutObservable<Edm.String>;
        OrderDate: KnockoutObservable<Edm.DateTimeOffset>;
        OrderEntryType: KnockoutObservable<Edm.String>;
        OrderNo: KnockoutObservable<Edm.String>;
        OrderRecipients: KnockoutObservableArray<Crm.Order.Rest.Model.ObservableCrmOrder_OrderRecipient>;
        OrderType: KnockoutObservable<Edm.String>;
        Person: KnockoutObservable<Crm.Rest.Model.ObservableCrm_Person>;
        Price: KnockoutObservable<Edm.Decimal>;
        PrivateDescription: KnockoutObservable<Edm.String>;
        PublicDescription: KnockoutObservable<Edm.String>;
        ReadyForExport: KnockoutObservable<Edm.Boolean>;
        RealizedDiscount: KnockoutObservable<Edm.Decimal>;
        Representative: KnockoutObservable<Edm.String>;
        ResponsibleUser: KnockoutObservable<Edm.String>;
        ResponsibleUserUser: KnockoutObservable<Main.Rest.Model.ObservableMain_User>;
        SendConfirmation: KnockoutObservable<Edm.Boolean>;
        SignPrivacyPolicyAccepted: KnockoutObservable<Edm.Boolean>;
        Signature: KnockoutObservable<Edm.String>;
        SignatureDate: KnockoutObservable<Edm.DateTimeOffset>;
        SignatureName: KnockoutObservable<Edm.String>;
        StatusKey: KnockoutObservable<Edm.String>;
        ValidTo: KnockoutObservable<Edm.DateTimeOffset>;
        Visibility: KnockoutObservable<Crm.Library.BaseModel.Visibility>;
        VisibleToUserIds: KnockoutObservableArray<Edm.String>;
        VisibleToUsergroupIds: KnockoutObservableArray<Edm.Guid>;
        innerInstance: CrmOrder_Offer;
    }

    export class ObservableCrmOrder_OrderItem extends $data.Entity {
        constructor();
        constructor(initData: { AdditionalInformation?: KnockoutObservable<Edm.String>; Article?: KnockoutObservable<Crm.Article.Rest.Model.ObservableCrmArticle_Article>; ArticleDescription?: KnockoutObservable<Edm.String>; ArticleId?: KnockoutObservable<Edm.Guid>; ArticleNo?: KnockoutObservable<Edm.String>; ArticleTypeKey?: KnockoutObservable<Edm.String>; CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; CustomArticleNo?: KnockoutObservable<Edm.String>; CustomDescription?: KnockoutObservable<Edm.String>; DeliveryDate?: KnockoutObservable<Edm.DateTimeOffset>; Discount?: KnockoutObservable<Edm.Decimal>; DiscountType?: KnockoutObservable<Crm.Article.Model.Enums.DiscountType>; DomainId?: KnockoutObservable<Edm.Guid>; ExtensionValues?: KnockoutObservable<Default.ObservableCrmOrder_OrderItem_ExtensionValues>; Id?: KnockoutObservable<Edm.Guid>; IsAccessory?: KnockoutObservable<Edm.Boolean>; IsActive?: KnockoutObservable<Edm.Boolean>; IsAlternative?: KnockoutObservable<Edm.Boolean>; IsCarDump?: KnockoutObservable<Edm.Boolean>; IsOption?: KnockoutObservable<Edm.Boolean>; IsRemoval?: KnockoutObservable<Edm.Boolean>; IsSample?: KnockoutObservable<Edm.Boolean>; IsSerial?: KnockoutObservable<Edm.Boolean>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; OrderId?: KnockoutObservable<Edm.Guid>; ParentOrderItemId?: KnockoutObservable<Edm.Guid>; Position?: KnockoutObservable<Edm.String>; Price?: KnockoutObservable<Edm.Decimal>; PurchasePrice?: KnockoutObservable<Edm.Decimal>; QuantityStep?: KnockoutObservable<Edm.Decimal>; QuantityUnitEntry?: KnockoutObservable<Crm.Article.Rest.Model.ObservableCrmArticle_QuantityUnitEntry>; QuantityUnitEntryKey?: KnockoutObservable<Edm.Guid>; QuantityUnitKey?: KnockoutObservable<Edm.String>; QuantityValue?: KnockoutObservable<Edm.Decimal>; VATLevelKey?: KnockoutObservable<Edm.String> });

        AdditionalInformation: KnockoutObservable<Edm.String>;
        Article: KnockoutObservable<Crm.Article.Rest.Model.ObservableCrmArticle_Article>;
        ArticleDescription: KnockoutObservable<Edm.String>;
        ArticleId: KnockoutObservable<Edm.Guid>;
        ArticleNo: KnockoutObservable<Edm.String>;
        ArticleTypeKey: KnockoutObservable<Edm.String>;
        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        CustomArticleNo: KnockoutObservable<Edm.String>;
        CustomDescription: KnockoutObservable<Edm.String>;
        DeliveryDate: KnockoutObservable<Edm.DateTimeOffset>;
        Discount: KnockoutObservable<Edm.Decimal>;
        DiscountType: KnockoutObservable<Crm.Article.Model.Enums.DiscountType>;
        DomainId: KnockoutObservable<Edm.Guid>;
        ExtensionValues: KnockoutObservable<Default.ObservableCrmOrder_OrderItem_ExtensionValues>;
        Id: KnockoutObservable<Edm.Guid>;
        IsAccessory: KnockoutObservable<Edm.Boolean>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        IsAlternative: KnockoutObservable<Edm.Boolean>;
        IsCarDump: KnockoutObservable<Edm.Boolean>;
        IsOption: KnockoutObservable<Edm.Boolean>;
        IsRemoval: KnockoutObservable<Edm.Boolean>;
        IsSample: KnockoutObservable<Edm.Boolean>;
        IsSerial: KnockoutObservable<Edm.Boolean>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        OrderId: KnockoutObservable<Edm.Guid>;
        ParentOrderItemId: KnockoutObservable<Edm.Guid>;
        Position: KnockoutObservable<Edm.String>;
        Price: KnockoutObservable<Edm.Decimal>;
        PurchasePrice: KnockoutObservable<Edm.Decimal>;
        QuantityStep: KnockoutObservable<Edm.Decimal>;
        QuantityUnitEntry: KnockoutObservable<Crm.Article.Rest.Model.ObservableCrmArticle_QuantityUnitEntry>;
        QuantityUnitEntryKey: KnockoutObservable<Edm.Guid>;
        QuantityUnitKey: KnockoutObservable<Edm.String>;
        QuantityValue: KnockoutObservable<Edm.Decimal>;
        VATLevelKey: KnockoutObservable<Edm.String>;
        innerInstance: CrmOrder_OrderItem;
    }

    export class ObservableCrmOrder_OrderRecipient extends $data.Entity {
        constructor();
        constructor(initData: { BaseOrderId?: KnockoutObservable<Edm.Guid>; ContactPersonId?: KnockoutObservable<Edm.Guid>; CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; Email?: KnockoutObservable<Edm.String>; Id?: KnockoutObservable<Edm.Guid>; IsActive?: KnockoutObservable<Edm.Boolean>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String> });

        BaseOrderId: KnockoutObservable<Edm.Guid>;
        ContactPersonId: KnockoutObservable<Edm.Guid>;
        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        Email: KnockoutObservable<Edm.String>;
        Id: KnockoutObservable<Edm.Guid>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        innerInstance: CrmOrder_OrderRecipient;
    }

    export class ObservableCrmOrder_Order extends $data.Entity {
        constructor();
        constructor(initData: { BillingAddress?: KnockoutObservable<Crm.Rest.Model.ObservableCrm_Address>; BillingAddressId?: KnockoutObservable<Edm.Guid>; CalculatedPrice?: KnockoutObservable<Edm.Decimal>; CalculatedPriceWithDiscount?: KnockoutObservable<Edm.Decimal>; Comission?: KnockoutObservable<Edm.String>; CommunicationType?: KnockoutObservable<Edm.String>; Company?: KnockoutObservable<Crm.Rest.Model.ObservableCrm_Company>; ConfirmationSent?: KnockoutObservable<Edm.Boolean>; ContactAddress?: KnockoutObservable<Crm.Rest.Model.ObservableCrm_Address>; ContactAddressId?: KnockoutObservable<Edm.Guid>; ContactId?: KnockoutObservable<Edm.Guid>; ContactPersonId?: KnockoutObservable<Edm.Guid>; CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; CurrencyKey?: KnockoutObservable<Edm.String>; CustomFax?: KnockoutObservable<Edm.String>; CustomerOrderNumber?: KnockoutObservable<Edm.String>; DeliveryAddress?: KnockoutObservable<Crm.Rest.Model.ObservableCrm_Address>; DeliveryAddressId?: KnockoutObservable<Edm.Guid>; DeliveryDate?: KnockoutObservable<Edm.DateTimeOffset>; Discount?: KnockoutObservable<Edm.Decimal>; DiscountType?: KnockoutObservable<Crm.Article.Model.Enums.DiscountType>; DocumentNo?: KnockoutObservable<Edm.String>; DomainId?: KnockoutObservable<Edm.Guid>; ExportDate?: KnockoutObservable<Edm.DateTimeOffset>; ExtensionValues?: KnockoutObservable<Default.ObservableCrmOrder_Order_ExtensionValues>; Id?: KnockoutObservable<Edm.Guid>; IsActive?: KnockoutObservable<Edm.Boolean>; IsExported?: KnockoutObservable<Edm.Boolean>; IsOffer?: KnockoutObservable<Edm.Boolean>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; OfferId?: KnockoutObservable<Edm.Guid>; OrderCategoryKey?: KnockoutObservable<Edm.String>; OrderDate?: KnockoutObservable<Edm.DateTimeOffset>; OrderEntryType?: KnockoutObservable<Edm.String>; OrderNo?: KnockoutObservable<Edm.String>; OrderRecipients?: KnockoutObservableArray<Crm.Order.Rest.Model.ObservableCrmOrder_OrderRecipient>; OrderType?: KnockoutObservable<Edm.String>; Person?: KnockoutObservable<Crm.Rest.Model.ObservableCrm_Person>; Price?: KnockoutObservable<Edm.Decimal>; PrivateDescription?: KnockoutObservable<Edm.String>; PublicDescription?: KnockoutObservable<Edm.String>; ReadyForExport?: KnockoutObservable<Edm.Boolean>; RealizedDiscount?: KnockoutObservable<Edm.Decimal>; Representative?: KnockoutObservable<Edm.String>; ResponsibleUser?: KnockoutObservable<Edm.String>; ResponsibleUserUser?: KnockoutObservable<Main.Rest.Model.ObservableMain_User>; SendConfirmation?: KnockoutObservable<Edm.Boolean>; SignPrivacyPolicyAccepted?: KnockoutObservable<Edm.Boolean>; Signature?: KnockoutObservable<Edm.String>; SignatureDate?: KnockoutObservable<Edm.DateTimeOffset>; SignatureName?: KnockoutObservable<Edm.String>; StatusKey?: KnockoutObservable<Edm.String>; Visibility?: KnockoutObservable<Crm.Library.BaseModel.Visibility>; VisibleToUserIds?: KnockoutObservableArray<Edm.String>; VisibleToUsergroupIds?: KnockoutObservableArray<Edm.Guid> });

        BillingAddress: KnockoutObservable<Crm.Rest.Model.ObservableCrm_Address>;
        BillingAddressId: KnockoutObservable<Edm.Guid>;
        CalculatedPrice: KnockoutObservable<Edm.Decimal>;
        CalculatedPriceWithDiscount: KnockoutObservable<Edm.Decimal>;
        Comission: KnockoutObservable<Edm.String>;
        CommunicationType: KnockoutObservable<Edm.String>;
        Company: KnockoutObservable<Crm.Rest.Model.ObservableCrm_Company>;
        ConfirmationSent: KnockoutObservable<Edm.Boolean>;
        ContactAddress: KnockoutObservable<Crm.Rest.Model.ObservableCrm_Address>;
        ContactAddressId: KnockoutObservable<Edm.Guid>;
        ContactId: KnockoutObservable<Edm.Guid>;
        ContactPersonId: KnockoutObservable<Edm.Guid>;
        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        CurrencyKey: KnockoutObservable<Edm.String>;
        CustomFax: KnockoutObservable<Edm.String>;
        CustomerOrderNumber: KnockoutObservable<Edm.String>;
        DeliveryAddress: KnockoutObservable<Crm.Rest.Model.ObservableCrm_Address>;
        DeliveryAddressId: KnockoutObservable<Edm.Guid>;
        DeliveryDate: KnockoutObservable<Edm.DateTimeOffset>;
        Discount: KnockoutObservable<Edm.Decimal>;
        DiscountType: KnockoutObservable<Crm.Article.Model.Enums.DiscountType>;
        DocumentNo: KnockoutObservable<Edm.String>;
        DomainId: KnockoutObservable<Edm.Guid>;
        ExportDate: KnockoutObservable<Edm.DateTimeOffset>;
        ExtensionValues: KnockoutObservable<Default.ObservableCrmOrder_Order_ExtensionValues>;
        Id: KnockoutObservable<Edm.Guid>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        IsExported: KnockoutObservable<Edm.Boolean>;
        IsOffer: KnockoutObservable<Edm.Boolean>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        OfferId: KnockoutObservable<Edm.Guid>;
        OrderCategoryKey: KnockoutObservable<Edm.String>;
        OrderDate: KnockoutObservable<Edm.DateTimeOffset>;
        OrderEntryType: KnockoutObservable<Edm.String>;
        OrderNo: KnockoutObservable<Edm.String>;
        OrderRecipients: KnockoutObservableArray<Crm.Order.Rest.Model.ObservableCrmOrder_OrderRecipient>;
        OrderType: KnockoutObservable<Edm.String>;
        Person: KnockoutObservable<Crm.Rest.Model.ObservableCrm_Person>;
        Price: KnockoutObservable<Edm.Decimal>;
        PrivateDescription: KnockoutObservable<Edm.String>;
        PublicDescription: KnockoutObservable<Edm.String>;
        ReadyForExport: KnockoutObservable<Edm.Boolean>;
        RealizedDiscount: KnockoutObservable<Edm.Decimal>;
        Representative: KnockoutObservable<Edm.String>;
        ResponsibleUser: KnockoutObservable<Edm.String>;
        ResponsibleUserUser: KnockoutObservable<Main.Rest.Model.ObservableMain_User>;
        SendConfirmation: KnockoutObservable<Edm.Boolean>;
        SignPrivacyPolicyAccepted: KnockoutObservable<Edm.Boolean>;
        Signature: KnockoutObservable<Edm.String>;
        SignatureDate: KnockoutObservable<Edm.DateTimeOffset>;
        SignatureName: KnockoutObservable<Edm.String>;
        StatusKey: KnockoutObservable<Edm.String>;
        Visibility: KnockoutObservable<Crm.Library.BaseModel.Visibility>;
        VisibleToUserIds: KnockoutObservableArray<Edm.String>;
        VisibleToUsergroupIds: KnockoutObservableArray<Edm.Guid>;
        innerInstance: CrmOrder_Order;
    }

    export class CrmOrder_CalculationPosition extends $data.Entity {
        constructor();
        constructor(initData: { BaseOrderId?: Edm.Guid; CalculationPositionTypeKey?: Edm.String; CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; DomainId?: Edm.Guid; Id?: Edm.Guid; IsActive?: Edm.Boolean; IsExported?: Edm.Boolean; IsPercentage?: Edm.Boolean; LegacyId?: Edm.String; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; PurchasePrice?: Edm.Decimal; Remark?: Edm.String; SalesPrice?: Edm.Decimal });

        BaseOrderId: Edm.Guid;
        CalculationPositionTypeKey: Edm.String;
        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        DomainId: Edm.Guid;
        Id: Edm.Guid;
        IsActive: Edm.Boolean;
        IsExported: Edm.Boolean;
        IsPercentage: Edm.Boolean;
        LegacyId: Edm.String;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        PurchasePrice: Edm.Decimal;
        Remark: Edm.String;
        SalesPrice: Edm.Decimal;
        asKoObservable(): ObservableCrmOrder_CalculationPosition;
        static create(): CrmOrder_CalculationPosition;
        static create(initData:any): CrmOrder_CalculationPosition;
    }

    export class CrmOrder_Offer extends $data.Entity {
        constructor();
        constructor(initData: { BillingAddress?: Crm.Rest.Model.Crm_Address; BillingAddressId?: Edm.Guid; CalculatedPrice?: Edm.Decimal; CalculatedPriceWithDiscount?: Edm.Decimal; CancelReasonCategoryKey?: Edm.String; CancelReasonText?: Edm.String; Comission?: Edm.String; CommunicationType?: Edm.String; Company?: Crm.Rest.Model.Crm_Company; ConfirmationSent?: Edm.Boolean; ContactAddress?: Crm.Rest.Model.Crm_Address; ContactAddressId?: Edm.Guid; ContactId?: Edm.Guid; ContactPersonId?: Edm.Guid; CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; CurrencyKey?: Edm.String; CustomFax?: Edm.String; CustomerOrderNumber?: Edm.String; DeliveryAddress?: Crm.Rest.Model.Crm_Address; DeliveryAddressId?: Edm.Guid; DeliveryDate?: Edm.DateTimeOffset; Discount?: Edm.Decimal; DiscountType?: Crm.Article.Model.Enums.DiscountType; DocumentNo?: Edm.String; DomainId?: Edm.Guid; ExportDate?: Edm.DateTimeOffset; ExtensionValues?: Default.CrmOrder_Offer_ExtensionValues; Id?: Edm.Guid; IsActive?: Edm.Boolean; IsExported?: Edm.Boolean; IsLocked?: Edm.Boolean; IsOffer?: Edm.Boolean; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; OrderCategoryKey?: Edm.String; OrderDate?: Edm.DateTimeOffset; OrderEntryType?: Edm.String; OrderNo?: Edm.String; OrderRecipients?: Crm.Order.Rest.Model.CrmOrder_OrderRecipient[]; OrderType?: Edm.String; Person?: Crm.Rest.Model.Crm_Person; Price?: Edm.Decimal; PrivateDescription?: Edm.String; PublicDescription?: Edm.String; ReadyForExport?: Edm.Boolean; RealizedDiscount?: Edm.Decimal; Representative?: Edm.String; ResponsibleUser?: Edm.String; ResponsibleUserUser?: Main.Rest.Model.Main_User; SendConfirmation?: Edm.Boolean; SignPrivacyPolicyAccepted?: Edm.Boolean; Signature?: Edm.String; SignatureDate?: Edm.DateTimeOffset; SignatureName?: Edm.String; StatusKey?: Edm.String; ValidTo?: Edm.DateTimeOffset; Visibility?: Crm.Library.BaseModel.Visibility; VisibleToUserIds?: Edm.String[]; VisibleToUsergroupIds?: Edm.Guid[] });

        BillingAddress: Crm.Rest.Model.Crm_Address;
        BillingAddressId: Edm.Guid;
        CalculatedPrice: Edm.Decimal;
        CalculatedPriceWithDiscount: Edm.Decimal;
        CancelReasonCategoryKey: Edm.String;
        CancelReasonText: Edm.String;
        Comission: Edm.String;
        CommunicationType: Edm.String;
        Company: Crm.Rest.Model.Crm_Company;
        ConfirmationSent: Edm.Boolean;
        ContactAddress: Crm.Rest.Model.Crm_Address;
        ContactAddressId: Edm.Guid;
        ContactId: Edm.Guid;
        ContactPersonId: Edm.Guid;
        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        CurrencyKey: Edm.String;
        CustomFax: Edm.String;
        CustomerOrderNumber: Edm.String;
        DeliveryAddress: Crm.Rest.Model.Crm_Address;
        DeliveryAddressId: Edm.Guid;
        DeliveryDate: Edm.DateTimeOffset;
        Discount: Edm.Decimal;
        DiscountType: Crm.Article.Model.Enums.DiscountType;
        DocumentNo: Edm.String;
        DomainId: Edm.Guid;
        ExportDate: Edm.DateTimeOffset;
        ExtensionValues: Default.CrmOrder_Offer_ExtensionValues;
        Id: Edm.Guid;
        IsActive: Edm.Boolean;
        IsExported: Edm.Boolean;
        IsLocked: Edm.Boolean;
        IsOffer: Edm.Boolean;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        OrderCategoryKey: Edm.String;
        OrderDate: Edm.DateTimeOffset;
        OrderEntryType: Edm.String;
        OrderNo: Edm.String;
        OrderRecipients: Crm.Order.Rest.Model.CrmOrder_OrderRecipient[];
        OrderType: Edm.String;
        Person: Crm.Rest.Model.Crm_Person;
        Price: Edm.Decimal;
        PrivateDescription: Edm.String;
        PublicDescription: Edm.String;
        ReadyForExport: Edm.Boolean;
        RealizedDiscount: Edm.Decimal;
        Representative: Edm.String;
        ResponsibleUser: Edm.String;
        ResponsibleUserUser: Main.Rest.Model.Main_User;
        SendConfirmation: Edm.Boolean;
        SignPrivacyPolicyAccepted: Edm.Boolean;
        Signature: Edm.String;
        SignatureDate: Edm.DateTimeOffset;
        SignatureName: Edm.String;
        StatusKey: Edm.String;
        ValidTo: Edm.DateTimeOffset;
        Visibility: Crm.Library.BaseModel.Visibility;
        VisibleToUserIds: Edm.String[];
        VisibleToUsergroupIds: Edm.Guid[];
        asKoObservable(): ObservableCrmOrder_Offer;
        static create(): CrmOrder_Offer;
        static create(initData:any): CrmOrder_Offer;
    }

    export class CrmOrder_OrderItem extends $data.Entity {
        constructor();
        constructor(initData: { AdditionalInformation?: Edm.String; Article?: Crm.Article.Rest.Model.CrmArticle_Article; ArticleDescription?: Edm.String; ArticleId?: Edm.Guid; ArticleNo?: Edm.String; ArticleTypeKey?: Edm.String; CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; CustomArticleNo?: Edm.String; CustomDescription?: Edm.String; DeliveryDate?: Edm.DateTimeOffset; Discount?: Edm.Decimal; DiscountType?: Crm.Article.Model.Enums.DiscountType; DomainId?: Edm.Guid; ExtensionValues?: Default.CrmOrder_OrderItem_ExtensionValues; Id?: Edm.Guid; IsAccessory?: Edm.Boolean; IsActive?: Edm.Boolean; IsAlternative?: Edm.Boolean; IsCarDump?: Edm.Boolean; IsOption?: Edm.Boolean; IsRemoval?: Edm.Boolean; IsSample?: Edm.Boolean; IsSerial?: Edm.Boolean; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; OrderId?: Edm.Guid; ParentOrderItemId?: Edm.Guid; Position?: Edm.String; Price?: Edm.Decimal; PurchasePrice?: Edm.Decimal; QuantityStep?: Edm.Decimal; QuantityUnitEntry?: Crm.Article.Rest.Model.CrmArticle_QuantityUnitEntry; QuantityUnitEntryKey?: Edm.Guid; QuantityUnitKey?: Edm.String; QuantityValue?: Edm.Decimal; VATLevelKey?: Edm.String });

        AdditionalInformation: Edm.String;
        Article: Crm.Article.Rest.Model.CrmArticle_Article;
        ArticleDescription: Edm.String;
        ArticleId: Edm.Guid;
        ArticleNo: Edm.String;
        ArticleTypeKey: Edm.String;
        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        CustomArticleNo: Edm.String;
        CustomDescription: Edm.String;
        DeliveryDate: Edm.DateTimeOffset;
        Discount: Edm.Decimal;
        DiscountType: Crm.Article.Model.Enums.DiscountType;
        DomainId: Edm.Guid;
        ExtensionValues: Default.CrmOrder_OrderItem_ExtensionValues;
        Id: Edm.Guid;
        IsAccessory: Edm.Boolean;
        IsActive: Edm.Boolean;
        IsAlternative: Edm.Boolean;
        IsCarDump: Edm.Boolean;
        IsOption: Edm.Boolean;
        IsRemoval: Edm.Boolean;
        IsSample: Edm.Boolean;
        IsSerial: Edm.Boolean;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        OrderId: Edm.Guid;
        ParentOrderItemId: Edm.Guid;
        Position: Edm.String;
        Price: Edm.Decimal;
        PurchasePrice: Edm.Decimal;
        QuantityStep: Edm.Decimal;
        QuantityUnitEntry: Crm.Article.Rest.Model.CrmArticle_QuantityUnitEntry;
        QuantityUnitEntryKey: Edm.Guid;
        QuantityUnitKey: Edm.String;
        QuantityValue: Edm.Decimal;
        VATLevelKey: Edm.String;
        asKoObservable(): ObservableCrmOrder_OrderItem;
        static create(): CrmOrder_OrderItem;
        static create(initData:any): CrmOrder_OrderItem;
    }

    export class CrmOrder_OrderRecipient extends $data.Entity {
        constructor();
        constructor(initData: { BaseOrderId?: Edm.Guid; ContactPersonId?: Edm.Guid; CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; Email?: Edm.String; Id?: Edm.Guid; IsActive?: Edm.Boolean; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String });

        BaseOrderId: Edm.Guid;
        ContactPersonId: Edm.Guid;
        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        Email: Edm.String;
        Id: Edm.Guid;
        IsActive: Edm.Boolean;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        asKoObservable(): ObservableCrmOrder_OrderRecipient;
        static create(): CrmOrder_OrderRecipient;
        static create(initData:any): CrmOrder_OrderRecipient;
    }

    export class CrmOrder_Order extends $data.Entity {
        constructor();
        constructor(initData: { BillingAddress?: Crm.Rest.Model.Crm_Address; BillingAddressId?: Edm.Guid; CalculatedPrice?: Edm.Decimal; CalculatedPriceWithDiscount?: Edm.Decimal; Comission?: Edm.String; CommunicationType?: Edm.String; Company?: Crm.Rest.Model.Crm_Company; ConfirmationSent?: Edm.Boolean; ContactAddress?: Crm.Rest.Model.Crm_Address; ContactAddressId?: Edm.Guid; ContactId?: Edm.Guid; ContactPersonId?: Edm.Guid; CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; CurrencyKey?: Edm.String; CustomFax?: Edm.String; CustomerOrderNumber?: Edm.String; DeliveryAddress?: Crm.Rest.Model.Crm_Address; DeliveryAddressId?: Edm.Guid; DeliveryDate?: Edm.DateTimeOffset; Discount?: Edm.Decimal; DiscountType?: Crm.Article.Model.Enums.DiscountType; DocumentNo?: Edm.String; DomainId?: Edm.Guid; ExportDate?: Edm.DateTimeOffset; ExtensionValues?: Default.CrmOrder_Order_ExtensionValues; Id?: Edm.Guid; IsActive?: Edm.Boolean; IsExported?: Edm.Boolean; IsOffer?: Edm.Boolean; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; OfferId?: Edm.Guid; OrderCategoryKey?: Edm.String; OrderDate?: Edm.DateTimeOffset; OrderEntryType?: Edm.String; OrderNo?: Edm.String; OrderRecipients?: Crm.Order.Rest.Model.CrmOrder_OrderRecipient[]; OrderType?: Edm.String; Person?: Crm.Rest.Model.Crm_Person; Price?: Edm.Decimal; PrivateDescription?: Edm.String; PublicDescription?: Edm.String; ReadyForExport?: Edm.Boolean; RealizedDiscount?: Edm.Decimal; Representative?: Edm.String; ResponsibleUser?: Edm.String; ResponsibleUserUser?: Main.Rest.Model.Main_User; SendConfirmation?: Edm.Boolean; SignPrivacyPolicyAccepted?: Edm.Boolean; Signature?: Edm.String; SignatureDate?: Edm.DateTimeOffset; SignatureName?: Edm.String; StatusKey?: Edm.String; Visibility?: Crm.Library.BaseModel.Visibility; VisibleToUserIds?: Edm.String[]; VisibleToUsergroupIds?: Edm.Guid[] });

        BillingAddress: Crm.Rest.Model.Crm_Address;
        BillingAddressId: Edm.Guid;
        CalculatedPrice: Edm.Decimal;
        CalculatedPriceWithDiscount: Edm.Decimal;
        Comission: Edm.String;
        CommunicationType: Edm.String;
        Company: Crm.Rest.Model.Crm_Company;
        ConfirmationSent: Edm.Boolean;
        ContactAddress: Crm.Rest.Model.Crm_Address;
        ContactAddressId: Edm.Guid;
        ContactId: Edm.Guid;
        ContactPersonId: Edm.Guid;
        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        CurrencyKey: Edm.String;
        CustomFax: Edm.String;
        CustomerOrderNumber: Edm.String;
        DeliveryAddress: Crm.Rest.Model.Crm_Address;
        DeliveryAddressId: Edm.Guid;
        DeliveryDate: Edm.DateTimeOffset;
        Discount: Edm.Decimal;
        DiscountType: Crm.Article.Model.Enums.DiscountType;
        DocumentNo: Edm.String;
        DomainId: Edm.Guid;
        ExportDate: Edm.DateTimeOffset;
        ExtensionValues: Default.CrmOrder_Order_ExtensionValues;
        Id: Edm.Guid;
        IsActive: Edm.Boolean;
        IsExported: Edm.Boolean;
        IsOffer: Edm.Boolean;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        OfferId: Edm.Guid;
        OrderCategoryKey: Edm.String;
        OrderDate: Edm.DateTimeOffset;
        OrderEntryType: Edm.String;
        OrderNo: Edm.String;
        OrderRecipients: Crm.Order.Rest.Model.CrmOrder_OrderRecipient[];
        OrderType: Edm.String;
        Person: Crm.Rest.Model.Crm_Person;
        Price: Edm.Decimal;
        PrivateDescription: Edm.String;
        PublicDescription: Edm.String;
        ReadyForExport: Edm.Boolean;
        RealizedDiscount: Edm.Decimal;
        Representative: Edm.String;
        ResponsibleUser: Edm.String;
        ResponsibleUserUser: Main.Rest.Model.Main_User;
        SendConfirmation: Edm.Boolean;
        SignPrivacyPolicyAccepted: Edm.Boolean;
        Signature: Edm.String;
        SignatureDate: Edm.DateTimeOffset;
        SignatureName: Edm.String;
        StatusKey: Edm.String;
        Visibility: Crm.Library.BaseModel.Visibility;
        VisibleToUserIds: Edm.String[];
        VisibleToUsergroupIds: Edm.Guid[];
        asKoObservable(): ObservableCrmOrder_Order;
        static create(): CrmOrder_Order;
        static create(initData:any): CrmOrder_Order;
    }

}

namespace Crm.MarketInsight.Rest.Model {

    export class ObservableCrmMarketInsight_MarketInsightContactRelationship extends $data.Entity {
        constructor();
        constructor(initData: { ChildCompany?: KnockoutObservable<Crm.Rest.Model.ObservableCrm_Company>; ChildId?: KnockoutObservable<Edm.Guid>; ChildPerson?: KnockoutObservable<Crm.Rest.Model.ObservableCrm_Person>; CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; DomainId?: KnockoutObservable<Edm.Guid>; Id?: KnockoutObservable<Edm.Guid>; Information?: KnockoutObservable<Edm.String>; IsActive?: KnockoutObservable<Edm.Boolean>; MarketInsight?: KnockoutObservable<Crm.MarketInsight.Rest.Model.ObservableCrmMarketInsight_MarketInsight>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; ParentId?: KnockoutObservable<Edm.Guid>; RelationshipTypeKey?: KnockoutObservable<Edm.String> });

        ChildCompany: KnockoutObservable<Crm.Rest.Model.ObservableCrm_Company>;
        ChildId: KnockoutObservable<Edm.Guid>;
        ChildPerson: KnockoutObservable<Crm.Rest.Model.ObservableCrm_Person>;
        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        DomainId: KnockoutObservable<Edm.Guid>;
        Id: KnockoutObservable<Edm.Guid>;
        Information: KnockoutObservable<Edm.String>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        MarketInsight: KnockoutObservable<Crm.MarketInsight.Rest.Model.ObservableCrmMarketInsight_MarketInsight>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        ParentId: KnockoutObservable<Edm.Guid>;
        RelationshipTypeKey: KnockoutObservable<Edm.String>;
        innerInstance: CrmMarketInsight_MarketInsightContactRelationship;
    }

    export class ObservableCrmMarketInsight_MarketInsight extends $data.Entity {
        constructor();
        constructor(initData: { BackgroundInfo?: KnockoutObservable<Edm.String>; CampaignSource?: KnockoutObservable<Edm.Guid>; Company?: KnockoutObservable<Crm.Rest.Model.ObservableCrm_Company>; CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; DomainId?: KnockoutObservable<Edm.Guid>; Id?: KnockoutObservable<Edm.Guid>; IsActive?: KnockoutObservable<Edm.Boolean>; LanguageKey?: KnockoutObservable<Edm.String>; LastActivity?: KnockoutObservable<Edm.DateTimeOffset>; LegacyId?: KnockoutObservable<Edm.String>; LegacyName?: KnockoutObservable<Edm.String>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; Name?: KnockoutObservable<Edm.String>; Notes?: KnockoutObservableArray<Crm.Rest.Model.ObservableCrm_Note>; ParentId?: KnockoutObservable<Edm.Guid>; ParentName?: KnockoutObservable<Edm.String>; ParentType?: KnockoutObservable<Edm.String>; ProductFamily?: KnockoutObservable<Crm.Article.Rest.Model.ObservableCrmArticle_ProductFamily>; ProductFamilyKey?: KnockoutObservable<Edm.Guid>; ReferenceKey?: KnockoutObservable<Edm.String>; ResponsibleUser?: KnockoutObservable<Edm.String>; SourceTypeKey?: KnockoutObservable<Edm.String>; StatusKey?: KnockoutObservable<Edm.String>; Visibility?: KnockoutObservable<Crm.Library.BaseModel.Visibility>; VisibleToUserIds?: KnockoutObservableArray<Edm.String>; VisibleToUsergroupIds?: KnockoutObservableArray<Edm.Guid> });

        BackgroundInfo: KnockoutObservable<Edm.String>;
        CampaignSource: KnockoutObservable<Edm.Guid>;
        Company: KnockoutObservable<Crm.Rest.Model.ObservableCrm_Company>;
        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        DomainId: KnockoutObservable<Edm.Guid>;
        Id: KnockoutObservable<Edm.Guid>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        LanguageKey: KnockoutObservable<Edm.String>;
        LastActivity: KnockoutObservable<Edm.DateTimeOffset>;
        LegacyId: KnockoutObservable<Edm.String>;
        LegacyName: KnockoutObservable<Edm.String>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        Name: KnockoutObservable<Edm.String>;
        Notes: KnockoutObservableArray<Crm.Rest.Model.ObservableCrm_Note>;
        ParentId: KnockoutObservable<Edm.Guid>;
        ParentName: KnockoutObservable<Edm.String>;
        ParentType: KnockoutObservable<Edm.String>;
        ProductFamily: KnockoutObservable<Crm.Article.Rest.Model.ObservableCrmArticle_ProductFamily>;
        ProductFamilyKey: KnockoutObservable<Edm.Guid>;
        ReferenceKey: KnockoutObservable<Edm.String>;
        ResponsibleUser: KnockoutObservable<Edm.String>;
        SourceTypeKey: KnockoutObservable<Edm.String>;
        StatusKey: KnockoutObservable<Edm.String>;
        Visibility: KnockoutObservable<Crm.Library.BaseModel.Visibility>;
        VisibleToUserIds: KnockoutObservableArray<Edm.String>;
        VisibleToUsergroupIds: KnockoutObservableArray<Edm.Guid>;
        innerInstance: CrmMarketInsight_MarketInsight;
    }

    export class CrmMarketInsight_MarketInsightContactRelationship extends $data.Entity {
        constructor();
        constructor(initData: { ChildCompany?: Crm.Rest.Model.Crm_Company; ChildId?: Edm.Guid; ChildPerson?: Crm.Rest.Model.Crm_Person; CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; DomainId?: Edm.Guid; Id?: Edm.Guid; Information?: Edm.String; IsActive?: Edm.Boolean; MarketInsight?: Crm.MarketInsight.Rest.Model.CrmMarketInsight_MarketInsight; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; ParentId?: Edm.Guid; RelationshipTypeKey?: Edm.String });

        ChildCompany: Crm.Rest.Model.Crm_Company;
        ChildId: Edm.Guid;
        ChildPerson: Crm.Rest.Model.Crm_Person;
        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        DomainId: Edm.Guid;
        Id: Edm.Guid;
        Information: Edm.String;
        IsActive: Edm.Boolean;
        MarketInsight: Crm.MarketInsight.Rest.Model.CrmMarketInsight_MarketInsight;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        ParentId: Edm.Guid;
        RelationshipTypeKey: Edm.String;
        asKoObservable(): ObservableCrmMarketInsight_MarketInsightContactRelationship;
        static create(): CrmMarketInsight_MarketInsightContactRelationship;
        static create(initData:any): CrmMarketInsight_MarketInsightContactRelationship;
    }

    export class CrmMarketInsight_MarketInsight extends $data.Entity {
        constructor();
        constructor(initData: { BackgroundInfo?: Edm.String; CampaignSource?: Edm.Guid; Company?: Crm.Rest.Model.Crm_Company; CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; DomainId?: Edm.Guid; Id?: Edm.Guid; IsActive?: Edm.Boolean; LanguageKey?: Edm.String; LastActivity?: Edm.DateTimeOffset; LegacyId?: Edm.String; LegacyName?: Edm.String; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; Name?: Edm.String; Notes?: Crm.Rest.Model.Crm_Note[]; ParentId?: Edm.Guid; ParentName?: Edm.String; ParentType?: Edm.String; ProductFamily?: Crm.Article.Rest.Model.CrmArticle_ProductFamily; ProductFamilyKey?: Edm.Guid; ReferenceKey?: Edm.String; ResponsibleUser?: Edm.String; SourceTypeKey?: Edm.String; StatusKey?: Edm.String; Visibility?: Crm.Library.BaseModel.Visibility; VisibleToUserIds?: Edm.String[]; VisibleToUsergroupIds?: Edm.Guid[] });

        BackgroundInfo: Edm.String;
        CampaignSource: Edm.Guid;
        Company: Crm.Rest.Model.Crm_Company;
        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        DomainId: Edm.Guid;
        Id: Edm.Guid;
        IsActive: Edm.Boolean;
        LanguageKey: Edm.String;
        LastActivity: Edm.DateTimeOffset;
        LegacyId: Edm.String;
        LegacyName: Edm.String;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        Name: Edm.String;
        Notes: Crm.Rest.Model.Crm_Note[];
        ParentId: Edm.Guid;
        ParentName: Edm.String;
        ParentType: Edm.String;
        ProductFamily: Crm.Article.Rest.Model.CrmArticle_ProductFamily;
        ProductFamilyKey: Edm.Guid;
        ReferenceKey: Edm.String;
        ResponsibleUser: Edm.String;
        SourceTypeKey: Edm.String;
        StatusKey: Edm.String;
        Visibility: Crm.Library.BaseModel.Visibility;
        VisibleToUserIds: Edm.String[];
        VisibleToUsergroupIds: Edm.Guid[];
        asKoObservable(): ObservableCrmMarketInsight_MarketInsight;
        static create(): CrmMarketInsight_MarketInsight;
        static create(initData:any): CrmMarketInsight_MarketInsight;
    }

}

namespace Crm.ErpExtension.Rest.Model {

    export class ObservableCrmErpExtension_TurnoverSummary extends $data.Entity {
        constructor();
        constructor(initData: { ArticleGroup01Key?: KnockoutObservable<Edm.String>; Company?: KnockoutObservable<Crm.Rest.Model.ObservableCrm_Company>; ContactKey?: KnockoutObservable<Edm.Guid>; CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; CurrencyKey?: KnockoutObservable<Edm.String>; Difference?: KnockoutObservable<Edm.Decimal>; Id?: KnockoutObservable<Edm.Guid>; IsActive?: KnockoutObservable<Edm.Boolean>; IsVolume?: KnockoutObservable<Edm.Boolean>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; QuantityUnitKey?: KnockoutObservable<Edm.String>; TotalCurrentYear?: KnockoutObservable<Edm.Decimal>; TotalMinusThreeYears?: KnockoutObservable<Edm.Decimal>; TotalPrePreviousYear?: KnockoutObservable<Edm.Decimal>; TotalPreviousYear?: KnockoutObservable<Edm.Decimal> });

        ArticleGroup01Key: KnockoutObservable<Edm.String>;
        Company: KnockoutObservable<Crm.Rest.Model.ObservableCrm_Company>;
        ContactKey: KnockoutObservable<Edm.Guid>;
        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        CurrencyKey: KnockoutObservable<Edm.String>;
        Difference: KnockoutObservable<Edm.Decimal>;
        Id: KnockoutObservable<Edm.Guid>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        IsVolume: KnockoutObservable<Edm.Boolean>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        QuantityUnitKey: KnockoutObservable<Edm.String>;
        TotalCurrentYear: KnockoutObservable<Edm.Decimal>;
        TotalMinusThreeYears: KnockoutObservable<Edm.Decimal>;
        TotalPrePreviousYear: KnockoutObservable<Edm.Decimal>;
        TotalPreviousYear: KnockoutObservable<Edm.Decimal>;
        innerInstance: CrmErpExtension_TurnoverSummary;
    }

    export class ObservableCrmErpExtension_CreditNotePosition extends $data.Entity {
        constructor();
        constructor(initData: { Article?: KnockoutObservable<Crm.Article.Rest.Model.ObservableCrmArticle_Article>; ArticleKey?: KnockoutObservable<Edm.Guid>; CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; CurrencyKey?: KnockoutObservable<Edm.String>; Description?: KnockoutObservable<Edm.String>; DiscountPercentage?: KnockoutObservable<Edm.Decimal>; DocumentType?: KnockoutObservable<Edm.String>; DomainId?: KnockoutObservable<Edm.Guid>; Id?: KnockoutObservable<Edm.Guid>; IsActive?: KnockoutObservable<Edm.Boolean>; ItemNo?: KnockoutObservable<Edm.String>; LegacyId?: KnockoutObservable<Edm.String>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; Parent?: KnockoutObservable<Crm.ErpExtension.Rest.Model.ObservableCrmErpExtension_CreditNote>; ParentKey?: KnockoutObservable<Edm.Guid>; PositionNo?: KnockoutObservable<Edm.String>; PricePerUnit?: KnockoutObservable<Edm.Decimal>; Quantity?: KnockoutObservable<Edm.Decimal>; QuantityUnit?: KnockoutObservable<Edm.String>; RemainingQuantity?: KnockoutObservable<Edm.Decimal>; StatusKey?: KnockoutObservable<Edm.String>; Total?: KnockoutObservable<Edm.Decimal>; TotalWoTaxes?: KnockoutObservable<Edm.Decimal>; VATLevel?: KnockoutObservable<Edm.Decimal> });

        Article: KnockoutObservable<Crm.Article.Rest.Model.ObservableCrmArticle_Article>;
        ArticleKey: KnockoutObservable<Edm.Guid>;
        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        CurrencyKey: KnockoutObservable<Edm.String>;
        Description: KnockoutObservable<Edm.String>;
        DiscountPercentage: KnockoutObservable<Edm.Decimal>;
        DocumentType: KnockoutObservable<Edm.String>;
        DomainId: KnockoutObservable<Edm.Guid>;
        Id: KnockoutObservable<Edm.Guid>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        ItemNo: KnockoutObservable<Edm.String>;
        LegacyId: KnockoutObservable<Edm.String>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        Parent: KnockoutObservable<Crm.ErpExtension.Rest.Model.ObservableCrmErpExtension_CreditNote>;
        ParentKey: KnockoutObservable<Edm.Guid>;
        PositionNo: KnockoutObservable<Edm.String>;
        PricePerUnit: KnockoutObservable<Edm.Decimal>;
        Quantity: KnockoutObservable<Edm.Decimal>;
        QuantityUnit: KnockoutObservable<Edm.String>;
        RemainingQuantity: KnockoutObservable<Edm.Decimal>;
        StatusKey: KnockoutObservable<Edm.String>;
        Total: KnockoutObservable<Edm.Decimal>;
        TotalWoTaxes: KnockoutObservable<Edm.Decimal>;
        VATLevel: KnockoutObservable<Edm.Decimal>;
        innerInstance: CrmErpExtension_CreditNotePosition;
    }

    export class ObservableCrmErpExtension_CreditNote extends $data.Entity {
        constructor();
        constructor(initData: { Commission?: KnockoutObservable<Edm.String>; CompanyName?: KnockoutObservable<Edm.String>; CompanyNo?: KnockoutObservable<Edm.String>; ContactKey?: KnockoutObservable<Edm.Guid>; ContactType?: KnockoutObservable<Edm.String>; CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; CreditNoteDate?: KnockoutObservable<Edm.DateTimeOffset>; CreditNoteNo?: KnockoutObservable<Edm.String>; CurrencyKey?: KnockoutObservable<Edm.String>; DeliveryMethod?: KnockoutObservable<Edm.String>; Description?: KnockoutObservable<Edm.String>; DiscountPercentage?: KnockoutObservable<Edm.Decimal>; DocumentAttributes?: KnockoutObservableArray<Crm.Rest.Model.ObservableCrm_DocumentAttribute>; DocumentType?: KnockoutObservable<Edm.String>; DomainId?: KnockoutObservable<Edm.Guid>; Id?: KnockoutObservable<Edm.Guid>; InvoiceNo?: KnockoutObservable<Edm.String>; IsActive?: KnockoutObservable<Edm.Boolean>; LegacyId?: KnockoutObservable<Edm.String>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; OrderDate?: KnockoutObservable<Edm.DateTimeOffset>; OrderNo?: KnockoutObservable<Edm.String>; OrderType?: KnockoutObservable<Edm.String>; PaymentMethod?: KnockoutObservable<Edm.String>; PaymentTerms?: KnockoutObservable<Edm.String>; Positions?: KnockoutObservableArray<Crm.ErpExtension.Rest.Model.ObservableCrmErpExtension_CreditNotePosition>; StatusKey?: KnockoutObservable<Edm.String>; TermsOfDelivery?: KnockoutObservable<Edm.String>; Total?: KnockoutObservable<Edm.Decimal>; TotalWoTaxes?: KnockoutObservable<Edm.Decimal>; VATLevel?: KnockoutObservable<Edm.Decimal> });

        Commission: KnockoutObservable<Edm.String>;
        CompanyName: KnockoutObservable<Edm.String>;
        CompanyNo: KnockoutObservable<Edm.String>;
        ContactKey: KnockoutObservable<Edm.Guid>;
        ContactType: KnockoutObservable<Edm.String>;
        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        CreditNoteDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreditNoteNo: KnockoutObservable<Edm.String>;
        CurrencyKey: KnockoutObservable<Edm.String>;
        DeliveryMethod: KnockoutObservable<Edm.String>;
        Description: KnockoutObservable<Edm.String>;
        DiscountPercentage: KnockoutObservable<Edm.Decimal>;
        DocumentAttributes: KnockoutObservableArray<Crm.Rest.Model.ObservableCrm_DocumentAttribute>;
        DocumentType: KnockoutObservable<Edm.String>;
        DomainId: KnockoutObservable<Edm.Guid>;
        Id: KnockoutObservable<Edm.Guid>;
        InvoiceNo: KnockoutObservable<Edm.String>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        LegacyId: KnockoutObservable<Edm.String>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        OrderDate: KnockoutObservable<Edm.DateTimeOffset>;
        OrderNo: KnockoutObservable<Edm.String>;
        OrderType: KnockoutObservable<Edm.String>;
        PaymentMethod: KnockoutObservable<Edm.String>;
        PaymentTerms: KnockoutObservable<Edm.String>;
        Positions: KnockoutObservableArray<Crm.ErpExtension.Rest.Model.ObservableCrmErpExtension_CreditNotePosition>;
        StatusKey: KnockoutObservable<Edm.String>;
        TermsOfDelivery: KnockoutObservable<Edm.String>;
        Total: KnockoutObservable<Edm.Decimal>;
        TotalWoTaxes: KnockoutObservable<Edm.Decimal>;
        VATLevel: KnockoutObservable<Edm.Decimal>;
        innerInstance: CrmErpExtension_CreditNote;
    }

    export class ObservableCrmErpExtension_DeliveryNotePosition extends $data.Entity {
        constructor();
        constructor(initData: { Article?: KnockoutObservable<Crm.Article.Rest.Model.ObservableCrmArticle_Article>; ArticleKey?: KnockoutObservable<Edm.Guid>; CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; CurrencyKey?: KnockoutObservable<Edm.String>; Description?: KnockoutObservable<Edm.String>; DiscountPercentage?: KnockoutObservable<Edm.Decimal>; DocumentType?: KnockoutObservable<Edm.String>; DomainId?: KnockoutObservable<Edm.Guid>; Id?: KnockoutObservable<Edm.Guid>; IsActive?: KnockoutObservable<Edm.Boolean>; ItemNo?: KnockoutObservable<Edm.String>; LegacyId?: KnockoutObservable<Edm.String>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; Parent?: KnockoutObservable<Crm.ErpExtension.Rest.Model.ObservableCrmErpExtension_DeliveryNote>; ParentKey?: KnockoutObservable<Edm.Guid>; PositionNo?: KnockoutObservable<Edm.String>; PricePerUnit?: KnockoutObservable<Edm.Decimal>; Quantity?: KnockoutObservable<Edm.Decimal>; QuantityUnit?: KnockoutObservable<Edm.String>; RemainingQuantity?: KnockoutObservable<Edm.Decimal>; StatusKey?: KnockoutObservable<Edm.String>; Total?: KnockoutObservable<Edm.Decimal>; TotalWoTaxes?: KnockoutObservable<Edm.Decimal>; VATLevel?: KnockoutObservable<Edm.Decimal> });

        Article: KnockoutObservable<Crm.Article.Rest.Model.ObservableCrmArticle_Article>;
        ArticleKey: KnockoutObservable<Edm.Guid>;
        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        CurrencyKey: KnockoutObservable<Edm.String>;
        Description: KnockoutObservable<Edm.String>;
        DiscountPercentage: KnockoutObservable<Edm.Decimal>;
        DocumentType: KnockoutObservable<Edm.String>;
        DomainId: KnockoutObservable<Edm.Guid>;
        Id: KnockoutObservable<Edm.Guid>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        ItemNo: KnockoutObservable<Edm.String>;
        LegacyId: KnockoutObservable<Edm.String>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        Parent: KnockoutObservable<Crm.ErpExtension.Rest.Model.ObservableCrmErpExtension_DeliveryNote>;
        ParentKey: KnockoutObservable<Edm.Guid>;
        PositionNo: KnockoutObservable<Edm.String>;
        PricePerUnit: KnockoutObservable<Edm.Decimal>;
        Quantity: KnockoutObservable<Edm.Decimal>;
        QuantityUnit: KnockoutObservable<Edm.String>;
        RemainingQuantity: KnockoutObservable<Edm.Decimal>;
        StatusKey: KnockoutObservable<Edm.String>;
        Total: KnockoutObservable<Edm.Decimal>;
        TotalWoTaxes: KnockoutObservable<Edm.Decimal>;
        VATLevel: KnockoutObservable<Edm.Decimal>;
        innerInstance: CrmErpExtension_DeliveryNotePosition;
    }

    export class ObservableCrmErpExtension_DeliveryNote extends $data.Entity {
        constructor();
        constructor(initData: { Commission?: KnockoutObservable<Edm.String>; CompanyName?: KnockoutObservable<Edm.String>; CompanyNo?: KnockoutObservable<Edm.String>; ContactKey?: KnockoutObservable<Edm.Guid>; ContactType?: KnockoutObservable<Edm.String>; CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; CurrencyKey?: KnockoutObservable<Edm.String>; DeliveryMethod?: KnockoutObservable<Edm.String>; DeliveryNoteDate?: KnockoutObservable<Edm.DateTimeOffset>; DeliveryNoteNo?: KnockoutObservable<Edm.String>; Description?: KnockoutObservable<Edm.String>; DiscountPercentage?: KnockoutObservable<Edm.Decimal>; DocumentAttributes?: KnockoutObservableArray<Crm.Rest.Model.ObservableCrm_DocumentAttribute>; DocumentType?: KnockoutObservable<Edm.String>; DomainId?: KnockoutObservable<Edm.Guid>; Id?: KnockoutObservable<Edm.Guid>; IsActive?: KnockoutObservable<Edm.Boolean>; LegacyId?: KnockoutObservable<Edm.String>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; OrderDate?: KnockoutObservable<Edm.DateTimeOffset>; OrderNo?: KnockoutObservable<Edm.String>; OrderType?: KnockoutObservable<Edm.String>; PaymentMethod?: KnockoutObservable<Edm.String>; PaymentTerms?: KnockoutObservable<Edm.String>; Positions?: KnockoutObservableArray<Crm.ErpExtension.Rest.Model.ObservableCrmErpExtension_DeliveryNotePosition>; StatusKey?: KnockoutObservable<Edm.String>; TermsOfDelivery?: KnockoutObservable<Edm.String>; Total?: KnockoutObservable<Edm.Decimal>; TotalWoTaxes?: KnockoutObservable<Edm.Decimal>; VATLevel?: KnockoutObservable<Edm.Decimal> });

        Commission: KnockoutObservable<Edm.String>;
        CompanyName: KnockoutObservable<Edm.String>;
        CompanyNo: KnockoutObservable<Edm.String>;
        ContactKey: KnockoutObservable<Edm.Guid>;
        ContactType: KnockoutObservable<Edm.String>;
        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        CurrencyKey: KnockoutObservable<Edm.String>;
        DeliveryMethod: KnockoutObservable<Edm.String>;
        DeliveryNoteDate: KnockoutObservable<Edm.DateTimeOffset>;
        DeliveryNoteNo: KnockoutObservable<Edm.String>;
        Description: KnockoutObservable<Edm.String>;
        DiscountPercentage: KnockoutObservable<Edm.Decimal>;
        DocumentAttributes: KnockoutObservableArray<Crm.Rest.Model.ObservableCrm_DocumentAttribute>;
        DocumentType: KnockoutObservable<Edm.String>;
        DomainId: KnockoutObservable<Edm.Guid>;
        Id: KnockoutObservable<Edm.Guid>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        LegacyId: KnockoutObservable<Edm.String>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        OrderDate: KnockoutObservable<Edm.DateTimeOffset>;
        OrderNo: KnockoutObservable<Edm.String>;
        OrderType: KnockoutObservable<Edm.String>;
        PaymentMethod: KnockoutObservable<Edm.String>;
        PaymentTerms: KnockoutObservable<Edm.String>;
        Positions: KnockoutObservableArray<Crm.ErpExtension.Rest.Model.ObservableCrmErpExtension_DeliveryNotePosition>;
        StatusKey: KnockoutObservable<Edm.String>;
        TermsOfDelivery: KnockoutObservable<Edm.String>;
        Total: KnockoutObservable<Edm.Decimal>;
        TotalWoTaxes: KnockoutObservable<Edm.Decimal>;
        VATLevel: KnockoutObservable<Edm.Decimal>;
        innerInstance: CrmErpExtension_DeliveryNote;
    }

    export class ObservableCrmErpExtension_ErpTurnover extends $data.Entity {
        constructor();
        constructor(initData: { ArticleGroup01Key?: KnockoutObservable<Edm.String>; ArticleGroup02Key?: KnockoutObservable<Edm.String>; ArticleGroup03Key?: KnockoutObservable<Edm.String>; ArticleGroup04Key?: KnockoutObservable<Edm.String>; ArticleGroup05Key?: KnockoutObservable<Edm.String>; ArticleKey?: KnockoutObservable<Edm.Guid>; ContactKey?: KnockoutObservable<Edm.Guid>; CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; CurrencyKey?: KnockoutObservable<Edm.String>; DomainId?: KnockoutObservable<Edm.Guid>; Id?: KnockoutObservable<Edm.Guid>; IsActive?: KnockoutObservable<Edm.Boolean>; IsVolume?: KnockoutObservable<Edm.Boolean>; ItemDescription?: KnockoutObservable<Edm.String>; ItemNo?: KnockoutObservable<Edm.String>; LegacyId?: KnockoutObservable<Edm.String>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; Month1?: KnockoutObservable<Edm.Decimal>; Month10?: KnockoutObservable<Edm.Decimal>; Month11?: KnockoutObservable<Edm.Decimal>; Month12?: KnockoutObservable<Edm.Decimal>; Month2?: KnockoutObservable<Edm.Decimal>; Month3?: KnockoutObservable<Edm.Decimal>; Month4?: KnockoutObservable<Edm.Decimal>; Month5?: KnockoutObservable<Edm.Decimal>; Month6?: KnockoutObservable<Edm.Decimal>; Month7?: KnockoutObservable<Edm.Decimal>; Month8?: KnockoutObservable<Edm.Decimal>; Month9?: KnockoutObservable<Edm.Decimal>; QuantityUnitKey?: KnockoutObservable<Edm.String>; Total?: KnockoutObservable<Edm.Decimal>; Year?: KnockoutObservable<Edm.Int32> });

        ArticleGroup01Key: KnockoutObservable<Edm.String>;
        ArticleGroup02Key: KnockoutObservable<Edm.String>;
        ArticleGroup03Key: KnockoutObservable<Edm.String>;
        ArticleGroup04Key: KnockoutObservable<Edm.String>;
        ArticleGroup05Key: KnockoutObservable<Edm.String>;
        ArticleKey: KnockoutObservable<Edm.Guid>;
        ContactKey: KnockoutObservable<Edm.Guid>;
        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        CurrencyKey: KnockoutObservable<Edm.String>;
        DomainId: KnockoutObservable<Edm.Guid>;
        Id: KnockoutObservable<Edm.Guid>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        IsVolume: KnockoutObservable<Edm.Boolean>;
        ItemDescription: KnockoutObservable<Edm.String>;
        ItemNo: KnockoutObservable<Edm.String>;
        LegacyId: KnockoutObservable<Edm.String>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        Month1: KnockoutObservable<Edm.Decimal>;
        Month10: KnockoutObservable<Edm.Decimal>;
        Month11: KnockoutObservable<Edm.Decimal>;
        Month12: KnockoutObservable<Edm.Decimal>;
        Month2: KnockoutObservable<Edm.Decimal>;
        Month3: KnockoutObservable<Edm.Decimal>;
        Month4: KnockoutObservable<Edm.Decimal>;
        Month5: KnockoutObservable<Edm.Decimal>;
        Month6: KnockoutObservable<Edm.Decimal>;
        Month7: KnockoutObservable<Edm.Decimal>;
        Month8: KnockoutObservable<Edm.Decimal>;
        Month9: KnockoutObservable<Edm.Decimal>;
        QuantityUnitKey: KnockoutObservable<Edm.String>;
        Total: KnockoutObservable<Edm.Decimal>;
        Year: KnockoutObservable<Edm.Int32>;
        innerInstance: CrmErpExtension_ErpTurnover;
    }

    export class ObservableCrmErpExtension_InvoicePosition extends $data.Entity {
        constructor();
        constructor(initData: { Article?: KnockoutObservable<Crm.Article.Rest.Model.ObservableCrmArticle_Article>; ArticleKey?: KnockoutObservable<Edm.Guid>; CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; CurrencyKey?: KnockoutObservable<Edm.String>; Description?: KnockoutObservable<Edm.String>; DiscountPercentage?: KnockoutObservable<Edm.Decimal>; DocumentType?: KnockoutObservable<Edm.String>; DomainId?: KnockoutObservable<Edm.Guid>; Id?: KnockoutObservable<Edm.Guid>; IsActive?: KnockoutObservable<Edm.Boolean>; ItemNo?: KnockoutObservable<Edm.String>; LegacyId?: KnockoutObservable<Edm.String>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; Parent?: KnockoutObservable<Crm.ErpExtension.Rest.Model.ObservableCrmErpExtension_Invoice>; ParentKey?: KnockoutObservable<Edm.Guid>; PositionNo?: KnockoutObservable<Edm.String>; PricePerUnit?: KnockoutObservable<Edm.Decimal>; Quantity?: KnockoutObservable<Edm.Decimal>; QuantityUnit?: KnockoutObservable<Edm.String>; RemainingQuantity?: KnockoutObservable<Edm.Decimal>; StatusKey?: KnockoutObservable<Edm.String>; Total?: KnockoutObservable<Edm.Decimal>; TotalWoTaxes?: KnockoutObservable<Edm.Decimal>; VATLevel?: KnockoutObservable<Edm.Decimal> });

        Article: KnockoutObservable<Crm.Article.Rest.Model.ObservableCrmArticle_Article>;
        ArticleKey: KnockoutObservable<Edm.Guid>;
        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        CurrencyKey: KnockoutObservable<Edm.String>;
        Description: KnockoutObservable<Edm.String>;
        DiscountPercentage: KnockoutObservable<Edm.Decimal>;
        DocumentType: KnockoutObservable<Edm.String>;
        DomainId: KnockoutObservable<Edm.Guid>;
        Id: KnockoutObservable<Edm.Guid>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        ItemNo: KnockoutObservable<Edm.String>;
        LegacyId: KnockoutObservable<Edm.String>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        Parent: KnockoutObservable<Crm.ErpExtension.Rest.Model.ObservableCrmErpExtension_Invoice>;
        ParentKey: KnockoutObservable<Edm.Guid>;
        PositionNo: KnockoutObservable<Edm.String>;
        PricePerUnit: KnockoutObservable<Edm.Decimal>;
        Quantity: KnockoutObservable<Edm.Decimal>;
        QuantityUnit: KnockoutObservable<Edm.String>;
        RemainingQuantity: KnockoutObservable<Edm.Decimal>;
        StatusKey: KnockoutObservable<Edm.String>;
        Total: KnockoutObservable<Edm.Decimal>;
        TotalWoTaxes: KnockoutObservable<Edm.Decimal>;
        VATLevel: KnockoutObservable<Edm.Decimal>;
        innerInstance: CrmErpExtension_InvoicePosition;
    }

    export class ObservableCrmErpExtension_Invoice extends $data.Entity {
        constructor();
        constructor(initData: { Commission?: KnockoutObservable<Edm.String>; CompanyName?: KnockoutObservable<Edm.String>; CompanyNo?: KnockoutObservable<Edm.String>; ContactKey?: KnockoutObservable<Edm.Guid>; ContactType?: KnockoutObservable<Edm.String>; CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; CurrencyKey?: KnockoutObservable<Edm.String>; DeliveryMethod?: KnockoutObservable<Edm.String>; Description?: KnockoutObservable<Edm.String>; DiscountPercentage?: KnockoutObservable<Edm.Decimal>; DocumentAttributes?: KnockoutObservableArray<Crm.Rest.Model.ObservableCrm_DocumentAttribute>; DocumentType?: KnockoutObservable<Edm.String>; DomainId?: KnockoutObservable<Edm.Guid>; DueDate?: KnockoutObservable<Edm.DateTimeOffset>; DunningLevel?: KnockoutObservable<Edm.Int16>; Id?: KnockoutObservable<Edm.Guid>; InvoiceDate?: KnockoutObservable<Edm.DateTimeOffset>; InvoiceNo?: KnockoutObservable<Edm.String>; IsActive?: KnockoutObservable<Edm.Boolean>; LegacyId?: KnockoutObservable<Edm.String>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; OrderDate?: KnockoutObservable<Edm.DateTimeOffset>; OrderNo?: KnockoutObservable<Edm.String>; OrderType?: KnockoutObservable<Edm.String>; OutstandingBalance?: KnockoutObservable<Edm.Decimal>; PaymentMethod?: KnockoutObservable<Edm.String>; PaymentTerms?: KnockoutObservable<Edm.String>; Positions?: KnockoutObservableArray<Crm.ErpExtension.Rest.Model.ObservableCrmErpExtension_InvoicePosition>; StatusKey?: KnockoutObservable<Edm.String>; TermsOfDelivery?: KnockoutObservable<Edm.String>; Total?: KnockoutObservable<Edm.Decimal>; TotalWoTaxes?: KnockoutObservable<Edm.Decimal>; VATLevel?: KnockoutObservable<Edm.Decimal> });

        Commission: KnockoutObservable<Edm.String>;
        CompanyName: KnockoutObservable<Edm.String>;
        CompanyNo: KnockoutObservable<Edm.String>;
        ContactKey: KnockoutObservable<Edm.Guid>;
        ContactType: KnockoutObservable<Edm.String>;
        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        CurrencyKey: KnockoutObservable<Edm.String>;
        DeliveryMethod: KnockoutObservable<Edm.String>;
        Description: KnockoutObservable<Edm.String>;
        DiscountPercentage: KnockoutObservable<Edm.Decimal>;
        DocumentAttributes: KnockoutObservableArray<Crm.Rest.Model.ObservableCrm_DocumentAttribute>;
        DocumentType: KnockoutObservable<Edm.String>;
        DomainId: KnockoutObservable<Edm.Guid>;
        DueDate: KnockoutObservable<Edm.DateTimeOffset>;
        DunningLevel: KnockoutObservable<Edm.Int16>;
        Id: KnockoutObservable<Edm.Guid>;
        InvoiceDate: KnockoutObservable<Edm.DateTimeOffset>;
        InvoiceNo: KnockoutObservable<Edm.String>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        LegacyId: KnockoutObservable<Edm.String>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        OrderDate: KnockoutObservable<Edm.DateTimeOffset>;
        OrderNo: KnockoutObservable<Edm.String>;
        OrderType: KnockoutObservable<Edm.String>;
        OutstandingBalance: KnockoutObservable<Edm.Decimal>;
        PaymentMethod: KnockoutObservable<Edm.String>;
        PaymentTerms: KnockoutObservable<Edm.String>;
        Positions: KnockoutObservableArray<Crm.ErpExtension.Rest.Model.ObservableCrmErpExtension_InvoicePosition>;
        StatusKey: KnockoutObservable<Edm.String>;
        TermsOfDelivery: KnockoutObservable<Edm.String>;
        Total: KnockoutObservable<Edm.Decimal>;
        TotalWoTaxes: KnockoutObservable<Edm.Decimal>;
        VATLevel: KnockoutObservable<Edm.Decimal>;
        innerInstance: CrmErpExtension_Invoice;
    }

    export class ObservableCrmErpExtension_MasterContractPosition extends $data.Entity {
        constructor();
        constructor(initData: { Article?: KnockoutObservable<Crm.Article.Rest.Model.ObservableCrmArticle_Article>; ArticleKey?: KnockoutObservable<Edm.Guid>; CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; CurrencyKey?: KnockoutObservable<Edm.String>; Description?: KnockoutObservable<Edm.String>; DiscountPercentage?: KnockoutObservable<Edm.Decimal>; DocumentType?: KnockoutObservable<Edm.String>; DomainId?: KnockoutObservable<Edm.Guid>; Id?: KnockoutObservable<Edm.Guid>; IsActive?: KnockoutObservable<Edm.Boolean>; ItemNo?: KnockoutObservable<Edm.String>; LegacyId?: KnockoutObservable<Edm.String>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; Parent?: KnockoutObservable<Crm.ErpExtension.Rest.Model.ObservableCrmErpExtension_MasterContract>; ParentKey?: KnockoutObservable<Edm.Guid>; PositionNo?: KnockoutObservable<Edm.String>; PricePerUnit?: KnockoutObservable<Edm.Decimal>; Quantity?: KnockoutObservable<Edm.Decimal>; QuantityShipped?: KnockoutObservable<Edm.Decimal>; QuantityUnit?: KnockoutObservable<Edm.String>; RemainingQuantity?: KnockoutObservable<Edm.Decimal>; StatusKey?: KnockoutObservable<Edm.String>; Total?: KnockoutObservable<Edm.Decimal>; TotalWoTaxes?: KnockoutObservable<Edm.Decimal>; VATLevel?: KnockoutObservable<Edm.Decimal> });

        Article: KnockoutObservable<Crm.Article.Rest.Model.ObservableCrmArticle_Article>;
        ArticleKey: KnockoutObservable<Edm.Guid>;
        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        CurrencyKey: KnockoutObservable<Edm.String>;
        Description: KnockoutObservable<Edm.String>;
        DiscountPercentage: KnockoutObservable<Edm.Decimal>;
        DocumentType: KnockoutObservable<Edm.String>;
        DomainId: KnockoutObservable<Edm.Guid>;
        Id: KnockoutObservable<Edm.Guid>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        ItemNo: KnockoutObservable<Edm.String>;
        LegacyId: KnockoutObservable<Edm.String>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        Parent: KnockoutObservable<Crm.ErpExtension.Rest.Model.ObservableCrmErpExtension_MasterContract>;
        ParentKey: KnockoutObservable<Edm.Guid>;
        PositionNo: KnockoutObservable<Edm.String>;
        PricePerUnit: KnockoutObservable<Edm.Decimal>;
        Quantity: KnockoutObservable<Edm.Decimal>;
        QuantityShipped: KnockoutObservable<Edm.Decimal>;
        QuantityUnit: KnockoutObservable<Edm.String>;
        RemainingQuantity: KnockoutObservable<Edm.Decimal>;
        StatusKey: KnockoutObservable<Edm.String>;
        Total: KnockoutObservable<Edm.Decimal>;
        TotalWoTaxes: KnockoutObservable<Edm.Decimal>;
        VATLevel: KnockoutObservable<Edm.Decimal>;
        innerInstance: CrmErpExtension_MasterContractPosition;
    }

    export class ObservableCrmErpExtension_MasterContract extends $data.Entity {
        constructor();
        constructor(initData: { Commission?: KnockoutObservable<Edm.String>; CompanyName?: KnockoutObservable<Edm.String>; CompanyNo?: KnockoutObservable<Edm.String>; ContactKey?: KnockoutObservable<Edm.Guid>; ContactType?: KnockoutObservable<Edm.String>; CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; CurrencyKey?: KnockoutObservable<Edm.String>; DeliveryMethod?: KnockoutObservable<Edm.String>; Description?: KnockoutObservable<Edm.String>; DiscountPercentage?: KnockoutObservable<Edm.Decimal>; DocumentAttributes?: KnockoutObservableArray<Crm.Rest.Model.ObservableCrm_DocumentAttribute>; DocumentType?: KnockoutObservable<Edm.String>; DomainId?: KnockoutObservable<Edm.Guid>; DueDate?: KnockoutObservable<Edm.DateTimeOffset>; Id?: KnockoutObservable<Edm.Guid>; IsActive?: KnockoutObservable<Edm.Boolean>; ItemNo?: KnockoutObservable<Edm.String>; LegacyId?: KnockoutObservable<Edm.String>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; OrderConfirmationDate?: KnockoutObservable<Edm.DateTimeOffset>; OrderDate?: KnockoutObservable<Edm.DateTimeOffset>; OrderNo?: KnockoutObservable<Edm.String>; OrderType?: KnockoutObservable<Edm.String>; PaymentMethod?: KnockoutObservable<Edm.String>; PaymentTerms?: KnockoutObservable<Edm.String>; Positions?: KnockoutObservableArray<Crm.ErpExtension.Rest.Model.ObservableCrmErpExtension_MasterContractPosition>; Quantity?: KnockoutObservable<Edm.Decimal>; QuantityShipped?: KnockoutObservable<Edm.Decimal>; RemainingQuantity?: KnockoutObservable<Edm.Decimal>; StatusKey?: KnockoutObservable<Edm.String>; TermsOfDelivery?: KnockoutObservable<Edm.String>; Total?: KnockoutObservable<Edm.Decimal>; TotalWoTaxes?: KnockoutObservable<Edm.Decimal>; VATLevel?: KnockoutObservable<Edm.Decimal> });

        Commission: KnockoutObservable<Edm.String>;
        CompanyName: KnockoutObservable<Edm.String>;
        CompanyNo: KnockoutObservable<Edm.String>;
        ContactKey: KnockoutObservable<Edm.Guid>;
        ContactType: KnockoutObservable<Edm.String>;
        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        CurrencyKey: KnockoutObservable<Edm.String>;
        DeliveryMethod: KnockoutObservable<Edm.String>;
        Description: KnockoutObservable<Edm.String>;
        DiscountPercentage: KnockoutObservable<Edm.Decimal>;
        DocumentAttributes: KnockoutObservableArray<Crm.Rest.Model.ObservableCrm_DocumentAttribute>;
        DocumentType: KnockoutObservable<Edm.String>;
        DomainId: KnockoutObservable<Edm.Guid>;
        DueDate: KnockoutObservable<Edm.DateTimeOffset>;
        Id: KnockoutObservable<Edm.Guid>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        ItemNo: KnockoutObservable<Edm.String>;
        LegacyId: KnockoutObservable<Edm.String>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        OrderConfirmationDate: KnockoutObservable<Edm.DateTimeOffset>;
        OrderDate: KnockoutObservable<Edm.DateTimeOffset>;
        OrderNo: KnockoutObservable<Edm.String>;
        OrderType: KnockoutObservable<Edm.String>;
        PaymentMethod: KnockoutObservable<Edm.String>;
        PaymentTerms: KnockoutObservable<Edm.String>;
        Positions: KnockoutObservableArray<Crm.ErpExtension.Rest.Model.ObservableCrmErpExtension_MasterContractPosition>;
        Quantity: KnockoutObservable<Edm.Decimal>;
        QuantityShipped: KnockoutObservable<Edm.Decimal>;
        RemainingQuantity: KnockoutObservable<Edm.Decimal>;
        StatusKey: KnockoutObservable<Edm.String>;
        TermsOfDelivery: KnockoutObservable<Edm.String>;
        Total: KnockoutObservable<Edm.Decimal>;
        TotalWoTaxes: KnockoutObservable<Edm.Decimal>;
        VATLevel: KnockoutObservable<Edm.Decimal>;
        innerInstance: CrmErpExtension_MasterContract;
    }

    export class ObservableCrmErpExtension_QuotePosition extends $data.Entity {
        constructor();
        constructor(initData: { Article?: KnockoutObservable<Crm.Article.Rest.Model.ObservableCrmArticle_Article>; ArticleKey?: KnockoutObservable<Edm.Guid>; CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; CurrencyKey?: KnockoutObservable<Edm.String>; Description?: KnockoutObservable<Edm.String>; DiscountPercentage?: KnockoutObservable<Edm.Decimal>; DocumentType?: KnockoutObservable<Edm.String>; DomainId?: KnockoutObservable<Edm.Guid>; Id?: KnockoutObservable<Edm.Guid>; IsActive?: KnockoutObservable<Edm.Boolean>; ItemNo?: KnockoutObservable<Edm.String>; LegacyId?: KnockoutObservable<Edm.String>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; Parent?: KnockoutObservable<Crm.ErpExtension.Rest.Model.ObservableCrmErpExtension_Quote>; ParentKey?: KnockoutObservable<Edm.Guid>; PositionNo?: KnockoutObservable<Edm.String>; PricePerUnit?: KnockoutObservable<Edm.Decimal>; Quantity?: KnockoutObservable<Edm.Decimal>; QuantityUnit?: KnockoutObservable<Edm.String>; RemainingQuantity?: KnockoutObservable<Edm.Decimal>; StatusKey?: KnockoutObservable<Edm.String>; Total?: KnockoutObservable<Edm.Decimal>; TotalWoTaxes?: KnockoutObservable<Edm.Decimal>; VATLevel?: KnockoutObservable<Edm.Decimal> });

        Article: KnockoutObservable<Crm.Article.Rest.Model.ObservableCrmArticle_Article>;
        ArticleKey: KnockoutObservable<Edm.Guid>;
        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        CurrencyKey: KnockoutObservable<Edm.String>;
        Description: KnockoutObservable<Edm.String>;
        DiscountPercentage: KnockoutObservable<Edm.Decimal>;
        DocumentType: KnockoutObservable<Edm.String>;
        DomainId: KnockoutObservable<Edm.Guid>;
        Id: KnockoutObservable<Edm.Guid>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        ItemNo: KnockoutObservable<Edm.String>;
        LegacyId: KnockoutObservable<Edm.String>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        Parent: KnockoutObservable<Crm.ErpExtension.Rest.Model.ObservableCrmErpExtension_Quote>;
        ParentKey: KnockoutObservable<Edm.Guid>;
        PositionNo: KnockoutObservable<Edm.String>;
        PricePerUnit: KnockoutObservable<Edm.Decimal>;
        Quantity: KnockoutObservable<Edm.Decimal>;
        QuantityUnit: KnockoutObservable<Edm.String>;
        RemainingQuantity: KnockoutObservable<Edm.Decimal>;
        StatusKey: KnockoutObservable<Edm.String>;
        Total: KnockoutObservable<Edm.Decimal>;
        TotalWoTaxes: KnockoutObservable<Edm.Decimal>;
        VATLevel: KnockoutObservable<Edm.Decimal>;
        innerInstance: CrmErpExtension_QuotePosition;
    }

    export class ObservableCrmErpExtension_Quote extends $data.Entity {
        constructor();
        constructor(initData: { Commission?: KnockoutObservable<Edm.String>; CompanyName?: KnockoutObservable<Edm.String>; CompanyNo?: KnockoutObservable<Edm.String>; ContactKey?: KnockoutObservable<Edm.Guid>; ContactType?: KnockoutObservable<Edm.String>; CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; CurrencyKey?: KnockoutObservable<Edm.String>; DeliveryMethod?: KnockoutObservable<Edm.String>; Description?: KnockoutObservable<Edm.String>; DiscountPercentage?: KnockoutObservable<Edm.Decimal>; DocumentAttributes?: KnockoutObservableArray<Crm.Rest.Model.ObservableCrm_DocumentAttribute>; DocumentDate11?: KnockoutObservable<Edm.DateTimeOffset>; DocumentType?: KnockoutObservable<Edm.String>; DomainId?: KnockoutObservable<Edm.Guid>; DueDate?: KnockoutObservable<Edm.DateTimeOffset>; Id?: KnockoutObservable<Edm.Guid>; IsActive?: KnockoutObservable<Edm.Boolean>; LegacyId?: KnockoutObservable<Edm.String>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; OrderDate?: KnockoutObservable<Edm.DateTimeOffset>; OrderNo?: KnockoutObservable<Edm.String>; OrderType?: KnockoutObservable<Edm.String>; PaymentMethod?: KnockoutObservable<Edm.String>; PaymentTerms?: KnockoutObservable<Edm.String>; Positions?: KnockoutObservableArray<Crm.ErpExtension.Rest.Model.ObservableCrmErpExtension_QuotePosition>; QuoteDate?: KnockoutObservable<Edm.DateTimeOffset>; QuoteNo?: KnockoutObservable<Edm.String>; StatusKey?: KnockoutObservable<Edm.String>; TermsOfDelivery?: KnockoutObservable<Edm.String>; Total?: KnockoutObservable<Edm.Decimal>; TotalWoTaxes?: KnockoutObservable<Edm.Decimal>; VATLevel?: KnockoutObservable<Edm.Decimal> });

        Commission: KnockoutObservable<Edm.String>;
        CompanyName: KnockoutObservable<Edm.String>;
        CompanyNo: KnockoutObservable<Edm.String>;
        ContactKey: KnockoutObservable<Edm.Guid>;
        ContactType: KnockoutObservable<Edm.String>;
        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        CurrencyKey: KnockoutObservable<Edm.String>;
        DeliveryMethod: KnockoutObservable<Edm.String>;
        Description: KnockoutObservable<Edm.String>;
        DiscountPercentage: KnockoutObservable<Edm.Decimal>;
        DocumentAttributes: KnockoutObservableArray<Crm.Rest.Model.ObservableCrm_DocumentAttribute>;
        DocumentDate11: KnockoutObservable<Edm.DateTimeOffset>;
        DocumentType: KnockoutObservable<Edm.String>;
        DomainId: KnockoutObservable<Edm.Guid>;
        DueDate: KnockoutObservable<Edm.DateTimeOffset>;
        Id: KnockoutObservable<Edm.Guid>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        LegacyId: KnockoutObservable<Edm.String>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        OrderDate: KnockoutObservable<Edm.DateTimeOffset>;
        OrderNo: KnockoutObservable<Edm.String>;
        OrderType: KnockoutObservable<Edm.String>;
        PaymentMethod: KnockoutObservable<Edm.String>;
        PaymentTerms: KnockoutObservable<Edm.String>;
        Positions: KnockoutObservableArray<Crm.ErpExtension.Rest.Model.ObservableCrmErpExtension_QuotePosition>;
        QuoteDate: KnockoutObservable<Edm.DateTimeOffset>;
        QuoteNo: KnockoutObservable<Edm.String>;
        StatusKey: KnockoutObservable<Edm.String>;
        TermsOfDelivery: KnockoutObservable<Edm.String>;
        Total: KnockoutObservable<Edm.Decimal>;
        TotalWoTaxes: KnockoutObservable<Edm.Decimal>;
        VATLevel: KnockoutObservable<Edm.Decimal>;
        innerInstance: CrmErpExtension_Quote;
    }

    export class ObservableCrmErpExtension_SalesOrderPosition extends $data.Entity {
        constructor();
        constructor(initData: { Article?: KnockoutObservable<Crm.Article.Rest.Model.ObservableCrmArticle_Article>; ArticleKey?: KnockoutObservable<Edm.Guid>; CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; CurrencyKey?: KnockoutObservable<Edm.String>; Description?: KnockoutObservable<Edm.String>; DiscountPercentage?: KnockoutObservable<Edm.Decimal>; DocumentType?: KnockoutObservable<Edm.String>; DomainId?: KnockoutObservable<Edm.Guid>; Id?: KnockoutObservable<Edm.Guid>; IsActive?: KnockoutObservable<Edm.Boolean>; ItemNo?: KnockoutObservable<Edm.String>; LegacyId?: KnockoutObservable<Edm.String>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; Parent?: KnockoutObservable<Crm.ErpExtension.Rest.Model.ObservableCrmErpExtension_SalesOrder>; ParentKey?: KnockoutObservable<Edm.Guid>; PositionNo?: KnockoutObservable<Edm.String>; PricePerUnit?: KnockoutObservable<Edm.Decimal>; Quantity?: KnockoutObservable<Edm.Decimal>; QuantityUnit?: KnockoutObservable<Edm.String>; RemainingQuantity?: KnockoutObservable<Edm.Decimal>; StatusKey?: KnockoutObservable<Edm.String>; Total?: KnockoutObservable<Edm.Decimal>; TotalWoTaxes?: KnockoutObservable<Edm.Decimal>; VATLevel?: KnockoutObservable<Edm.Decimal> });

        Article: KnockoutObservable<Crm.Article.Rest.Model.ObservableCrmArticle_Article>;
        ArticleKey: KnockoutObservable<Edm.Guid>;
        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        CurrencyKey: KnockoutObservable<Edm.String>;
        Description: KnockoutObservable<Edm.String>;
        DiscountPercentage: KnockoutObservable<Edm.Decimal>;
        DocumentType: KnockoutObservable<Edm.String>;
        DomainId: KnockoutObservable<Edm.Guid>;
        Id: KnockoutObservable<Edm.Guid>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        ItemNo: KnockoutObservable<Edm.String>;
        LegacyId: KnockoutObservable<Edm.String>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        Parent: KnockoutObservable<Crm.ErpExtension.Rest.Model.ObservableCrmErpExtension_SalesOrder>;
        ParentKey: KnockoutObservable<Edm.Guid>;
        PositionNo: KnockoutObservable<Edm.String>;
        PricePerUnit: KnockoutObservable<Edm.Decimal>;
        Quantity: KnockoutObservable<Edm.Decimal>;
        QuantityUnit: KnockoutObservable<Edm.String>;
        RemainingQuantity: KnockoutObservable<Edm.Decimal>;
        StatusKey: KnockoutObservable<Edm.String>;
        Total: KnockoutObservable<Edm.Decimal>;
        TotalWoTaxes: KnockoutObservable<Edm.Decimal>;
        VATLevel: KnockoutObservable<Edm.Decimal>;
        innerInstance: CrmErpExtension_SalesOrderPosition;
    }

    export class ObservableCrmErpExtension_SalesOrder extends $data.Entity {
        constructor();
        constructor(initData: { Commission?: KnockoutObservable<Edm.String>; CompanyName?: KnockoutObservable<Edm.String>; CompanyNo?: KnockoutObservable<Edm.String>; ContactKey?: KnockoutObservable<Edm.Guid>; ContactType?: KnockoutObservable<Edm.String>; CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; CurrencyKey?: KnockoutObservable<Edm.String>; DeliveryMethod?: KnockoutObservable<Edm.String>; Description?: KnockoutObservable<Edm.String>; DiscountPercentage?: KnockoutObservable<Edm.Decimal>; DocumentAttributes?: KnockoutObservableArray<Crm.Rest.Model.ObservableCrm_DocumentAttribute>; DocumentType?: KnockoutObservable<Edm.String>; DomainId?: KnockoutObservable<Edm.Guid>; Id?: KnockoutObservable<Edm.Guid>; IsActive?: KnockoutObservable<Edm.Boolean>; LegacyId?: KnockoutObservable<Edm.String>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; OrderConfirmationDate?: KnockoutObservable<Edm.DateTimeOffset>; OrderConfirmationNo?: KnockoutObservable<Edm.String>; OrderDate?: KnockoutObservable<Edm.DateTimeOffset>; OrderNo?: KnockoutObservable<Edm.String>; OrderType?: KnockoutObservable<Edm.String>; PaymentMethod?: KnockoutObservable<Edm.String>; PaymentTerms?: KnockoutObservable<Edm.String>; Positions?: KnockoutObservableArray<Crm.ErpExtension.Rest.Model.ObservableCrmErpExtension_SalesOrderPosition>; StatusKey?: KnockoutObservable<Edm.String>; TermsOfDelivery?: KnockoutObservable<Edm.String>; Total?: KnockoutObservable<Edm.Decimal>; TotalWoTaxes?: KnockoutObservable<Edm.Decimal>; VATLevel?: KnockoutObservable<Edm.Decimal> });

        Commission: KnockoutObservable<Edm.String>;
        CompanyName: KnockoutObservable<Edm.String>;
        CompanyNo: KnockoutObservable<Edm.String>;
        ContactKey: KnockoutObservable<Edm.Guid>;
        ContactType: KnockoutObservable<Edm.String>;
        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        CurrencyKey: KnockoutObservable<Edm.String>;
        DeliveryMethod: KnockoutObservable<Edm.String>;
        Description: KnockoutObservable<Edm.String>;
        DiscountPercentage: KnockoutObservable<Edm.Decimal>;
        DocumentAttributes: KnockoutObservableArray<Crm.Rest.Model.ObservableCrm_DocumentAttribute>;
        DocumentType: KnockoutObservable<Edm.String>;
        DomainId: KnockoutObservable<Edm.Guid>;
        Id: KnockoutObservable<Edm.Guid>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        LegacyId: KnockoutObservable<Edm.String>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        OrderConfirmationDate: KnockoutObservable<Edm.DateTimeOffset>;
        OrderConfirmationNo: KnockoutObservable<Edm.String>;
        OrderDate: KnockoutObservable<Edm.DateTimeOffset>;
        OrderNo: KnockoutObservable<Edm.String>;
        OrderType: KnockoutObservable<Edm.String>;
        PaymentMethod: KnockoutObservable<Edm.String>;
        PaymentTerms: KnockoutObservable<Edm.String>;
        Positions: KnockoutObservableArray<Crm.ErpExtension.Rest.Model.ObservableCrmErpExtension_SalesOrderPosition>;
        StatusKey: KnockoutObservable<Edm.String>;
        TermsOfDelivery: KnockoutObservable<Edm.String>;
        Total: KnockoutObservable<Edm.Decimal>;
        TotalWoTaxes: KnockoutObservable<Edm.Decimal>;
        VATLevel: KnockoutObservable<Edm.Decimal>;
        innerInstance: CrmErpExtension_SalesOrder;
    }

    export class CrmErpExtension_TurnoverSummary extends $data.Entity {
        constructor();
        constructor(initData: { ArticleGroup01Key?: Edm.String; Company?: Crm.Rest.Model.Crm_Company; ContactKey?: Edm.Guid; CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; CurrencyKey?: Edm.String; Difference?: Edm.Decimal; Id?: Edm.Guid; IsActive?: Edm.Boolean; IsVolume?: Edm.Boolean; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; QuantityUnitKey?: Edm.String; TotalCurrentYear?: Edm.Decimal; TotalMinusThreeYears?: Edm.Decimal; TotalPrePreviousYear?: Edm.Decimal; TotalPreviousYear?: Edm.Decimal });

        ArticleGroup01Key: Edm.String;
        Company: Crm.Rest.Model.Crm_Company;
        ContactKey: Edm.Guid;
        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        CurrencyKey: Edm.String;
        Difference: Edm.Decimal;
        Id: Edm.Guid;
        IsActive: Edm.Boolean;
        IsVolume: Edm.Boolean;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        QuantityUnitKey: Edm.String;
        TotalCurrentYear: Edm.Decimal;
        TotalMinusThreeYears: Edm.Decimal;
        TotalPrePreviousYear: Edm.Decimal;
        TotalPreviousYear: Edm.Decimal;
        asKoObservable(): ObservableCrmErpExtension_TurnoverSummary;
        static create(): CrmErpExtension_TurnoverSummary;
        static create(initData:any): CrmErpExtension_TurnoverSummary;
    }

    export class CrmErpExtension_CreditNotePosition extends $data.Entity {
        constructor();
        constructor(initData: { Article?: Crm.Article.Rest.Model.CrmArticle_Article; ArticleKey?: Edm.Guid; CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; CurrencyKey?: Edm.String; Description?: Edm.String; DiscountPercentage?: Edm.Decimal; DocumentType?: Edm.String; DomainId?: Edm.Guid; Id?: Edm.Guid; IsActive?: Edm.Boolean; ItemNo?: Edm.String; LegacyId?: Edm.String; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; Parent?: Crm.ErpExtension.Rest.Model.CrmErpExtension_CreditNote; ParentKey?: Edm.Guid; PositionNo?: Edm.String; PricePerUnit?: Edm.Decimal; Quantity?: Edm.Decimal; QuantityUnit?: Edm.String; RemainingQuantity?: Edm.Decimal; StatusKey?: Edm.String; Total?: Edm.Decimal; TotalWoTaxes?: Edm.Decimal; VATLevel?: Edm.Decimal });

        Article: Crm.Article.Rest.Model.CrmArticle_Article;
        ArticleKey: Edm.Guid;
        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        CurrencyKey: Edm.String;
        Description: Edm.String;
        DiscountPercentage: Edm.Decimal;
        DocumentType: Edm.String;
        DomainId: Edm.Guid;
        Id: Edm.Guid;
        IsActive: Edm.Boolean;
        ItemNo: Edm.String;
        LegacyId: Edm.String;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        Parent: Crm.ErpExtension.Rest.Model.CrmErpExtension_CreditNote;
        ParentKey: Edm.Guid;
        PositionNo: Edm.String;
        PricePerUnit: Edm.Decimal;
        Quantity: Edm.Decimal;
        QuantityUnit: Edm.String;
        RemainingQuantity: Edm.Decimal;
        StatusKey: Edm.String;
        Total: Edm.Decimal;
        TotalWoTaxes: Edm.Decimal;
        VATLevel: Edm.Decimal;
        asKoObservable(): ObservableCrmErpExtension_CreditNotePosition;
        static create(): CrmErpExtension_CreditNotePosition;
        static create(initData:any): CrmErpExtension_CreditNotePosition;
    }

    export class CrmErpExtension_CreditNote extends $data.Entity {
        constructor();
        constructor(initData: { Commission?: Edm.String; CompanyName?: Edm.String; CompanyNo?: Edm.String; ContactKey?: Edm.Guid; ContactType?: Edm.String; CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; CreditNoteDate?: Edm.DateTimeOffset; CreditNoteNo?: Edm.String; CurrencyKey?: Edm.String; DeliveryMethod?: Edm.String; Description?: Edm.String; DiscountPercentage?: Edm.Decimal; DocumentAttributes?: Crm.Rest.Model.Crm_DocumentAttribute[]; DocumentType?: Edm.String; DomainId?: Edm.Guid; Id?: Edm.Guid; InvoiceNo?: Edm.String; IsActive?: Edm.Boolean; LegacyId?: Edm.String; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; OrderDate?: Edm.DateTimeOffset; OrderNo?: Edm.String; OrderType?: Edm.String; PaymentMethod?: Edm.String; PaymentTerms?: Edm.String; Positions?: Crm.ErpExtension.Rest.Model.CrmErpExtension_CreditNotePosition[]; StatusKey?: Edm.String; TermsOfDelivery?: Edm.String; Total?: Edm.Decimal; TotalWoTaxes?: Edm.Decimal; VATLevel?: Edm.Decimal });

        Commission: Edm.String;
        CompanyName: Edm.String;
        CompanyNo: Edm.String;
        ContactKey: Edm.Guid;
        ContactType: Edm.String;
        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        CreditNoteDate: Edm.DateTimeOffset;
        CreditNoteNo: Edm.String;
        CurrencyKey: Edm.String;
        DeliveryMethod: Edm.String;
        Description: Edm.String;
        DiscountPercentage: Edm.Decimal;
        DocumentAttributes: Crm.Rest.Model.Crm_DocumentAttribute[];
        DocumentType: Edm.String;
        DomainId: Edm.Guid;
        Id: Edm.Guid;
        InvoiceNo: Edm.String;
        IsActive: Edm.Boolean;
        LegacyId: Edm.String;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        OrderDate: Edm.DateTimeOffset;
        OrderNo: Edm.String;
        OrderType: Edm.String;
        PaymentMethod: Edm.String;
        PaymentTerms: Edm.String;
        Positions: Crm.ErpExtension.Rest.Model.CrmErpExtension_CreditNotePosition[];
        StatusKey: Edm.String;
        TermsOfDelivery: Edm.String;
        Total: Edm.Decimal;
        TotalWoTaxes: Edm.Decimal;
        VATLevel: Edm.Decimal;
        asKoObservable(): ObservableCrmErpExtension_CreditNote;
        static create(): CrmErpExtension_CreditNote;
        static create(initData:any): CrmErpExtension_CreditNote;
    }

    export class CrmErpExtension_DeliveryNotePosition extends $data.Entity {
        constructor();
        constructor(initData: { Article?: Crm.Article.Rest.Model.CrmArticle_Article; ArticleKey?: Edm.Guid; CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; CurrencyKey?: Edm.String; Description?: Edm.String; DiscountPercentage?: Edm.Decimal; DocumentType?: Edm.String; DomainId?: Edm.Guid; Id?: Edm.Guid; IsActive?: Edm.Boolean; ItemNo?: Edm.String; LegacyId?: Edm.String; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; Parent?: Crm.ErpExtension.Rest.Model.CrmErpExtension_DeliveryNote; ParentKey?: Edm.Guid; PositionNo?: Edm.String; PricePerUnit?: Edm.Decimal; Quantity?: Edm.Decimal; QuantityUnit?: Edm.String; RemainingQuantity?: Edm.Decimal; StatusKey?: Edm.String; Total?: Edm.Decimal; TotalWoTaxes?: Edm.Decimal; VATLevel?: Edm.Decimal });

        Article: Crm.Article.Rest.Model.CrmArticle_Article;
        ArticleKey: Edm.Guid;
        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        CurrencyKey: Edm.String;
        Description: Edm.String;
        DiscountPercentage: Edm.Decimal;
        DocumentType: Edm.String;
        DomainId: Edm.Guid;
        Id: Edm.Guid;
        IsActive: Edm.Boolean;
        ItemNo: Edm.String;
        LegacyId: Edm.String;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        Parent: Crm.ErpExtension.Rest.Model.CrmErpExtension_DeliveryNote;
        ParentKey: Edm.Guid;
        PositionNo: Edm.String;
        PricePerUnit: Edm.Decimal;
        Quantity: Edm.Decimal;
        QuantityUnit: Edm.String;
        RemainingQuantity: Edm.Decimal;
        StatusKey: Edm.String;
        Total: Edm.Decimal;
        TotalWoTaxes: Edm.Decimal;
        VATLevel: Edm.Decimal;
        asKoObservable(): ObservableCrmErpExtension_DeliveryNotePosition;
        static create(): CrmErpExtension_DeliveryNotePosition;
        static create(initData:any): CrmErpExtension_DeliveryNotePosition;
    }

    export class CrmErpExtension_DeliveryNote extends $data.Entity {
        constructor();
        constructor(initData: { Commission?: Edm.String; CompanyName?: Edm.String; CompanyNo?: Edm.String; ContactKey?: Edm.Guid; ContactType?: Edm.String; CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; CurrencyKey?: Edm.String; DeliveryMethod?: Edm.String; DeliveryNoteDate?: Edm.DateTimeOffset; DeliveryNoteNo?: Edm.String; Description?: Edm.String; DiscountPercentage?: Edm.Decimal; DocumentAttributes?: Crm.Rest.Model.Crm_DocumentAttribute[]; DocumentType?: Edm.String; DomainId?: Edm.Guid; Id?: Edm.Guid; IsActive?: Edm.Boolean; LegacyId?: Edm.String; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; OrderDate?: Edm.DateTimeOffset; OrderNo?: Edm.String; OrderType?: Edm.String; PaymentMethod?: Edm.String; PaymentTerms?: Edm.String; Positions?: Crm.ErpExtension.Rest.Model.CrmErpExtension_DeliveryNotePosition[]; StatusKey?: Edm.String; TermsOfDelivery?: Edm.String; Total?: Edm.Decimal; TotalWoTaxes?: Edm.Decimal; VATLevel?: Edm.Decimal });

        Commission: Edm.String;
        CompanyName: Edm.String;
        CompanyNo: Edm.String;
        ContactKey: Edm.Guid;
        ContactType: Edm.String;
        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        CurrencyKey: Edm.String;
        DeliveryMethod: Edm.String;
        DeliveryNoteDate: Edm.DateTimeOffset;
        DeliveryNoteNo: Edm.String;
        Description: Edm.String;
        DiscountPercentage: Edm.Decimal;
        DocumentAttributes: Crm.Rest.Model.Crm_DocumentAttribute[];
        DocumentType: Edm.String;
        DomainId: Edm.Guid;
        Id: Edm.Guid;
        IsActive: Edm.Boolean;
        LegacyId: Edm.String;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        OrderDate: Edm.DateTimeOffset;
        OrderNo: Edm.String;
        OrderType: Edm.String;
        PaymentMethod: Edm.String;
        PaymentTerms: Edm.String;
        Positions: Crm.ErpExtension.Rest.Model.CrmErpExtension_DeliveryNotePosition[];
        StatusKey: Edm.String;
        TermsOfDelivery: Edm.String;
        Total: Edm.Decimal;
        TotalWoTaxes: Edm.Decimal;
        VATLevel: Edm.Decimal;
        asKoObservable(): ObservableCrmErpExtension_DeliveryNote;
        static create(): CrmErpExtension_DeliveryNote;
        static create(initData:any): CrmErpExtension_DeliveryNote;
    }

    export class CrmErpExtension_ErpTurnover extends $data.Entity {
        constructor();
        constructor(initData: { ArticleGroup01Key?: Edm.String; ArticleGroup02Key?: Edm.String; ArticleGroup03Key?: Edm.String; ArticleGroup04Key?: Edm.String; ArticleGroup05Key?: Edm.String; ArticleKey?: Edm.Guid; ContactKey?: Edm.Guid; CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; CurrencyKey?: Edm.String; DomainId?: Edm.Guid; Id?: Edm.Guid; IsActive?: Edm.Boolean; IsVolume?: Edm.Boolean; ItemDescription?: Edm.String; ItemNo?: Edm.String; LegacyId?: Edm.String; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; Month1?: Edm.Decimal; Month10?: Edm.Decimal; Month11?: Edm.Decimal; Month12?: Edm.Decimal; Month2?: Edm.Decimal; Month3?: Edm.Decimal; Month4?: Edm.Decimal; Month5?: Edm.Decimal; Month6?: Edm.Decimal; Month7?: Edm.Decimal; Month8?: Edm.Decimal; Month9?: Edm.Decimal; QuantityUnitKey?: Edm.String; Total?: Edm.Decimal; Year?: Edm.Int32 });

        ArticleGroup01Key: Edm.String;
        ArticleGroup02Key: Edm.String;
        ArticleGroup03Key: Edm.String;
        ArticleGroup04Key: Edm.String;
        ArticleGroup05Key: Edm.String;
        ArticleKey: Edm.Guid;
        ContactKey: Edm.Guid;
        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        CurrencyKey: Edm.String;
        DomainId: Edm.Guid;
        Id: Edm.Guid;
        IsActive: Edm.Boolean;
        IsVolume: Edm.Boolean;
        ItemDescription: Edm.String;
        ItemNo: Edm.String;
        LegacyId: Edm.String;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        Month1: Edm.Decimal;
        Month10: Edm.Decimal;
        Month11: Edm.Decimal;
        Month12: Edm.Decimal;
        Month2: Edm.Decimal;
        Month3: Edm.Decimal;
        Month4: Edm.Decimal;
        Month5: Edm.Decimal;
        Month6: Edm.Decimal;
        Month7: Edm.Decimal;
        Month8: Edm.Decimal;
        Month9: Edm.Decimal;
        QuantityUnitKey: Edm.String;
        Total: Edm.Decimal;
        Year: Edm.Int32;
        asKoObservable(): ObservableCrmErpExtension_ErpTurnover;
        static create(): CrmErpExtension_ErpTurnover;
        static create(initData:any): CrmErpExtension_ErpTurnover;
    }

    export class CrmErpExtension_InvoicePosition extends $data.Entity {
        constructor();
        constructor(initData: { Article?: Crm.Article.Rest.Model.CrmArticle_Article; ArticleKey?: Edm.Guid; CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; CurrencyKey?: Edm.String; Description?: Edm.String; DiscountPercentage?: Edm.Decimal; DocumentType?: Edm.String; DomainId?: Edm.Guid; Id?: Edm.Guid; IsActive?: Edm.Boolean; ItemNo?: Edm.String; LegacyId?: Edm.String; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; Parent?: Crm.ErpExtension.Rest.Model.CrmErpExtension_Invoice; ParentKey?: Edm.Guid; PositionNo?: Edm.String; PricePerUnit?: Edm.Decimal; Quantity?: Edm.Decimal; QuantityUnit?: Edm.String; RemainingQuantity?: Edm.Decimal; StatusKey?: Edm.String; Total?: Edm.Decimal; TotalWoTaxes?: Edm.Decimal; VATLevel?: Edm.Decimal });

        Article: Crm.Article.Rest.Model.CrmArticle_Article;
        ArticleKey: Edm.Guid;
        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        CurrencyKey: Edm.String;
        Description: Edm.String;
        DiscountPercentage: Edm.Decimal;
        DocumentType: Edm.String;
        DomainId: Edm.Guid;
        Id: Edm.Guid;
        IsActive: Edm.Boolean;
        ItemNo: Edm.String;
        LegacyId: Edm.String;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        Parent: Crm.ErpExtension.Rest.Model.CrmErpExtension_Invoice;
        ParentKey: Edm.Guid;
        PositionNo: Edm.String;
        PricePerUnit: Edm.Decimal;
        Quantity: Edm.Decimal;
        QuantityUnit: Edm.String;
        RemainingQuantity: Edm.Decimal;
        StatusKey: Edm.String;
        Total: Edm.Decimal;
        TotalWoTaxes: Edm.Decimal;
        VATLevel: Edm.Decimal;
        asKoObservable(): ObservableCrmErpExtension_InvoicePosition;
        static create(): CrmErpExtension_InvoicePosition;
        static create(initData:any): CrmErpExtension_InvoicePosition;
    }

    export class CrmErpExtension_Invoice extends $data.Entity {
        constructor();
        constructor(initData: { Commission?: Edm.String; CompanyName?: Edm.String; CompanyNo?: Edm.String; ContactKey?: Edm.Guid; ContactType?: Edm.String; CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; CurrencyKey?: Edm.String; DeliveryMethod?: Edm.String; Description?: Edm.String; DiscountPercentage?: Edm.Decimal; DocumentAttributes?: Crm.Rest.Model.Crm_DocumentAttribute[]; DocumentType?: Edm.String; DomainId?: Edm.Guid; DueDate?: Edm.DateTimeOffset; DunningLevel?: Edm.Int16; Id?: Edm.Guid; InvoiceDate?: Edm.DateTimeOffset; InvoiceNo?: Edm.String; IsActive?: Edm.Boolean; LegacyId?: Edm.String; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; OrderDate?: Edm.DateTimeOffset; OrderNo?: Edm.String; OrderType?: Edm.String; OutstandingBalance?: Edm.Decimal; PaymentMethod?: Edm.String; PaymentTerms?: Edm.String; Positions?: Crm.ErpExtension.Rest.Model.CrmErpExtension_InvoicePosition[]; StatusKey?: Edm.String; TermsOfDelivery?: Edm.String; Total?: Edm.Decimal; TotalWoTaxes?: Edm.Decimal; VATLevel?: Edm.Decimal });

        Commission: Edm.String;
        CompanyName: Edm.String;
        CompanyNo: Edm.String;
        ContactKey: Edm.Guid;
        ContactType: Edm.String;
        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        CurrencyKey: Edm.String;
        DeliveryMethod: Edm.String;
        Description: Edm.String;
        DiscountPercentage: Edm.Decimal;
        DocumentAttributes: Crm.Rest.Model.Crm_DocumentAttribute[];
        DocumentType: Edm.String;
        DomainId: Edm.Guid;
        DueDate: Edm.DateTimeOffset;
        DunningLevel: Edm.Int16;
        Id: Edm.Guid;
        InvoiceDate: Edm.DateTimeOffset;
        InvoiceNo: Edm.String;
        IsActive: Edm.Boolean;
        LegacyId: Edm.String;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        OrderDate: Edm.DateTimeOffset;
        OrderNo: Edm.String;
        OrderType: Edm.String;
        OutstandingBalance: Edm.Decimal;
        PaymentMethod: Edm.String;
        PaymentTerms: Edm.String;
        Positions: Crm.ErpExtension.Rest.Model.CrmErpExtension_InvoicePosition[];
        StatusKey: Edm.String;
        TermsOfDelivery: Edm.String;
        Total: Edm.Decimal;
        TotalWoTaxes: Edm.Decimal;
        VATLevel: Edm.Decimal;
        asKoObservable(): ObservableCrmErpExtension_Invoice;
        static create(): CrmErpExtension_Invoice;
        static create(initData:any): CrmErpExtension_Invoice;
    }

    export class CrmErpExtension_MasterContractPosition extends $data.Entity {
        constructor();
        constructor(initData: { Article?: Crm.Article.Rest.Model.CrmArticle_Article; ArticleKey?: Edm.Guid; CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; CurrencyKey?: Edm.String; Description?: Edm.String; DiscountPercentage?: Edm.Decimal; DocumentType?: Edm.String; DomainId?: Edm.Guid; Id?: Edm.Guid; IsActive?: Edm.Boolean; ItemNo?: Edm.String; LegacyId?: Edm.String; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; Parent?: Crm.ErpExtension.Rest.Model.CrmErpExtension_MasterContract; ParentKey?: Edm.Guid; PositionNo?: Edm.String; PricePerUnit?: Edm.Decimal; Quantity?: Edm.Decimal; QuantityShipped?: Edm.Decimal; QuantityUnit?: Edm.String; RemainingQuantity?: Edm.Decimal; StatusKey?: Edm.String; Total?: Edm.Decimal; TotalWoTaxes?: Edm.Decimal; VATLevel?: Edm.Decimal });

        Article: Crm.Article.Rest.Model.CrmArticle_Article;
        ArticleKey: Edm.Guid;
        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        CurrencyKey: Edm.String;
        Description: Edm.String;
        DiscountPercentage: Edm.Decimal;
        DocumentType: Edm.String;
        DomainId: Edm.Guid;
        Id: Edm.Guid;
        IsActive: Edm.Boolean;
        ItemNo: Edm.String;
        LegacyId: Edm.String;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        Parent: Crm.ErpExtension.Rest.Model.CrmErpExtension_MasterContract;
        ParentKey: Edm.Guid;
        PositionNo: Edm.String;
        PricePerUnit: Edm.Decimal;
        Quantity: Edm.Decimal;
        QuantityShipped: Edm.Decimal;
        QuantityUnit: Edm.String;
        RemainingQuantity: Edm.Decimal;
        StatusKey: Edm.String;
        Total: Edm.Decimal;
        TotalWoTaxes: Edm.Decimal;
        VATLevel: Edm.Decimal;
        asKoObservable(): ObservableCrmErpExtension_MasterContractPosition;
        static create(): CrmErpExtension_MasterContractPosition;
        static create(initData:any): CrmErpExtension_MasterContractPosition;
    }

    export class CrmErpExtension_MasterContract extends $data.Entity {
        constructor();
        constructor(initData: { Commission?: Edm.String; CompanyName?: Edm.String; CompanyNo?: Edm.String; ContactKey?: Edm.Guid; ContactType?: Edm.String; CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; CurrencyKey?: Edm.String; DeliveryMethod?: Edm.String; Description?: Edm.String; DiscountPercentage?: Edm.Decimal; DocumentAttributes?: Crm.Rest.Model.Crm_DocumentAttribute[]; DocumentType?: Edm.String; DomainId?: Edm.Guid; DueDate?: Edm.DateTimeOffset; Id?: Edm.Guid; IsActive?: Edm.Boolean; ItemNo?: Edm.String; LegacyId?: Edm.String; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; OrderConfirmationDate?: Edm.DateTimeOffset; OrderDate?: Edm.DateTimeOffset; OrderNo?: Edm.String; OrderType?: Edm.String; PaymentMethod?: Edm.String; PaymentTerms?: Edm.String; Positions?: Crm.ErpExtension.Rest.Model.CrmErpExtension_MasterContractPosition[]; Quantity?: Edm.Decimal; QuantityShipped?: Edm.Decimal; RemainingQuantity?: Edm.Decimal; StatusKey?: Edm.String; TermsOfDelivery?: Edm.String; Total?: Edm.Decimal; TotalWoTaxes?: Edm.Decimal; VATLevel?: Edm.Decimal });

        Commission: Edm.String;
        CompanyName: Edm.String;
        CompanyNo: Edm.String;
        ContactKey: Edm.Guid;
        ContactType: Edm.String;
        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        CurrencyKey: Edm.String;
        DeliveryMethod: Edm.String;
        Description: Edm.String;
        DiscountPercentage: Edm.Decimal;
        DocumentAttributes: Crm.Rest.Model.Crm_DocumentAttribute[];
        DocumentType: Edm.String;
        DomainId: Edm.Guid;
        DueDate: Edm.DateTimeOffset;
        Id: Edm.Guid;
        IsActive: Edm.Boolean;
        ItemNo: Edm.String;
        LegacyId: Edm.String;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        OrderConfirmationDate: Edm.DateTimeOffset;
        OrderDate: Edm.DateTimeOffset;
        OrderNo: Edm.String;
        OrderType: Edm.String;
        PaymentMethod: Edm.String;
        PaymentTerms: Edm.String;
        Positions: Crm.ErpExtension.Rest.Model.CrmErpExtension_MasterContractPosition[];
        Quantity: Edm.Decimal;
        QuantityShipped: Edm.Decimal;
        RemainingQuantity: Edm.Decimal;
        StatusKey: Edm.String;
        TermsOfDelivery: Edm.String;
        Total: Edm.Decimal;
        TotalWoTaxes: Edm.Decimal;
        VATLevel: Edm.Decimal;
        asKoObservable(): ObservableCrmErpExtension_MasterContract;
        static create(): CrmErpExtension_MasterContract;
        static create(initData:any): CrmErpExtension_MasterContract;
    }

    export class CrmErpExtension_QuotePosition extends $data.Entity {
        constructor();
        constructor(initData: { Article?: Crm.Article.Rest.Model.CrmArticle_Article; ArticleKey?: Edm.Guid; CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; CurrencyKey?: Edm.String; Description?: Edm.String; DiscountPercentage?: Edm.Decimal; DocumentType?: Edm.String; DomainId?: Edm.Guid; Id?: Edm.Guid; IsActive?: Edm.Boolean; ItemNo?: Edm.String; LegacyId?: Edm.String; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; Parent?: Crm.ErpExtension.Rest.Model.CrmErpExtension_Quote; ParentKey?: Edm.Guid; PositionNo?: Edm.String; PricePerUnit?: Edm.Decimal; Quantity?: Edm.Decimal; QuantityUnit?: Edm.String; RemainingQuantity?: Edm.Decimal; StatusKey?: Edm.String; Total?: Edm.Decimal; TotalWoTaxes?: Edm.Decimal; VATLevel?: Edm.Decimal });

        Article: Crm.Article.Rest.Model.CrmArticle_Article;
        ArticleKey: Edm.Guid;
        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        CurrencyKey: Edm.String;
        Description: Edm.String;
        DiscountPercentage: Edm.Decimal;
        DocumentType: Edm.String;
        DomainId: Edm.Guid;
        Id: Edm.Guid;
        IsActive: Edm.Boolean;
        ItemNo: Edm.String;
        LegacyId: Edm.String;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        Parent: Crm.ErpExtension.Rest.Model.CrmErpExtension_Quote;
        ParentKey: Edm.Guid;
        PositionNo: Edm.String;
        PricePerUnit: Edm.Decimal;
        Quantity: Edm.Decimal;
        QuantityUnit: Edm.String;
        RemainingQuantity: Edm.Decimal;
        StatusKey: Edm.String;
        Total: Edm.Decimal;
        TotalWoTaxes: Edm.Decimal;
        VATLevel: Edm.Decimal;
        asKoObservable(): ObservableCrmErpExtension_QuotePosition;
        static create(): CrmErpExtension_QuotePosition;
        static create(initData:any): CrmErpExtension_QuotePosition;
    }

    export class CrmErpExtension_Quote extends $data.Entity {
        constructor();
        constructor(initData: { Commission?: Edm.String; CompanyName?: Edm.String; CompanyNo?: Edm.String; ContactKey?: Edm.Guid; ContactType?: Edm.String; CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; CurrencyKey?: Edm.String; DeliveryMethod?: Edm.String; Description?: Edm.String; DiscountPercentage?: Edm.Decimal; DocumentAttributes?: Crm.Rest.Model.Crm_DocumentAttribute[]; DocumentDate11?: Edm.DateTimeOffset; DocumentType?: Edm.String; DomainId?: Edm.Guid; DueDate?: Edm.DateTimeOffset; Id?: Edm.Guid; IsActive?: Edm.Boolean; LegacyId?: Edm.String; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; OrderDate?: Edm.DateTimeOffset; OrderNo?: Edm.String; OrderType?: Edm.String; PaymentMethod?: Edm.String; PaymentTerms?: Edm.String; Positions?: Crm.ErpExtension.Rest.Model.CrmErpExtension_QuotePosition[]; QuoteDate?: Edm.DateTimeOffset; QuoteNo?: Edm.String; StatusKey?: Edm.String; TermsOfDelivery?: Edm.String; Total?: Edm.Decimal; TotalWoTaxes?: Edm.Decimal; VATLevel?: Edm.Decimal });

        Commission: Edm.String;
        CompanyName: Edm.String;
        CompanyNo: Edm.String;
        ContactKey: Edm.Guid;
        ContactType: Edm.String;
        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        CurrencyKey: Edm.String;
        DeliveryMethod: Edm.String;
        Description: Edm.String;
        DiscountPercentage: Edm.Decimal;
        DocumentAttributes: Crm.Rest.Model.Crm_DocumentAttribute[];
        DocumentDate11: Edm.DateTimeOffset;
        DocumentType: Edm.String;
        DomainId: Edm.Guid;
        DueDate: Edm.DateTimeOffset;
        Id: Edm.Guid;
        IsActive: Edm.Boolean;
        LegacyId: Edm.String;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        OrderDate: Edm.DateTimeOffset;
        OrderNo: Edm.String;
        OrderType: Edm.String;
        PaymentMethod: Edm.String;
        PaymentTerms: Edm.String;
        Positions: Crm.ErpExtension.Rest.Model.CrmErpExtension_QuotePosition[];
        QuoteDate: Edm.DateTimeOffset;
        QuoteNo: Edm.String;
        StatusKey: Edm.String;
        TermsOfDelivery: Edm.String;
        Total: Edm.Decimal;
        TotalWoTaxes: Edm.Decimal;
        VATLevel: Edm.Decimal;
        asKoObservable(): ObservableCrmErpExtension_Quote;
        static create(): CrmErpExtension_Quote;
        static create(initData:any): CrmErpExtension_Quote;
    }

    export class CrmErpExtension_SalesOrderPosition extends $data.Entity {
        constructor();
        constructor(initData: { Article?: Crm.Article.Rest.Model.CrmArticle_Article; ArticleKey?: Edm.Guid; CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; CurrencyKey?: Edm.String; Description?: Edm.String; DiscountPercentage?: Edm.Decimal; DocumentType?: Edm.String; DomainId?: Edm.Guid; Id?: Edm.Guid; IsActive?: Edm.Boolean; ItemNo?: Edm.String; LegacyId?: Edm.String; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; Parent?: Crm.ErpExtension.Rest.Model.CrmErpExtension_SalesOrder; ParentKey?: Edm.Guid; PositionNo?: Edm.String; PricePerUnit?: Edm.Decimal; Quantity?: Edm.Decimal; QuantityUnit?: Edm.String; RemainingQuantity?: Edm.Decimal; StatusKey?: Edm.String; Total?: Edm.Decimal; TotalWoTaxes?: Edm.Decimal; VATLevel?: Edm.Decimal });

        Article: Crm.Article.Rest.Model.CrmArticle_Article;
        ArticleKey: Edm.Guid;
        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        CurrencyKey: Edm.String;
        Description: Edm.String;
        DiscountPercentage: Edm.Decimal;
        DocumentType: Edm.String;
        DomainId: Edm.Guid;
        Id: Edm.Guid;
        IsActive: Edm.Boolean;
        ItemNo: Edm.String;
        LegacyId: Edm.String;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        Parent: Crm.ErpExtension.Rest.Model.CrmErpExtension_SalesOrder;
        ParentKey: Edm.Guid;
        PositionNo: Edm.String;
        PricePerUnit: Edm.Decimal;
        Quantity: Edm.Decimal;
        QuantityUnit: Edm.String;
        RemainingQuantity: Edm.Decimal;
        StatusKey: Edm.String;
        Total: Edm.Decimal;
        TotalWoTaxes: Edm.Decimal;
        VATLevel: Edm.Decimal;
        asKoObservable(): ObservableCrmErpExtension_SalesOrderPosition;
        static create(): CrmErpExtension_SalesOrderPosition;
        static create(initData:any): CrmErpExtension_SalesOrderPosition;
    }

    export class CrmErpExtension_SalesOrder extends $data.Entity {
        constructor();
        constructor(initData: { Commission?: Edm.String; CompanyName?: Edm.String; CompanyNo?: Edm.String; ContactKey?: Edm.Guid; ContactType?: Edm.String; CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; CurrencyKey?: Edm.String; DeliveryMethod?: Edm.String; Description?: Edm.String; DiscountPercentage?: Edm.Decimal; DocumentAttributes?: Crm.Rest.Model.Crm_DocumentAttribute[]; DocumentType?: Edm.String; DomainId?: Edm.Guid; Id?: Edm.Guid; IsActive?: Edm.Boolean; LegacyId?: Edm.String; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; OrderConfirmationDate?: Edm.DateTimeOffset; OrderConfirmationNo?: Edm.String; OrderDate?: Edm.DateTimeOffset; OrderNo?: Edm.String; OrderType?: Edm.String; PaymentMethod?: Edm.String; PaymentTerms?: Edm.String; Positions?: Crm.ErpExtension.Rest.Model.CrmErpExtension_SalesOrderPosition[]; StatusKey?: Edm.String; TermsOfDelivery?: Edm.String; Total?: Edm.Decimal; TotalWoTaxes?: Edm.Decimal; VATLevel?: Edm.Decimal });

        Commission: Edm.String;
        CompanyName: Edm.String;
        CompanyNo: Edm.String;
        ContactKey: Edm.Guid;
        ContactType: Edm.String;
        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        CurrencyKey: Edm.String;
        DeliveryMethod: Edm.String;
        Description: Edm.String;
        DiscountPercentage: Edm.Decimal;
        DocumentAttributes: Crm.Rest.Model.Crm_DocumentAttribute[];
        DocumentType: Edm.String;
        DomainId: Edm.Guid;
        Id: Edm.Guid;
        IsActive: Edm.Boolean;
        LegacyId: Edm.String;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        OrderConfirmationDate: Edm.DateTimeOffset;
        OrderConfirmationNo: Edm.String;
        OrderDate: Edm.DateTimeOffset;
        OrderNo: Edm.String;
        OrderType: Edm.String;
        PaymentMethod: Edm.String;
        PaymentTerms: Edm.String;
        Positions: Crm.ErpExtension.Rest.Model.CrmErpExtension_SalesOrderPosition[];
        StatusKey: Edm.String;
        TermsOfDelivery: Edm.String;
        Total: Edm.Decimal;
        TotalWoTaxes: Edm.Decimal;
        VATLevel: Edm.Decimal;
        asKoObservable(): ObservableCrmErpExtension_SalesOrder;
        static create(): CrmErpExtension_SalesOrder;
        static create(initData:any): CrmErpExtension_SalesOrder;
    }

}

namespace Crm.DynamicForms.Rest.Model {

    export class ObservableCrmDynamicForms_Time extends Crm.DynamicForms.Rest.Model.DynamicFormElementRest {
        constructor();
        constructor(initData: { DefaultResponseValue?: KnockoutObservable<Edm.String>; Required?: KnockoutObservable<Edm.Boolean> });

        DefaultResponseValue: KnockoutObservable<Edm.String>;
        Required: KnockoutObservable<Edm.Boolean>;
        innerInstance: CrmDynamicForms_Time;
    }

    export class ObservableCrmDynamicForms_SingleLineText extends Crm.DynamicForms.Rest.Model.DynamicFormElementRest {
        constructor();
        constructor(initData: { DefaultResponseValue?: KnockoutObservable<Edm.String>; MaxLength?: KnockoutObservable<Edm.Int32>; MinLength?: KnockoutObservable<Edm.Int32>; Required?: KnockoutObservable<Edm.Boolean>; RowSize?: KnockoutObservable<Edm.Int32> });

        DefaultResponseValue: KnockoutObservable<Edm.String>;
        MaxLength: KnockoutObservable<Edm.Int32>;
        MinLength: KnockoutObservable<Edm.Int32>;
        Required: KnockoutObservable<Edm.Boolean>;
        RowSize: KnockoutObservable<Edm.Int32>;
        innerInstance: CrmDynamicForms_SingleLineText;
    }

    export class ObservableCrmDynamicForms_SignaturePad extends Crm.DynamicForms.Rest.Model.DynamicFormElementRest {
        constructor();
        constructor(initData: { DefaultResponseValue?: KnockoutObservable<Edm.String>; Required?: KnockoutObservable<Edm.Boolean>; ShowPrivacyPolicy?: KnockoutObservable<Edm.Boolean>; ShowReasonSelection?: KnockoutObservable<Edm.Boolean> });

        DefaultResponseValue: KnockoutObservable<Edm.String>;
        Required: KnockoutObservable<Edm.Boolean>;
        ShowPrivacyPolicy: KnockoutObservable<Edm.Boolean>;
        ShowReasonSelection: KnockoutObservable<Edm.Boolean>;
        innerInstance: CrmDynamicForms_SignaturePad;
    }

    export class ObservableCrmDynamicForms_SectionSeparator extends Crm.DynamicForms.Rest.Model.DynamicFormElementRest {
        constructor();
        constructor(initData: {  });

        innerInstance: CrmDynamicForms_SectionSeparator;
    }

    export class ObservableCrmDynamicForms_RadioButtonList extends Crm.DynamicForms.Rest.Model.DynamicFormElementRest {
        constructor();
        constructor(initData: { Choices?: KnockoutObservable<Edm.Int32>; DefaultResponseValue?: KnockoutObservable<Edm.String>; HideNotApplicable?: KnockoutObservable<Edm.Boolean>; Layout?: KnockoutObservable<Edm.Int32>; Randomized?: KnockoutObservable<Edm.Boolean>; Required?: KnockoutObservable<Edm.Boolean>; UseFixedChoices?: KnockoutObservable<Edm.Boolean> });

        Choices: KnockoutObservable<Edm.Int32>;
        DefaultResponseValue: KnockoutObservable<Edm.String>;
        HideNotApplicable: KnockoutObservable<Edm.Boolean>;
        Layout: KnockoutObservable<Edm.Int32>;
        Randomized: KnockoutObservable<Edm.Boolean>;
        Required: KnockoutObservable<Edm.Boolean>;
        UseFixedChoices: KnockoutObservable<Edm.Boolean>;
        innerInstance: CrmDynamicForms_RadioButtonList;
    }

    export class ObservableCrmDynamicForms_PageSeparator extends Crm.DynamicForms.Rest.Model.DynamicFormElementRest {
        constructor();
        constructor(initData: {  });

        innerInstance: CrmDynamicForms_PageSeparator;
    }

    export class ObservableCrmDynamicForms_Number extends Crm.DynamicForms.Rest.Model.DynamicFormElementRest {
        constructor();
        constructor(initData: { DefaultResponseValue?: KnockoutObservable<Edm.String>; MaxValue?: KnockoutObservable<Edm.Decimal>; MinValue?: KnockoutObservable<Edm.Decimal>; Required?: KnockoutObservable<Edm.Boolean>; RowSize?: KnockoutObservable<Edm.Int32>; Step?: KnockoutObservable<Edm.Decimal> });

        DefaultResponseValue: KnockoutObservable<Edm.String>;
        MaxValue: KnockoutObservable<Edm.Decimal>;
        MinValue: KnockoutObservable<Edm.Decimal>;
        Required: KnockoutObservable<Edm.Boolean>;
        RowSize: KnockoutObservable<Edm.Int32>;
        Step: KnockoutObservable<Edm.Decimal>;
        innerInstance: CrmDynamicForms_Number;
    }

    export class ObservableCrmDynamicForms_MultiLineText extends Crm.DynamicForms.Rest.Model.DynamicFormElementRest {
        constructor();
        constructor(initData: { DefaultResponseValue?: KnockoutObservable<Edm.String>; MaxLength?: KnockoutObservable<Edm.Int32>; MinLength?: KnockoutObservable<Edm.Int32>; Required?: KnockoutObservable<Edm.Boolean>; RowSize?: KnockoutObservable<Edm.Int32> });

        DefaultResponseValue: KnockoutObservable<Edm.String>;
        MaxLength: KnockoutObservable<Edm.Int32>;
        MinLength: KnockoutObservable<Edm.Int32>;
        Required: KnockoutObservable<Edm.Boolean>;
        RowSize: KnockoutObservable<Edm.Int32>;
        innerInstance: CrmDynamicForms_MultiLineText;
    }

    export class ObservableCrmDynamicForms_MatrixQuestion extends Crm.DynamicForms.Rest.Model.DynamicFormElementRest {
        constructor();
        constructor(initData: { Choices?: KnockoutObservable<Edm.Int32>; DefaultResponseValue?: KnockoutObservable<Edm.String>; Layout?: KnockoutObservable<Edm.Int32>; MaxChoices?: KnockoutObservable<Edm.Int32>; MinChoices?: KnockoutObservable<Edm.Int32>; Randomized?: KnockoutObservable<Edm.Boolean>; RemarksEnabled?: KnockoutObservable<Edm.Boolean>; Required?: KnockoutObservable<Edm.Boolean> });

        Choices: KnockoutObservable<Edm.Int32>;
        DefaultResponseValue: KnockoutObservable<Edm.String>;
        Layout: KnockoutObservable<Edm.Int32>;
        MaxChoices: KnockoutObservable<Edm.Int32>;
        MinChoices: KnockoutObservable<Edm.Int32>;
        Randomized: KnockoutObservable<Edm.Boolean>;
        RemarksEnabled: KnockoutObservable<Edm.Boolean>;
        Required: KnockoutObservable<Edm.Boolean>;
        innerInstance: CrmDynamicForms_MatrixQuestion;
    }

    export class ObservableCrmDynamicForms_Literal extends Crm.DynamicForms.Rest.Model.DynamicFormElementRest {
        constructor();
        constructor(initData: {  });

        innerInstance: CrmDynamicForms_Literal;
    }

    export class ObservableCrmDynamicForms_Image extends Crm.DynamicForms.Rest.Model.DynamicFormElementRest {
        constructor();
        constructor(initData: { FileResourceId?: KnockoutObservable<Edm.Guid> });

        FileResourceId: KnockoutObservable<Edm.Guid>;
        innerInstance: CrmDynamicForms_Image;
    }

    export class ObservableCrmDynamicForms_FileAttachmentDynamicFormElement extends Crm.DynamicForms.Rest.Model.DynamicFormElementRest {
        constructor();
        constructor(initData: { DefaultResponseValue?: KnockoutObservable<Edm.String>; MaxFileSize?: KnockoutObservable<Edm.Int32>; MaxImageHeight?: KnockoutObservable<Edm.Int32>; MaxImageWidth?: KnockoutObservable<Edm.Int32>; MaxUploadCount?: KnockoutObservable<Edm.Int32>; MinUploadCount?: KnockoutObservable<Edm.Int32>; Required?: KnockoutObservable<Edm.Boolean> });

        DefaultResponseValue: KnockoutObservable<Edm.String>;
        MaxFileSize: KnockoutObservable<Edm.Int32>;
        MaxImageHeight: KnockoutObservable<Edm.Int32>;
        MaxImageWidth: KnockoutObservable<Edm.Int32>;
        MaxUploadCount: KnockoutObservable<Edm.Int32>;
        MinUploadCount: KnockoutObservable<Edm.Int32>;
        Required: KnockoutObservable<Edm.Boolean>;
        innerInstance: CrmDynamicForms_FileAttachmentDynamicFormElement;
    }

    export class ObservableCrmDynamicForms_DropDown extends Crm.DynamicForms.Rest.Model.DynamicFormElementRest {
        constructor();
        constructor(initData: { Choices?: KnockoutObservable<Edm.Int32>; DefaultResponseValue?: KnockoutObservable<Edm.String>; Randomized?: KnockoutObservable<Edm.Boolean>; Required?: KnockoutObservable<Edm.Boolean>; RowSize?: KnockoutObservable<Edm.Int32> });

        Choices: KnockoutObservable<Edm.Int32>;
        DefaultResponseValue: KnockoutObservable<Edm.String>;
        Randomized: KnockoutObservable<Edm.Boolean>;
        Required: KnockoutObservable<Edm.Boolean>;
        RowSize: KnockoutObservable<Edm.Int32>;
        innerInstance: CrmDynamicForms_DropDown;
    }

    export class ObservableCrmDynamicForms_Date extends Crm.DynamicForms.Rest.Model.DynamicFormElementRest {
        constructor();
        constructor(initData: { DefaultResponseValue?: KnockoutObservable<Edm.String>; Required?: KnockoutObservable<Edm.Boolean> });

        DefaultResponseValue: KnockoutObservable<Edm.String>;
        Required: KnockoutObservable<Edm.Boolean>;
        innerInstance: CrmDynamicForms_Date;
    }

    export class ObservableCrmDynamicForms_CheckBoxList extends Crm.DynamicForms.Rest.Model.DynamicFormElementRest {
        constructor();
        constructor(initData: { Choices?: KnockoutObservable<Edm.Int32>; DefaultResponseValue?: KnockoutObservable<Edm.String>; Layout?: KnockoutObservable<Edm.Int32>; MaxChoices?: KnockoutObservable<Edm.Int32>; MinChoices?: KnockoutObservable<Edm.Int32>; Randomized?: KnockoutObservable<Edm.Boolean>; Required?: KnockoutObservable<Edm.Boolean> });

        Choices: KnockoutObservable<Edm.Int32>;
        DefaultResponseValue: KnockoutObservable<Edm.String>;
        Layout: KnockoutObservable<Edm.Int32>;
        MaxChoices: KnockoutObservable<Edm.Int32>;
        MinChoices: KnockoutObservable<Edm.Int32>;
        Randomized: KnockoutObservable<Edm.Boolean>;
        Required: KnockoutObservable<Edm.Boolean>;
        innerInstance: CrmDynamicForms_CheckBoxList;
    }

    export class ObservableDynamicFormElementRest extends $data.Entity {
        constructor();
        constructor(initData: { AddResponseTemplate?: KnockoutObservable<Edm.Boolean>; CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; CssExtra?: KnockoutObservable<Edm.String>; DynamicFormElementTemplateKey?: KnockoutObservable<Edm.Guid>; DynamicFormKey?: KnockoutObservable<Edm.Guid>; ExtensionValues?: KnockoutObservable<Default.ObservableCrmDynamicForms_DynamicFormElement_ExtensionValues>; FormElementType?: KnockoutObservable<Edm.String>; Id?: KnockoutObservable<Edm.Guid>; IsActive?: KnockoutObservable<Edm.Boolean>; IsTemplate?: KnockoutObservable<Edm.Boolean>; LegacyId?: KnockoutObservable<Edm.String>; Localizations?: KnockoutObservableArray<Crm.DynamicForms.Rest.Model.Lookups.ObservableCrmDynamicForms_DynamicFormLocalization>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; Rules?: KnockoutObservableArray<Crm.DynamicForms.Rest.Model.ObservableCrmDynamicForms_DynamicFormElementRule>; Size?: KnockoutObservable<Edm.Int32>; SortOrder?: KnockoutObservable<Edm.Int32> });

        AddResponseTemplate: KnockoutObservable<Edm.Boolean>;
        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        CssExtra: KnockoutObservable<Edm.String>;
        DynamicFormElementTemplateKey: KnockoutObservable<Edm.Guid>;
        DynamicFormKey: KnockoutObservable<Edm.Guid>;
        ExtensionValues: KnockoutObservable<Default.ObservableCrmDynamicForms_DynamicFormElement_ExtensionValues>;
        FormElementType: KnockoutObservable<Edm.String>;
        Id: KnockoutObservable<Edm.Guid>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        IsTemplate: KnockoutObservable<Edm.Boolean>;
        LegacyId: KnockoutObservable<Edm.String>;
        Localizations: KnockoutObservableArray<Crm.DynamicForms.Rest.Model.Lookups.ObservableCrmDynamicForms_DynamicFormLocalization>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        Rules: KnockoutObservableArray<Crm.DynamicForms.Rest.Model.ObservableCrmDynamicForms_DynamicFormElementRule>;
        Size: KnockoutObservable<Edm.Int32>;
        SortOrder: KnockoutObservable<Edm.Int32>;
        innerInstance: DynamicFormElementRest;
    }

    export class ObservableCrmDynamicForms_DynamicFormElementRuleCondition extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; DynamicFormElementId?: KnockoutObservable<Edm.Guid>; DynamicFormElementRuleId?: KnockoutObservable<Edm.Guid>; Filter?: KnockoutObservable<Edm.String>; Id?: KnockoutObservable<Edm.Guid>; IsActive?: KnockoutObservable<Edm.Boolean>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; Value?: KnockoutObservable<Edm.String> });

        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        DynamicFormElementId: KnockoutObservable<Edm.Guid>;
        DynamicFormElementRuleId: KnockoutObservable<Edm.Guid>;
        Filter: KnockoutObservable<Edm.String>;
        Id: KnockoutObservable<Edm.Guid>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        Value: KnockoutObservable<Edm.String>;
        innerInstance: CrmDynamicForms_DynamicFormElementRuleCondition;
    }

    export class ObservableCrmDynamicForms_DynamicFormElementRule extends $data.Entity {
        constructor();
        constructor(initData: { Conditions?: KnockoutObservableArray<Crm.DynamicForms.Rest.Model.ObservableCrmDynamicForms_DynamicFormElementRuleCondition>; CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; DynamicFormElementId?: KnockoutObservable<Edm.Guid>; DynamicFormId?: KnockoutObservable<Edm.Guid>; Id?: KnockoutObservable<Edm.Guid>; IsActive?: KnockoutObservable<Edm.Boolean>; MatchType?: KnockoutObservable<Edm.String>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; Type?: KnockoutObservable<Edm.String> });

        Conditions: KnockoutObservableArray<Crm.DynamicForms.Rest.Model.ObservableCrmDynamicForms_DynamicFormElementRuleCondition>;
        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        DynamicFormElementId: KnockoutObservable<Edm.Guid>;
        DynamicFormId: KnockoutObservable<Edm.Guid>;
        Id: KnockoutObservable<Edm.Guid>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        MatchType: KnockoutObservable<Edm.String>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        Type: KnockoutObservable<Edm.String>;
        innerInstance: CrmDynamicForms_DynamicFormElementRule;
    }

    export class ObservableCrmDynamicForms_DynamicFormElementTemplateLanguage extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; DomainId?: KnockoutObservable<Edm.Guid>; DynamicFormElementTemplate?: KnockoutObservable<Crm.DynamicForms.Rest.Model.ObservableCrmDynamicForms_DynamicFormElementTemplate>; DynamicFormElementTemplateKey?: KnockoutObservable<Edm.Guid>; Id?: KnockoutObservable<Edm.Guid>; IsActive?: KnockoutObservable<Edm.Boolean>; LanguageKey?: KnockoutObservable<Edm.String>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String> });

        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        DomainId: KnockoutObservable<Edm.Guid>;
        DynamicFormElementTemplate: KnockoutObservable<Crm.DynamicForms.Rest.Model.ObservableCrmDynamicForms_DynamicFormElementTemplate>;
        DynamicFormElementTemplateKey: KnockoutObservable<Edm.Guid>;
        Id: KnockoutObservable<Edm.Guid>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        LanguageKey: KnockoutObservable<Edm.String>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        innerInstance: CrmDynamicForms_DynamicFormElementTemplateLanguage;
    }

    export class ObservableCrmDynamicForms_DynamicFormElementTemplate extends $data.Entity {
        constructor();
        constructor(initData: { CategoryKey?: KnockoutObservable<Edm.String>; CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; DomainId?: KnockoutObservable<Edm.Guid>; DynamicFormElement?: KnockoutObservable<Crm.DynamicForms.Rest.Model.ObservableDynamicFormElementRest>; DynamicFormElementKey?: KnockoutObservable<Edm.Guid>; DynamicFormElementType?: KnockoutObservable<Edm.String>; Id?: KnockoutObservable<Edm.Guid>; IsActive?: KnockoutObservable<Edm.Boolean>; Languages?: KnockoutObservableArray<Crm.DynamicForms.Rest.Model.ObservableCrmDynamicForms_DynamicFormElementTemplateLanguage>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; Title?: KnockoutObservable<Edm.String> });

        CategoryKey: KnockoutObservable<Edm.String>;
        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        DomainId: KnockoutObservable<Edm.Guid>;
        DynamicFormElement: KnockoutObservable<Crm.DynamicForms.Rest.Model.ObservableDynamicFormElementRest>;
        DynamicFormElementKey: KnockoutObservable<Edm.Guid>;
        DynamicFormElementType: KnockoutObservable<Edm.String>;
        Id: KnockoutObservable<Edm.Guid>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        Languages: KnockoutObservableArray<Crm.DynamicForms.Rest.Model.ObservableCrmDynamicForms_DynamicFormElementTemplateLanguage>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        Title: KnockoutObservable<Edm.String>;
        innerInstance: CrmDynamicForms_DynamicFormElementTemplate;
    }

    export class ObservableCrmDynamicForms_DynamicFormFileResponse extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; DynamicFormReferenceKey?: KnockoutObservable<Edm.Guid>; FileResourceId?: KnockoutObservable<Edm.Guid>; Id?: KnockoutObservable<Edm.Guid>; IsActive?: KnockoutObservable<Edm.Boolean>; LanguageKey?: KnockoutObservable<Edm.String>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String> });

        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        DynamicFormReferenceKey: KnockoutObservable<Edm.Guid>;
        FileResourceId: KnockoutObservable<Edm.Guid>;
        Id: KnockoutObservable<Edm.Guid>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        LanguageKey: KnockoutObservable<Edm.String>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        innerInstance: CrmDynamicForms_DynamicFormFileResponse;
    }

    export class ObservableCrmDynamicForms_DynamicFormLanguage extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; DomainId?: KnockoutObservable<Edm.Guid>; DynamicFormKey?: KnockoutObservable<Edm.Guid>; FileResourceId?: KnockoutObservable<Edm.Guid>; Id?: KnockoutObservable<Edm.Guid>; IsActive?: KnockoutObservable<Edm.Boolean>; LanguageKey?: KnockoutObservable<Edm.String>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; StatusKey?: KnockoutObservable<Edm.String> });

        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        DomainId: KnockoutObservable<Edm.Guid>;
        DynamicFormKey: KnockoutObservable<Edm.Guid>;
        FileResourceId: KnockoutObservable<Edm.Guid>;
        Id: KnockoutObservable<Edm.Guid>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        LanguageKey: KnockoutObservable<Edm.String>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        StatusKey: KnockoutObservable<Edm.String>;
        innerInstance: CrmDynamicForms_DynamicFormLanguage;
    }

    export class ObservableCrmDynamicForms_DynamicFormRemark extends $data.Entity {
        constructor();
        constructor(initData: { ChoiceIndex?: KnockoutObservable<Edm.Int32>; CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; DynamicFormElementKey?: KnockoutObservable<Edm.Guid>; DynamicFormKey?: KnockoutObservable<Edm.Guid>; DynamicFormReferenceKey?: KnockoutObservable<Edm.Guid>; Id?: KnockoutObservable<Edm.Guid>; IsActive?: KnockoutObservable<Edm.Boolean>; MatrixLineIndex?: KnockoutObservable<Edm.Int32>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; RemarkIndex?: KnockoutObservable<Edm.Int32>; Text?: KnockoutObservable<Edm.String> });

        ChoiceIndex: KnockoutObservable<Edm.Int32>;
        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        DynamicFormElementKey: KnockoutObservable<Edm.Guid>;
        DynamicFormKey: KnockoutObservable<Edm.Guid>;
        DynamicFormReferenceKey: KnockoutObservable<Edm.Guid>;
        Id: KnockoutObservable<Edm.Guid>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        MatrixLineIndex: KnockoutObservable<Edm.Int32>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        RemarkIndex: KnockoutObservable<Edm.Int32>;
        Text: KnockoutObservable<Edm.String>;
        innerInstance: CrmDynamicForms_DynamicFormRemark;
    }

    export class ObservableCrmDynamicForms_DynamicFormResponseFileResourceRelationship extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; DynamicFormResponseKey?: KnockoutObservable<Edm.Guid>; FileResourceKey?: KnockoutObservable<Edm.Guid>; Id?: KnockoutObservable<Edm.Guid>; IsActive?: KnockoutObservable<Edm.Boolean>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String> });

        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        DynamicFormResponseKey: KnockoutObservable<Edm.Guid>;
        FileResourceKey: KnockoutObservable<Edm.Guid>;
        Id: KnockoutObservable<Edm.Guid>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        innerInstance: CrmDynamicForms_DynamicFormResponseFileResourceRelationship;
    }

    export class ObservableCrmDynamicForms_DynamicFormResponse extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; DynamicFormElementKey?: KnockoutObservable<Edm.Guid>; DynamicFormElementType?: KnockoutObservable<Edm.String>; DynamicFormKey?: KnockoutObservable<Edm.Guid>; DynamicFormReferenceKey?: KnockoutObservable<Edm.Guid>; FileRelationships?: KnockoutObservableArray<Crm.DynamicForms.Rest.Model.ObservableCrmDynamicForms_DynamicFormResponseFileResourceRelationship>; Id?: KnockoutObservable<Edm.Guid>; IsActive?: KnockoutObservable<Edm.Boolean>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; Value?: KnockoutObservable<Edm.String>; ValueAsNumber?: KnockoutObservable<Edm.Decimal> });

        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        DynamicFormElementKey: KnockoutObservable<Edm.Guid>;
        DynamicFormElementType: KnockoutObservable<Edm.String>;
        DynamicFormKey: KnockoutObservable<Edm.Guid>;
        DynamicFormReferenceKey: KnockoutObservable<Edm.Guid>;
        FileRelationships: KnockoutObservableArray<Crm.DynamicForms.Rest.Model.ObservableCrmDynamicForms_DynamicFormResponseFileResourceRelationship>;
        Id: KnockoutObservable<Edm.Guid>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        Value: KnockoutObservable<Edm.String>;
        ValueAsNumber: KnockoutObservable<Edm.Decimal>;
        innerInstance: CrmDynamicForms_DynamicFormResponse;
    }

    export class ObservableCrmDynamicForms_DynamicFormResponseTemplate extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; DynamicFormElementKey?: KnockoutObservable<Edm.Guid>; DynamicFormElementType?: KnockoutObservable<Edm.String>; DynamicFormKey?: KnockoutObservable<Edm.Guid>; Id?: KnockoutObservable<Edm.Guid>; IsActive?: KnockoutObservable<Edm.Boolean>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; Value?: KnockoutObservable<Edm.String> });

        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        DynamicFormElementKey: KnockoutObservable<Edm.Guid>;
        DynamicFormElementType: KnockoutObservable<Edm.String>;
        DynamicFormKey: KnockoutObservable<Edm.Guid>;
        Id: KnockoutObservable<Edm.Guid>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        Value: KnockoutObservable<Edm.String>;
        innerInstance: CrmDynamicForms_DynamicFormResponseTemplate;
    }

    export class ObservableCrmDynamicForms_DynamicForm extends $data.Entity {
        constructor();
        constructor(initData: { CategoryKey?: KnockoutObservable<Edm.String>; CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; DefaultLanguageKey?: KnockoutObservable<Edm.String>; DomainId?: KnockoutObservable<Edm.Guid>; Elements?: KnockoutObservableArray<Crm.DynamicForms.Rest.Model.ObservableDynamicFormElementRest>; ExtensionValues?: KnockoutObservable<Default.ObservableCrmDynamicForms_DynamicForm_ExtensionValues>; HideEmptyOptional?: KnockoutObservable<Edm.Boolean>; Id?: KnockoutObservable<Edm.Guid>; IsActive?: KnockoutObservable<Edm.Boolean>; Languages?: KnockoutObservableArray<Crm.DynamicForms.Rest.Model.ObservableCrmDynamicForms_DynamicFormLanguage>; Localizations?: KnockoutObservableArray<Crm.DynamicForms.Rest.Model.Lookups.ObservableCrmDynamicForms_DynamicFormLocalization>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String> });

        CategoryKey: KnockoutObservable<Edm.String>;
        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        DefaultLanguageKey: KnockoutObservable<Edm.String>;
        DomainId: KnockoutObservable<Edm.Guid>;
        Elements: KnockoutObservableArray<Crm.DynamicForms.Rest.Model.ObservableDynamicFormElementRest>;
        ExtensionValues: KnockoutObservable<Default.ObservableCrmDynamicForms_DynamicForm_ExtensionValues>;
        HideEmptyOptional: KnockoutObservable<Edm.Boolean>;
        Id: KnockoutObservable<Edm.Guid>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        Languages: KnockoutObservableArray<Crm.DynamicForms.Rest.Model.ObservableCrmDynamicForms_DynamicFormLanguage>;
        Localizations: KnockoutObservableArray<Crm.DynamicForms.Rest.Model.Lookups.ObservableCrmDynamicForms_DynamicFormLocalization>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        innerInstance: CrmDynamicForms_DynamicForm;
    }

    export class CrmDynamicForms_Time extends Crm.DynamicForms.Rest.Model.DynamicFormElementRest {
        constructor();
        constructor(initData: { DefaultResponseValue?: Edm.String; Required?: Edm.Boolean });

        DefaultResponseValue: Edm.String;
        Required: Edm.Boolean;
    }

    export class CrmDynamicForms_SingleLineText extends Crm.DynamicForms.Rest.Model.DynamicFormElementRest {
        constructor();
        constructor(initData: { DefaultResponseValue?: Edm.String; MaxLength?: Edm.Int32; MinLength?: Edm.Int32; Required?: Edm.Boolean; RowSize?: Edm.Int32 });

        DefaultResponseValue: Edm.String;
        MaxLength: Edm.Int32;
        MinLength: Edm.Int32;
        Required: Edm.Boolean;
        RowSize: Edm.Int32;
    }

    export class CrmDynamicForms_SignaturePad extends Crm.DynamicForms.Rest.Model.DynamicFormElementRest {
        constructor();
        constructor(initData: { DefaultResponseValue?: Edm.String; Required?: Edm.Boolean; ShowPrivacyPolicy?: Edm.Boolean; ShowReasonSelection?: Edm.Boolean });

        DefaultResponseValue: Edm.String;
        Required: Edm.Boolean;
        ShowPrivacyPolicy: Edm.Boolean;
        ShowReasonSelection: Edm.Boolean;
    }

    export class CrmDynamicForms_SectionSeparator extends Crm.DynamicForms.Rest.Model.DynamicFormElementRest {
        constructor();
        constructor(initData: {  });

    }

    export class CrmDynamicForms_RadioButtonList extends Crm.DynamicForms.Rest.Model.DynamicFormElementRest {
        constructor();
        constructor(initData: { Choices?: Edm.Int32; DefaultResponseValue?: Edm.String; HideNotApplicable?: Edm.Boolean; Layout?: Edm.Int32; Randomized?: Edm.Boolean; Required?: Edm.Boolean; UseFixedChoices?: Edm.Boolean });

        Choices: Edm.Int32;
        DefaultResponseValue: Edm.String;
        HideNotApplicable: Edm.Boolean;
        Layout: Edm.Int32;
        Randomized: Edm.Boolean;
        Required: Edm.Boolean;
        UseFixedChoices: Edm.Boolean;
    }

    export class CrmDynamicForms_PageSeparator extends Crm.DynamicForms.Rest.Model.DynamicFormElementRest {
        constructor();
        constructor(initData: {  });

    }

    export class CrmDynamicForms_Number extends Crm.DynamicForms.Rest.Model.DynamicFormElementRest {
        constructor();
        constructor(initData: { DefaultResponseValue?: Edm.String; MaxValue?: Edm.Decimal; MinValue?: Edm.Decimal; Required?: Edm.Boolean; RowSize?: Edm.Int32; Step?: Edm.Decimal });

        DefaultResponseValue: Edm.String;
        MaxValue: Edm.Decimal;
        MinValue: Edm.Decimal;
        Required: Edm.Boolean;
        RowSize: Edm.Int32;
        Step: Edm.Decimal;
    }

    export class CrmDynamicForms_MultiLineText extends Crm.DynamicForms.Rest.Model.DynamicFormElementRest {
        constructor();
        constructor(initData: { DefaultResponseValue?: Edm.String; MaxLength?: Edm.Int32; MinLength?: Edm.Int32; Required?: Edm.Boolean; RowSize?: Edm.Int32 });

        DefaultResponseValue: Edm.String;
        MaxLength: Edm.Int32;
        MinLength: Edm.Int32;
        Required: Edm.Boolean;
        RowSize: Edm.Int32;
    }

    export class CrmDynamicForms_MatrixQuestion extends Crm.DynamicForms.Rest.Model.DynamicFormElementRest {
        constructor();
        constructor(initData: { Choices?: Edm.Int32; DefaultResponseValue?: Edm.String; Layout?: Edm.Int32; MaxChoices?: Edm.Int32; MinChoices?: Edm.Int32; Randomized?: Edm.Boolean; RemarksEnabled?: Edm.Boolean; Required?: Edm.Boolean });

        Choices: Edm.Int32;
        DefaultResponseValue: Edm.String;
        Layout: Edm.Int32;
        MaxChoices: Edm.Int32;
        MinChoices: Edm.Int32;
        Randomized: Edm.Boolean;
        RemarksEnabled: Edm.Boolean;
        Required: Edm.Boolean;
    }

    export class CrmDynamicForms_Literal extends Crm.DynamicForms.Rest.Model.DynamicFormElementRest {
        constructor();
        constructor(initData: {  });

    }

    export class CrmDynamicForms_Image extends Crm.DynamicForms.Rest.Model.DynamicFormElementRest {
        constructor();
        constructor(initData: { FileResourceId?: Edm.Guid });

        FileResourceId: Edm.Guid;
    }

    export class CrmDynamicForms_FileAttachmentDynamicFormElement extends Crm.DynamicForms.Rest.Model.DynamicFormElementRest {
        constructor();
        constructor(initData: { DefaultResponseValue?: Edm.String; MaxFileSize?: Edm.Int32; MaxImageHeight?: Edm.Int32; MaxImageWidth?: Edm.Int32; MaxUploadCount?: Edm.Int32; MinUploadCount?: Edm.Int32; Required?: Edm.Boolean });

        DefaultResponseValue: Edm.String;
        MaxFileSize: Edm.Int32;
        MaxImageHeight: Edm.Int32;
        MaxImageWidth: Edm.Int32;
        MaxUploadCount: Edm.Int32;
        MinUploadCount: Edm.Int32;
        Required: Edm.Boolean;
    }

    export class CrmDynamicForms_DropDown extends Crm.DynamicForms.Rest.Model.DynamicFormElementRest {
        constructor();
        constructor(initData: { Choices?: Edm.Int32; DefaultResponseValue?: Edm.String; Randomized?: Edm.Boolean; Required?: Edm.Boolean; RowSize?: Edm.Int32 });

        Choices: Edm.Int32;
        DefaultResponseValue: Edm.String;
        Randomized: Edm.Boolean;
        Required: Edm.Boolean;
        RowSize: Edm.Int32;
    }

    export class CrmDynamicForms_Date extends Crm.DynamicForms.Rest.Model.DynamicFormElementRest {
        constructor();
        constructor(initData: { DefaultResponseValue?: Edm.String; Required?: Edm.Boolean });

        DefaultResponseValue: Edm.String;
        Required: Edm.Boolean;
    }

    export class CrmDynamicForms_CheckBoxList extends Crm.DynamicForms.Rest.Model.DynamicFormElementRest {
        constructor();
        constructor(initData: { Choices?: Edm.Int32; DefaultResponseValue?: Edm.String; Layout?: Edm.Int32; MaxChoices?: Edm.Int32; MinChoices?: Edm.Int32; Randomized?: Edm.Boolean; Required?: Edm.Boolean });

        Choices: Edm.Int32;
        DefaultResponseValue: Edm.String;
        Layout: Edm.Int32;
        MaxChoices: Edm.Int32;
        MinChoices: Edm.Int32;
        Randomized: Edm.Boolean;
        Required: Edm.Boolean;
    }

    export class DynamicFormElementRest extends $data.Entity {
        constructor();
        constructor(initData: { AddResponseTemplate?: Edm.Boolean; CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; CssExtra?: Edm.String; DynamicFormElementTemplateKey?: Edm.Guid; DynamicFormKey?: Edm.Guid; ExtensionValues?: Default.CrmDynamicForms_DynamicFormElement_ExtensionValues; FormElementType?: Edm.String; Id?: Edm.Guid; IsActive?: Edm.Boolean; IsTemplate?: Edm.Boolean; LegacyId?: Edm.String; Localizations?: Crm.DynamicForms.Rest.Model.Lookups.CrmDynamicForms_DynamicFormLocalization[]; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; Rules?: Crm.DynamicForms.Rest.Model.CrmDynamicForms_DynamicFormElementRule[]; Size?: Edm.Int32; SortOrder?: Edm.Int32 });

        AddResponseTemplate: Edm.Boolean;
        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        CssExtra: Edm.String;
        DynamicFormElementTemplateKey: Edm.Guid;
        DynamicFormKey: Edm.Guid;
        ExtensionValues: Default.CrmDynamicForms_DynamicFormElement_ExtensionValues;
        FormElementType: Edm.String;
        Id: Edm.Guid;
        IsActive: Edm.Boolean;
        IsTemplate: Edm.Boolean;
        LegacyId: Edm.String;
        Localizations: Crm.DynamicForms.Rest.Model.Lookups.CrmDynamicForms_DynamicFormLocalization[];
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        Rules: Crm.DynamicForms.Rest.Model.CrmDynamicForms_DynamicFormElementRule[];
        Size: Edm.Int32;
        SortOrder: Edm.Int32;
        asKoObservable(): ObservableDynamicFormElementRest;
        static create(): DynamicFormElementRest;
        static create(initData:any): DynamicFormElementRest;
    }

    export class CrmDynamicForms_DynamicFormElementRuleCondition extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; DynamicFormElementId?: Edm.Guid; DynamicFormElementRuleId?: Edm.Guid; Filter?: Edm.String; Id?: Edm.Guid; IsActive?: Edm.Boolean; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; Value?: Edm.String });

        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        DynamicFormElementId: Edm.Guid;
        DynamicFormElementRuleId: Edm.Guid;
        Filter: Edm.String;
        Id: Edm.Guid;
        IsActive: Edm.Boolean;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        Value: Edm.String;
        asKoObservable(): ObservableCrmDynamicForms_DynamicFormElementRuleCondition;
        static create(): CrmDynamicForms_DynamicFormElementRuleCondition;
        static create(initData:any): CrmDynamicForms_DynamicFormElementRuleCondition;
    }

    export class CrmDynamicForms_DynamicFormElementRule extends $data.Entity {
        constructor();
        constructor(initData: { Conditions?: Crm.DynamicForms.Rest.Model.CrmDynamicForms_DynamicFormElementRuleCondition[]; CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; DynamicFormElementId?: Edm.Guid; DynamicFormId?: Edm.Guid; Id?: Edm.Guid; IsActive?: Edm.Boolean; MatchType?: Edm.String; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; Type?: Edm.String });

        Conditions: Crm.DynamicForms.Rest.Model.CrmDynamicForms_DynamicFormElementRuleCondition[];
        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        DynamicFormElementId: Edm.Guid;
        DynamicFormId: Edm.Guid;
        Id: Edm.Guid;
        IsActive: Edm.Boolean;
        MatchType: Edm.String;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        Type: Edm.String;
        asKoObservable(): ObservableCrmDynamicForms_DynamicFormElementRule;
        static create(): CrmDynamicForms_DynamicFormElementRule;
        static create(initData:any): CrmDynamicForms_DynamicFormElementRule;
    }

    export class CrmDynamicForms_DynamicFormElementTemplateLanguage extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; DomainId?: Edm.Guid; DynamicFormElementTemplate?: Crm.DynamicForms.Rest.Model.CrmDynamicForms_DynamicFormElementTemplate; DynamicFormElementTemplateKey?: Edm.Guid; Id?: Edm.Guid; IsActive?: Edm.Boolean; LanguageKey?: Edm.String; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String });

        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        DomainId: Edm.Guid;
        DynamicFormElementTemplate: Crm.DynamicForms.Rest.Model.CrmDynamicForms_DynamicFormElementTemplate;
        DynamicFormElementTemplateKey: Edm.Guid;
        Id: Edm.Guid;
        IsActive: Edm.Boolean;
        LanguageKey: Edm.String;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        asKoObservable(): ObservableCrmDynamicForms_DynamicFormElementTemplateLanguage;
        static create(): CrmDynamicForms_DynamicFormElementTemplateLanguage;
        static create(initData:any): CrmDynamicForms_DynamicFormElementTemplateLanguage;
    }

    export class CrmDynamicForms_DynamicFormElementTemplate extends $data.Entity {
        constructor();
        constructor(initData: { CategoryKey?: Edm.String; CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; DomainId?: Edm.Guid; DynamicFormElement?: Crm.DynamicForms.Rest.Model.DynamicFormElementRest; DynamicFormElementKey?: Edm.Guid; DynamicFormElementType?: Edm.String; Id?: Edm.Guid; IsActive?: Edm.Boolean; Languages?: Crm.DynamicForms.Rest.Model.CrmDynamicForms_DynamicFormElementTemplateLanguage[]; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; Title?: Edm.String });

        CategoryKey: Edm.String;
        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        DomainId: Edm.Guid;
        DynamicFormElement: Crm.DynamicForms.Rest.Model.DynamicFormElementRest;
        DynamicFormElementKey: Edm.Guid;
        DynamicFormElementType: Edm.String;
        Id: Edm.Guid;
        IsActive: Edm.Boolean;
        Languages: Crm.DynamicForms.Rest.Model.CrmDynamicForms_DynamicFormElementTemplateLanguage[];
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        Title: Edm.String;
        asKoObservable(): ObservableCrmDynamicForms_DynamicFormElementTemplate;
        static create(): CrmDynamicForms_DynamicFormElementTemplate;
        static create(initData:any): CrmDynamicForms_DynamicFormElementTemplate;
    }

    export class CrmDynamicForms_DynamicFormFileResponse extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; DynamicFormReferenceKey?: Edm.Guid; FileResourceId?: Edm.Guid; Id?: Edm.Guid; IsActive?: Edm.Boolean; LanguageKey?: Edm.String; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String });

        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        DynamicFormReferenceKey: Edm.Guid;
        FileResourceId: Edm.Guid;
        Id: Edm.Guid;
        IsActive: Edm.Boolean;
        LanguageKey: Edm.String;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        asKoObservable(): ObservableCrmDynamicForms_DynamicFormFileResponse;
        static create(): CrmDynamicForms_DynamicFormFileResponse;
        static create(initData:any): CrmDynamicForms_DynamicFormFileResponse;
    }

    export class CrmDynamicForms_DynamicFormLanguage extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; DomainId?: Edm.Guid; DynamicFormKey?: Edm.Guid; FileResourceId?: Edm.Guid; Id?: Edm.Guid; IsActive?: Edm.Boolean; LanguageKey?: Edm.String; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; StatusKey?: Edm.String });

        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        DomainId: Edm.Guid;
        DynamicFormKey: Edm.Guid;
        FileResourceId: Edm.Guid;
        Id: Edm.Guid;
        IsActive: Edm.Boolean;
        LanguageKey: Edm.String;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        StatusKey: Edm.String;
        asKoObservable(): ObservableCrmDynamicForms_DynamicFormLanguage;
        static create(): CrmDynamicForms_DynamicFormLanguage;
        static create(initData:any): CrmDynamicForms_DynamicFormLanguage;
    }

    export class CrmDynamicForms_DynamicFormRemark extends $data.Entity {
        constructor();
        constructor(initData: { ChoiceIndex?: Edm.Int32; CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; DynamicFormElementKey?: Edm.Guid; DynamicFormKey?: Edm.Guid; DynamicFormReferenceKey?: Edm.Guid; Id?: Edm.Guid; IsActive?: Edm.Boolean; MatrixLineIndex?: Edm.Int32; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; RemarkIndex?: Edm.Int32; Text?: Edm.String });

        ChoiceIndex: Edm.Int32;
        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        DynamicFormElementKey: Edm.Guid;
        DynamicFormKey: Edm.Guid;
        DynamicFormReferenceKey: Edm.Guid;
        Id: Edm.Guid;
        IsActive: Edm.Boolean;
        MatrixLineIndex: Edm.Int32;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        RemarkIndex: Edm.Int32;
        Text: Edm.String;
        asKoObservable(): ObservableCrmDynamicForms_DynamicFormRemark;
        static create(): CrmDynamicForms_DynamicFormRemark;
        static create(initData:any): CrmDynamicForms_DynamicFormRemark;
    }

    export class CrmDynamicForms_DynamicFormResponseFileResourceRelationship extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; DynamicFormResponseKey?: Edm.Guid; FileResourceKey?: Edm.Guid; Id?: Edm.Guid; IsActive?: Edm.Boolean; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String });

        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        DynamicFormResponseKey: Edm.Guid;
        FileResourceKey: Edm.Guid;
        Id: Edm.Guid;
        IsActive: Edm.Boolean;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        asKoObservable(): ObservableCrmDynamicForms_DynamicFormResponseFileResourceRelationship;
        static create(): CrmDynamicForms_DynamicFormResponseFileResourceRelationship;
        static create(initData:any): CrmDynamicForms_DynamicFormResponseFileResourceRelationship;
    }

    export class CrmDynamicForms_DynamicFormResponse extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; DynamicFormElementKey?: Edm.Guid; DynamicFormElementType?: Edm.String; DynamicFormKey?: Edm.Guid; DynamicFormReferenceKey?: Edm.Guid; FileRelationships?: Crm.DynamicForms.Rest.Model.CrmDynamicForms_DynamicFormResponseFileResourceRelationship[]; Id?: Edm.Guid; IsActive?: Edm.Boolean; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; Value?: Edm.String; ValueAsNumber?: Edm.Decimal });

        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        DynamicFormElementKey: Edm.Guid;
        DynamicFormElementType: Edm.String;
        DynamicFormKey: Edm.Guid;
        DynamicFormReferenceKey: Edm.Guid;
        FileRelationships: Crm.DynamicForms.Rest.Model.CrmDynamicForms_DynamicFormResponseFileResourceRelationship[];
        Id: Edm.Guid;
        IsActive: Edm.Boolean;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        Value: Edm.String;
        ValueAsNumber: Edm.Decimal;
        asKoObservable(): ObservableCrmDynamicForms_DynamicFormResponse;
        static create(): CrmDynamicForms_DynamicFormResponse;
        static create(initData:any): CrmDynamicForms_DynamicFormResponse;
    }

    export class CrmDynamicForms_DynamicFormResponseTemplate extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; DynamicFormElementKey?: Edm.Guid; DynamicFormElementType?: Edm.String; DynamicFormKey?: Edm.Guid; Id?: Edm.Guid; IsActive?: Edm.Boolean; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; Value?: Edm.String });

        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        DynamicFormElementKey: Edm.Guid;
        DynamicFormElementType: Edm.String;
        DynamicFormKey: Edm.Guid;
        Id: Edm.Guid;
        IsActive: Edm.Boolean;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        Value: Edm.String;
        asKoObservable(): ObservableCrmDynamicForms_DynamicFormResponseTemplate;
        static create(): CrmDynamicForms_DynamicFormResponseTemplate;
        static create(initData:any): CrmDynamicForms_DynamicFormResponseTemplate;
    }

    export class CrmDynamicForms_DynamicForm extends $data.Entity {
        constructor();
        constructor(initData: { CategoryKey?: Edm.String; CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; DefaultLanguageKey?: Edm.String; DomainId?: Edm.Guid; Elements?: Crm.DynamicForms.Rest.Model.DynamicFormElementRest[]; ExtensionValues?: Default.CrmDynamicForms_DynamicForm_ExtensionValues; HideEmptyOptional?: Edm.Boolean; Id?: Edm.Guid; IsActive?: Edm.Boolean; Languages?: Crm.DynamicForms.Rest.Model.CrmDynamicForms_DynamicFormLanguage[]; Localizations?: Crm.DynamicForms.Rest.Model.Lookups.CrmDynamicForms_DynamicFormLocalization[]; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String });

        CategoryKey: Edm.String;
        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        DefaultLanguageKey: Edm.String;
        DomainId: Edm.Guid;
        Elements: Crm.DynamicForms.Rest.Model.DynamicFormElementRest[];
        ExtensionValues: Default.CrmDynamicForms_DynamicForm_ExtensionValues;
        HideEmptyOptional: Edm.Boolean;
        Id: Edm.Guid;
        IsActive: Edm.Boolean;
        Languages: Crm.DynamicForms.Rest.Model.CrmDynamicForms_DynamicFormLanguage[];
        Localizations: Crm.DynamicForms.Rest.Model.Lookups.CrmDynamicForms_DynamicFormLocalization[];
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        asKoObservable(): ObservableCrmDynamicForms_DynamicForm;
        static create(): CrmDynamicForms_DynamicForm;
        static create(initData:any): CrmDynamicForms_DynamicForm;
    }

}

namespace Crm.DynamicForms.Rest.Model.Lookups {

    export class ObservableCrmDynamicForms_DynamicFormCategory extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; DomainId?: KnockoutObservable<Edm.Guid>; Favorite?: KnockoutObservable<Edm.Boolean>; Id?: KnockoutObservable<Edm.Guid>; IsActive?: KnockoutObservable<Edm.Boolean>; Key?: KnockoutObservable<Edm.String>; Language?: KnockoutObservable<Edm.String>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; SortOrder?: KnockoutObservable<Edm.Int32>; Value?: KnockoutObservable<Edm.String> });

        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        DomainId: KnockoutObservable<Edm.Guid>;
        Favorite: KnockoutObservable<Edm.Boolean>;
        Id: KnockoutObservable<Edm.Guid>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        Key: KnockoutObservable<Edm.String>;
        Language: KnockoutObservable<Edm.String>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        SortOrder: KnockoutObservable<Edm.Int32>;
        Value: KnockoutObservable<Edm.String>;
        innerInstance: CrmDynamicForms_DynamicFormCategory;
    }

    export class ObservableCrmDynamicForms_DynamicFormStatus extends $data.Entity {
        constructor();
        constructor(initData: { Color?: KnockoutObservable<Edm.String>; CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; DomainId?: KnockoutObservable<Edm.Guid>; Favorite?: KnockoutObservable<Edm.Boolean>; Id?: KnockoutObservable<Edm.Guid>; IsActive?: KnockoutObservable<Edm.Boolean>; Key?: KnockoutObservable<Edm.String>; Language?: KnockoutObservable<Edm.String>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; SortOrder?: KnockoutObservable<Edm.Int32>; Value?: KnockoutObservable<Edm.String> });

        Color: KnockoutObservable<Edm.String>;
        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        DomainId: KnockoutObservable<Edm.Guid>;
        Favorite: KnockoutObservable<Edm.Boolean>;
        Id: KnockoutObservable<Edm.Guid>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        Key: KnockoutObservable<Edm.String>;
        Language: KnockoutObservable<Edm.String>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        SortOrder: KnockoutObservable<Edm.Int32>;
        Value: KnockoutObservable<Edm.String>;
        innerInstance: CrmDynamicForms_DynamicFormStatus;
    }

    export class ObservableCrmDynamicForms_DynamicFormLocalization extends $data.Entity {
        constructor();
        constructor(initData: { ChoiceIndex?: KnockoutObservable<Edm.Int32>; CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; DynamicFormElementId?: KnockoutObservable<Edm.Guid>; DynamicFormId?: KnockoutObservable<Edm.Guid>; Favorite?: KnockoutObservable<Edm.Boolean>; Hint?: KnockoutObservable<Edm.String>; Id?: KnockoutObservable<Edm.Guid>; IsActive?: KnockoutObservable<Edm.Boolean>; IsMatrixQuestion?: KnockoutObservable<Edm.Boolean>; Language?: KnockoutObservable<Edm.String>; MatrixQuestionIsSingleChoice?: KnockoutObservable<Edm.Boolean>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; SortOrder?: KnockoutObservable<Edm.Int32>; Value?: KnockoutObservable<Edm.String> });

        ChoiceIndex: KnockoutObservable<Edm.Int32>;
        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        DynamicFormElementId: KnockoutObservable<Edm.Guid>;
        DynamicFormId: KnockoutObservable<Edm.Guid>;
        Favorite: KnockoutObservable<Edm.Boolean>;
        Hint: KnockoutObservable<Edm.String>;
        Id: KnockoutObservable<Edm.Guid>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        IsMatrixQuestion: KnockoutObservable<Edm.Boolean>;
        Language: KnockoutObservable<Edm.String>;
        MatrixQuestionIsSingleChoice: KnockoutObservable<Edm.Boolean>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        SortOrder: KnockoutObservable<Edm.Int32>;
        Value: KnockoutObservable<Edm.String>;
        innerInstance: CrmDynamicForms_DynamicFormLocalization;
    }

    export class CrmDynamicForms_DynamicFormCategory extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; DomainId?: Edm.Guid; Favorite?: Edm.Boolean; Id?: Edm.Guid; IsActive?: Edm.Boolean; Key?: Edm.String; Language?: Edm.String; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; SortOrder?: Edm.Int32; Value?: Edm.String });

        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        DomainId: Edm.Guid;
        Favorite: Edm.Boolean;
        Id: Edm.Guid;
        IsActive: Edm.Boolean;
        Key: Edm.String;
        Language: Edm.String;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        SortOrder: Edm.Int32;
        Value: Edm.String;
        asKoObservable(): ObservableCrmDynamicForms_DynamicFormCategory;
        static create(): CrmDynamicForms_DynamicFormCategory;
        static create(initData:any): CrmDynamicForms_DynamicFormCategory;
    }

    export class CrmDynamicForms_DynamicFormStatus extends $data.Entity {
        constructor();
        constructor(initData: { Color?: Edm.String; CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; DomainId?: Edm.Guid; Favorite?: Edm.Boolean; Id?: Edm.Guid; IsActive?: Edm.Boolean; Key?: Edm.String; Language?: Edm.String; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; SortOrder?: Edm.Int32; Value?: Edm.String });

        Color: Edm.String;
        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        DomainId: Edm.Guid;
        Favorite: Edm.Boolean;
        Id: Edm.Guid;
        IsActive: Edm.Boolean;
        Key: Edm.String;
        Language: Edm.String;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        SortOrder: Edm.Int32;
        Value: Edm.String;
        asKoObservable(): ObservableCrmDynamicForms_DynamicFormStatus;
        static create(): CrmDynamicForms_DynamicFormStatus;
        static create(initData:any): CrmDynamicForms_DynamicFormStatus;
    }

    export class CrmDynamicForms_DynamicFormLocalization extends $data.Entity {
        constructor();
        constructor(initData: { ChoiceIndex?: Edm.Int32; CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; DynamicFormElementId?: Edm.Guid; DynamicFormId?: Edm.Guid; Favorite?: Edm.Boolean; Hint?: Edm.String; Id?: Edm.Guid; IsActive?: Edm.Boolean; IsMatrixQuestion?: Edm.Boolean; Language?: Edm.String; MatrixQuestionIsSingleChoice?: Edm.Boolean; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; SortOrder?: Edm.Int32; Value?: Edm.String });

        ChoiceIndex: Edm.Int32;
        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        DynamicFormElementId: Edm.Guid;
        DynamicFormId: Edm.Guid;
        Favorite: Edm.Boolean;
        Hint: Edm.String;
        Id: Edm.Guid;
        IsActive: Edm.Boolean;
        IsMatrixQuestion: Edm.Boolean;
        Language: Edm.String;
        MatrixQuestionIsSingleChoice: Edm.Boolean;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        SortOrder: Edm.Int32;
        Value: Edm.String;
        asKoObservable(): ObservableCrmDynamicForms_DynamicFormLocalization;
        static create(): CrmDynamicForms_DynamicFormLocalization;
        static create(initData:any): CrmDynamicForms_DynamicFormLocalization;
    }

}

namespace Crm.Rest.Model {

    export class ObservableCrm_Address extends $data.Entity {
        constructor();
        constructor(initData: { AddressTypeKey?: KnockoutObservable<Edm.String>; City?: KnockoutObservable<Edm.String>; CompanyId?: KnockoutObservable<Edm.Guid>; CountryKey?: KnockoutObservable<Edm.String>; CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; DomainId?: KnockoutObservable<Edm.Guid>; Emails?: KnockoutObservableArray<Crm.Rest.Model.ObservableCrm_Email>; Faxes?: KnockoutObservableArray<Crm.Rest.Model.ObservableCrm_Fax>; Id?: KnockoutObservable<Edm.Guid>; IsActive?: KnockoutObservable<Edm.Boolean>; IsCompanyStandardAddress?: KnockoutObservable<Edm.Boolean>; IsGeocoded?: KnockoutObservable<Edm.Boolean>; Latitude?: KnockoutObservable<Edm.Double>; LegacyId?: KnockoutObservable<Edm.String>; Longitude?: KnockoutObservable<Edm.Double>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; Name1?: KnockoutObservable<Edm.String>; Name2?: KnockoutObservable<Edm.String>; Name3?: KnockoutObservable<Edm.String>; POBox?: KnockoutObservable<Edm.String>; Phones?: KnockoutObservableArray<Crm.Rest.Model.ObservableCrm_Phone>; RegionKey?: KnockoutObservable<Edm.String>; Street?: KnockoutObservable<Edm.String>; Websites?: KnockoutObservableArray<Crm.Rest.Model.ObservableCrm_Website>; ZipCode?: KnockoutObservable<Edm.String>; ZipCodePOBox?: KnockoutObservable<Edm.String> });

        AddressTypeKey: KnockoutObservable<Edm.String>;
        City: KnockoutObservable<Edm.String>;
        CompanyId: KnockoutObservable<Edm.Guid>;
        CountryKey: KnockoutObservable<Edm.String>;
        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        DomainId: KnockoutObservable<Edm.Guid>;
        Emails: KnockoutObservableArray<Crm.Rest.Model.ObservableCrm_Email>;
        Faxes: KnockoutObservableArray<Crm.Rest.Model.ObservableCrm_Fax>;
        Id: KnockoutObservable<Edm.Guid>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        IsCompanyStandardAddress: KnockoutObservable<Edm.Boolean>;
        IsGeocoded: KnockoutObservable<Edm.Boolean>;
        Latitude: KnockoutObservable<Edm.Double>;
        LegacyId: KnockoutObservable<Edm.String>;
        Longitude: KnockoutObservable<Edm.Double>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        Name1: KnockoutObservable<Edm.String>;
        Name2: KnockoutObservable<Edm.String>;
        Name3: KnockoutObservable<Edm.String>;
        POBox: KnockoutObservable<Edm.String>;
        Phones: KnockoutObservableArray<Crm.Rest.Model.ObservableCrm_Phone>;
        RegionKey: KnockoutObservable<Edm.String>;
        Street: KnockoutObservable<Edm.String>;
        Websites: KnockoutObservableArray<Crm.Rest.Model.ObservableCrm_Website>;
        ZipCode: KnockoutObservable<Edm.String>;
        ZipCodePOBox: KnockoutObservable<Edm.String>;
        innerInstance: Crm_Address;
    }

    export class ObservableCrm_Bravo extends $data.Entity {
        constructor();
        constructor(initData: { CategoryKey?: KnockoutObservable<Edm.String>; ContactId?: KnockoutObservable<Edm.Guid>; CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; DomainId?: KnockoutObservable<Edm.Guid>; FinishedByUser?: KnockoutObservable<Edm.String>; Id?: KnockoutObservable<Edm.Guid>; IsActive?: KnockoutObservable<Edm.Boolean>; IsEnabled?: KnockoutObservable<Edm.Boolean>; IsOnlyVisibleForCreateUser?: KnockoutObservable<Edm.Boolean>; Issue?: KnockoutObservable<Edm.String>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String> });

        CategoryKey: KnockoutObservable<Edm.String>;
        ContactId: KnockoutObservable<Edm.Guid>;
        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        DomainId: KnockoutObservable<Edm.Guid>;
        FinishedByUser: KnockoutObservable<Edm.String>;
        Id: KnockoutObservable<Edm.Guid>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        IsEnabled: KnockoutObservable<Edm.Boolean>;
        IsOnlyVisibleForCreateUser: KnockoutObservable<Edm.Boolean>;
        Issue: KnockoutObservable<Edm.String>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        innerInstance: Crm_Bravo;
    }

    export class ObservableCrm_BusinessRelationship extends $data.Entity {
        constructor();
        constructor(initData: { Child?: KnockoutObservable<Crm.Rest.Model.ObservableCrm_Company>; ChildId?: KnockoutObservable<Edm.Guid>; CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; DomainId?: KnockoutObservable<Edm.Guid>; Id?: KnockoutObservable<Edm.Guid>; Information?: KnockoutObservable<Edm.String>; IsActive?: KnockoutObservable<Edm.Boolean>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; ParentId?: KnockoutObservable<Edm.Guid>; RelationshipTypeKey?: KnockoutObservable<Edm.String> });

        Child: KnockoutObservable<Crm.Rest.Model.ObservableCrm_Company>;
        ChildId: KnockoutObservable<Edm.Guid>;
        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        DomainId: KnockoutObservable<Edm.Guid>;
        Id: KnockoutObservable<Edm.Guid>;
        Information: KnockoutObservable<Edm.String>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        ParentId: KnockoutObservable<Edm.Guid>;
        RelationshipTypeKey: KnockoutObservable<Edm.String>;
        innerInstance: Crm_BusinessRelationship;
    }

    export class ObservableCrm_CompanyBranch extends $data.Entity {
        constructor();
        constructor(initData: { Branch1Key?: KnockoutObservable<Edm.String>; Branch2Key?: KnockoutObservable<Edm.String>; Branch3Key?: KnockoutObservable<Edm.String>; Branch4Key?: KnockoutObservable<Edm.String>; CompanyKey?: KnockoutObservable<Edm.Guid>; CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; DomainId?: KnockoutObservable<Edm.Guid>; Id?: KnockoutObservable<Edm.Guid>; IsActive?: KnockoutObservable<Edm.Boolean>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String> });

        Branch1Key: KnockoutObservable<Edm.String>;
        Branch2Key: KnockoutObservable<Edm.String>;
        Branch3Key: KnockoutObservable<Edm.String>;
        Branch4Key: KnockoutObservable<Edm.String>;
        CompanyKey: KnockoutObservable<Edm.Guid>;
        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        DomainId: KnockoutObservable<Edm.Guid>;
        Id: KnockoutObservable<Edm.Guid>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        innerInstance: Crm_CompanyBranch;
    }

    export class ObservableCrm_CompanyPersonRelationship extends $data.Entity {
        constructor();
        constructor(initData: { Child?: KnockoutObservable<Crm.Rest.Model.ObservableCrm_Person>; ChildId?: KnockoutObservable<Edm.Guid>; CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; DomainId?: KnockoutObservable<Edm.Guid>; Id?: KnockoutObservable<Edm.Guid>; Information?: KnockoutObservable<Edm.String>; IsActive?: KnockoutObservable<Edm.Boolean>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; Parent?: KnockoutObservable<Crm.Rest.Model.ObservableCrm_Company>; ParentId?: KnockoutObservable<Edm.Guid>; RelationshipTypeKey?: KnockoutObservable<Edm.String> });

        Child: KnockoutObservable<Crm.Rest.Model.ObservableCrm_Person>;
        ChildId: KnockoutObservable<Edm.Guid>;
        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        DomainId: KnockoutObservable<Edm.Guid>;
        Id: KnockoutObservable<Edm.Guid>;
        Information: KnockoutObservable<Edm.String>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        Parent: KnockoutObservable<Crm.Rest.Model.ObservableCrm_Company>;
        ParentId: KnockoutObservable<Edm.Guid>;
        RelationshipTypeKey: KnockoutObservable<Edm.String>;
        innerInstance: Crm_CompanyPersonRelationship;
    }

    export class ObservableCrm_Company extends $data.Entity {
        constructor();
        constructor(initData: { Addresses?: KnockoutObservableArray<Crm.Rest.Model.ObservableCrm_Address>; AreaSalesManager?: KnockoutObservable<Edm.String>; AreaSalesManagerUser?: KnockoutObservable<Main.Rest.Model.ObservableMain_User>; BackgroundInfo?: KnockoutObservable<Edm.String>; Bravos?: KnockoutObservableArray<Crm.Rest.Model.ObservableCrm_Bravo>; CampaignSource?: KnockoutObservable<Edm.Guid>; CompanyBranches?: KnockoutObservableArray<Crm.Rest.Model.ObservableCrm_CompanyBranch>; CompanyGroupFlag1Key?: KnockoutObservable<Edm.String>; CompanyGroupFlag2Key?: KnockoutObservable<Edm.String>; CompanyGroupFlag3Key?: KnockoutObservable<Edm.String>; CompanyGroupFlag4Key?: KnockoutObservable<Edm.String>; CompanyGroupFlag5Key?: KnockoutObservable<Edm.String>; CompanyNo?: KnockoutObservable<Edm.String>; CompanyTypeKey?: KnockoutObservable<Edm.String>; CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; DomainId?: KnockoutObservable<Edm.Guid>; Emails?: KnockoutObservableArray<Crm.Rest.Model.ObservableCrm_Email>; ExtensionValues?: KnockoutObservable<Default.ObservableCrm_Company_ExtensionValues>; Faxes?: KnockoutObservableArray<Crm.Rest.Model.ObservableCrm_Fax>; Id?: KnockoutObservable<Edm.Guid>; IsActive?: KnockoutObservable<Edm.Boolean>; IsEnabled?: KnockoutObservable<Edm.Boolean>; IsOwnCompany?: KnockoutObservable<Edm.Boolean>; LanguageKey?: KnockoutObservable<Edm.String>; LastActivity?: KnockoutObservable<Edm.DateTimeOffset>; LegacyId?: KnockoutObservable<Edm.String>; LegacyName?: KnockoutObservable<Edm.String>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; Name?: KnockoutObservable<Edm.String>; Notes?: KnockoutObservableArray<Crm.Rest.Model.ObservableCrm_Note>; NumberOfEmployeesKey?: KnockoutObservable<Edm.String>; ParentCompany?: KnockoutObservable<Crm.Rest.Model.ObservableCrm_Company>; ParentId?: KnockoutObservable<Edm.Guid>; ParentName?: KnockoutObservable<Edm.String>; ParentType?: KnockoutObservable<Edm.String>; Phones?: KnockoutObservableArray<Crm.Rest.Model.ObservableCrm_Phone>; ResponsibleUser?: KnockoutObservable<Edm.String>; ResponsibleUserUser?: KnockoutObservable<Main.Rest.Model.ObservableMain_User>; SalesRepresentative?: KnockoutObservable<Edm.String>; ShortText?: KnockoutObservable<Edm.String>; SourceTypeKey?: KnockoutObservable<Edm.String>; Staff?: KnockoutObservableArray<Crm.Rest.Model.ObservableCrm_Person>; StandardAddress?: KnockoutObservable<Crm.Rest.Model.ObservableCrm_Address>; StandardAddressId?: KnockoutObservable<Edm.Guid>; Station?: KnockoutObservable<Crm.Rest.Model.ObservableCrm_Station>; StationKey?: KnockoutObservable<Edm.Guid>; Subsidiaries?: KnockoutObservableArray<Crm.Rest.Model.ObservableCrm_Company>; Tags?: KnockoutObservableArray<Crm.Rest.Model.ObservableCrm_Tag>; TurnoverKey?: KnockoutObservable<Edm.String>; Visibility?: KnockoutObservable<Crm.Library.BaseModel.Visibility>; VisibleToUserIds?: KnockoutObservableArray<Edm.String>; VisibleToUsergroupIds?: KnockoutObservableArray<Edm.Guid>; Websites?: KnockoutObservableArray<Crm.Rest.Model.ObservableCrm_Website> });

        Addresses: KnockoutObservableArray<Crm.Rest.Model.ObservableCrm_Address>;
        AreaSalesManager: KnockoutObservable<Edm.String>;
        AreaSalesManagerUser: KnockoutObservable<Main.Rest.Model.ObservableMain_User>;
        BackgroundInfo: KnockoutObservable<Edm.String>;
        Bravos: KnockoutObservableArray<Crm.Rest.Model.ObservableCrm_Bravo>;
        CampaignSource: KnockoutObservable<Edm.Guid>;
        CompanyBranches: KnockoutObservableArray<Crm.Rest.Model.ObservableCrm_CompanyBranch>;
        CompanyGroupFlag1Key: KnockoutObservable<Edm.String>;
        CompanyGroupFlag2Key: KnockoutObservable<Edm.String>;
        CompanyGroupFlag3Key: KnockoutObservable<Edm.String>;
        CompanyGroupFlag4Key: KnockoutObservable<Edm.String>;
        CompanyGroupFlag5Key: KnockoutObservable<Edm.String>;
        CompanyNo: KnockoutObservable<Edm.String>;
        CompanyTypeKey: KnockoutObservable<Edm.String>;
        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        DomainId: KnockoutObservable<Edm.Guid>;
        Emails: KnockoutObservableArray<Crm.Rest.Model.ObservableCrm_Email>;
        ExtensionValues: KnockoutObservable<Default.ObservableCrm_Company_ExtensionValues>;
        Faxes: KnockoutObservableArray<Crm.Rest.Model.ObservableCrm_Fax>;
        Id: KnockoutObservable<Edm.Guid>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        IsEnabled: KnockoutObservable<Edm.Boolean>;
        IsOwnCompany: KnockoutObservable<Edm.Boolean>;
        LanguageKey: KnockoutObservable<Edm.String>;
        LastActivity: KnockoutObservable<Edm.DateTimeOffset>;
        LegacyId: KnockoutObservable<Edm.String>;
        LegacyName: KnockoutObservable<Edm.String>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        Name: KnockoutObservable<Edm.String>;
        Notes: KnockoutObservableArray<Crm.Rest.Model.ObservableCrm_Note>;
        NumberOfEmployeesKey: KnockoutObservable<Edm.String>;
        ParentCompany: KnockoutObservable<Crm.Rest.Model.ObservableCrm_Company>;
        ParentId: KnockoutObservable<Edm.Guid>;
        ParentName: KnockoutObservable<Edm.String>;
        ParentType: KnockoutObservable<Edm.String>;
        Phones: KnockoutObservableArray<Crm.Rest.Model.ObservableCrm_Phone>;
        ResponsibleUser: KnockoutObservable<Edm.String>;
        ResponsibleUserUser: KnockoutObservable<Main.Rest.Model.ObservableMain_User>;
        SalesRepresentative: KnockoutObservable<Edm.String>;
        ShortText: KnockoutObservable<Edm.String>;
        SourceTypeKey: KnockoutObservable<Edm.String>;
        Staff: KnockoutObservableArray<Crm.Rest.Model.ObservableCrm_Person>;
        StandardAddress: KnockoutObservable<Crm.Rest.Model.ObservableCrm_Address>;
        StandardAddressId: KnockoutObservable<Edm.Guid>;
        Station: KnockoutObservable<Crm.Rest.Model.ObservableCrm_Station>;
        StationKey: KnockoutObservable<Edm.Guid>;
        Subsidiaries: KnockoutObservableArray<Crm.Rest.Model.ObservableCrm_Company>;
        Tags: KnockoutObservableArray<Crm.Rest.Model.ObservableCrm_Tag>;
        TurnoverKey: KnockoutObservable<Edm.String>;
        Visibility: KnockoutObservable<Crm.Library.BaseModel.Visibility>;
        VisibleToUserIds: KnockoutObservableArray<Edm.String>;
        VisibleToUsergroupIds: KnockoutObservableArray<Edm.Guid>;
        Websites: KnockoutObservableArray<Crm.Rest.Model.ObservableCrm_Website>;
        innerInstance: Crm_Company;
    }

    export class ObservableCrm_DocumentAttribute extends $data.Entity {
        constructor();
        constructor(initData: { ContactName?: KnockoutObservable<Edm.String>; ContactType?: KnockoutObservable<Edm.String>; CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; Description?: KnockoutObservable<Edm.String>; DocumentCategoryKey?: KnockoutObservable<Edm.String>; DomainId?: KnockoutObservable<Edm.Guid>; ExtensionValues?: KnockoutObservable<Default.ObservableCrm_DocumentAttribute_ExtensionValues>; FileName?: KnockoutObservable<Edm.String>; FileResource?: KnockoutObservable<Crm.Rest.Model.ObservableCrm_FileResource>; FileResourceKey?: KnockoutObservable<Edm.Guid>; Id?: KnockoutObservable<Edm.Guid>; IsActive?: KnockoutObservable<Edm.Boolean>; Length?: KnockoutObservable<Edm.Int64>; LongText?: KnockoutObservable<Edm.String>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; OfflineRelevant?: KnockoutObservable<Edm.Boolean>; ReferenceKey?: KnockoutObservable<Edm.Guid>; UseForDisplay?: KnockoutObservable<Edm.Boolean>; UseForThumbnail?: KnockoutObservable<Edm.Boolean> });

        ContactName: KnockoutObservable<Edm.String>;
        ContactType: KnockoutObservable<Edm.String>;
        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        Description: KnockoutObservable<Edm.String>;
        DocumentCategoryKey: KnockoutObservable<Edm.String>;
        DomainId: KnockoutObservable<Edm.Guid>;
        ExtensionValues: KnockoutObservable<Default.ObservableCrm_DocumentAttribute_ExtensionValues>;
        FileName: KnockoutObservable<Edm.String>;
        FileResource: KnockoutObservable<Crm.Rest.Model.ObservableCrm_FileResource>;
        FileResourceKey: KnockoutObservable<Edm.Guid>;
        Id: KnockoutObservable<Edm.Guid>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        Length: KnockoutObservable<Edm.Int64>;
        LongText: KnockoutObservable<Edm.String>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        OfflineRelevant: KnockoutObservable<Edm.Boolean>;
        ReferenceKey: KnockoutObservable<Edm.Guid>;
        UseForDisplay: KnockoutObservable<Edm.Boolean>;
        UseForThumbnail: KnockoutObservable<Edm.Boolean>;
        innerInstance: Crm_DocumentAttribute;
    }

    export class ObservableCrm_Email extends $data.Entity {
        constructor();
        constructor(initData: { AddressId?: KnockoutObservable<Edm.Guid>; Comment?: KnockoutObservable<Edm.String>; ContactId?: KnockoutObservable<Edm.Guid>; CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; Data?: KnockoutObservable<Edm.String>; DomainId?: KnockoutObservable<Edm.Guid>; Id?: KnockoutObservable<Edm.Guid>; IsActive?: KnockoutObservable<Edm.Boolean>; LegacyId?: KnockoutObservable<Edm.String>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; TypeKey?: KnockoutObservable<Edm.String> });

        AddressId: KnockoutObservable<Edm.Guid>;
        Comment: KnockoutObservable<Edm.String>;
        ContactId: KnockoutObservable<Edm.Guid>;
        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        Data: KnockoutObservable<Edm.String>;
        DomainId: KnockoutObservable<Edm.Guid>;
        Id: KnockoutObservable<Edm.Guid>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        LegacyId: KnockoutObservable<Edm.String>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        TypeKey: KnockoutObservable<Edm.String>;
        innerInstance: Crm_Email;
    }

    export class ObservableCrm_Fax extends $data.Entity {
        constructor();
        constructor(initData: { AddressId?: KnockoutObservable<Edm.Guid>; AreaCode?: KnockoutObservable<Edm.String>; Comment?: KnockoutObservable<Edm.String>; ContactId?: KnockoutObservable<Edm.Guid>; CountryKey?: KnockoutObservable<Edm.String>; CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; Data?: KnockoutObservable<Edm.String>; DataOnlyNumbers?: KnockoutObservable<Edm.String>; DomainId?: KnockoutObservable<Edm.Guid>; Id?: KnockoutObservable<Edm.Guid>; IsActive?: KnockoutObservable<Edm.Boolean>; LegacyId?: KnockoutObservable<Edm.String>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; TypeKey?: KnockoutObservable<Edm.String> });

        AddressId: KnockoutObservable<Edm.Guid>;
        AreaCode: KnockoutObservable<Edm.String>;
        Comment: KnockoutObservable<Edm.String>;
        ContactId: KnockoutObservable<Edm.Guid>;
        CountryKey: KnockoutObservable<Edm.String>;
        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        Data: KnockoutObservable<Edm.String>;
        DataOnlyNumbers: KnockoutObservable<Edm.String>;
        DomainId: KnockoutObservable<Edm.Guid>;
        Id: KnockoutObservable<Edm.Guid>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        LegacyId: KnockoutObservable<Edm.String>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        TypeKey: KnockoutObservable<Edm.String>;
        innerInstance: Crm_Fax;
    }

    export class ObservableCrm_FileResource extends $data.Entity {
        constructor();
        constructor(initData: { Content?: KnockoutObservable<Edm.String>; ContentType?: KnockoutObservable<Edm.String>; CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; DocumentAttributes?: KnockoutObservableArray<Crm.Rest.Model.ObservableCrm_DocumentAttribute>; DomainId?: KnockoutObservable<Edm.Guid>; ExtensionValues?: KnockoutObservable<Default.ObservableCrm_FileResource_ExtensionValues>; Filename?: KnockoutObservable<Edm.String>; Id?: KnockoutObservable<Edm.Guid>; IsActive?: KnockoutObservable<Edm.Boolean>; Length?: KnockoutObservable<Edm.Int64>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; OfflineRelevant?: KnockoutObservable<Edm.Boolean>; ParentId?: KnockoutObservable<Edm.Guid>; Path?: KnockoutObservable<Edm.String>; PerDiemAllowanceEntryId?: KnockoutObservable<Edm.Guid>; TaskId?: KnockoutObservable<Edm.Guid> });

        Content: KnockoutObservable<Edm.String>;
        ContentType: KnockoutObservable<Edm.String>;
        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        DocumentAttributes: KnockoutObservableArray<Crm.Rest.Model.ObservableCrm_DocumentAttribute>;
        DomainId: KnockoutObservable<Edm.Guid>;
        ExtensionValues: KnockoutObservable<Default.ObservableCrm_FileResource_ExtensionValues>;
        Filename: KnockoutObservable<Edm.String>;
        Id: KnockoutObservable<Edm.Guid>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        Length: KnockoutObservable<Edm.Int64>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        OfflineRelevant: KnockoutObservable<Edm.Boolean>;
        ParentId: KnockoutObservable<Edm.Guid>;
        Path: KnockoutObservable<Edm.String>;
        PerDiemAllowanceEntryId: KnockoutObservable<Edm.Guid>;
        TaskId: KnockoutObservable<Edm.Guid>;
        innerInstance: Crm_FileResource;
    }

    export class ObservableCrm_FileShare extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; DomainId?: KnockoutObservable<Edm.Guid>; Downloaded?: KnockoutObservable<Edm.Int32>; ExpiryDate?: KnockoutObservable<Edm.DateTimeOffset>; FileResource?: KnockoutObservable<Crm.Rest.Model.ObservableCrm_FileResource>; Id?: KnockoutObservable<Edm.Guid>; IsActive?: KnockoutObservable<Edm.Boolean>; LastDownload?: KnockoutObservable<Edm.DateTimeOffset>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; Secret?: KnockoutObservable<Edm.String> });

        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        DomainId: KnockoutObservable<Edm.Guid>;
        Downloaded: KnockoutObservable<Edm.Int32>;
        ExpiryDate: KnockoutObservable<Edm.DateTimeOffset>;
        FileResource: KnockoutObservable<Crm.Rest.Model.ObservableCrm_FileResource>;
        Id: KnockoutObservable<Edm.Guid>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        LastDownload: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        Secret: KnockoutObservable<Edm.String>;
        innerInstance: Crm_FileShare;
    }

    export class ObservableCrm_LinkResource extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; Description?: KnockoutObservable<Edm.String>; DomainId?: KnockoutObservable<Edm.Guid>; Id?: KnockoutObservable<Edm.Guid>; IsActive?: KnockoutObservable<Edm.Boolean>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; ParentId?: KnockoutObservable<Edm.Guid>; TaskId?: KnockoutObservable<Edm.Guid>; Url?: KnockoutObservable<Edm.String> });

        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        Description: KnockoutObservable<Edm.String>;
        DomainId: KnockoutObservable<Edm.Guid>;
        Id: KnockoutObservable<Edm.Guid>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        ParentId: KnockoutObservable<Edm.Guid>;
        TaskId: KnockoutObservable<Edm.Guid>;
        Url: KnockoutObservable<Edm.String>;
        innerInstance: Crm_LinkResource;
    }

    export class ObservableCrm_Note extends $data.Entity {
        constructor();
        constructor(initData: { ContactId?: KnockoutObservable<Edm.Guid>; ContactName?: KnockoutObservable<Edm.String>; ContactType?: KnockoutObservable<Edm.String>; CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; DomainId?: KnockoutObservable<Edm.Guid>; EntityId?: KnockoutObservable<Edm.Guid>; EntityName?: KnockoutObservable<Edm.String>; ExtensionValues?: KnockoutObservable<Default.ObservableCrm_Note_ExtensionValues>; Files?: KnockoutObservableArray<Crm.Rest.Model.ObservableCrm_FileResource>; Id?: KnockoutObservable<Edm.Guid>; IsActive?: KnockoutObservable<Edm.Boolean>; IsSystemGenerated?: KnockoutObservable<Edm.Boolean>; LegacyId?: KnockoutObservable<Edm.String>; Link?: KnockoutObservable<Edm.String>; Links?: KnockoutObservableArray<Crm.Rest.Model.ObservableCrm_LinkResource>; Meta?: KnockoutObservable<Edm.String>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; NoteType?: KnockoutObservable<Edm.String>; Plugin?: KnockoutObservable<Edm.String>; Subject?: KnockoutObservable<Edm.String>; Tasks?: KnockoutObservableArray<Crm.Rest.Model.ObservableCrm_Task>; Text?: KnockoutObservable<Edm.String>; Title?: KnockoutObservable<Edm.String>; User?: KnockoutObservable<Main.Rest.Model.ObservableMain_User> });

        ContactId: KnockoutObservable<Edm.Guid>;
        ContactName: KnockoutObservable<Edm.String>;
        ContactType: KnockoutObservable<Edm.String>;
        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        DomainId: KnockoutObservable<Edm.Guid>;
        EntityId: KnockoutObservable<Edm.Guid>;
        EntityName: KnockoutObservable<Edm.String>;
        ExtensionValues: KnockoutObservable<Default.ObservableCrm_Note_ExtensionValues>;
        Files: KnockoutObservableArray<Crm.Rest.Model.ObservableCrm_FileResource>;
        Id: KnockoutObservable<Edm.Guid>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        IsSystemGenerated: KnockoutObservable<Edm.Boolean>;
        LegacyId: KnockoutObservable<Edm.String>;
        Link: KnockoutObservable<Edm.String>;
        Links: KnockoutObservableArray<Crm.Rest.Model.ObservableCrm_LinkResource>;
        Meta: KnockoutObservable<Edm.String>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        NoteType: KnockoutObservable<Edm.String>;
        Plugin: KnockoutObservable<Edm.String>;
        Subject: KnockoutObservable<Edm.String>;
        Tasks: KnockoutObservableArray<Crm.Rest.Model.ObservableCrm_Task>;
        Text: KnockoutObservable<Edm.String>;
        Title: KnockoutObservable<Edm.String>;
        User: KnockoutObservable<Main.Rest.Model.ObservableMain_User>;
        innerInstance: Crm_Note;
    }

    export class ObservableCrm_Person extends $data.Entity {
        constructor();
        constructor(initData: { Address?: KnockoutObservable<Crm.Rest.Model.ObservableCrm_Address>; BackgroundInfo?: KnockoutObservable<Edm.String>; Bravos?: KnockoutObservableArray<Crm.Rest.Model.ObservableCrm_Bravo>; BusinessTitleKey?: KnockoutObservable<Edm.String>; CampaignSource?: KnockoutObservable<Edm.Guid>; CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; DepartmentTypeKey?: KnockoutObservable<Edm.String>; DomainId?: KnockoutObservable<Edm.Guid>; Emails?: KnockoutObservableArray<Crm.Rest.Model.ObservableCrm_Email>; Faxes?: KnockoutObservableArray<Crm.Rest.Model.ObservableCrm_Fax>; Firstname?: KnockoutObservable<Edm.String>; Id?: KnockoutObservable<Edm.Guid>; IsActive?: KnockoutObservable<Edm.Boolean>; IsRetired?: KnockoutObservable<Edm.Boolean>; LanguageKey?: KnockoutObservable<Edm.String>; LastActivity?: KnockoutObservable<Edm.DateTimeOffset>; LegacyId?: KnockoutObservable<Edm.String>; LegacyName?: KnockoutObservable<Edm.String>; Mima?: KnockoutObservable<Edm.Boolean>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; Name?: KnockoutObservable<Edm.String>; Notes?: KnockoutObservableArray<Crm.Rest.Model.ObservableCrm_Note>; Parent?: KnockoutObservable<Crm.Rest.Model.ObservableCrm_Company>; ParentId?: KnockoutObservable<Edm.Guid>; ParentName?: KnockoutObservable<Edm.String>; ParentType?: KnockoutObservable<Edm.String>; PersonNo?: KnockoutObservable<Edm.String>; Phones?: KnockoutObservableArray<Crm.Rest.Model.ObservableCrm_Phone>; ResponsibleUser?: KnockoutObservable<Edm.String>; ResponsibleUserUser?: KnockoutObservable<Main.Rest.Model.ObservableMain_User>; SalutationKey?: KnockoutObservable<Edm.String>; SalutationLetterKey?: KnockoutObservable<Edm.String>; SourceTypeKey?: KnockoutObservable<Edm.String>; StandardAddressKey?: KnockoutObservable<Edm.Guid>; Station?: KnockoutObservable<Crm.Rest.Model.ObservableCrm_Station>; StationKey?: KnockoutObservable<Edm.Guid>; Surname?: KnockoutObservable<Edm.String>; Tags?: KnockoutObservableArray<Crm.Rest.Model.ObservableCrm_Tag>; TitleKey?: KnockoutObservable<Edm.String>; Visibility?: KnockoutObservable<Crm.Library.BaseModel.Visibility>; VisibleToUserIds?: KnockoutObservableArray<Edm.String>; VisibleToUsergroupIds?: KnockoutObservableArray<Edm.Guid>; Websites?: KnockoutObservableArray<Crm.Rest.Model.ObservableCrm_Website> });

        Address: KnockoutObservable<Crm.Rest.Model.ObservableCrm_Address>;
        BackgroundInfo: KnockoutObservable<Edm.String>;
        Bravos: KnockoutObservableArray<Crm.Rest.Model.ObservableCrm_Bravo>;
        BusinessTitleKey: KnockoutObservable<Edm.String>;
        CampaignSource: KnockoutObservable<Edm.Guid>;
        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        DepartmentTypeKey: KnockoutObservable<Edm.String>;
        DomainId: KnockoutObservable<Edm.Guid>;
        Emails: KnockoutObservableArray<Crm.Rest.Model.ObservableCrm_Email>;
        Faxes: KnockoutObservableArray<Crm.Rest.Model.ObservableCrm_Fax>;
        Firstname: KnockoutObservable<Edm.String>;
        Id: KnockoutObservable<Edm.Guid>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        IsRetired: KnockoutObservable<Edm.Boolean>;
        LanguageKey: KnockoutObservable<Edm.String>;
        LastActivity: KnockoutObservable<Edm.DateTimeOffset>;
        LegacyId: KnockoutObservable<Edm.String>;
        LegacyName: KnockoutObservable<Edm.String>;
        Mima: KnockoutObservable<Edm.Boolean>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        Name: KnockoutObservable<Edm.String>;
        Notes: KnockoutObservableArray<Crm.Rest.Model.ObservableCrm_Note>;
        Parent: KnockoutObservable<Crm.Rest.Model.ObservableCrm_Company>;
        ParentId: KnockoutObservable<Edm.Guid>;
        ParentName: KnockoutObservable<Edm.String>;
        ParentType: KnockoutObservable<Edm.String>;
        PersonNo: KnockoutObservable<Edm.String>;
        Phones: KnockoutObservableArray<Crm.Rest.Model.ObservableCrm_Phone>;
        ResponsibleUser: KnockoutObservable<Edm.String>;
        ResponsibleUserUser: KnockoutObservable<Main.Rest.Model.ObservableMain_User>;
        SalutationKey: KnockoutObservable<Edm.String>;
        SalutationLetterKey: KnockoutObservable<Edm.String>;
        SourceTypeKey: KnockoutObservable<Edm.String>;
        StandardAddressKey: KnockoutObservable<Edm.Guid>;
        Station: KnockoutObservable<Crm.Rest.Model.ObservableCrm_Station>;
        StationKey: KnockoutObservable<Edm.Guid>;
        Surname: KnockoutObservable<Edm.String>;
        Tags: KnockoutObservableArray<Crm.Rest.Model.ObservableCrm_Tag>;
        TitleKey: KnockoutObservable<Edm.String>;
        Visibility: KnockoutObservable<Crm.Library.BaseModel.Visibility>;
        VisibleToUserIds: KnockoutObservableArray<Edm.String>;
        VisibleToUsergroupIds: KnockoutObservableArray<Edm.Guid>;
        Websites: KnockoutObservableArray<Crm.Rest.Model.ObservableCrm_Website>;
        innerInstance: Crm_Person;
    }

    export class ObservableCrm_Phone extends $data.Entity {
        constructor();
        constructor(initData: { AddressId?: KnockoutObservable<Edm.Guid>; AreaCode?: KnockoutObservable<Edm.String>; Comment?: KnockoutObservable<Edm.String>; ContactId?: KnockoutObservable<Edm.Guid>; CountryKey?: KnockoutObservable<Edm.String>; CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; Data?: KnockoutObservable<Edm.String>; DataOnlyNumbers?: KnockoutObservable<Edm.String>; DomainId?: KnockoutObservable<Edm.Guid>; Id?: KnockoutObservable<Edm.Guid>; IsActive?: KnockoutObservable<Edm.Boolean>; LegacyId?: KnockoutObservable<Edm.String>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; TypeKey?: KnockoutObservable<Edm.String> });

        AddressId: KnockoutObservable<Edm.Guid>;
        AreaCode: KnockoutObservable<Edm.String>;
        Comment: KnockoutObservable<Edm.String>;
        ContactId: KnockoutObservable<Edm.Guid>;
        CountryKey: KnockoutObservable<Edm.String>;
        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        Data: KnockoutObservable<Edm.String>;
        DataOnlyNumbers: KnockoutObservable<Edm.String>;
        DomainId: KnockoutObservable<Edm.Guid>;
        Id: KnockoutObservable<Edm.Guid>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        LegacyId: KnockoutObservable<Edm.String>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        TypeKey: KnockoutObservable<Edm.String>;
        innerInstance: Crm_Phone;
    }

    export class ObservableCrm_Station extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; DomainId?: KnockoutObservable<Edm.Guid>; Id?: KnockoutObservable<Edm.Guid>; IsActive?: KnockoutObservable<Edm.Boolean>; IsEnabled?: KnockoutObservable<Edm.Boolean>; LegacyId?: KnockoutObservable<Edm.String>; Members?: KnockoutObservableArray<Main.Rest.Model.ObservableMain_User>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; Name?: KnockoutObservable<Edm.String> });

        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        DomainId: KnockoutObservable<Edm.Guid>;
        Id: KnockoutObservable<Edm.Guid>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        IsEnabled: KnockoutObservable<Edm.Boolean>;
        LegacyId: KnockoutObservable<Edm.String>;
        Members: KnockoutObservableArray<Main.Rest.Model.ObservableMain_User>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        Name: KnockoutObservable<Edm.String>;
        innerInstance: Crm_Station;
    }

    export class ObservableCrm_Tag extends $data.Entity {
        constructor();
        constructor(initData: { ContactKey?: KnockoutObservable<Edm.Guid>; CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; Id?: KnockoutObservable<Edm.Guid>; IsActive?: KnockoutObservable<Edm.Boolean>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; Name?: KnockoutObservable<Edm.String> });

        ContactKey: KnockoutObservable<Edm.Guid>;
        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        Id: KnockoutObservable<Edm.Guid>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        Name: KnockoutObservable<Edm.String>;
        innerInstance: Crm_Tag;
    }

    export class ObservableCrm_Task extends $data.Entity {
        constructor();
        constructor(initData: { ContactId?: KnockoutObservable<Edm.Guid>; ContactName?: KnockoutObservable<Edm.String>; ContactType?: KnockoutObservable<Edm.String>; CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; DomainId?: KnockoutObservable<Edm.Guid>; DueDate?: KnockoutObservable<Edm.DateTimeOffset>; DueTime?: KnockoutObservable<Edm.DateTimeOffset>; ExtensionValues?: KnockoutObservable<Default.ObservableCrm_Task_ExtensionValues>; Files?: KnockoutObservableArray<Crm.Rest.Model.ObservableCrm_FileResource>; Id?: KnockoutObservable<Edm.Guid>; IsActive?: KnockoutObservable<Edm.Boolean>; IsCompleted?: KnockoutObservable<Edm.Boolean>; LegacyId?: KnockoutObservable<Edm.String>; Links?: KnockoutObservableArray<Crm.Rest.Model.ObservableCrm_LinkResource>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; NoteId?: KnockoutObservable<Edm.Guid>; ResponsibleUser?: KnockoutObservable<Edm.String>; ResponsibleUserGroup?: KnockoutObservable<Edm.String>; ResponsibleUserGroupKey?: KnockoutObservable<Edm.Guid>; ResponsibleUserUser?: KnockoutObservable<Main.Rest.Model.ObservableMain_User>; TaskCampaignKey?: KnockoutObservable<Edm.Guid>; TaskCreateUser?: KnockoutObservable<Edm.String>; Text?: KnockoutObservable<Edm.String>; TypeKey?: KnockoutObservable<Edm.String> });

        ContactId: KnockoutObservable<Edm.Guid>;
        ContactName: KnockoutObservable<Edm.String>;
        ContactType: KnockoutObservable<Edm.String>;
        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        DomainId: KnockoutObservable<Edm.Guid>;
        DueDate: KnockoutObservable<Edm.DateTimeOffset>;
        DueTime: KnockoutObservable<Edm.DateTimeOffset>;
        ExtensionValues: KnockoutObservable<Default.ObservableCrm_Task_ExtensionValues>;
        Files: KnockoutObservableArray<Crm.Rest.Model.ObservableCrm_FileResource>;
        Id: KnockoutObservable<Edm.Guid>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        IsCompleted: KnockoutObservable<Edm.Boolean>;
        LegacyId: KnockoutObservable<Edm.String>;
        Links: KnockoutObservableArray<Crm.Rest.Model.ObservableCrm_LinkResource>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        NoteId: KnockoutObservable<Edm.Guid>;
        ResponsibleUser: KnockoutObservable<Edm.String>;
        ResponsibleUserGroup: KnockoutObservable<Edm.String>;
        ResponsibleUserGroupKey: KnockoutObservable<Edm.Guid>;
        ResponsibleUserUser: KnockoutObservable<Main.Rest.Model.ObservableMain_User>;
        TaskCampaignKey: KnockoutObservable<Edm.Guid>;
        TaskCreateUser: KnockoutObservable<Edm.String>;
        Text: KnockoutObservable<Edm.String>;
        TypeKey: KnockoutObservable<Edm.String>;
        innerInstance: Crm_Task;
    }

    export class ObservableCrm_Website extends $data.Entity {
        constructor();
        constructor(initData: { AddressId?: KnockoutObservable<Edm.Guid>; Comment?: KnockoutObservable<Edm.String>; ContactId?: KnockoutObservable<Edm.Guid>; CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; Data?: KnockoutObservable<Edm.String>; DomainId?: KnockoutObservable<Edm.Guid>; Id?: KnockoutObservable<Edm.Guid>; IsActive?: KnockoutObservable<Edm.Boolean>; LegacyId?: KnockoutObservable<Edm.String>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; TypeKey?: KnockoutObservable<Edm.String> });

        AddressId: KnockoutObservable<Edm.Guid>;
        Comment: KnockoutObservable<Edm.String>;
        ContactId: KnockoutObservable<Edm.Guid>;
        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        Data: KnockoutObservable<Edm.String>;
        DomainId: KnockoutObservable<Edm.Guid>;
        Id: KnockoutObservable<Edm.Guid>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        LegacyId: KnockoutObservable<Edm.String>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        TypeKey: KnockoutObservable<Edm.String>;
        innerInstance: Crm_Website;
    }

    export class Crm_Address extends $data.Entity {
        constructor();
        constructor(initData: { AddressTypeKey?: Edm.String; City?: Edm.String; CompanyId?: Edm.Guid; CountryKey?: Edm.String; CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; DomainId?: Edm.Guid; Emails?: Crm.Rest.Model.Crm_Email[]; Faxes?: Crm.Rest.Model.Crm_Fax[]; Id?: Edm.Guid; IsActive?: Edm.Boolean; IsCompanyStandardAddress?: Edm.Boolean; IsGeocoded?: Edm.Boolean; Latitude?: Edm.Double; LegacyId?: Edm.String; Longitude?: Edm.Double; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; Name1?: Edm.String; Name2?: Edm.String; Name3?: Edm.String; POBox?: Edm.String; Phones?: Crm.Rest.Model.Crm_Phone[]; RegionKey?: Edm.String; Street?: Edm.String; Websites?: Crm.Rest.Model.Crm_Website[]; ZipCode?: Edm.String; ZipCodePOBox?: Edm.String });

        AddressTypeKey: Edm.String;
        City: Edm.String;
        CompanyId: Edm.Guid;
        CountryKey: Edm.String;
        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        DomainId: Edm.Guid;
        Emails: Crm.Rest.Model.Crm_Email[];
        Faxes: Crm.Rest.Model.Crm_Fax[];
        Id: Edm.Guid;
        IsActive: Edm.Boolean;
        IsCompanyStandardAddress: Edm.Boolean;
        IsGeocoded: Edm.Boolean;
        Latitude: Edm.Double;
        LegacyId: Edm.String;
        Longitude: Edm.Double;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        Name1: Edm.String;
        Name2: Edm.String;
        Name3: Edm.String;
        POBox: Edm.String;
        Phones: Crm.Rest.Model.Crm_Phone[];
        RegionKey: Edm.String;
        Street: Edm.String;
        Websites: Crm.Rest.Model.Crm_Website[];
        ZipCode: Edm.String;
        ZipCodePOBox: Edm.String;
        asKoObservable(): ObservableCrm_Address;
        static create(): Crm_Address;
        static create(initData:any): Crm_Address;
    }

    export class Crm_Bravo extends $data.Entity {
        constructor();
        constructor(initData: { CategoryKey?: Edm.String; ContactId?: Edm.Guid; CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; DomainId?: Edm.Guid; FinishedByUser?: Edm.String; Id?: Edm.Guid; IsActive?: Edm.Boolean; IsEnabled?: Edm.Boolean; IsOnlyVisibleForCreateUser?: Edm.Boolean; Issue?: Edm.String; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String });

        CategoryKey: Edm.String;
        ContactId: Edm.Guid;
        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        DomainId: Edm.Guid;
        FinishedByUser: Edm.String;
        Id: Edm.Guid;
        IsActive: Edm.Boolean;
        IsEnabled: Edm.Boolean;
        IsOnlyVisibleForCreateUser: Edm.Boolean;
        Issue: Edm.String;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        asKoObservable(): ObservableCrm_Bravo;
        static create(): Crm_Bravo;
        static create(initData:any): Crm_Bravo;
    }

    export class Crm_BusinessRelationship extends $data.Entity {
        constructor();
        constructor(initData: { Child?: Crm.Rest.Model.Crm_Company; ChildId?: Edm.Guid; CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; DomainId?: Edm.Guid; Id?: Edm.Guid; Information?: Edm.String; IsActive?: Edm.Boolean; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; ParentId?: Edm.Guid; RelationshipTypeKey?: Edm.String });

        Child: Crm.Rest.Model.Crm_Company;
        ChildId: Edm.Guid;
        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        DomainId: Edm.Guid;
        Id: Edm.Guid;
        Information: Edm.String;
        IsActive: Edm.Boolean;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        ParentId: Edm.Guid;
        RelationshipTypeKey: Edm.String;
        asKoObservable(): ObservableCrm_BusinessRelationship;
        static create(): Crm_BusinessRelationship;
        static create(initData:any): Crm_BusinessRelationship;
    }

    export class Crm_CompanyBranch extends $data.Entity {
        constructor();
        constructor(initData: { Branch1Key?: Edm.String; Branch2Key?: Edm.String; Branch3Key?: Edm.String; Branch4Key?: Edm.String; CompanyKey?: Edm.Guid; CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; DomainId?: Edm.Guid; Id?: Edm.Guid; IsActive?: Edm.Boolean; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String });

        Branch1Key: Edm.String;
        Branch2Key: Edm.String;
        Branch3Key: Edm.String;
        Branch4Key: Edm.String;
        CompanyKey: Edm.Guid;
        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        DomainId: Edm.Guid;
        Id: Edm.Guid;
        IsActive: Edm.Boolean;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        asKoObservable(): ObservableCrm_CompanyBranch;
        static create(): Crm_CompanyBranch;
        static create(initData:any): Crm_CompanyBranch;
    }

    export class Crm_CompanyPersonRelationship extends $data.Entity {
        constructor();
        constructor(initData: { Child?: Crm.Rest.Model.Crm_Person; ChildId?: Edm.Guid; CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; DomainId?: Edm.Guid; Id?: Edm.Guid; Information?: Edm.String; IsActive?: Edm.Boolean; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; Parent?: Crm.Rest.Model.Crm_Company; ParentId?: Edm.Guid; RelationshipTypeKey?: Edm.String });

        Child: Crm.Rest.Model.Crm_Person;
        ChildId: Edm.Guid;
        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        DomainId: Edm.Guid;
        Id: Edm.Guid;
        Information: Edm.String;
        IsActive: Edm.Boolean;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        Parent: Crm.Rest.Model.Crm_Company;
        ParentId: Edm.Guid;
        RelationshipTypeKey: Edm.String;
        asKoObservable(): ObservableCrm_CompanyPersonRelationship;
        static create(): Crm_CompanyPersonRelationship;
        static create(initData:any): Crm_CompanyPersonRelationship;
    }

    export class Crm_Company extends $data.Entity {
        constructor();
        constructor(initData: { Addresses?: Crm.Rest.Model.Crm_Address[]; AreaSalesManager?: Edm.String; AreaSalesManagerUser?: Main.Rest.Model.Main_User; BackgroundInfo?: Edm.String; Bravos?: Crm.Rest.Model.Crm_Bravo[]; CampaignSource?: Edm.Guid; CompanyBranches?: Crm.Rest.Model.Crm_CompanyBranch[]; CompanyGroupFlag1Key?: Edm.String; CompanyGroupFlag2Key?: Edm.String; CompanyGroupFlag3Key?: Edm.String; CompanyGroupFlag4Key?: Edm.String; CompanyGroupFlag5Key?: Edm.String; CompanyNo?: Edm.String; CompanyTypeKey?: Edm.String; CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; DomainId?: Edm.Guid; Emails?: Crm.Rest.Model.Crm_Email[]; ExtensionValues?: Default.Crm_Company_ExtensionValues; Faxes?: Crm.Rest.Model.Crm_Fax[]; Id?: Edm.Guid; IsActive?: Edm.Boolean; IsEnabled?: Edm.Boolean; IsOwnCompany?: Edm.Boolean; LanguageKey?: Edm.String; LastActivity?: Edm.DateTimeOffset; LegacyId?: Edm.String; LegacyName?: Edm.String; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; Name?: Edm.String; Notes?: Crm.Rest.Model.Crm_Note[]; NumberOfEmployeesKey?: Edm.String; ParentCompany?: Crm.Rest.Model.Crm_Company; ParentId?: Edm.Guid; ParentName?: Edm.String; ParentType?: Edm.String; Phones?: Crm.Rest.Model.Crm_Phone[]; ResponsibleUser?: Edm.String; ResponsibleUserUser?: Main.Rest.Model.Main_User; SalesRepresentative?: Edm.String; ShortText?: Edm.String; SourceTypeKey?: Edm.String; Staff?: Crm.Rest.Model.Crm_Person[]; StandardAddress?: Crm.Rest.Model.Crm_Address; StandardAddressId?: Edm.Guid; Station?: Crm.Rest.Model.Crm_Station; StationKey?: Edm.Guid; Subsidiaries?: Crm.Rest.Model.Crm_Company[]; Tags?: Crm.Rest.Model.Crm_Tag[]; TurnoverKey?: Edm.String; Visibility?: Crm.Library.BaseModel.Visibility; VisibleToUserIds?: Edm.String[]; VisibleToUsergroupIds?: Edm.Guid[]; Websites?: Crm.Rest.Model.Crm_Website[] });

        Addresses: Crm.Rest.Model.Crm_Address[];
        AreaSalesManager: Edm.String;
        AreaSalesManagerUser: Main.Rest.Model.Main_User;
        BackgroundInfo: Edm.String;
        Bravos: Crm.Rest.Model.Crm_Bravo[];
        CampaignSource: Edm.Guid;
        CompanyBranches: Crm.Rest.Model.Crm_CompanyBranch[];
        CompanyGroupFlag1Key: Edm.String;
        CompanyGroupFlag2Key: Edm.String;
        CompanyGroupFlag3Key: Edm.String;
        CompanyGroupFlag4Key: Edm.String;
        CompanyGroupFlag5Key: Edm.String;
        CompanyNo: Edm.String;
        CompanyTypeKey: Edm.String;
        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        DomainId: Edm.Guid;
        Emails: Crm.Rest.Model.Crm_Email[];
        ExtensionValues: Default.Crm_Company_ExtensionValues;
        Faxes: Crm.Rest.Model.Crm_Fax[];
        Id: Edm.Guid;
        IsActive: Edm.Boolean;
        IsEnabled: Edm.Boolean;
        IsOwnCompany: Edm.Boolean;
        LanguageKey: Edm.String;
        LastActivity: Edm.DateTimeOffset;
        LegacyId: Edm.String;
        LegacyName: Edm.String;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        Name: Edm.String;
        Notes: Crm.Rest.Model.Crm_Note[];
        NumberOfEmployeesKey: Edm.String;
        ParentCompany: Crm.Rest.Model.Crm_Company;
        ParentId: Edm.Guid;
        ParentName: Edm.String;
        ParentType: Edm.String;
        Phones: Crm.Rest.Model.Crm_Phone[];
        ResponsibleUser: Edm.String;
        ResponsibleUserUser: Main.Rest.Model.Main_User;
        SalesRepresentative: Edm.String;
        ShortText: Edm.String;
        SourceTypeKey: Edm.String;
        Staff: Crm.Rest.Model.Crm_Person[];
        StandardAddress: Crm.Rest.Model.Crm_Address;
        StandardAddressId: Edm.Guid;
        Station: Crm.Rest.Model.Crm_Station;
        StationKey: Edm.Guid;
        Subsidiaries: Crm.Rest.Model.Crm_Company[];
        Tags: Crm.Rest.Model.Crm_Tag[];
        TurnoverKey: Edm.String;
        Visibility: Crm.Library.BaseModel.Visibility;
        VisibleToUserIds: Edm.String[];
        VisibleToUsergroupIds: Edm.Guid[];
        Websites: Crm.Rest.Model.Crm_Website[];
        asKoObservable(): ObservableCrm_Company;
        static create(): Crm_Company;
        static create(initData:any): Crm_Company;
    }

    export class Crm_DocumentAttribute extends $data.Entity {
        constructor();
        constructor(initData: { ContactName?: Edm.String; ContactType?: Edm.String; CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; Description?: Edm.String; DocumentCategoryKey?: Edm.String; DomainId?: Edm.Guid; ExtensionValues?: Default.Crm_DocumentAttribute_ExtensionValues; FileName?: Edm.String; FileResource?: Crm.Rest.Model.Crm_FileResource; FileResourceKey?: Edm.Guid; Id?: Edm.Guid; IsActive?: Edm.Boolean; Length?: Edm.Int64; LongText?: Edm.String; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; OfflineRelevant?: Edm.Boolean; ReferenceKey?: Edm.Guid; UseForDisplay?: Edm.Boolean; UseForThumbnail?: Edm.Boolean });

        ContactName: Edm.String;
        ContactType: Edm.String;
        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        Description: Edm.String;
        DocumentCategoryKey: Edm.String;
        DomainId: Edm.Guid;
        ExtensionValues: Default.Crm_DocumentAttribute_ExtensionValues;
        FileName: Edm.String;
        FileResource: Crm.Rest.Model.Crm_FileResource;
        FileResourceKey: Edm.Guid;
        Id: Edm.Guid;
        IsActive: Edm.Boolean;
        Length: Edm.Int64;
        LongText: Edm.String;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        OfflineRelevant: Edm.Boolean;
        ReferenceKey: Edm.Guid;
        UseForDisplay: Edm.Boolean;
        UseForThumbnail: Edm.Boolean;
        asKoObservable(): ObservableCrm_DocumentAttribute;
        static create(): Crm_DocumentAttribute;
        static create(initData:any): Crm_DocumentAttribute;
    }

    export class Crm_Email extends $data.Entity {
        constructor();
        constructor(initData: { AddressId?: Edm.Guid; Comment?: Edm.String; ContactId?: Edm.Guid; CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; Data?: Edm.String; DomainId?: Edm.Guid; Id?: Edm.Guid; IsActive?: Edm.Boolean; LegacyId?: Edm.String; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; TypeKey?: Edm.String });

        AddressId: Edm.Guid;
        Comment: Edm.String;
        ContactId: Edm.Guid;
        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        Data: Edm.String;
        DomainId: Edm.Guid;
        Id: Edm.Guid;
        IsActive: Edm.Boolean;
        LegacyId: Edm.String;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        TypeKey: Edm.String;
        asKoObservable(): ObservableCrm_Email;
        static create(): Crm_Email;
        static create(initData:any): Crm_Email;
    }

    export class Crm_Fax extends $data.Entity {
        constructor();
        constructor(initData: { AddressId?: Edm.Guid; AreaCode?: Edm.String; Comment?: Edm.String; ContactId?: Edm.Guid; CountryKey?: Edm.String; CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; Data?: Edm.String; DataOnlyNumbers?: Edm.String; DomainId?: Edm.Guid; Id?: Edm.Guid; IsActive?: Edm.Boolean; LegacyId?: Edm.String; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; TypeKey?: Edm.String });

        AddressId: Edm.Guid;
        AreaCode: Edm.String;
        Comment: Edm.String;
        ContactId: Edm.Guid;
        CountryKey: Edm.String;
        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        Data: Edm.String;
        DataOnlyNumbers: Edm.String;
        DomainId: Edm.Guid;
        Id: Edm.Guid;
        IsActive: Edm.Boolean;
        LegacyId: Edm.String;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        TypeKey: Edm.String;
        asKoObservable(): ObservableCrm_Fax;
        static create(): Crm_Fax;
        static create(initData:any): Crm_Fax;
    }

    export class Crm_FileResource extends $data.Entity {
        constructor();
        constructor(initData: { Content?: Edm.String; ContentType?: Edm.String; CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; DocumentAttributes?: Crm.Rest.Model.Crm_DocumentAttribute[]; DomainId?: Edm.Guid; ExtensionValues?: Default.Crm_FileResource_ExtensionValues; Filename?: Edm.String; Id?: Edm.Guid; IsActive?: Edm.Boolean; Length?: Edm.Int64; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; OfflineRelevant?: Edm.Boolean; ParentId?: Edm.Guid; Path?: Edm.String; PerDiemAllowanceEntryId?: Edm.Guid; TaskId?: Edm.Guid });

        Content: Edm.String;
        ContentType: Edm.String;
        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        DocumentAttributes: Crm.Rest.Model.Crm_DocumentAttribute[];
        DomainId: Edm.Guid;
        ExtensionValues: Default.Crm_FileResource_ExtensionValues;
        Filename: Edm.String;
        Id: Edm.Guid;
        IsActive: Edm.Boolean;
        Length: Edm.Int64;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        OfflineRelevant: Edm.Boolean;
        ParentId: Edm.Guid;
        Path: Edm.String;
        PerDiemAllowanceEntryId: Edm.Guid;
        TaskId: Edm.Guid;
        asKoObservable(): ObservableCrm_FileResource;
        static create(): Crm_FileResource;
        static create(initData:any): Crm_FileResource;
    }

    export class Crm_FileShare extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; DomainId?: Edm.Guid; Downloaded?: Edm.Int32; ExpiryDate?: Edm.DateTimeOffset; FileResource?: Crm.Rest.Model.Crm_FileResource; Id?: Edm.Guid; IsActive?: Edm.Boolean; LastDownload?: Edm.DateTimeOffset; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; Secret?: Edm.String });

        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        DomainId: Edm.Guid;
        Downloaded: Edm.Int32;
        ExpiryDate: Edm.DateTimeOffset;
        FileResource: Crm.Rest.Model.Crm_FileResource;
        Id: Edm.Guid;
        IsActive: Edm.Boolean;
        LastDownload: Edm.DateTimeOffset;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        Secret: Edm.String;
        asKoObservable(): ObservableCrm_FileShare;
        static create(): Crm_FileShare;
        static create(initData:any): Crm_FileShare;
    }

    export class Crm_LinkResource extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; Description?: Edm.String; DomainId?: Edm.Guid; Id?: Edm.Guid; IsActive?: Edm.Boolean; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; ParentId?: Edm.Guid; TaskId?: Edm.Guid; Url?: Edm.String });

        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        Description: Edm.String;
        DomainId: Edm.Guid;
        Id: Edm.Guid;
        IsActive: Edm.Boolean;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        ParentId: Edm.Guid;
        TaskId: Edm.Guid;
        Url: Edm.String;
        asKoObservable(): ObservableCrm_LinkResource;
        static create(): Crm_LinkResource;
        static create(initData:any): Crm_LinkResource;
    }

    export class Crm_Note extends $data.Entity {
        constructor();
        constructor(initData: { ContactId?: Edm.Guid; ContactName?: Edm.String; ContactType?: Edm.String; CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; DomainId?: Edm.Guid; EntityId?: Edm.Guid; EntityName?: Edm.String; ExtensionValues?: Default.Crm_Note_ExtensionValues; Files?: Crm.Rest.Model.Crm_FileResource[]; Id?: Edm.Guid; IsActive?: Edm.Boolean; IsSystemGenerated?: Edm.Boolean; LegacyId?: Edm.String; Link?: Edm.String; Links?: Crm.Rest.Model.Crm_LinkResource[]; Meta?: Edm.String; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; NoteType?: Edm.String; Plugin?: Edm.String; Subject?: Edm.String; Tasks?: Crm.Rest.Model.Crm_Task[]; Text?: Edm.String; Title?: Edm.String; User?: Main.Rest.Model.Main_User });

        ContactId: Edm.Guid;
        ContactName: Edm.String;
        ContactType: Edm.String;
        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        DomainId: Edm.Guid;
        EntityId: Edm.Guid;
        EntityName: Edm.String;
        ExtensionValues: Default.Crm_Note_ExtensionValues;
        Files: Crm.Rest.Model.Crm_FileResource[];
        Id: Edm.Guid;
        IsActive: Edm.Boolean;
        IsSystemGenerated: Edm.Boolean;
        LegacyId: Edm.String;
        Link: Edm.String;
        Links: Crm.Rest.Model.Crm_LinkResource[];
        Meta: Edm.String;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        NoteType: Edm.String;
        Plugin: Edm.String;
        Subject: Edm.String;
        Tasks: Crm.Rest.Model.Crm_Task[];
        Text: Edm.String;
        Title: Edm.String;
        User: Main.Rest.Model.Main_User;
        asKoObservable(): ObservableCrm_Note;
        static create(): Crm_Note;
        static create(initData:any): Crm_Note;
    }

    export class Crm_Person extends $data.Entity {
        constructor();
        constructor(initData: { Address?: Crm.Rest.Model.Crm_Address; BackgroundInfo?: Edm.String; Bravos?: Crm.Rest.Model.Crm_Bravo[]; BusinessTitleKey?: Edm.String; CampaignSource?: Edm.Guid; CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; DepartmentTypeKey?: Edm.String; DomainId?: Edm.Guid; Emails?: Crm.Rest.Model.Crm_Email[]; Faxes?: Crm.Rest.Model.Crm_Fax[]; Firstname?: Edm.String; Id?: Edm.Guid; IsActive?: Edm.Boolean; IsRetired?: Edm.Boolean; LanguageKey?: Edm.String; LastActivity?: Edm.DateTimeOffset; LegacyId?: Edm.String; LegacyName?: Edm.String; Mima?: Edm.Boolean; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; Name?: Edm.String; Notes?: Crm.Rest.Model.Crm_Note[]; Parent?: Crm.Rest.Model.Crm_Company; ParentId?: Edm.Guid; ParentName?: Edm.String; ParentType?: Edm.String; PersonNo?: Edm.String; Phones?: Crm.Rest.Model.Crm_Phone[]; ResponsibleUser?: Edm.String; ResponsibleUserUser?: Main.Rest.Model.Main_User; SalutationKey?: Edm.String; SalutationLetterKey?: Edm.String; SourceTypeKey?: Edm.String; StandardAddressKey?: Edm.Guid; Station?: Crm.Rest.Model.Crm_Station; StationKey?: Edm.Guid; Surname?: Edm.String; Tags?: Crm.Rest.Model.Crm_Tag[]; TitleKey?: Edm.String; Visibility?: Crm.Library.BaseModel.Visibility; VisibleToUserIds?: Edm.String[]; VisibleToUsergroupIds?: Edm.Guid[]; Websites?: Crm.Rest.Model.Crm_Website[] });

        Address: Crm.Rest.Model.Crm_Address;
        BackgroundInfo: Edm.String;
        Bravos: Crm.Rest.Model.Crm_Bravo[];
        BusinessTitleKey: Edm.String;
        CampaignSource: Edm.Guid;
        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        DepartmentTypeKey: Edm.String;
        DomainId: Edm.Guid;
        Emails: Crm.Rest.Model.Crm_Email[];
        Faxes: Crm.Rest.Model.Crm_Fax[];
        Firstname: Edm.String;
        Id: Edm.Guid;
        IsActive: Edm.Boolean;
        IsRetired: Edm.Boolean;
        LanguageKey: Edm.String;
        LastActivity: Edm.DateTimeOffset;
        LegacyId: Edm.String;
        LegacyName: Edm.String;
        Mima: Edm.Boolean;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        Name: Edm.String;
        Notes: Crm.Rest.Model.Crm_Note[];
        Parent: Crm.Rest.Model.Crm_Company;
        ParentId: Edm.Guid;
        ParentName: Edm.String;
        ParentType: Edm.String;
        PersonNo: Edm.String;
        Phones: Crm.Rest.Model.Crm_Phone[];
        ResponsibleUser: Edm.String;
        ResponsibleUserUser: Main.Rest.Model.Main_User;
        SalutationKey: Edm.String;
        SalutationLetterKey: Edm.String;
        SourceTypeKey: Edm.String;
        StandardAddressKey: Edm.Guid;
        Station: Crm.Rest.Model.Crm_Station;
        StationKey: Edm.Guid;
        Surname: Edm.String;
        Tags: Crm.Rest.Model.Crm_Tag[];
        TitleKey: Edm.String;
        Visibility: Crm.Library.BaseModel.Visibility;
        VisibleToUserIds: Edm.String[];
        VisibleToUsergroupIds: Edm.Guid[];
        Websites: Crm.Rest.Model.Crm_Website[];
        asKoObservable(): ObservableCrm_Person;
        static create(): Crm_Person;
        static create(initData:any): Crm_Person;
    }

    export class Crm_Phone extends $data.Entity {
        constructor();
        constructor(initData: { AddressId?: Edm.Guid; AreaCode?: Edm.String; Comment?: Edm.String; ContactId?: Edm.Guid; CountryKey?: Edm.String; CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; Data?: Edm.String; DataOnlyNumbers?: Edm.String; DomainId?: Edm.Guid; Id?: Edm.Guid; IsActive?: Edm.Boolean; LegacyId?: Edm.String; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; TypeKey?: Edm.String });

        AddressId: Edm.Guid;
        AreaCode: Edm.String;
        Comment: Edm.String;
        ContactId: Edm.Guid;
        CountryKey: Edm.String;
        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        Data: Edm.String;
        DataOnlyNumbers: Edm.String;
        DomainId: Edm.Guid;
        Id: Edm.Guid;
        IsActive: Edm.Boolean;
        LegacyId: Edm.String;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        TypeKey: Edm.String;
        asKoObservable(): ObservableCrm_Phone;
        static create(): Crm_Phone;
        static create(initData:any): Crm_Phone;
    }

    export class Crm_Station extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; DomainId?: Edm.Guid; Id?: Edm.Guid; IsActive?: Edm.Boolean; IsEnabled?: Edm.Boolean; LegacyId?: Edm.String; Members?: Main.Rest.Model.Main_User[]; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; Name?: Edm.String });

        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        DomainId: Edm.Guid;
        Id: Edm.Guid;
        IsActive: Edm.Boolean;
        IsEnabled: Edm.Boolean;
        LegacyId: Edm.String;
        Members: Main.Rest.Model.Main_User[];
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        Name: Edm.String;
        asKoObservable(): ObservableCrm_Station;
        static create(): Crm_Station;
        static create(initData:any): Crm_Station;
    }

    export class Crm_Tag extends $data.Entity {
        constructor();
        constructor(initData: { ContactKey?: Edm.Guid; CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; Id?: Edm.Guid; IsActive?: Edm.Boolean; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; Name?: Edm.String });

        ContactKey: Edm.Guid;
        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        Id: Edm.Guid;
        IsActive: Edm.Boolean;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        Name: Edm.String;
        asKoObservable(): ObservableCrm_Tag;
        static create(): Crm_Tag;
        static create(initData:any): Crm_Tag;
    }

    export class Crm_Task extends $data.Entity {
        constructor();
        constructor(initData: { ContactId?: Edm.Guid; ContactName?: Edm.String; ContactType?: Edm.String; CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; DomainId?: Edm.Guid; DueDate?: Edm.DateTimeOffset; DueTime?: Edm.DateTimeOffset; ExtensionValues?: Default.Crm_Task_ExtensionValues; Files?: Crm.Rest.Model.Crm_FileResource[]; Id?: Edm.Guid; IsActive?: Edm.Boolean; IsCompleted?: Edm.Boolean; LegacyId?: Edm.String; Links?: Crm.Rest.Model.Crm_LinkResource[]; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; NoteId?: Edm.Guid; ResponsibleUser?: Edm.String; ResponsibleUserGroup?: Edm.String; ResponsibleUserGroupKey?: Edm.Guid; ResponsibleUserUser?: Main.Rest.Model.Main_User; TaskCampaignKey?: Edm.Guid; TaskCreateUser?: Edm.String; Text?: Edm.String; TypeKey?: Edm.String });

        ContactId: Edm.Guid;
        ContactName: Edm.String;
        ContactType: Edm.String;
        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        DomainId: Edm.Guid;
        DueDate: Edm.DateTimeOffset;
        DueTime: Edm.DateTimeOffset;
        ExtensionValues: Default.Crm_Task_ExtensionValues;
        Files: Crm.Rest.Model.Crm_FileResource[];
        Id: Edm.Guid;
        IsActive: Edm.Boolean;
        IsCompleted: Edm.Boolean;
        LegacyId: Edm.String;
        Links: Crm.Rest.Model.Crm_LinkResource[];
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        NoteId: Edm.Guid;
        ResponsibleUser: Edm.String;
        ResponsibleUserGroup: Edm.String;
        ResponsibleUserGroupKey: Edm.Guid;
        ResponsibleUserUser: Main.Rest.Model.Main_User;
        TaskCampaignKey: Edm.Guid;
        TaskCreateUser: Edm.String;
        Text: Edm.String;
        TypeKey: Edm.String;
        asKoObservable(): ObservableCrm_Task;
        static create(): Crm_Task;
        static create(initData:any): Crm_Task;
    }

    export class Crm_Website extends $data.Entity {
        constructor();
        constructor(initData: { AddressId?: Edm.Guid; Comment?: Edm.String; ContactId?: Edm.Guid; CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; Data?: Edm.String; DomainId?: Edm.Guid; Id?: Edm.Guid; IsActive?: Edm.Boolean; LegacyId?: Edm.String; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; TypeKey?: Edm.String });

        AddressId: Edm.Guid;
        Comment: Edm.String;
        ContactId: Edm.Guid;
        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        Data: Edm.String;
        DomainId: Edm.Guid;
        Id: Edm.Guid;
        IsActive: Edm.Boolean;
        LegacyId: Edm.String;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        TypeKey: Edm.String;
        asKoObservable(): ObservableCrm_Website;
        static create(): Crm_Website;
        static create(initData:any): Crm_Website;
    }

}

namespace Crm.Configurator.Rest.Model {

    export class ObservableCrmConfigurator_ConfigurationBase extends $data.Entity {
        constructor();
        constructor(initData: { ArticleGroup01Key?: KnockoutObservable<Edm.String>; ArticleGroup02Key?: KnockoutObservable<Edm.String>; ArticleGroup03Key?: KnockoutObservable<Edm.String>; ArticleGroup04Key?: KnockoutObservable<Edm.String>; ArticleGroup05Key?: KnockoutObservable<Edm.String>; ArticleTypeKey?: KnockoutObservable<Edm.String>; BackgroundInfo?: KnockoutObservable<Edm.String>; BarCode?: KnockoutObservable<Edm.String>; CampaignSource?: KnockoutObservable<Edm.Guid>; ConfigurationRules?: KnockoutObservableArray<Crm.Configurator.Rest.Model.ObservableCrmConfigurator_ConfigurationRule>; CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; CurrencyKey?: KnockoutObservable<Edm.String>; DangerousGoodsFlag?: KnockoutObservable<Edm.Boolean>; Description?: KnockoutObservable<Edm.String>; DocumentAttributes?: KnockoutObservableArray<Crm.Rest.Model.ObservableCrm_DocumentAttribute>; DomainId?: KnockoutObservable<Edm.Guid>; DrivingLicenceCategoryKey?: KnockoutObservable<Edm.String>; EAN?: KnockoutObservable<Edm.String>; ExtensionValues?: KnockoutObservable<Default.ObservableCrmConfigurator_ConfigurationBase_ExtensionValues>; GuaranteeInMonths?: KnockoutObservable<Edm.Int32>; Height?: KnockoutObservable<Edm.Decimal>; Id?: KnockoutObservable<Edm.Guid>; Inspection?: KnockoutObservable<Edm.String>; IsActive?: KnockoutObservable<Edm.Boolean>; IsBatch?: KnockoutObservable<Edm.Boolean>; IsEnabled?: KnockoutObservable<Edm.Boolean>; IsSerial?: KnockoutObservable<Edm.Boolean>; IsSparePart?: KnockoutObservable<Edm.Boolean>; IsWarehouseManaged?: KnockoutObservable<Edm.Boolean>; ItemNo?: KnockoutObservable<Edm.String>; LanguageKey?: KnockoutObservable<Edm.String>; LastActivity?: KnockoutObservable<Edm.DateTimeOffset>; LeadTimeInDays?: KnockoutObservable<Edm.Decimal>; LegacyId?: KnockoutObservable<Edm.String>; LegacyName?: KnockoutObservable<Edm.String>; Length?: KnockoutObservable<Edm.Decimal>; LicensePlate?: KnockoutObservable<Edm.String>; Manufacturer?: KnockoutObservable<Edm.String>; ManufacturerItemNo?: KnockoutObservable<Edm.String>; MinimumStock?: KnockoutObservable<Edm.Decimal>; Model?: KnockoutObservable<Edm.String>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; Name?: KnockoutObservable<Edm.String>; Notes?: KnockoutObservableArray<Crm.Rest.Model.ObservableCrm_Note>; ParentId?: KnockoutObservable<Edm.Guid>; ParentName?: KnockoutObservable<Edm.String>; ParentType?: KnockoutObservable<Edm.String>; Price?: KnockoutObservable<Edm.Decimal>; ProductFamily?: KnockoutObservable<Crm.Article.Rest.Model.ObservableCrmArticle_ProductFamily>; ProductFamilyKey?: KnockoutObservable<Edm.Guid>; PurchasePrice?: KnockoutObservable<Edm.Decimal>; QuantityStep?: KnockoutObservable<Edm.Decimal>; QuantityUnitEntry?: KnockoutObservable<Crm.Article.Rest.Model.ObservableCrmArticle_QuantityUnitEntry>; QuantityUnitEntryKey?: KnockoutObservable<Edm.Guid>; QuantityUnitKey?: KnockoutObservable<Edm.String>; RequiredAssetKeys?: KnockoutObservableArray<Edm.String>; RequiredSkillKeys?: KnockoutObservableArray<Edm.String>; ResponsibleUser?: KnockoutObservable<Edm.String>; Serial?: KnockoutObservable<Edm.String>; SerialRequired?: KnockoutObservable<Edm.Boolean>; Serials?: KnockoutObservableArray<Crm.Article.Rest.Model.ObservableCrmArticle_Serial>; SourceTypeKey?: KnockoutObservable<Edm.String>; Station?: KnockoutObservable<Crm.Rest.Model.ObservableCrm_Station>; StationKey?: KnockoutObservable<Edm.Guid>; Stocks?: KnockoutObservableArray<Crm.Article.Rest.Model.ObservableCrmArticle_Stock>; TUV?: KnockoutObservable<Edm.String>; Tags?: KnockoutObservableArray<Crm.Rest.Model.ObservableCrm_Tag>; VATLevelKey?: KnockoutObservable<Edm.String>; VIN?: KnockoutObservable<Edm.String>; ValidFrom?: KnockoutObservable<Edm.DateTimeOffset>; ValidTo?: KnockoutObservable<Edm.DateTimeOffset>; Variables?: KnockoutObservableArray<Crm.Configurator.Rest.Model.ObservableCrmConfigurator_Variable>; Visibility?: KnockoutObservable<Crm.Library.BaseModel.Visibility>; VisibleToUserIds?: KnockoutObservableArray<Edm.String>; VisibleToUsergroupIds?: KnockoutObservableArray<Edm.Guid>; WarrantyInMonths?: KnockoutObservable<Edm.Int32>; Weight?: KnockoutObservable<Edm.Decimal>; WeightNet?: KnockoutObservable<Edm.Decimal>; Width?: KnockoutObservable<Edm.Decimal> });

        ArticleGroup01Key: KnockoutObservable<Edm.String>;
        ArticleGroup02Key: KnockoutObservable<Edm.String>;
        ArticleGroup03Key: KnockoutObservable<Edm.String>;
        ArticleGroup04Key: KnockoutObservable<Edm.String>;
        ArticleGroup05Key: KnockoutObservable<Edm.String>;
        ArticleTypeKey: KnockoutObservable<Edm.String>;
        BackgroundInfo: KnockoutObservable<Edm.String>;
        BarCode: KnockoutObservable<Edm.String>;
        CampaignSource: KnockoutObservable<Edm.Guid>;
        ConfigurationRules: KnockoutObservableArray<Crm.Configurator.Rest.Model.ObservableCrmConfigurator_ConfigurationRule>;
        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        CurrencyKey: KnockoutObservable<Edm.String>;
        DangerousGoodsFlag: KnockoutObservable<Edm.Boolean>;
        Description: KnockoutObservable<Edm.String>;
        DocumentAttributes: KnockoutObservableArray<Crm.Rest.Model.ObservableCrm_DocumentAttribute>;
        DomainId: KnockoutObservable<Edm.Guid>;
        DrivingLicenceCategoryKey: KnockoutObservable<Edm.String>;
        EAN: KnockoutObservable<Edm.String>;
        ExtensionValues: KnockoutObservable<Default.ObservableCrmConfigurator_ConfigurationBase_ExtensionValues>;
        GuaranteeInMonths: KnockoutObservable<Edm.Int32>;
        Height: KnockoutObservable<Edm.Decimal>;
        Id: KnockoutObservable<Edm.Guid>;
        Inspection: KnockoutObservable<Edm.String>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        IsBatch: KnockoutObservable<Edm.Boolean>;
        IsEnabled: KnockoutObservable<Edm.Boolean>;
        IsSerial: KnockoutObservable<Edm.Boolean>;
        IsSparePart: KnockoutObservable<Edm.Boolean>;
        IsWarehouseManaged: KnockoutObservable<Edm.Boolean>;
        ItemNo: KnockoutObservable<Edm.String>;
        LanguageKey: KnockoutObservable<Edm.String>;
        LastActivity: KnockoutObservable<Edm.DateTimeOffset>;
        LeadTimeInDays: KnockoutObservable<Edm.Decimal>;
        LegacyId: KnockoutObservable<Edm.String>;
        LegacyName: KnockoutObservable<Edm.String>;
        Length: KnockoutObservable<Edm.Decimal>;
        LicensePlate: KnockoutObservable<Edm.String>;
        Manufacturer: KnockoutObservable<Edm.String>;
        ManufacturerItemNo: KnockoutObservable<Edm.String>;
        MinimumStock: KnockoutObservable<Edm.Decimal>;
        Model: KnockoutObservable<Edm.String>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        Name: KnockoutObservable<Edm.String>;
        Notes: KnockoutObservableArray<Crm.Rest.Model.ObservableCrm_Note>;
        ParentId: KnockoutObservable<Edm.Guid>;
        ParentName: KnockoutObservable<Edm.String>;
        ParentType: KnockoutObservable<Edm.String>;
        Price: KnockoutObservable<Edm.Decimal>;
        ProductFamily: KnockoutObservable<Crm.Article.Rest.Model.ObservableCrmArticle_ProductFamily>;
        ProductFamilyKey: KnockoutObservable<Edm.Guid>;
        PurchasePrice: KnockoutObservable<Edm.Decimal>;
        QuantityStep: KnockoutObservable<Edm.Decimal>;
        QuantityUnitEntry: KnockoutObservable<Crm.Article.Rest.Model.ObservableCrmArticle_QuantityUnitEntry>;
        QuantityUnitEntryKey: KnockoutObservable<Edm.Guid>;
        QuantityUnitKey: KnockoutObservable<Edm.String>;
        RequiredAssetKeys: KnockoutObservableArray<Edm.String>;
        RequiredSkillKeys: KnockoutObservableArray<Edm.String>;
        ResponsibleUser: KnockoutObservable<Edm.String>;
        Serial: KnockoutObservable<Edm.String>;
        SerialRequired: KnockoutObservable<Edm.Boolean>;
        Serials: KnockoutObservableArray<Crm.Article.Rest.Model.ObservableCrmArticle_Serial>;
        SourceTypeKey: KnockoutObservable<Edm.String>;
        Station: KnockoutObservable<Crm.Rest.Model.ObservableCrm_Station>;
        StationKey: KnockoutObservable<Edm.Guid>;
        Stocks: KnockoutObservableArray<Crm.Article.Rest.Model.ObservableCrmArticle_Stock>;
        TUV: KnockoutObservable<Edm.String>;
        Tags: KnockoutObservableArray<Crm.Rest.Model.ObservableCrm_Tag>;
        VATLevelKey: KnockoutObservable<Edm.String>;
        VIN: KnockoutObservable<Edm.String>;
        ValidFrom: KnockoutObservable<Edm.DateTimeOffset>;
        ValidTo: KnockoutObservable<Edm.DateTimeOffset>;
        Variables: KnockoutObservableArray<Crm.Configurator.Rest.Model.ObservableCrmConfigurator_Variable>;
        Visibility: KnockoutObservable<Crm.Library.BaseModel.Visibility>;
        VisibleToUserIds: KnockoutObservableArray<Edm.String>;
        VisibleToUsergroupIds: KnockoutObservableArray<Edm.Guid>;
        WarrantyInMonths: KnockoutObservable<Edm.Int32>;
        Weight: KnockoutObservable<Edm.Decimal>;
        WeightNet: KnockoutObservable<Edm.Decimal>;
        Width: KnockoutObservable<Edm.Decimal>;
        innerInstance: CrmConfigurator_ConfigurationBase;
    }

    export class ObservableCrmConfigurator_ConfigurationRule extends $data.Entity {
        constructor();
        constructor(initData: { AffectedVariableValues?: KnockoutObservableArray<Edm.Guid>; ConfigurationBase?: KnockoutObservable<Crm.Configurator.Rest.Model.ObservableCrmConfigurator_ConfigurationBase>; ConfigurationBaseId?: KnockoutObservable<Edm.Guid>; CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; DomainId?: KnockoutObservable<Edm.Guid>; Id?: KnockoutObservable<Edm.Guid>; IsActive?: KnockoutObservable<Edm.Boolean>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; Validation?: KnockoutObservable<Edm.String>; VariableValues?: KnockoutObservableArray<Edm.Guid> });

        AffectedVariableValues: KnockoutObservableArray<Edm.Guid>;
        ConfigurationBase: KnockoutObservable<Crm.Configurator.Rest.Model.ObservableCrmConfigurator_ConfigurationBase>;
        ConfigurationBaseId: KnockoutObservable<Edm.Guid>;
        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        DomainId: KnockoutObservable<Edm.Guid>;
        Id: KnockoutObservable<Edm.Guid>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        Validation: KnockoutObservable<Edm.String>;
        VariableValues: KnockoutObservableArray<Edm.Guid>;
        innerInstance: CrmConfigurator_ConfigurationRule;
    }

    export class ObservableCrmConfigurator_Variable extends $data.Entity {
        constructor();
        constructor(initData: { ArticleGroup01Key?: KnockoutObservable<Edm.String>; ArticleGroup02Key?: KnockoutObservable<Edm.String>; ArticleGroup03Key?: KnockoutObservable<Edm.String>; ArticleGroup04Key?: KnockoutObservable<Edm.String>; ArticleGroup05Key?: KnockoutObservable<Edm.String>; ArticleTypeKey?: KnockoutObservable<Edm.String>; BackgroundInfo?: KnockoutObservable<Edm.String>; BarCode?: KnockoutObservable<Edm.String>; CampaignSource?: KnockoutObservable<Edm.Guid>; ConfigurationBase?: KnockoutObservable<Crm.Configurator.Rest.Model.ObservableCrmConfigurator_ConfigurationBase>; CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; CurrencyKey?: KnockoutObservable<Edm.String>; DangerousGoodsFlag?: KnockoutObservable<Edm.Boolean>; Description?: KnockoutObservable<Edm.String>; DocumentAttributes?: KnockoutObservableArray<Crm.Rest.Model.ObservableCrm_DocumentAttribute>; DomainId?: KnockoutObservable<Edm.Guid>; DrivingLicenceCategoryKey?: KnockoutObservable<Edm.String>; EAN?: KnockoutObservable<Edm.String>; ExtensionValues?: KnockoutObservable<Default.ObservableCrmConfigurator_Variable_ExtensionValues>; GuaranteeInMonths?: KnockoutObservable<Edm.Int32>; Height?: KnockoutObservable<Edm.Decimal>; Id?: KnockoutObservable<Edm.Guid>; Inspection?: KnockoutObservable<Edm.String>; IsActive?: KnockoutObservable<Edm.Boolean>; IsBatch?: KnockoutObservable<Edm.Boolean>; IsEnabled?: KnockoutObservable<Edm.Boolean>; IsSerial?: KnockoutObservable<Edm.Boolean>; IsSparePart?: KnockoutObservable<Edm.Boolean>; IsWarehouseManaged?: KnockoutObservable<Edm.Boolean>; ItemNo?: KnockoutObservable<Edm.String>; LanguageKey?: KnockoutObservable<Edm.String>; LastActivity?: KnockoutObservable<Edm.DateTimeOffset>; LeadTimeInDays?: KnockoutObservable<Edm.Decimal>; LegacyId?: KnockoutObservable<Edm.String>; LegacyName?: KnockoutObservable<Edm.String>; Length?: KnockoutObservable<Edm.Decimal>; LicensePlate?: KnockoutObservable<Edm.String>; Manufacturer?: KnockoutObservable<Edm.String>; ManufacturerItemNo?: KnockoutObservable<Edm.String>; MinimumStock?: KnockoutObservable<Edm.Decimal>; Model?: KnockoutObservable<Edm.String>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; Name?: KnockoutObservable<Edm.String>; Notes?: KnockoutObservableArray<Crm.Rest.Model.ObservableCrm_Note>; ParentId?: KnockoutObservable<Edm.Guid>; ParentName?: KnockoutObservable<Edm.String>; ParentType?: KnockoutObservable<Edm.String>; Price?: KnockoutObservable<Edm.Decimal>; ProductFamily?: KnockoutObservable<Crm.Article.Rest.Model.ObservableCrmArticle_ProductFamily>; ProductFamilyKey?: KnockoutObservable<Edm.Guid>; PurchasePrice?: KnockoutObservable<Edm.Decimal>; QuantityStep?: KnockoutObservable<Edm.Decimal>; QuantityUnitEntry?: KnockoutObservable<Crm.Article.Rest.Model.ObservableCrmArticle_QuantityUnitEntry>; QuantityUnitEntryKey?: KnockoutObservable<Edm.Guid>; QuantityUnitKey?: KnockoutObservable<Edm.String>; RequiredAssetKeys?: KnockoutObservableArray<Edm.String>; RequiredSkillKeys?: KnockoutObservableArray<Edm.String>; ResponsibleUser?: KnockoutObservable<Edm.String>; Serial?: KnockoutObservable<Edm.String>; SerialRequired?: KnockoutObservable<Edm.Boolean>; Serials?: KnockoutObservableArray<Crm.Article.Rest.Model.ObservableCrmArticle_Serial>; SourceTypeKey?: KnockoutObservable<Edm.String>; Station?: KnockoutObservable<Crm.Rest.Model.ObservableCrm_Station>; StationKey?: KnockoutObservable<Edm.Guid>; Stocks?: KnockoutObservableArray<Crm.Article.Rest.Model.ObservableCrmArticle_Stock>; TUV?: KnockoutObservable<Edm.String>; Tags?: KnockoutObservableArray<Crm.Rest.Model.ObservableCrm_Tag>; VATLevelKey?: KnockoutObservable<Edm.String>; VIN?: KnockoutObservable<Edm.String>; ValidFrom?: KnockoutObservable<Edm.DateTimeOffset>; ValidTo?: KnockoutObservable<Edm.DateTimeOffset>; Visibility?: KnockoutObservable<Crm.Library.BaseModel.Visibility>; VisibleToUserIds?: KnockoutObservableArray<Edm.String>; VisibleToUsergroupIds?: KnockoutObservableArray<Edm.Guid>; WarrantyInMonths?: KnockoutObservable<Edm.Int32>; Weight?: KnockoutObservable<Edm.Decimal>; WeightNet?: KnockoutObservable<Edm.Decimal>; Width?: KnockoutObservable<Edm.Decimal> });

        ArticleGroup01Key: KnockoutObservable<Edm.String>;
        ArticleGroup02Key: KnockoutObservable<Edm.String>;
        ArticleGroup03Key: KnockoutObservable<Edm.String>;
        ArticleGroup04Key: KnockoutObservable<Edm.String>;
        ArticleGroup05Key: KnockoutObservable<Edm.String>;
        ArticleTypeKey: KnockoutObservable<Edm.String>;
        BackgroundInfo: KnockoutObservable<Edm.String>;
        BarCode: KnockoutObservable<Edm.String>;
        CampaignSource: KnockoutObservable<Edm.Guid>;
        ConfigurationBase: KnockoutObservable<Crm.Configurator.Rest.Model.ObservableCrmConfigurator_ConfigurationBase>;
        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        CurrencyKey: KnockoutObservable<Edm.String>;
        DangerousGoodsFlag: KnockoutObservable<Edm.Boolean>;
        Description: KnockoutObservable<Edm.String>;
        DocumentAttributes: KnockoutObservableArray<Crm.Rest.Model.ObservableCrm_DocumentAttribute>;
        DomainId: KnockoutObservable<Edm.Guid>;
        DrivingLicenceCategoryKey: KnockoutObservable<Edm.String>;
        EAN: KnockoutObservable<Edm.String>;
        ExtensionValues: KnockoutObservable<Default.ObservableCrmConfigurator_Variable_ExtensionValues>;
        GuaranteeInMonths: KnockoutObservable<Edm.Int32>;
        Height: KnockoutObservable<Edm.Decimal>;
        Id: KnockoutObservable<Edm.Guid>;
        Inspection: KnockoutObservable<Edm.String>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        IsBatch: KnockoutObservable<Edm.Boolean>;
        IsEnabled: KnockoutObservable<Edm.Boolean>;
        IsSerial: KnockoutObservable<Edm.Boolean>;
        IsSparePart: KnockoutObservable<Edm.Boolean>;
        IsWarehouseManaged: KnockoutObservable<Edm.Boolean>;
        ItemNo: KnockoutObservable<Edm.String>;
        LanguageKey: KnockoutObservable<Edm.String>;
        LastActivity: KnockoutObservable<Edm.DateTimeOffset>;
        LeadTimeInDays: KnockoutObservable<Edm.Decimal>;
        LegacyId: KnockoutObservable<Edm.String>;
        LegacyName: KnockoutObservable<Edm.String>;
        Length: KnockoutObservable<Edm.Decimal>;
        LicensePlate: KnockoutObservable<Edm.String>;
        Manufacturer: KnockoutObservable<Edm.String>;
        ManufacturerItemNo: KnockoutObservable<Edm.String>;
        MinimumStock: KnockoutObservable<Edm.Decimal>;
        Model: KnockoutObservable<Edm.String>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        Name: KnockoutObservable<Edm.String>;
        Notes: KnockoutObservableArray<Crm.Rest.Model.ObservableCrm_Note>;
        ParentId: KnockoutObservable<Edm.Guid>;
        ParentName: KnockoutObservable<Edm.String>;
        ParentType: KnockoutObservable<Edm.String>;
        Price: KnockoutObservable<Edm.Decimal>;
        ProductFamily: KnockoutObservable<Crm.Article.Rest.Model.ObservableCrmArticle_ProductFamily>;
        ProductFamilyKey: KnockoutObservable<Edm.Guid>;
        PurchasePrice: KnockoutObservable<Edm.Decimal>;
        QuantityStep: KnockoutObservable<Edm.Decimal>;
        QuantityUnitEntry: KnockoutObservable<Crm.Article.Rest.Model.ObservableCrmArticle_QuantityUnitEntry>;
        QuantityUnitEntryKey: KnockoutObservable<Edm.Guid>;
        QuantityUnitKey: KnockoutObservable<Edm.String>;
        RequiredAssetKeys: KnockoutObservableArray<Edm.String>;
        RequiredSkillKeys: KnockoutObservableArray<Edm.String>;
        ResponsibleUser: KnockoutObservable<Edm.String>;
        Serial: KnockoutObservable<Edm.String>;
        SerialRequired: KnockoutObservable<Edm.Boolean>;
        Serials: KnockoutObservableArray<Crm.Article.Rest.Model.ObservableCrmArticle_Serial>;
        SourceTypeKey: KnockoutObservable<Edm.String>;
        Station: KnockoutObservable<Crm.Rest.Model.ObservableCrm_Station>;
        StationKey: KnockoutObservable<Edm.Guid>;
        Stocks: KnockoutObservableArray<Crm.Article.Rest.Model.ObservableCrmArticle_Stock>;
        TUV: KnockoutObservable<Edm.String>;
        Tags: KnockoutObservableArray<Crm.Rest.Model.ObservableCrm_Tag>;
        VATLevelKey: KnockoutObservable<Edm.String>;
        VIN: KnockoutObservable<Edm.String>;
        ValidFrom: KnockoutObservable<Edm.DateTimeOffset>;
        ValidTo: KnockoutObservable<Edm.DateTimeOffset>;
        Visibility: KnockoutObservable<Crm.Library.BaseModel.Visibility>;
        VisibleToUserIds: KnockoutObservableArray<Edm.String>;
        VisibleToUsergroupIds: KnockoutObservableArray<Edm.Guid>;
        WarrantyInMonths: KnockoutObservable<Edm.Int32>;
        Weight: KnockoutObservable<Edm.Decimal>;
        WeightNet: KnockoutObservable<Edm.Decimal>;
        Width: KnockoutObservable<Edm.Decimal>;
        innerInstance: CrmConfigurator_Variable;
    }

    export class CrmConfigurator_ConfigurationBase extends $data.Entity {
        constructor();
        constructor(initData: { ArticleGroup01Key?: Edm.String; ArticleGroup02Key?: Edm.String; ArticleGroup03Key?: Edm.String; ArticleGroup04Key?: Edm.String; ArticleGroup05Key?: Edm.String; ArticleTypeKey?: Edm.String; BackgroundInfo?: Edm.String; BarCode?: Edm.String; CampaignSource?: Edm.Guid; ConfigurationRules?: Crm.Configurator.Rest.Model.CrmConfigurator_ConfigurationRule[]; CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; CurrencyKey?: Edm.String; DangerousGoodsFlag?: Edm.Boolean; Description?: Edm.String; DocumentAttributes?: Crm.Rest.Model.Crm_DocumentAttribute[]; DomainId?: Edm.Guid; DrivingLicenceCategoryKey?: Edm.String; EAN?: Edm.String; ExtensionValues?: Default.CrmConfigurator_ConfigurationBase_ExtensionValues; GuaranteeInMonths?: Edm.Int32; Height?: Edm.Decimal; Id?: Edm.Guid; Inspection?: Edm.String; IsActive?: Edm.Boolean; IsBatch?: Edm.Boolean; IsEnabled?: Edm.Boolean; IsSerial?: Edm.Boolean; IsSparePart?: Edm.Boolean; IsWarehouseManaged?: Edm.Boolean; ItemNo?: Edm.String; LanguageKey?: Edm.String; LastActivity?: Edm.DateTimeOffset; LeadTimeInDays?: Edm.Decimal; LegacyId?: Edm.String; LegacyName?: Edm.String; Length?: Edm.Decimal; LicensePlate?: Edm.String; Manufacturer?: Edm.String; ManufacturerItemNo?: Edm.String; MinimumStock?: Edm.Decimal; Model?: Edm.String; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; Name?: Edm.String; Notes?: Crm.Rest.Model.Crm_Note[]; ParentId?: Edm.Guid; ParentName?: Edm.String; ParentType?: Edm.String; Price?: Edm.Decimal; ProductFamily?: Crm.Article.Rest.Model.CrmArticle_ProductFamily; ProductFamilyKey?: Edm.Guid; PurchasePrice?: Edm.Decimal; QuantityStep?: Edm.Decimal; QuantityUnitEntry?: Crm.Article.Rest.Model.CrmArticle_QuantityUnitEntry; QuantityUnitEntryKey?: Edm.Guid; QuantityUnitKey?: Edm.String; RequiredAssetKeys?: Edm.String[]; RequiredSkillKeys?: Edm.String[]; ResponsibleUser?: Edm.String; Serial?: Edm.String; SerialRequired?: Edm.Boolean; Serials?: Crm.Article.Rest.Model.CrmArticle_Serial[]; SourceTypeKey?: Edm.String; Station?: Crm.Rest.Model.Crm_Station; StationKey?: Edm.Guid; Stocks?: Crm.Article.Rest.Model.CrmArticle_Stock[]; TUV?: Edm.String; Tags?: Crm.Rest.Model.Crm_Tag[]; VATLevelKey?: Edm.String; VIN?: Edm.String; ValidFrom?: Edm.DateTimeOffset; ValidTo?: Edm.DateTimeOffset; Variables?: Crm.Configurator.Rest.Model.CrmConfigurator_Variable[]; Visibility?: Crm.Library.BaseModel.Visibility; VisibleToUserIds?: Edm.String[]; VisibleToUsergroupIds?: Edm.Guid[]; WarrantyInMonths?: Edm.Int32; Weight?: Edm.Decimal; WeightNet?: Edm.Decimal; Width?: Edm.Decimal });

        ArticleGroup01Key: Edm.String;
        ArticleGroup02Key: Edm.String;
        ArticleGroup03Key: Edm.String;
        ArticleGroup04Key: Edm.String;
        ArticleGroup05Key: Edm.String;
        ArticleTypeKey: Edm.String;
        BackgroundInfo: Edm.String;
        BarCode: Edm.String;
        CampaignSource: Edm.Guid;
        ConfigurationRules: Crm.Configurator.Rest.Model.CrmConfigurator_ConfigurationRule[];
        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        CurrencyKey: Edm.String;
        DangerousGoodsFlag: Edm.Boolean;
        Description: Edm.String;
        DocumentAttributes: Crm.Rest.Model.Crm_DocumentAttribute[];
        DomainId: Edm.Guid;
        DrivingLicenceCategoryKey: Edm.String;
        EAN: Edm.String;
        ExtensionValues: Default.CrmConfigurator_ConfigurationBase_ExtensionValues;
        GuaranteeInMonths: Edm.Int32;
        Height: Edm.Decimal;
        Id: Edm.Guid;
        Inspection: Edm.String;
        IsActive: Edm.Boolean;
        IsBatch: Edm.Boolean;
        IsEnabled: Edm.Boolean;
        IsSerial: Edm.Boolean;
        IsSparePart: Edm.Boolean;
        IsWarehouseManaged: Edm.Boolean;
        ItemNo: Edm.String;
        LanguageKey: Edm.String;
        LastActivity: Edm.DateTimeOffset;
        LeadTimeInDays: Edm.Decimal;
        LegacyId: Edm.String;
        LegacyName: Edm.String;
        Length: Edm.Decimal;
        LicensePlate: Edm.String;
        Manufacturer: Edm.String;
        ManufacturerItemNo: Edm.String;
        MinimumStock: Edm.Decimal;
        Model: Edm.String;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        Name: Edm.String;
        Notes: Crm.Rest.Model.Crm_Note[];
        ParentId: Edm.Guid;
        ParentName: Edm.String;
        ParentType: Edm.String;
        Price: Edm.Decimal;
        ProductFamily: Crm.Article.Rest.Model.CrmArticle_ProductFamily;
        ProductFamilyKey: Edm.Guid;
        PurchasePrice: Edm.Decimal;
        QuantityStep: Edm.Decimal;
        QuantityUnitEntry: Crm.Article.Rest.Model.CrmArticle_QuantityUnitEntry;
        QuantityUnitEntryKey: Edm.Guid;
        QuantityUnitKey: Edm.String;
        RequiredAssetKeys: Edm.String[];
        RequiredSkillKeys: Edm.String[];
        ResponsibleUser: Edm.String;
        Serial: Edm.String;
        SerialRequired: Edm.Boolean;
        Serials: Crm.Article.Rest.Model.CrmArticle_Serial[];
        SourceTypeKey: Edm.String;
        Station: Crm.Rest.Model.Crm_Station;
        StationKey: Edm.Guid;
        Stocks: Crm.Article.Rest.Model.CrmArticle_Stock[];
        TUV: Edm.String;
        Tags: Crm.Rest.Model.Crm_Tag[];
        VATLevelKey: Edm.String;
        VIN: Edm.String;
        ValidFrom: Edm.DateTimeOffset;
        ValidTo: Edm.DateTimeOffset;
        Variables: Crm.Configurator.Rest.Model.CrmConfigurator_Variable[];
        Visibility: Crm.Library.BaseModel.Visibility;
        VisibleToUserIds: Edm.String[];
        VisibleToUsergroupIds: Edm.Guid[];
        WarrantyInMonths: Edm.Int32;
        Weight: Edm.Decimal;
        WeightNet: Edm.Decimal;
        Width: Edm.Decimal;
        asKoObservable(): ObservableCrmConfigurator_ConfigurationBase;
        static create(): CrmConfigurator_ConfigurationBase;
        static create(initData:any): CrmConfigurator_ConfigurationBase;
    }

    export class CrmConfigurator_ConfigurationRule extends $data.Entity {
        constructor();
        constructor(initData: { AffectedVariableValues?: Edm.Guid[]; ConfigurationBase?: Crm.Configurator.Rest.Model.CrmConfigurator_ConfigurationBase; ConfigurationBaseId?: Edm.Guid; CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; DomainId?: Edm.Guid; Id?: Edm.Guid; IsActive?: Edm.Boolean; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; Validation?: Edm.String; VariableValues?: Edm.Guid[] });

        AffectedVariableValues: Edm.Guid[];
        ConfigurationBase: Crm.Configurator.Rest.Model.CrmConfigurator_ConfigurationBase;
        ConfigurationBaseId: Edm.Guid;
        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        DomainId: Edm.Guid;
        Id: Edm.Guid;
        IsActive: Edm.Boolean;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        Validation: Edm.String;
        VariableValues: Edm.Guid[];
        asKoObservable(): ObservableCrmConfigurator_ConfigurationRule;
        static create(): CrmConfigurator_ConfigurationRule;
        static create(initData:any): CrmConfigurator_ConfigurationRule;
    }

    export class CrmConfigurator_Variable extends $data.Entity {
        constructor();
        constructor(initData: { ArticleGroup01Key?: Edm.String; ArticleGroup02Key?: Edm.String; ArticleGroup03Key?: Edm.String; ArticleGroup04Key?: Edm.String; ArticleGroup05Key?: Edm.String; ArticleTypeKey?: Edm.String; BackgroundInfo?: Edm.String; BarCode?: Edm.String; CampaignSource?: Edm.Guid; ConfigurationBase?: Crm.Configurator.Rest.Model.CrmConfigurator_ConfigurationBase; CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; CurrencyKey?: Edm.String; DangerousGoodsFlag?: Edm.Boolean; Description?: Edm.String; DocumentAttributes?: Crm.Rest.Model.Crm_DocumentAttribute[]; DomainId?: Edm.Guid; DrivingLicenceCategoryKey?: Edm.String; EAN?: Edm.String; ExtensionValues?: Default.CrmConfigurator_Variable_ExtensionValues; GuaranteeInMonths?: Edm.Int32; Height?: Edm.Decimal; Id?: Edm.Guid; Inspection?: Edm.String; IsActive?: Edm.Boolean; IsBatch?: Edm.Boolean; IsEnabled?: Edm.Boolean; IsSerial?: Edm.Boolean; IsSparePart?: Edm.Boolean; IsWarehouseManaged?: Edm.Boolean; ItemNo?: Edm.String; LanguageKey?: Edm.String; LastActivity?: Edm.DateTimeOffset; LeadTimeInDays?: Edm.Decimal; LegacyId?: Edm.String; LegacyName?: Edm.String; Length?: Edm.Decimal; LicensePlate?: Edm.String; Manufacturer?: Edm.String; ManufacturerItemNo?: Edm.String; MinimumStock?: Edm.Decimal; Model?: Edm.String; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; Name?: Edm.String; Notes?: Crm.Rest.Model.Crm_Note[]; ParentId?: Edm.Guid; ParentName?: Edm.String; ParentType?: Edm.String; Price?: Edm.Decimal; ProductFamily?: Crm.Article.Rest.Model.CrmArticle_ProductFamily; ProductFamilyKey?: Edm.Guid; PurchasePrice?: Edm.Decimal; QuantityStep?: Edm.Decimal; QuantityUnitEntry?: Crm.Article.Rest.Model.CrmArticle_QuantityUnitEntry; QuantityUnitEntryKey?: Edm.Guid; QuantityUnitKey?: Edm.String; RequiredAssetKeys?: Edm.String[]; RequiredSkillKeys?: Edm.String[]; ResponsibleUser?: Edm.String; Serial?: Edm.String; SerialRequired?: Edm.Boolean; Serials?: Crm.Article.Rest.Model.CrmArticle_Serial[]; SourceTypeKey?: Edm.String; Station?: Crm.Rest.Model.Crm_Station; StationKey?: Edm.Guid; Stocks?: Crm.Article.Rest.Model.CrmArticle_Stock[]; TUV?: Edm.String; Tags?: Crm.Rest.Model.Crm_Tag[]; VATLevelKey?: Edm.String; VIN?: Edm.String; ValidFrom?: Edm.DateTimeOffset; ValidTo?: Edm.DateTimeOffset; Visibility?: Crm.Library.BaseModel.Visibility; VisibleToUserIds?: Edm.String[]; VisibleToUsergroupIds?: Edm.Guid[]; WarrantyInMonths?: Edm.Int32; Weight?: Edm.Decimal; WeightNet?: Edm.Decimal; Width?: Edm.Decimal });

        ArticleGroup01Key: Edm.String;
        ArticleGroup02Key: Edm.String;
        ArticleGroup03Key: Edm.String;
        ArticleGroup04Key: Edm.String;
        ArticleGroup05Key: Edm.String;
        ArticleTypeKey: Edm.String;
        BackgroundInfo: Edm.String;
        BarCode: Edm.String;
        CampaignSource: Edm.Guid;
        ConfigurationBase: Crm.Configurator.Rest.Model.CrmConfigurator_ConfigurationBase;
        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        CurrencyKey: Edm.String;
        DangerousGoodsFlag: Edm.Boolean;
        Description: Edm.String;
        DocumentAttributes: Crm.Rest.Model.Crm_DocumentAttribute[];
        DomainId: Edm.Guid;
        DrivingLicenceCategoryKey: Edm.String;
        EAN: Edm.String;
        ExtensionValues: Default.CrmConfigurator_Variable_ExtensionValues;
        GuaranteeInMonths: Edm.Int32;
        Height: Edm.Decimal;
        Id: Edm.Guid;
        Inspection: Edm.String;
        IsActive: Edm.Boolean;
        IsBatch: Edm.Boolean;
        IsEnabled: Edm.Boolean;
        IsSerial: Edm.Boolean;
        IsSparePart: Edm.Boolean;
        IsWarehouseManaged: Edm.Boolean;
        ItemNo: Edm.String;
        LanguageKey: Edm.String;
        LastActivity: Edm.DateTimeOffset;
        LeadTimeInDays: Edm.Decimal;
        LegacyId: Edm.String;
        LegacyName: Edm.String;
        Length: Edm.Decimal;
        LicensePlate: Edm.String;
        Manufacturer: Edm.String;
        ManufacturerItemNo: Edm.String;
        MinimumStock: Edm.Decimal;
        Model: Edm.String;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        Name: Edm.String;
        Notes: Crm.Rest.Model.Crm_Note[];
        ParentId: Edm.Guid;
        ParentName: Edm.String;
        ParentType: Edm.String;
        Price: Edm.Decimal;
        ProductFamily: Crm.Article.Rest.Model.CrmArticle_ProductFamily;
        ProductFamilyKey: Edm.Guid;
        PurchasePrice: Edm.Decimal;
        QuantityStep: Edm.Decimal;
        QuantityUnitEntry: Crm.Article.Rest.Model.CrmArticle_QuantityUnitEntry;
        QuantityUnitEntryKey: Edm.Guid;
        QuantityUnitKey: Edm.String;
        RequiredAssetKeys: Edm.String[];
        RequiredSkillKeys: Edm.String[];
        ResponsibleUser: Edm.String;
        Serial: Edm.String;
        SerialRequired: Edm.Boolean;
        Serials: Crm.Article.Rest.Model.CrmArticle_Serial[];
        SourceTypeKey: Edm.String;
        Station: Crm.Rest.Model.Crm_Station;
        StationKey: Edm.Guid;
        Stocks: Crm.Article.Rest.Model.CrmArticle_Stock[];
        TUV: Edm.String;
        Tags: Crm.Rest.Model.Crm_Tag[];
        VATLevelKey: Edm.String;
        VIN: Edm.String;
        ValidFrom: Edm.DateTimeOffset;
        ValidTo: Edm.DateTimeOffset;
        Visibility: Crm.Library.BaseModel.Visibility;
        VisibleToUserIds: Edm.String[];
        VisibleToUsergroupIds: Edm.Guid[];
        WarrantyInMonths: Edm.Int32;
        Weight: Edm.Decimal;
        WeightNet: Edm.Decimal;
        Width: Edm.Decimal;
        asKoObservable(): ObservableCrmConfigurator_Variable;
        static create(): CrmConfigurator_Variable;
        static create(initData:any): CrmConfigurator_Variable;
    }

}

namespace Crm.Campaigns.Rest.Model {

    export class ObservableCrmCampaigns_CampaignCompany extends $data.Entity {
        constructor();
        constructor(initData: { Campaign?: KnockoutObservable<Crm.Campaigns.Rest.Model.ObservableCrmCampaigns_Campaign>; CampaignKey?: KnockoutObservable<Edm.Guid>; CampaignPersons?: KnockoutObservableArray<Crm.Campaigns.Rest.Model.ObservableCrmCampaigns_CampaignPerson>; Company?: KnockoutObservable<Crm.Rest.Model.ObservableCrm_Company>; CompanyKey?: KnockoutObservable<Edm.Guid>; CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; DomainId?: KnockoutObservable<Edm.Guid>; Id?: KnockoutObservable<Edm.Guid>; IsActive?: KnockoutObservable<Edm.Boolean>; IsParticipaiting?: KnockoutObservable<Edm.Boolean>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String> });

        Campaign: KnockoutObservable<Crm.Campaigns.Rest.Model.ObservableCrmCampaigns_Campaign>;
        CampaignKey: KnockoutObservable<Edm.Guid>;
        CampaignPersons: KnockoutObservableArray<Crm.Campaigns.Rest.Model.ObservableCrmCampaigns_CampaignPerson>;
        Company: KnockoutObservable<Crm.Rest.Model.ObservableCrm_Company>;
        CompanyKey: KnockoutObservable<Edm.Guid>;
        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        DomainId: KnockoutObservable<Edm.Guid>;
        Id: KnockoutObservable<Edm.Guid>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        IsParticipaiting: KnockoutObservable<Edm.Boolean>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        innerInstance: CrmCampaigns_CampaignCompany;
    }

    export class ObservableCrmCampaigns_CampaignPerson extends $data.Entity {
        constructor();
        constructor(initData: { Campaign?: KnockoutObservable<Crm.Campaigns.Rest.Model.ObservableCrmCampaigns_Campaign>; CampaignCompany?: KnockoutObservable<Crm.Campaigns.Rest.Model.ObservableCrmCampaigns_CampaignCompany>; CampaignKey?: KnockoutObservable<Edm.Guid>; Company?: KnockoutObservable<Crm.Rest.Model.ObservableCrm_Company>; CompanyKey?: KnockoutObservable<Edm.Guid>; CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; DomainId?: KnockoutObservable<Edm.Guid>; HasParticipated?: KnockoutObservable<Edm.Boolean>; Id?: KnockoutObservable<Edm.Guid>; IsActive?: KnockoutObservable<Edm.Boolean>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; Person?: KnockoutObservable<Crm.Rest.Model.ObservableCrm_Person>; PersonKey?: KnockoutObservable<Edm.Guid> });

        Campaign: KnockoutObservable<Crm.Campaigns.Rest.Model.ObservableCrmCampaigns_Campaign>;
        CampaignCompany: KnockoutObservable<Crm.Campaigns.Rest.Model.ObservableCrmCampaigns_CampaignCompany>;
        CampaignKey: KnockoutObservable<Edm.Guid>;
        Company: KnockoutObservable<Crm.Rest.Model.ObservableCrm_Company>;
        CompanyKey: KnockoutObservable<Edm.Guid>;
        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        DomainId: KnockoutObservable<Edm.Guid>;
        HasParticipated: KnockoutObservable<Edm.Boolean>;
        Id: KnockoutObservable<Edm.Guid>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        Person: KnockoutObservable<Crm.Rest.Model.ObservableCrm_Person>;
        PersonKey: KnockoutObservable<Edm.Guid>;
        innerInstance: CrmCampaigns_CampaignPerson;
    }

    export class ObservableCrmCampaigns_Campaign extends $data.Entity {
        constructor();
        constructor(initData: { ActualCosts?: KnockoutObservable<Edm.Single>; BeginDate?: KnockoutObservable<Edm.DateTimeOffset>; CampaignNo?: KnockoutObservable<Edm.String>; CategoryKey?: KnockoutObservable<Edm.String>; CostsCurrencyKey?: KnockoutObservable<Edm.String>; CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; Description?: KnockoutObservable<Edm.String>; DomainId?: KnockoutObservable<Edm.Guid>; EndDate?: KnockoutObservable<Edm.DateTimeOffset>; ExpectedCosts?: KnockoutObservable<Edm.Single>; ExpectedProjectsCount?: KnockoutObservable<Edm.Int32>; ExpectedVolume?: KnockoutObservable<Edm.Single>; Id?: KnockoutObservable<Edm.Guid>; IsActive?: KnockoutObservable<Edm.Boolean>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; Name?: KnockoutObservable<Edm.String>; ParticipatingCompanies?: KnockoutObservableArray<Crm.Campaigns.Rest.Model.ObservableCrmCampaigns_CampaignCompany>; ParticipatingPersons?: KnockoutObservableArray<Crm.Campaigns.Rest.Model.ObservableCrmCampaigns_CampaignPerson>; ProductFamily?: KnockoutObservable<Crm.Article.Rest.Model.ObservableCrmArticle_ProductFamily>; ProductFamilyKey?: KnockoutObservable<Edm.Guid>; ResponsibleUser?: KnockoutObservable<Edm.String>; ResponsibleUserUser?: KnockoutObservable<Main.Rest.Model.ObservableMain_User>; StatusKey?: KnockoutObservable<Edm.String>; VolumeCurrencyKey?: KnockoutObservable<Edm.String> });

        ActualCosts: KnockoutObservable<Edm.Single>;
        BeginDate: KnockoutObservable<Edm.DateTimeOffset>;
        CampaignNo: KnockoutObservable<Edm.String>;
        CategoryKey: KnockoutObservable<Edm.String>;
        CostsCurrencyKey: KnockoutObservable<Edm.String>;
        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        Description: KnockoutObservable<Edm.String>;
        DomainId: KnockoutObservable<Edm.Guid>;
        EndDate: KnockoutObservable<Edm.DateTimeOffset>;
        ExpectedCosts: KnockoutObservable<Edm.Single>;
        ExpectedProjectsCount: KnockoutObservable<Edm.Int32>;
        ExpectedVolume: KnockoutObservable<Edm.Single>;
        Id: KnockoutObservable<Edm.Guid>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        Name: KnockoutObservable<Edm.String>;
        ParticipatingCompanies: KnockoutObservableArray<Crm.Campaigns.Rest.Model.ObservableCrmCampaigns_CampaignCompany>;
        ParticipatingPersons: KnockoutObservableArray<Crm.Campaigns.Rest.Model.ObservableCrmCampaigns_CampaignPerson>;
        ProductFamily: KnockoutObservable<Crm.Article.Rest.Model.ObservableCrmArticle_ProductFamily>;
        ProductFamilyKey: KnockoutObservable<Edm.Guid>;
        ResponsibleUser: KnockoutObservable<Edm.String>;
        ResponsibleUserUser: KnockoutObservable<Main.Rest.Model.ObservableMain_User>;
        StatusKey: KnockoutObservable<Edm.String>;
        VolumeCurrencyKey: KnockoutObservable<Edm.String>;
        innerInstance: CrmCampaigns_Campaign;
    }

    export class CrmCampaigns_CampaignCompany extends $data.Entity {
        constructor();
        constructor(initData: { Campaign?: Crm.Campaigns.Rest.Model.CrmCampaigns_Campaign; CampaignKey?: Edm.Guid; CampaignPersons?: Crm.Campaigns.Rest.Model.CrmCampaigns_CampaignPerson[]; Company?: Crm.Rest.Model.Crm_Company; CompanyKey?: Edm.Guid; CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; DomainId?: Edm.Guid; Id?: Edm.Guid; IsActive?: Edm.Boolean; IsParticipaiting?: Edm.Boolean; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String });

        Campaign: Crm.Campaigns.Rest.Model.CrmCampaigns_Campaign;
        CampaignKey: Edm.Guid;
        CampaignPersons: Crm.Campaigns.Rest.Model.CrmCampaigns_CampaignPerson[];
        Company: Crm.Rest.Model.Crm_Company;
        CompanyKey: Edm.Guid;
        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        DomainId: Edm.Guid;
        Id: Edm.Guid;
        IsActive: Edm.Boolean;
        IsParticipaiting: Edm.Boolean;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        asKoObservable(): ObservableCrmCampaigns_CampaignCompany;
        static create(): CrmCampaigns_CampaignCompany;
        static create(initData:any): CrmCampaigns_CampaignCompany;
    }

    export class CrmCampaigns_CampaignPerson extends $data.Entity {
        constructor();
        constructor(initData: { Campaign?: Crm.Campaigns.Rest.Model.CrmCampaigns_Campaign; CampaignCompany?: Crm.Campaigns.Rest.Model.CrmCampaigns_CampaignCompany; CampaignKey?: Edm.Guid; Company?: Crm.Rest.Model.Crm_Company; CompanyKey?: Edm.Guid; CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; DomainId?: Edm.Guid; HasParticipated?: Edm.Boolean; Id?: Edm.Guid; IsActive?: Edm.Boolean; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; Person?: Crm.Rest.Model.Crm_Person; PersonKey?: Edm.Guid });

        Campaign: Crm.Campaigns.Rest.Model.CrmCampaigns_Campaign;
        CampaignCompany: Crm.Campaigns.Rest.Model.CrmCampaigns_CampaignCompany;
        CampaignKey: Edm.Guid;
        Company: Crm.Rest.Model.Crm_Company;
        CompanyKey: Edm.Guid;
        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        DomainId: Edm.Guid;
        HasParticipated: Edm.Boolean;
        Id: Edm.Guid;
        IsActive: Edm.Boolean;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        Person: Crm.Rest.Model.Crm_Person;
        PersonKey: Edm.Guid;
        asKoObservable(): ObservableCrmCampaigns_CampaignPerson;
        static create(): CrmCampaigns_CampaignPerson;
        static create(initData:any): CrmCampaigns_CampaignPerson;
    }

    export class CrmCampaigns_Campaign extends $data.Entity {
        constructor();
        constructor(initData: { ActualCosts?: Edm.Single; BeginDate?: Edm.DateTimeOffset; CampaignNo?: Edm.String; CategoryKey?: Edm.String; CostsCurrencyKey?: Edm.String; CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; Description?: Edm.String; DomainId?: Edm.Guid; EndDate?: Edm.DateTimeOffset; ExpectedCosts?: Edm.Single; ExpectedProjectsCount?: Edm.Int32; ExpectedVolume?: Edm.Single; Id?: Edm.Guid; IsActive?: Edm.Boolean; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; Name?: Edm.String; ParticipatingCompanies?: Crm.Campaigns.Rest.Model.CrmCampaigns_CampaignCompany[]; ParticipatingPersons?: Crm.Campaigns.Rest.Model.CrmCampaigns_CampaignPerson[]; ProductFamily?: Crm.Article.Rest.Model.CrmArticle_ProductFamily; ProductFamilyKey?: Edm.Guid; ResponsibleUser?: Edm.String; ResponsibleUserUser?: Main.Rest.Model.Main_User; StatusKey?: Edm.String; VolumeCurrencyKey?: Edm.String });

        ActualCosts: Edm.Single;
        BeginDate: Edm.DateTimeOffset;
        CampaignNo: Edm.String;
        CategoryKey: Edm.String;
        CostsCurrencyKey: Edm.String;
        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        Description: Edm.String;
        DomainId: Edm.Guid;
        EndDate: Edm.DateTimeOffset;
        ExpectedCosts: Edm.Single;
        ExpectedProjectsCount: Edm.Int32;
        ExpectedVolume: Edm.Single;
        Id: Edm.Guid;
        IsActive: Edm.Boolean;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        Name: Edm.String;
        ParticipatingCompanies: Crm.Campaigns.Rest.Model.CrmCampaigns_CampaignCompany[];
        ParticipatingPersons: Crm.Campaigns.Rest.Model.CrmCampaigns_CampaignPerson[];
        ProductFamily: Crm.Article.Rest.Model.CrmArticle_ProductFamily;
        ProductFamilyKey: Edm.Guid;
        ResponsibleUser: Edm.String;
        ResponsibleUserUser: Main.Rest.Model.Main_User;
        StatusKey: Edm.String;
        VolumeCurrencyKey: Edm.String;
        asKoObservable(): ObservableCrmCampaigns_Campaign;
        static create(): CrmCampaigns_Campaign;
        static create(initData:any): CrmCampaigns_Campaign;
    }

}

namespace Crm.AttributeForms.Rest.Model {

    export class ObservableCrmAttributeForms_AttributeFormContactTypeRelationship extends $data.Entity {
        constructor();
        constructor(initData: { CompanyTypeKey?: KnockoutObservable<Edm.String>; ContactType?: KnockoutObservable<Edm.String>; CountryKey?: KnockoutObservable<Edm.String>; CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; DomainId?: KnockoutObservable<Edm.Guid>; DynamicForm?: KnockoutObservable<Crm.DynamicForms.Rest.Model.ObservableCrmDynamicForms_DynamicForm>; DynamicFormKey?: KnockoutObservable<Edm.Guid>; Id?: KnockoutObservable<Edm.Guid>; InstallationTypeKey?: KnockoutObservable<Edm.String>; IsActive?: KnockoutObservable<Edm.Boolean>; ManufacturerKey?: KnockoutObservable<Edm.String>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; RegionKey?: KnockoutObservable<Edm.String>; ServiceObjectCategoryKey?: KnockoutObservable<Edm.String> });

        CompanyTypeKey: KnockoutObservable<Edm.String>;
        ContactType: KnockoutObservable<Edm.String>;
        CountryKey: KnockoutObservable<Edm.String>;
        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        DomainId: KnockoutObservable<Edm.Guid>;
        DynamicForm: KnockoutObservable<Crm.DynamicForms.Rest.Model.ObservableCrmDynamicForms_DynamicForm>;
        DynamicFormKey: KnockoutObservable<Edm.Guid>;
        Id: KnockoutObservable<Edm.Guid>;
        InstallationTypeKey: KnockoutObservable<Edm.String>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        ManufacturerKey: KnockoutObservable<Edm.String>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        RegionKey: KnockoutObservable<Edm.String>;
        ServiceObjectCategoryKey: KnockoutObservable<Edm.String>;
        innerInstance: CrmAttributeForms_AttributeFormContactTypeRelationship;
    }

    export class ObservableCrmAttributeForms_AttributeForm extends $data.Entity {
        constructor();
        constructor(initData: { Completed?: KnockoutObservable<Edm.Boolean>; CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; DomainId?: KnockoutObservable<Edm.Guid>; DynamicForm?: KnockoutObservable<Crm.DynamicForms.Rest.Model.ObservableCrmDynamicForms_DynamicForm>; DynamicFormKey?: KnockoutObservable<Edm.Guid>; Id?: KnockoutObservable<Edm.Guid>; IsActive?: KnockoutObservable<Edm.Boolean>; IsAutomaticallyAssigned?: KnockoutObservable<Edm.Boolean>; LegacyId?: KnockoutObservable<Edm.String>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; ReferenceKey?: KnockoutObservable<Edm.Guid>; ReferenceType?: KnockoutObservable<Edm.String>; Responses?: KnockoutObservableArray<Crm.DynamicForms.Rest.Model.ObservableCrmDynamicForms_DynamicFormResponse> });

        Completed: KnockoutObservable<Edm.Boolean>;
        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        DomainId: KnockoutObservable<Edm.Guid>;
        DynamicForm: KnockoutObservable<Crm.DynamicForms.Rest.Model.ObservableCrmDynamicForms_DynamicForm>;
        DynamicFormKey: KnockoutObservable<Edm.Guid>;
        Id: KnockoutObservable<Edm.Guid>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        IsAutomaticallyAssigned: KnockoutObservable<Edm.Boolean>;
        LegacyId: KnockoutObservable<Edm.String>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        ReferenceKey: KnockoutObservable<Edm.Guid>;
        ReferenceType: KnockoutObservable<Edm.String>;
        Responses: KnockoutObservableArray<Crm.DynamicForms.Rest.Model.ObservableCrmDynamicForms_DynamicFormResponse>;
        innerInstance: CrmAttributeForms_AttributeForm;
    }

    export class CrmAttributeForms_AttributeFormContactTypeRelationship extends $data.Entity {
        constructor();
        constructor(initData: { CompanyTypeKey?: Edm.String; ContactType?: Edm.String; CountryKey?: Edm.String; CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; DomainId?: Edm.Guid; DynamicForm?: Crm.DynamicForms.Rest.Model.CrmDynamicForms_DynamicForm; DynamicFormKey?: Edm.Guid; Id?: Edm.Guid; InstallationTypeKey?: Edm.String; IsActive?: Edm.Boolean; ManufacturerKey?: Edm.String; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; RegionKey?: Edm.String; ServiceObjectCategoryKey?: Edm.String });

        CompanyTypeKey: Edm.String;
        ContactType: Edm.String;
        CountryKey: Edm.String;
        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        DomainId: Edm.Guid;
        DynamicForm: Crm.DynamicForms.Rest.Model.CrmDynamicForms_DynamicForm;
        DynamicFormKey: Edm.Guid;
        Id: Edm.Guid;
        InstallationTypeKey: Edm.String;
        IsActive: Edm.Boolean;
        ManufacturerKey: Edm.String;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        RegionKey: Edm.String;
        ServiceObjectCategoryKey: Edm.String;
        asKoObservable(): ObservableCrmAttributeForms_AttributeFormContactTypeRelationship;
        static create(): CrmAttributeForms_AttributeFormContactTypeRelationship;
        static create(initData:any): CrmAttributeForms_AttributeFormContactTypeRelationship;
    }

    export class CrmAttributeForms_AttributeForm extends $data.Entity {
        constructor();
        constructor(initData: { Completed?: Edm.Boolean; CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; DomainId?: Edm.Guid; DynamicForm?: Crm.DynamicForms.Rest.Model.CrmDynamicForms_DynamicForm; DynamicFormKey?: Edm.Guid; Id?: Edm.Guid; IsActive?: Edm.Boolean; IsAutomaticallyAssigned?: Edm.Boolean; LegacyId?: Edm.String; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; ReferenceKey?: Edm.Guid; ReferenceType?: Edm.String; Responses?: Crm.DynamicForms.Rest.Model.CrmDynamicForms_DynamicFormResponse[] });

        Completed: Edm.Boolean;
        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        DomainId: Edm.Guid;
        DynamicForm: Crm.DynamicForms.Rest.Model.CrmDynamicForms_DynamicForm;
        DynamicFormKey: Edm.Guid;
        Id: Edm.Guid;
        IsActive: Edm.Boolean;
        IsAutomaticallyAssigned: Edm.Boolean;
        LegacyId: Edm.String;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        ReferenceKey: Edm.Guid;
        ReferenceType: Edm.String;
        Responses: Crm.DynamicForms.Rest.Model.CrmDynamicForms_DynamicFormResponse[];
        asKoObservable(): ObservableCrmAttributeForms_AttributeForm;
        static create(): CrmAttributeForms_AttributeForm;
        static create(initData:any): CrmAttributeForms_AttributeForm;
    }

}

namespace Crm.Article.Rest.Model {

    export class ObservableCrmArticle_ArticleCompanyRelationship extends $data.Entity {
        constructor();
        constructor(initData: { Child?: KnockoutObservable<Crm.Rest.Model.ObservableCrm_Company>; ChildId?: KnockoutObservable<Edm.Guid>; CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; DomainId?: KnockoutObservable<Edm.Guid>; Id?: KnockoutObservable<Edm.Guid>; Information?: KnockoutObservable<Edm.String>; IsActive?: KnockoutObservable<Edm.Boolean>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; Parent?: KnockoutObservable<Crm.Article.Rest.Model.ObservableCrmArticle_Article>; ParentId?: KnockoutObservable<Edm.Guid>; RelationshipTypeKey?: KnockoutObservable<Edm.String> });

        Child: KnockoutObservable<Crm.Rest.Model.ObservableCrm_Company>;
        ChildId: KnockoutObservable<Edm.Guid>;
        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        DomainId: KnockoutObservable<Edm.Guid>;
        Id: KnockoutObservable<Edm.Guid>;
        Information: KnockoutObservable<Edm.String>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        Parent: KnockoutObservable<Crm.Article.Rest.Model.ObservableCrmArticle_Article>;
        ParentId: KnockoutObservable<Edm.Guid>;
        RelationshipTypeKey: KnockoutObservable<Edm.String>;
        innerInstance: CrmArticle_ArticleCompanyRelationship;
    }

    export class ObservableCrmArticle_ArticleDowntime extends $data.Entity {
        constructor();
        constructor(initData: { Article?: KnockoutObservable<Crm.Article.Rest.Model.ObservableCrmArticle_Article>; ArticleKey?: KnockoutObservable<Edm.Guid>; CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; Description?: KnockoutObservable<Edm.String>; DomainId?: KnockoutObservable<Edm.Guid>; DowntimeReasonKey?: KnockoutObservable<Edm.String>; From?: KnockoutObservable<Edm.DateTimeOffset>; Id?: KnockoutObservable<Edm.Guid>; IsActive?: KnockoutObservable<Edm.Boolean>; IsExported?: KnockoutObservable<Edm.Boolean>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; To?: KnockoutObservable<Edm.DateTimeOffset> });

        Article: KnockoutObservable<Crm.Article.Rest.Model.ObservableCrmArticle_Article>;
        ArticleKey: KnockoutObservable<Edm.Guid>;
        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        Description: KnockoutObservable<Edm.String>;
        DomainId: KnockoutObservable<Edm.Guid>;
        DowntimeReasonKey: KnockoutObservable<Edm.String>;
        From: KnockoutObservable<Edm.DateTimeOffset>;
        Id: KnockoutObservable<Edm.Guid>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        IsExported: KnockoutObservable<Edm.Boolean>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        To: KnockoutObservable<Edm.DateTimeOffset>;
        innerInstance: CrmArticle_ArticleDowntime;
    }

    export class ObservableCrmArticle_ArticleRelationship extends $data.Entity {
        constructor();
        constructor(initData: { Child?: KnockoutObservable<Crm.Article.Rest.Model.ObservableCrmArticle_Article>; ChildId?: KnockoutObservable<Edm.Guid>; CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; DomainId?: KnockoutObservable<Edm.Guid>; ExtensionValues?: KnockoutObservable<Default.ObservableCrmArticle_ArticleRelationship_ExtensionValues>; Id?: KnockoutObservable<Edm.Guid>; Information?: KnockoutObservable<Edm.String>; IsActive?: KnockoutObservable<Edm.Boolean>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; Parent?: KnockoutObservable<Crm.Article.Rest.Model.ObservableCrmArticle_Article>; ParentId?: KnockoutObservable<Edm.Guid>; QuantityUnitKey?: KnockoutObservable<Edm.String>; QuantityValue?: KnockoutObservable<Edm.Decimal>; RelationshipTypeKey?: KnockoutObservable<Edm.String> });

        Child: KnockoutObservable<Crm.Article.Rest.Model.ObservableCrmArticle_Article>;
        ChildId: KnockoutObservable<Edm.Guid>;
        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        DomainId: KnockoutObservable<Edm.Guid>;
        ExtensionValues: KnockoutObservable<Default.ObservableCrmArticle_ArticleRelationship_ExtensionValues>;
        Id: KnockoutObservable<Edm.Guid>;
        Information: KnockoutObservable<Edm.String>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        Parent: KnockoutObservable<Crm.Article.Rest.Model.ObservableCrmArticle_Article>;
        ParentId: KnockoutObservable<Edm.Guid>;
        QuantityUnitKey: KnockoutObservable<Edm.String>;
        QuantityValue: KnockoutObservable<Edm.Decimal>;
        RelationshipTypeKey: KnockoutObservable<Edm.String>;
        innerInstance: CrmArticle_ArticleRelationship;
    }

    export class ObservableCrmArticle_Article extends $data.Entity {
        constructor();
        constructor(initData: { ArticleGroup01Key?: KnockoutObservable<Edm.String>; ArticleGroup02Key?: KnockoutObservable<Edm.String>; ArticleGroup03Key?: KnockoutObservable<Edm.String>; ArticleGroup04Key?: KnockoutObservable<Edm.String>; ArticleGroup05Key?: KnockoutObservable<Edm.String>; ArticleTypeKey?: KnockoutObservable<Edm.String>; BackgroundInfo?: KnockoutObservable<Edm.String>; BarCode?: KnockoutObservable<Edm.String>; CampaignSource?: KnockoutObservable<Edm.Guid>; CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; CurrencyKey?: KnockoutObservable<Edm.String>; DangerousGoodsFlag?: KnockoutObservable<Edm.Boolean>; Description?: KnockoutObservable<Edm.String>; DocumentAttributes?: KnockoutObservableArray<Crm.Rest.Model.ObservableCrm_DocumentAttribute>; DomainId?: KnockoutObservable<Edm.Guid>; DrivingLicenceCategoryKey?: KnockoutObservable<Edm.String>; EAN?: KnockoutObservable<Edm.String>; ExtensionValues?: KnockoutObservable<Default.ObservableCrmArticle_Article_ExtensionValues>; GuaranteeInMonths?: KnockoutObservable<Edm.Int32>; Height?: KnockoutObservable<Edm.Decimal>; Id?: KnockoutObservable<Edm.Guid>; Inspection?: KnockoutObservable<Edm.String>; IsActive?: KnockoutObservable<Edm.Boolean>; IsBatch?: KnockoutObservable<Edm.Boolean>; IsEnabled?: KnockoutObservable<Edm.Boolean>; IsSerial?: KnockoutObservable<Edm.Boolean>; IsSparePart?: KnockoutObservable<Edm.Boolean>; IsWarehouseManaged?: KnockoutObservable<Edm.Boolean>; ItemNo?: KnockoutObservable<Edm.String>; LanguageKey?: KnockoutObservable<Edm.String>; LastActivity?: KnockoutObservable<Edm.DateTimeOffset>; LeadTimeInDays?: KnockoutObservable<Edm.Decimal>; LegacyId?: KnockoutObservable<Edm.String>; LegacyName?: KnockoutObservable<Edm.String>; Length?: KnockoutObservable<Edm.Decimal>; LicensePlate?: KnockoutObservable<Edm.String>; Manufacturer?: KnockoutObservable<Edm.String>; ManufacturerItemNo?: KnockoutObservable<Edm.String>; MinimumStock?: KnockoutObservable<Edm.Decimal>; Model?: KnockoutObservable<Edm.String>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; Name?: KnockoutObservable<Edm.String>; Notes?: KnockoutObservableArray<Crm.Rest.Model.ObservableCrm_Note>; ParentId?: KnockoutObservable<Edm.Guid>; ParentName?: KnockoutObservable<Edm.String>; ParentType?: KnockoutObservable<Edm.String>; Price?: KnockoutObservable<Edm.Decimal>; ProductFamily?: KnockoutObservable<Crm.Article.Rest.Model.ObservableCrmArticle_ProductFamily>; ProductFamilyKey?: KnockoutObservable<Edm.Guid>; PurchasePrice?: KnockoutObservable<Edm.Decimal>; QuantityStep?: KnockoutObservable<Edm.Decimal>; QuantityUnitEntry?: KnockoutObservable<Crm.Article.Rest.Model.ObservableCrmArticle_QuantityUnitEntry>; QuantityUnitEntryKey?: KnockoutObservable<Edm.Guid>; QuantityUnitKey?: KnockoutObservable<Edm.String>; RequiredAssetKeys?: KnockoutObservableArray<Edm.String>; RequiredSkillKeys?: KnockoutObservableArray<Edm.String>; ResponsibleUser?: KnockoutObservable<Edm.String>; Serial?: KnockoutObservable<Edm.String>; SerialRequired?: KnockoutObservable<Edm.Boolean>; Serials?: KnockoutObservableArray<Crm.Article.Rest.Model.ObservableCrmArticle_Serial>; SourceTypeKey?: KnockoutObservable<Edm.String>; Station?: KnockoutObservable<Crm.Rest.Model.ObservableCrm_Station>; StationKey?: KnockoutObservable<Edm.Guid>; Stocks?: KnockoutObservableArray<Crm.Article.Rest.Model.ObservableCrmArticle_Stock>; TUV?: KnockoutObservable<Edm.String>; Tags?: KnockoutObservableArray<Crm.Rest.Model.ObservableCrm_Tag>; VATLevelKey?: KnockoutObservable<Edm.String>; VIN?: KnockoutObservable<Edm.String>; ValidFrom?: KnockoutObservable<Edm.DateTimeOffset>; ValidTo?: KnockoutObservable<Edm.DateTimeOffset>; Visibility?: KnockoutObservable<Crm.Library.BaseModel.Visibility>; VisibleToUserIds?: KnockoutObservableArray<Edm.String>; VisibleToUsergroupIds?: KnockoutObservableArray<Edm.Guid>; WarrantyInMonths?: KnockoutObservable<Edm.Int32>; Weight?: KnockoutObservable<Edm.Decimal>; WeightNet?: KnockoutObservable<Edm.Decimal>; Width?: KnockoutObservable<Edm.Decimal> });

        ArticleGroup01Key: KnockoutObservable<Edm.String>;
        ArticleGroup02Key: KnockoutObservable<Edm.String>;
        ArticleGroup03Key: KnockoutObservable<Edm.String>;
        ArticleGroup04Key: KnockoutObservable<Edm.String>;
        ArticleGroup05Key: KnockoutObservable<Edm.String>;
        ArticleTypeKey: KnockoutObservable<Edm.String>;
        BackgroundInfo: KnockoutObservable<Edm.String>;
        BarCode: KnockoutObservable<Edm.String>;
        CampaignSource: KnockoutObservable<Edm.Guid>;
        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        CurrencyKey: KnockoutObservable<Edm.String>;
        DangerousGoodsFlag: KnockoutObservable<Edm.Boolean>;
        Description: KnockoutObservable<Edm.String>;
        DocumentAttributes: KnockoutObservableArray<Crm.Rest.Model.ObservableCrm_DocumentAttribute>;
        DomainId: KnockoutObservable<Edm.Guid>;
        DrivingLicenceCategoryKey: KnockoutObservable<Edm.String>;
        EAN: KnockoutObservable<Edm.String>;
        ExtensionValues: KnockoutObservable<Default.ObservableCrmArticle_Article_ExtensionValues>;
        GuaranteeInMonths: KnockoutObservable<Edm.Int32>;
        Height: KnockoutObservable<Edm.Decimal>;
        Id: KnockoutObservable<Edm.Guid>;
        Inspection: KnockoutObservable<Edm.String>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        IsBatch: KnockoutObservable<Edm.Boolean>;
        IsEnabled: KnockoutObservable<Edm.Boolean>;
        IsSerial: KnockoutObservable<Edm.Boolean>;
        IsSparePart: KnockoutObservable<Edm.Boolean>;
        IsWarehouseManaged: KnockoutObservable<Edm.Boolean>;
        ItemNo: KnockoutObservable<Edm.String>;
        LanguageKey: KnockoutObservable<Edm.String>;
        LastActivity: KnockoutObservable<Edm.DateTimeOffset>;
        LeadTimeInDays: KnockoutObservable<Edm.Decimal>;
        LegacyId: KnockoutObservable<Edm.String>;
        LegacyName: KnockoutObservable<Edm.String>;
        Length: KnockoutObservable<Edm.Decimal>;
        LicensePlate: KnockoutObservable<Edm.String>;
        Manufacturer: KnockoutObservable<Edm.String>;
        ManufacturerItemNo: KnockoutObservable<Edm.String>;
        MinimumStock: KnockoutObservable<Edm.Decimal>;
        Model: KnockoutObservable<Edm.String>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        Name: KnockoutObservable<Edm.String>;
        Notes: KnockoutObservableArray<Crm.Rest.Model.ObservableCrm_Note>;
        ParentId: KnockoutObservable<Edm.Guid>;
        ParentName: KnockoutObservable<Edm.String>;
        ParentType: KnockoutObservable<Edm.String>;
        Price: KnockoutObservable<Edm.Decimal>;
        ProductFamily: KnockoutObservable<Crm.Article.Rest.Model.ObservableCrmArticle_ProductFamily>;
        ProductFamilyKey: KnockoutObservable<Edm.Guid>;
        PurchasePrice: KnockoutObservable<Edm.Decimal>;
        QuantityStep: KnockoutObservable<Edm.Decimal>;
        QuantityUnitEntry: KnockoutObservable<Crm.Article.Rest.Model.ObservableCrmArticle_QuantityUnitEntry>;
        QuantityUnitEntryKey: KnockoutObservable<Edm.Guid>;
        QuantityUnitKey: KnockoutObservable<Edm.String>;
        RequiredAssetKeys: KnockoutObservableArray<Edm.String>;
        RequiredSkillKeys: KnockoutObservableArray<Edm.String>;
        ResponsibleUser: KnockoutObservable<Edm.String>;
        Serial: KnockoutObservable<Edm.String>;
        SerialRequired: KnockoutObservable<Edm.Boolean>;
        Serials: KnockoutObservableArray<Crm.Article.Rest.Model.ObservableCrmArticle_Serial>;
        SourceTypeKey: KnockoutObservable<Edm.String>;
        Station: KnockoutObservable<Crm.Rest.Model.ObservableCrm_Station>;
        StationKey: KnockoutObservable<Edm.Guid>;
        Stocks: KnockoutObservableArray<Crm.Article.Rest.Model.ObservableCrmArticle_Stock>;
        TUV: KnockoutObservable<Edm.String>;
        Tags: KnockoutObservableArray<Crm.Rest.Model.ObservableCrm_Tag>;
        VATLevelKey: KnockoutObservable<Edm.String>;
        VIN: KnockoutObservable<Edm.String>;
        ValidFrom: KnockoutObservable<Edm.DateTimeOffset>;
        ValidTo: KnockoutObservable<Edm.DateTimeOffset>;
        Visibility: KnockoutObservable<Crm.Library.BaseModel.Visibility>;
        VisibleToUserIds: KnockoutObservableArray<Edm.String>;
        VisibleToUsergroupIds: KnockoutObservableArray<Edm.Guid>;
        WarrantyInMonths: KnockoutObservable<Edm.Int32>;
        Weight: KnockoutObservable<Edm.Decimal>;
        WeightNet: KnockoutObservable<Edm.Decimal>;
        Width: KnockoutObservable<Edm.Decimal>;
        innerInstance: CrmArticle_Article;
    }

    export class ObservableCrmArticle_ArticleUserRelationship extends $data.Entity {
        constructor();
        constructor(initData: { Article?: KnockoutObservable<Crm.Article.Rest.Model.ObservableCrmArticle_Article>; ArticleKey?: KnockoutObservable<Edm.Guid>; CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; DomainId?: KnockoutObservable<Edm.Guid>; From?: KnockoutObservable<Edm.DateTimeOffset>; Id?: KnockoutObservable<Edm.Guid>; IsActive?: KnockoutObservable<Edm.Boolean>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; To?: KnockoutObservable<Edm.DateTimeOffset>; User?: KnockoutObservable<Main.Rest.Model.ObservableMain_User>; UserKey?: KnockoutObservable<Edm.String> });

        Article: KnockoutObservable<Crm.Article.Rest.Model.ObservableCrmArticle_Article>;
        ArticleKey: KnockoutObservable<Edm.Guid>;
        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        DomainId: KnockoutObservable<Edm.Guid>;
        From: KnockoutObservable<Edm.DateTimeOffset>;
        Id: KnockoutObservable<Edm.Guid>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        To: KnockoutObservable<Edm.DateTimeOffset>;
        User: KnockoutObservable<Main.Rest.Model.ObservableMain_User>;
        UserKey: KnockoutObservable<Edm.String>;
        innerInstance: CrmArticle_ArticleUserRelationship;
    }

    export class ObservableCrmArticle_Location extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; DomainId?: KnockoutObservable<Edm.Guid>; Id?: KnockoutObservable<Edm.Guid>; IsActive?: KnockoutObservable<Edm.Boolean>; LocationNo?: KnockoutObservable<Edm.String>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; Serials?: KnockoutObservableArray<Crm.Article.Rest.Model.ObservableCrmArticle_Serial>; Stocks?: KnockoutObservableArray<Crm.Article.Rest.Model.ObservableCrmArticle_Stock>; StorageArea?: KnockoutObservable<Crm.Article.Rest.Model.ObservableCrmArticle_StorageArea>; StorageAreaId?: KnockoutObservable<Edm.Guid>; Store?: KnockoutObservable<Crm.Article.Rest.Model.ObservableCrmArticle_Store>; StoreId?: KnockoutObservable<Edm.Guid> });

        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        DomainId: KnockoutObservable<Edm.Guid>;
        Id: KnockoutObservable<Edm.Guid>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        LocationNo: KnockoutObservable<Edm.String>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        Serials: KnockoutObservableArray<Crm.Article.Rest.Model.ObservableCrmArticle_Serial>;
        Stocks: KnockoutObservableArray<Crm.Article.Rest.Model.ObservableCrmArticle_Stock>;
        StorageArea: KnockoutObservable<Crm.Article.Rest.Model.ObservableCrmArticle_StorageArea>;
        StorageAreaId: KnockoutObservable<Edm.Guid>;
        Store: KnockoutObservable<Crm.Article.Rest.Model.ObservableCrmArticle_Store>;
        StoreId: KnockoutObservable<Edm.Guid>;
        innerInstance: CrmArticle_Location;
    }

    export class ObservableCrmArticle_Price extends $data.Entity {
        constructor();
        constructor(initData: { Article?: KnockoutObservable<Crm.Article.Rest.Model.ObservableCrmArticle_Article>; ArticleKey?: KnockoutObservable<Edm.Guid>; Company?: KnockoutObservable<Crm.Rest.Model.ObservableCrm_Company>; CompanyKey?: KnockoutObservable<Edm.Guid>; CompanyPriceGroupKey?: KnockoutObservable<Edm.String>; CompanyPriceLevelKey?: KnockoutObservable<Edm.String>; CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; CurrencyKey?: KnockoutObservable<Edm.String>; DomainId?: KnockoutObservable<Edm.Guid>; Id?: KnockoutObservable<Edm.Guid>; IsActive?: KnockoutObservable<Edm.Boolean>; MinQuantity?: KnockoutObservable<Edm.Decimal>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; NetPricePerUnit?: KnockoutObservable<Edm.Decimal>; QuantityUnitEntry?: KnockoutObservable<Crm.Article.Rest.Model.ObservableCrmArticle_QuantityUnitEntry>; QuantityUnitEntryKey?: KnockoutObservable<Edm.Guid>; ValidFrom?: KnockoutObservable<Edm.DateTimeOffset>; ValidTo?: KnockoutObservable<Edm.DateTimeOffset> });

        Article: KnockoutObservable<Crm.Article.Rest.Model.ObservableCrmArticle_Article>;
        ArticleKey: KnockoutObservable<Edm.Guid>;
        Company: KnockoutObservable<Crm.Rest.Model.ObservableCrm_Company>;
        CompanyKey: KnockoutObservable<Edm.Guid>;
        CompanyPriceGroupKey: KnockoutObservable<Edm.String>;
        CompanyPriceLevelKey: KnockoutObservable<Edm.String>;
        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        CurrencyKey: KnockoutObservable<Edm.String>;
        DomainId: KnockoutObservable<Edm.Guid>;
        Id: KnockoutObservable<Edm.Guid>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        MinQuantity: KnockoutObservable<Edm.Decimal>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        NetPricePerUnit: KnockoutObservable<Edm.Decimal>;
        QuantityUnitEntry: KnockoutObservable<Crm.Article.Rest.Model.ObservableCrmArticle_QuantityUnitEntry>;
        QuantityUnitEntryKey: KnockoutObservable<Edm.Guid>;
        ValidFrom: KnockoutObservable<Edm.DateTimeOffset>;
        ValidTo: KnockoutObservable<Edm.DateTimeOffset>;
        innerInstance: CrmArticle_Price;
    }

    export class ObservableCrmArticle_ProductFamily extends $data.Entity {
        constructor();
        constructor(initData: { BackgroundInfo?: KnockoutObservable<Edm.String>; CampaignSource?: KnockoutObservable<Edm.Guid>; ChildProductFamilies?: KnockoutObservableArray<Crm.Article.Rest.Model.ObservableCrmArticle_ProductFamily>; CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; DomainId?: KnockoutObservable<Edm.Guid>; Id?: KnockoutObservable<Edm.Guid>; IsActive?: KnockoutObservable<Edm.Boolean>; LanguageKey?: KnockoutObservable<Edm.String>; LastActivity?: KnockoutObservable<Edm.DateTimeOffset>; LegacyId?: KnockoutObservable<Edm.String>; LegacyName?: KnockoutObservable<Edm.String>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; Name?: KnockoutObservable<Edm.String>; Notes?: KnockoutObservableArray<Crm.Rest.Model.ObservableCrm_Note>; ParentId?: KnockoutObservable<Edm.Guid>; ParentName?: KnockoutObservable<Edm.String>; ParentProductFamily?: KnockoutObservable<Crm.Article.Rest.Model.ObservableCrmArticle_ProductFamily>; ParentType?: KnockoutObservable<Edm.String>; ResponsibleUser?: KnockoutObservable<Edm.String>; ResponsibleUserUser?: KnockoutObservable<Main.Rest.Model.ObservableMain_User>; SourceTypeKey?: KnockoutObservable<Edm.String>; StatusKey?: KnockoutObservable<Edm.String>; Visibility?: KnockoutObservable<Crm.Library.BaseModel.Visibility>; VisibleToUserIds?: KnockoutObservableArray<Edm.String>; VisibleToUsergroupIds?: KnockoutObservableArray<Edm.Guid> });

        BackgroundInfo: KnockoutObservable<Edm.String>;
        CampaignSource: KnockoutObservable<Edm.Guid>;
        ChildProductFamilies: KnockoutObservableArray<Crm.Article.Rest.Model.ObservableCrmArticle_ProductFamily>;
        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        DomainId: KnockoutObservable<Edm.Guid>;
        Id: KnockoutObservable<Edm.Guid>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        LanguageKey: KnockoutObservable<Edm.String>;
        LastActivity: KnockoutObservable<Edm.DateTimeOffset>;
        LegacyId: KnockoutObservable<Edm.String>;
        LegacyName: KnockoutObservable<Edm.String>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        Name: KnockoutObservable<Edm.String>;
        Notes: KnockoutObservableArray<Crm.Rest.Model.ObservableCrm_Note>;
        ParentId: KnockoutObservable<Edm.Guid>;
        ParentName: KnockoutObservable<Edm.String>;
        ParentProductFamily: KnockoutObservable<Crm.Article.Rest.Model.ObservableCrmArticle_ProductFamily>;
        ParentType: KnockoutObservable<Edm.String>;
        ResponsibleUser: KnockoutObservable<Edm.String>;
        ResponsibleUserUser: KnockoutObservable<Main.Rest.Model.ObservableMain_User>;
        SourceTypeKey: KnockoutObservable<Edm.String>;
        StatusKey: KnockoutObservable<Edm.String>;
        Visibility: KnockoutObservable<Crm.Library.BaseModel.Visibility>;
        VisibleToUserIds: KnockoutObservableArray<Edm.String>;
        VisibleToUsergroupIds: KnockoutObservableArray<Edm.Guid>;
        innerInstance: CrmArticle_ProductFamily;
    }

    export class ObservableCrmArticle_QuantityUnitEntry extends $data.Entity {
        constructor();
        constructor(initData: { ChildQuantityUnitEntries?: KnockoutObservableArray<Crm.Article.Rest.Model.ObservableCrmArticle_QuantityUnitEntry>; CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; Description?: KnockoutObservable<Edm.String>; Divisor?: KnockoutObservable<Edm.Decimal>; DomainId?: KnockoutObservable<Edm.Guid>; Factor?: KnockoutObservable<Edm.Decimal>; Id?: KnockoutObservable<Edm.Guid>; IsActive?: KnockoutObservable<Edm.Boolean>; IsCustom?: KnockoutObservable<Edm.Boolean>; IsGroup?: KnockoutObservable<Edm.Boolean>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; Name?: KnockoutObservable<Edm.String>; QuantityStep?: KnockoutObservable<Edm.Decimal>; QuantityUnitGroup?: KnockoutObservable<Crm.Article.Rest.Model.ObservableCrmArticle_QuantityUnitEntry>; QuantityUnitGroupKey?: KnockoutObservable<Edm.Guid>; QuantityUnitKey?: KnockoutObservable<Edm.String> });

        ChildQuantityUnitEntries: KnockoutObservableArray<Crm.Article.Rest.Model.ObservableCrmArticle_QuantityUnitEntry>;
        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        Description: KnockoutObservable<Edm.String>;
        Divisor: KnockoutObservable<Edm.Decimal>;
        DomainId: KnockoutObservable<Edm.Guid>;
        Factor: KnockoutObservable<Edm.Decimal>;
        Id: KnockoutObservable<Edm.Guid>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        IsCustom: KnockoutObservable<Edm.Boolean>;
        IsGroup: KnockoutObservable<Edm.Boolean>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        Name: KnockoutObservable<Edm.String>;
        QuantityStep: KnockoutObservable<Edm.Decimal>;
        QuantityUnitGroup: KnockoutObservable<Crm.Article.Rest.Model.ObservableCrmArticle_QuantityUnitEntry>;
        QuantityUnitGroupKey: KnockoutObservable<Edm.Guid>;
        QuantityUnitKey: KnockoutObservable<Edm.String>;
        innerInstance: CrmArticle_QuantityUnitEntry;
    }

    export class ObservableCrmArticle_Serial extends $data.Entity {
        constructor();
        constructor(initData: { Article?: KnockoutObservable<Crm.Article.Rest.Model.ObservableCrmArticle_Article>; ArticleKey?: KnockoutObservable<Edm.Guid>; CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; DomainId?: KnockoutObservable<Edm.Guid>; Id?: KnockoutObservable<Edm.Guid>; IsActive?: KnockoutObservable<Edm.Boolean>; IsAvailable?: KnockoutObservable<Edm.Boolean>; Location?: KnockoutObservable<Crm.Article.Rest.Model.ObservableCrmArticle_Location>; LocationKey?: KnockoutObservable<Edm.Guid>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; SerialNo?: KnockoutObservable<Edm.String>; StorageArea?: KnockoutObservable<Crm.Article.Rest.Model.ObservableCrmArticle_StorageArea>; StorageAreaKey?: KnockoutObservable<Edm.Guid>; Store?: KnockoutObservable<Crm.Article.Rest.Model.ObservableCrmArticle_Store>; StoreKey?: KnockoutObservable<Edm.Guid> });

        Article: KnockoutObservable<Crm.Article.Rest.Model.ObservableCrmArticle_Article>;
        ArticleKey: KnockoutObservable<Edm.Guid>;
        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        DomainId: KnockoutObservable<Edm.Guid>;
        Id: KnockoutObservable<Edm.Guid>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        IsAvailable: KnockoutObservable<Edm.Boolean>;
        Location: KnockoutObservable<Crm.Article.Rest.Model.ObservableCrmArticle_Location>;
        LocationKey: KnockoutObservable<Edm.Guid>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        SerialNo: KnockoutObservable<Edm.String>;
        StorageArea: KnockoutObservable<Crm.Article.Rest.Model.ObservableCrmArticle_StorageArea>;
        StorageAreaKey: KnockoutObservable<Edm.Guid>;
        Store: KnockoutObservable<Crm.Article.Rest.Model.ObservableCrmArticle_Store>;
        StoreKey: KnockoutObservable<Edm.Guid>;
        innerInstance: CrmArticle_Serial;
    }

    export class ObservableCrmArticle_Stock extends $data.Entity {
        constructor();
        constructor(initData: { Article?: KnockoutObservable<Crm.Article.Rest.Model.ObservableCrmArticle_Article>; ArticleKey?: KnockoutObservable<Edm.Guid>; CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; DomainId?: KnockoutObservable<Edm.Guid>; Id?: KnockoutObservable<Edm.Guid>; IsActive?: KnockoutObservable<Edm.Boolean>; Location?: KnockoutObservable<Crm.Article.Rest.Model.ObservableCrmArticle_Location>; LocationKey?: KnockoutObservable<Edm.Guid>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; Quantity?: KnockoutObservable<Edm.Decimal>; StorageArea?: KnockoutObservable<Crm.Article.Rest.Model.ObservableCrmArticle_StorageArea>; StorageAreaKey?: KnockoutObservable<Edm.Guid>; Store?: KnockoutObservable<Crm.Article.Rest.Model.ObservableCrmArticle_Store>; StoreKey?: KnockoutObservable<Edm.Guid> });

        Article: KnockoutObservable<Crm.Article.Rest.Model.ObservableCrmArticle_Article>;
        ArticleKey: KnockoutObservable<Edm.Guid>;
        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        DomainId: KnockoutObservable<Edm.Guid>;
        Id: KnockoutObservable<Edm.Guid>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        Location: KnockoutObservable<Crm.Article.Rest.Model.ObservableCrmArticle_Location>;
        LocationKey: KnockoutObservable<Edm.Guid>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        Quantity: KnockoutObservable<Edm.Decimal>;
        StorageArea: KnockoutObservable<Crm.Article.Rest.Model.ObservableCrmArticle_StorageArea>;
        StorageAreaKey: KnockoutObservable<Edm.Guid>;
        Store: KnockoutObservable<Crm.Article.Rest.Model.ObservableCrmArticle_Store>;
        StoreKey: KnockoutObservable<Edm.Guid>;
        innerInstance: CrmArticle_Stock;
    }

    export class ObservableCrmArticle_StorageArea extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; DomainId?: KnockoutObservable<Edm.Guid>; Id?: KnockoutObservable<Edm.Guid>; IsActive?: KnockoutObservable<Edm.Boolean>; Locations?: KnockoutObservableArray<Crm.Article.Rest.Model.ObservableCrmArticle_Location>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; Serials?: KnockoutObservableArray<Crm.Article.Rest.Model.ObservableCrmArticle_Serial>; Stocks?: KnockoutObservableArray<Crm.Article.Rest.Model.ObservableCrmArticle_Stock>; StorageAreaNo?: KnockoutObservable<Edm.String>; Store?: KnockoutObservable<Crm.Article.Rest.Model.ObservableCrmArticle_Store>; StoreId?: KnockoutObservable<Edm.Guid> });

        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        DomainId: KnockoutObservable<Edm.Guid>;
        Id: KnockoutObservable<Edm.Guid>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        Locations: KnockoutObservableArray<Crm.Article.Rest.Model.ObservableCrmArticle_Location>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        Serials: KnockoutObservableArray<Crm.Article.Rest.Model.ObservableCrmArticle_Serial>;
        Stocks: KnockoutObservableArray<Crm.Article.Rest.Model.ObservableCrmArticle_Stock>;
        StorageAreaNo: KnockoutObservable<Edm.String>;
        Store: KnockoutObservable<Crm.Article.Rest.Model.ObservableCrmArticle_Store>;
        StoreId: KnockoutObservable<Edm.Guid>;
        innerInstance: CrmArticle_StorageArea;
    }

    export class ObservableCrmArticle_Store extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; DomainId?: KnockoutObservable<Edm.Guid>; Id?: KnockoutObservable<Edm.Guid>; IsActive?: KnockoutObservable<Edm.Boolean>; LegacyId?: KnockoutObservable<Edm.String>; Locations?: KnockoutObservableArray<Crm.Article.Rest.Model.ObservableCrmArticle_Location>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; Name?: KnockoutObservable<Edm.String>; Serials?: KnockoutObservableArray<Crm.Article.Rest.Model.ObservableCrmArticle_Serial>; Stocks?: KnockoutObservableArray<Crm.Article.Rest.Model.ObservableCrmArticle_Stock>; StorageAreas?: KnockoutObservableArray<Crm.Article.Rest.Model.ObservableCrmArticle_StorageArea>; StoreNo?: KnockoutObservable<Edm.String> });

        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        DomainId: KnockoutObservable<Edm.Guid>;
        Id: KnockoutObservable<Edm.Guid>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        LegacyId: KnockoutObservable<Edm.String>;
        Locations: KnockoutObservableArray<Crm.Article.Rest.Model.ObservableCrmArticle_Location>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        Name: KnockoutObservable<Edm.String>;
        Serials: KnockoutObservableArray<Crm.Article.Rest.Model.ObservableCrmArticle_Serial>;
        Stocks: KnockoutObservableArray<Crm.Article.Rest.Model.ObservableCrmArticle_Stock>;
        StorageAreas: KnockoutObservableArray<Crm.Article.Rest.Model.ObservableCrmArticle_StorageArea>;
        StoreNo: KnockoutObservable<Edm.String>;
        innerInstance: CrmArticle_Store;
    }

    export class CrmArticle_ArticleCompanyRelationship extends $data.Entity {
        constructor();
        constructor(initData: { Child?: Crm.Rest.Model.Crm_Company; ChildId?: Edm.Guid; CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; DomainId?: Edm.Guid; Id?: Edm.Guid; Information?: Edm.String; IsActive?: Edm.Boolean; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; Parent?: Crm.Article.Rest.Model.CrmArticle_Article; ParentId?: Edm.Guid; RelationshipTypeKey?: Edm.String });

        Child: Crm.Rest.Model.Crm_Company;
        ChildId: Edm.Guid;
        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        DomainId: Edm.Guid;
        Id: Edm.Guid;
        Information: Edm.String;
        IsActive: Edm.Boolean;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        Parent: Crm.Article.Rest.Model.CrmArticle_Article;
        ParentId: Edm.Guid;
        RelationshipTypeKey: Edm.String;
        asKoObservable(): ObservableCrmArticle_ArticleCompanyRelationship;
        static create(): CrmArticle_ArticleCompanyRelationship;
        static create(initData:any): CrmArticle_ArticleCompanyRelationship;
    }

    export class CrmArticle_ArticleDowntime extends $data.Entity {
        constructor();
        constructor(initData: { Article?: Crm.Article.Rest.Model.CrmArticle_Article; ArticleKey?: Edm.Guid; CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; Description?: Edm.String; DomainId?: Edm.Guid; DowntimeReasonKey?: Edm.String; From?: Edm.DateTimeOffset; Id?: Edm.Guid; IsActive?: Edm.Boolean; IsExported?: Edm.Boolean; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; To?: Edm.DateTimeOffset });

        Article: Crm.Article.Rest.Model.CrmArticle_Article;
        ArticleKey: Edm.Guid;
        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        Description: Edm.String;
        DomainId: Edm.Guid;
        DowntimeReasonKey: Edm.String;
        From: Edm.DateTimeOffset;
        Id: Edm.Guid;
        IsActive: Edm.Boolean;
        IsExported: Edm.Boolean;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        To: Edm.DateTimeOffset;
        asKoObservable(): ObservableCrmArticle_ArticleDowntime;
        static create(): CrmArticle_ArticleDowntime;
        static create(initData:any): CrmArticle_ArticleDowntime;
    }

    export class CrmArticle_ArticleRelationship extends $data.Entity {
        constructor();
        constructor(initData: { Child?: Crm.Article.Rest.Model.CrmArticle_Article; ChildId?: Edm.Guid; CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; DomainId?: Edm.Guid; ExtensionValues?: Default.CrmArticle_ArticleRelationship_ExtensionValues; Id?: Edm.Guid; Information?: Edm.String; IsActive?: Edm.Boolean; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; Parent?: Crm.Article.Rest.Model.CrmArticle_Article; ParentId?: Edm.Guid; QuantityUnitKey?: Edm.String; QuantityValue?: Edm.Decimal; RelationshipTypeKey?: Edm.String });

        Child: Crm.Article.Rest.Model.CrmArticle_Article;
        ChildId: Edm.Guid;
        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        DomainId: Edm.Guid;
        ExtensionValues: Default.CrmArticle_ArticleRelationship_ExtensionValues;
        Id: Edm.Guid;
        Information: Edm.String;
        IsActive: Edm.Boolean;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        Parent: Crm.Article.Rest.Model.CrmArticle_Article;
        ParentId: Edm.Guid;
        QuantityUnitKey: Edm.String;
        QuantityValue: Edm.Decimal;
        RelationshipTypeKey: Edm.String;
        asKoObservable(): ObservableCrmArticle_ArticleRelationship;
        static create(): CrmArticle_ArticleRelationship;
        static create(initData:any): CrmArticle_ArticleRelationship;
    }

    export class CrmArticle_Article extends $data.Entity {
        constructor();
        constructor(initData: { ArticleGroup01Key?: Edm.String; ArticleGroup02Key?: Edm.String; ArticleGroup03Key?: Edm.String; ArticleGroup04Key?: Edm.String; ArticleGroup05Key?: Edm.String; ArticleTypeKey?: Edm.String; BackgroundInfo?: Edm.String; BarCode?: Edm.String; CampaignSource?: Edm.Guid; CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; CurrencyKey?: Edm.String; DangerousGoodsFlag?: Edm.Boolean; Description?: Edm.String; DocumentAttributes?: Crm.Rest.Model.Crm_DocumentAttribute[]; DomainId?: Edm.Guid; DrivingLicenceCategoryKey?: Edm.String; EAN?: Edm.String; ExtensionValues?: Default.CrmArticle_Article_ExtensionValues; GuaranteeInMonths?: Edm.Int32; Height?: Edm.Decimal; Id?: Edm.Guid; Inspection?: Edm.String; IsActive?: Edm.Boolean; IsBatch?: Edm.Boolean; IsEnabled?: Edm.Boolean; IsSerial?: Edm.Boolean; IsSparePart?: Edm.Boolean; IsWarehouseManaged?: Edm.Boolean; ItemNo?: Edm.String; LanguageKey?: Edm.String; LastActivity?: Edm.DateTimeOffset; LeadTimeInDays?: Edm.Decimal; LegacyId?: Edm.String; LegacyName?: Edm.String; Length?: Edm.Decimal; LicensePlate?: Edm.String; Manufacturer?: Edm.String; ManufacturerItemNo?: Edm.String; MinimumStock?: Edm.Decimal; Model?: Edm.String; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; Name?: Edm.String; Notes?: Crm.Rest.Model.Crm_Note[]; ParentId?: Edm.Guid; ParentName?: Edm.String; ParentType?: Edm.String; Price?: Edm.Decimal; ProductFamily?: Crm.Article.Rest.Model.CrmArticle_ProductFamily; ProductFamilyKey?: Edm.Guid; PurchasePrice?: Edm.Decimal; QuantityStep?: Edm.Decimal; QuantityUnitEntry?: Crm.Article.Rest.Model.CrmArticle_QuantityUnitEntry; QuantityUnitEntryKey?: Edm.Guid; QuantityUnitKey?: Edm.String; RequiredAssetKeys?: Edm.String[]; RequiredSkillKeys?: Edm.String[]; ResponsibleUser?: Edm.String; Serial?: Edm.String; SerialRequired?: Edm.Boolean; Serials?: Crm.Article.Rest.Model.CrmArticle_Serial[]; SourceTypeKey?: Edm.String; Station?: Crm.Rest.Model.Crm_Station; StationKey?: Edm.Guid; Stocks?: Crm.Article.Rest.Model.CrmArticle_Stock[]; TUV?: Edm.String; Tags?: Crm.Rest.Model.Crm_Tag[]; VATLevelKey?: Edm.String; VIN?: Edm.String; ValidFrom?: Edm.DateTimeOffset; ValidTo?: Edm.DateTimeOffset; Visibility?: Crm.Library.BaseModel.Visibility; VisibleToUserIds?: Edm.String[]; VisibleToUsergroupIds?: Edm.Guid[]; WarrantyInMonths?: Edm.Int32; Weight?: Edm.Decimal; WeightNet?: Edm.Decimal; Width?: Edm.Decimal });

        ArticleGroup01Key: Edm.String;
        ArticleGroup02Key: Edm.String;
        ArticleGroup03Key: Edm.String;
        ArticleGroup04Key: Edm.String;
        ArticleGroup05Key: Edm.String;
        ArticleTypeKey: Edm.String;
        BackgroundInfo: Edm.String;
        BarCode: Edm.String;
        CampaignSource: Edm.Guid;
        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        CurrencyKey: Edm.String;
        DangerousGoodsFlag: Edm.Boolean;
        Description: Edm.String;
        DocumentAttributes: Crm.Rest.Model.Crm_DocumentAttribute[];
        DomainId: Edm.Guid;
        DrivingLicenceCategoryKey: Edm.String;
        EAN: Edm.String;
        ExtensionValues: Default.CrmArticle_Article_ExtensionValues;
        GuaranteeInMonths: Edm.Int32;
        Height: Edm.Decimal;
        Id: Edm.Guid;
        Inspection: Edm.String;
        IsActive: Edm.Boolean;
        IsBatch: Edm.Boolean;
        IsEnabled: Edm.Boolean;
        IsSerial: Edm.Boolean;
        IsSparePart: Edm.Boolean;
        IsWarehouseManaged: Edm.Boolean;
        ItemNo: Edm.String;
        LanguageKey: Edm.String;
        LastActivity: Edm.DateTimeOffset;
        LeadTimeInDays: Edm.Decimal;
        LegacyId: Edm.String;
        LegacyName: Edm.String;
        Length: Edm.Decimal;
        LicensePlate: Edm.String;
        Manufacturer: Edm.String;
        ManufacturerItemNo: Edm.String;
        MinimumStock: Edm.Decimal;
        Model: Edm.String;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        Name: Edm.String;
        Notes: Crm.Rest.Model.Crm_Note[];
        ParentId: Edm.Guid;
        ParentName: Edm.String;
        ParentType: Edm.String;
        Price: Edm.Decimal;
        ProductFamily: Crm.Article.Rest.Model.CrmArticle_ProductFamily;
        ProductFamilyKey: Edm.Guid;
        PurchasePrice: Edm.Decimal;
        QuantityStep: Edm.Decimal;
        QuantityUnitEntry: Crm.Article.Rest.Model.CrmArticle_QuantityUnitEntry;
        QuantityUnitEntryKey: Edm.Guid;
        QuantityUnitKey: Edm.String;
        RequiredAssetKeys: Edm.String[];
        RequiredSkillKeys: Edm.String[];
        ResponsibleUser: Edm.String;
        Serial: Edm.String;
        SerialRequired: Edm.Boolean;
        Serials: Crm.Article.Rest.Model.CrmArticle_Serial[];
        SourceTypeKey: Edm.String;
        Station: Crm.Rest.Model.Crm_Station;
        StationKey: Edm.Guid;
        Stocks: Crm.Article.Rest.Model.CrmArticle_Stock[];
        TUV: Edm.String;
        Tags: Crm.Rest.Model.Crm_Tag[];
        VATLevelKey: Edm.String;
        VIN: Edm.String;
        ValidFrom: Edm.DateTimeOffset;
        ValidTo: Edm.DateTimeOffset;
        Visibility: Crm.Library.BaseModel.Visibility;
        VisibleToUserIds: Edm.String[];
        VisibleToUsergroupIds: Edm.Guid[];
        WarrantyInMonths: Edm.Int32;
        Weight: Edm.Decimal;
        WeightNet: Edm.Decimal;
        Width: Edm.Decimal;
        asKoObservable(): ObservableCrmArticle_Article;
        static create(): CrmArticle_Article;
        static create(initData:any): CrmArticle_Article;
    }

    export class CrmArticle_ArticleUserRelationship extends $data.Entity {
        constructor();
        constructor(initData: { Article?: Crm.Article.Rest.Model.CrmArticle_Article; ArticleKey?: Edm.Guid; CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; DomainId?: Edm.Guid; From?: Edm.DateTimeOffset; Id?: Edm.Guid; IsActive?: Edm.Boolean; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; To?: Edm.DateTimeOffset; User?: Main.Rest.Model.Main_User; UserKey?: Edm.String });

        Article: Crm.Article.Rest.Model.CrmArticle_Article;
        ArticleKey: Edm.Guid;
        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        DomainId: Edm.Guid;
        From: Edm.DateTimeOffset;
        Id: Edm.Guid;
        IsActive: Edm.Boolean;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        To: Edm.DateTimeOffset;
        User: Main.Rest.Model.Main_User;
        UserKey: Edm.String;
        asKoObservable(): ObservableCrmArticle_ArticleUserRelationship;
        static create(): CrmArticle_ArticleUserRelationship;
        static create(initData:any): CrmArticle_ArticleUserRelationship;
    }

    export class CrmArticle_Location extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; DomainId?: Edm.Guid; Id?: Edm.Guid; IsActive?: Edm.Boolean; LocationNo?: Edm.String; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; Serials?: Crm.Article.Rest.Model.CrmArticle_Serial[]; Stocks?: Crm.Article.Rest.Model.CrmArticle_Stock[]; StorageArea?: Crm.Article.Rest.Model.CrmArticle_StorageArea; StorageAreaId?: Edm.Guid; Store?: Crm.Article.Rest.Model.CrmArticle_Store; StoreId?: Edm.Guid });

        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        DomainId: Edm.Guid;
        Id: Edm.Guid;
        IsActive: Edm.Boolean;
        LocationNo: Edm.String;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        Serials: Crm.Article.Rest.Model.CrmArticle_Serial[];
        Stocks: Crm.Article.Rest.Model.CrmArticle_Stock[];
        StorageArea: Crm.Article.Rest.Model.CrmArticle_StorageArea;
        StorageAreaId: Edm.Guid;
        Store: Crm.Article.Rest.Model.CrmArticle_Store;
        StoreId: Edm.Guid;
        asKoObservable(): ObservableCrmArticle_Location;
        static create(): CrmArticle_Location;
        static create(initData:any): CrmArticle_Location;
    }

    export class CrmArticle_Price extends $data.Entity {
        constructor();
        constructor(initData: { Article?: Crm.Article.Rest.Model.CrmArticle_Article; ArticleKey?: Edm.Guid; Company?: Crm.Rest.Model.Crm_Company; CompanyKey?: Edm.Guid; CompanyPriceGroupKey?: Edm.String; CompanyPriceLevelKey?: Edm.String; CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; CurrencyKey?: Edm.String; DomainId?: Edm.Guid; Id?: Edm.Guid; IsActive?: Edm.Boolean; MinQuantity?: Edm.Decimal; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; NetPricePerUnit?: Edm.Decimal; QuantityUnitEntry?: Crm.Article.Rest.Model.CrmArticle_QuantityUnitEntry; QuantityUnitEntryKey?: Edm.Guid; ValidFrom?: Edm.DateTimeOffset; ValidTo?: Edm.DateTimeOffset });

        Article: Crm.Article.Rest.Model.CrmArticle_Article;
        ArticleKey: Edm.Guid;
        Company: Crm.Rest.Model.Crm_Company;
        CompanyKey: Edm.Guid;
        CompanyPriceGroupKey: Edm.String;
        CompanyPriceLevelKey: Edm.String;
        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        CurrencyKey: Edm.String;
        DomainId: Edm.Guid;
        Id: Edm.Guid;
        IsActive: Edm.Boolean;
        MinQuantity: Edm.Decimal;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        NetPricePerUnit: Edm.Decimal;
        QuantityUnitEntry: Crm.Article.Rest.Model.CrmArticle_QuantityUnitEntry;
        QuantityUnitEntryKey: Edm.Guid;
        ValidFrom: Edm.DateTimeOffset;
        ValidTo: Edm.DateTimeOffset;
        asKoObservable(): ObservableCrmArticle_Price;
        static create(): CrmArticle_Price;
        static create(initData:any): CrmArticle_Price;
    }

    export class CrmArticle_ProductFamily extends $data.Entity {
        constructor();
        constructor(initData: { BackgroundInfo?: Edm.String; CampaignSource?: Edm.Guid; ChildProductFamilies?: Crm.Article.Rest.Model.CrmArticle_ProductFamily[]; CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; DomainId?: Edm.Guid; Id?: Edm.Guid; IsActive?: Edm.Boolean; LanguageKey?: Edm.String; LastActivity?: Edm.DateTimeOffset; LegacyId?: Edm.String; LegacyName?: Edm.String; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; Name?: Edm.String; Notes?: Crm.Rest.Model.Crm_Note[]; ParentId?: Edm.Guid; ParentName?: Edm.String; ParentProductFamily?: Crm.Article.Rest.Model.CrmArticle_ProductFamily; ParentType?: Edm.String; ResponsibleUser?: Edm.String; ResponsibleUserUser?: Main.Rest.Model.Main_User; SourceTypeKey?: Edm.String; StatusKey?: Edm.String; Visibility?: Crm.Library.BaseModel.Visibility; VisibleToUserIds?: Edm.String[]; VisibleToUsergroupIds?: Edm.Guid[] });

        BackgroundInfo: Edm.String;
        CampaignSource: Edm.Guid;
        ChildProductFamilies: Crm.Article.Rest.Model.CrmArticle_ProductFamily[];
        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        DomainId: Edm.Guid;
        Id: Edm.Guid;
        IsActive: Edm.Boolean;
        LanguageKey: Edm.String;
        LastActivity: Edm.DateTimeOffset;
        LegacyId: Edm.String;
        LegacyName: Edm.String;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        Name: Edm.String;
        Notes: Crm.Rest.Model.Crm_Note[];
        ParentId: Edm.Guid;
        ParentName: Edm.String;
        ParentProductFamily: Crm.Article.Rest.Model.CrmArticle_ProductFamily;
        ParentType: Edm.String;
        ResponsibleUser: Edm.String;
        ResponsibleUserUser: Main.Rest.Model.Main_User;
        SourceTypeKey: Edm.String;
        StatusKey: Edm.String;
        Visibility: Crm.Library.BaseModel.Visibility;
        VisibleToUserIds: Edm.String[];
        VisibleToUsergroupIds: Edm.Guid[];
        asKoObservable(): ObservableCrmArticle_ProductFamily;
        static create(): CrmArticle_ProductFamily;
        static create(initData:any): CrmArticle_ProductFamily;
    }

    export class CrmArticle_QuantityUnitEntry extends $data.Entity {
        constructor();
        constructor(initData: { ChildQuantityUnitEntries?: Crm.Article.Rest.Model.CrmArticle_QuantityUnitEntry[]; CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; Description?: Edm.String; Divisor?: Edm.Decimal; DomainId?: Edm.Guid; Factor?: Edm.Decimal; Id?: Edm.Guid; IsActive?: Edm.Boolean; IsCustom?: Edm.Boolean; IsGroup?: Edm.Boolean; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; Name?: Edm.String; QuantityStep?: Edm.Decimal; QuantityUnitGroup?: Crm.Article.Rest.Model.CrmArticle_QuantityUnitEntry; QuantityUnitGroupKey?: Edm.Guid; QuantityUnitKey?: Edm.String });

        ChildQuantityUnitEntries: Crm.Article.Rest.Model.CrmArticle_QuantityUnitEntry[];
        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        Description: Edm.String;
        Divisor: Edm.Decimal;
        DomainId: Edm.Guid;
        Factor: Edm.Decimal;
        Id: Edm.Guid;
        IsActive: Edm.Boolean;
        IsCustom: Edm.Boolean;
        IsGroup: Edm.Boolean;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        Name: Edm.String;
        QuantityStep: Edm.Decimal;
        QuantityUnitGroup: Crm.Article.Rest.Model.CrmArticle_QuantityUnitEntry;
        QuantityUnitGroupKey: Edm.Guid;
        QuantityUnitKey: Edm.String;
        asKoObservable(): ObservableCrmArticle_QuantityUnitEntry;
        static create(): CrmArticle_QuantityUnitEntry;
        static create(initData:any): CrmArticle_QuantityUnitEntry;
    }

    export class CrmArticle_Serial extends $data.Entity {
        constructor();
        constructor(initData: { Article?: Crm.Article.Rest.Model.CrmArticle_Article; ArticleKey?: Edm.Guid; CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; DomainId?: Edm.Guid; Id?: Edm.Guid; IsActive?: Edm.Boolean; IsAvailable?: Edm.Boolean; Location?: Crm.Article.Rest.Model.CrmArticle_Location; LocationKey?: Edm.Guid; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; SerialNo?: Edm.String; StorageArea?: Crm.Article.Rest.Model.CrmArticle_StorageArea; StorageAreaKey?: Edm.Guid; Store?: Crm.Article.Rest.Model.CrmArticle_Store; StoreKey?: Edm.Guid });

        Article: Crm.Article.Rest.Model.CrmArticle_Article;
        ArticleKey: Edm.Guid;
        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        DomainId: Edm.Guid;
        Id: Edm.Guid;
        IsActive: Edm.Boolean;
        IsAvailable: Edm.Boolean;
        Location: Crm.Article.Rest.Model.CrmArticle_Location;
        LocationKey: Edm.Guid;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        SerialNo: Edm.String;
        StorageArea: Crm.Article.Rest.Model.CrmArticle_StorageArea;
        StorageAreaKey: Edm.Guid;
        Store: Crm.Article.Rest.Model.CrmArticle_Store;
        StoreKey: Edm.Guid;
        asKoObservable(): ObservableCrmArticle_Serial;
        static create(): CrmArticle_Serial;
        static create(initData:any): CrmArticle_Serial;
    }

    export class CrmArticle_Stock extends $data.Entity {
        constructor();
        constructor(initData: { Article?: Crm.Article.Rest.Model.CrmArticle_Article; ArticleKey?: Edm.Guid; CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; DomainId?: Edm.Guid; Id?: Edm.Guid; IsActive?: Edm.Boolean; Location?: Crm.Article.Rest.Model.CrmArticle_Location; LocationKey?: Edm.Guid; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; Quantity?: Edm.Decimal; StorageArea?: Crm.Article.Rest.Model.CrmArticle_StorageArea; StorageAreaKey?: Edm.Guid; Store?: Crm.Article.Rest.Model.CrmArticle_Store; StoreKey?: Edm.Guid });

        Article: Crm.Article.Rest.Model.CrmArticle_Article;
        ArticleKey: Edm.Guid;
        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        DomainId: Edm.Guid;
        Id: Edm.Guid;
        IsActive: Edm.Boolean;
        Location: Crm.Article.Rest.Model.CrmArticle_Location;
        LocationKey: Edm.Guid;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        Quantity: Edm.Decimal;
        StorageArea: Crm.Article.Rest.Model.CrmArticle_StorageArea;
        StorageAreaKey: Edm.Guid;
        Store: Crm.Article.Rest.Model.CrmArticle_Store;
        StoreKey: Edm.Guid;
        asKoObservable(): ObservableCrmArticle_Stock;
        static create(): CrmArticle_Stock;
        static create(initData:any): CrmArticle_Stock;
    }

    export class CrmArticle_StorageArea extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; DomainId?: Edm.Guid; Id?: Edm.Guid; IsActive?: Edm.Boolean; Locations?: Crm.Article.Rest.Model.CrmArticle_Location[]; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; Serials?: Crm.Article.Rest.Model.CrmArticle_Serial[]; Stocks?: Crm.Article.Rest.Model.CrmArticle_Stock[]; StorageAreaNo?: Edm.String; Store?: Crm.Article.Rest.Model.CrmArticle_Store; StoreId?: Edm.Guid });

        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        DomainId: Edm.Guid;
        Id: Edm.Guid;
        IsActive: Edm.Boolean;
        Locations: Crm.Article.Rest.Model.CrmArticle_Location[];
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        Serials: Crm.Article.Rest.Model.CrmArticle_Serial[];
        Stocks: Crm.Article.Rest.Model.CrmArticle_Stock[];
        StorageAreaNo: Edm.String;
        Store: Crm.Article.Rest.Model.CrmArticle_Store;
        StoreId: Edm.Guid;
        asKoObservable(): ObservableCrmArticle_StorageArea;
        static create(): CrmArticle_StorageArea;
        static create(initData:any): CrmArticle_StorageArea;
    }

    export class CrmArticle_Store extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; DomainId?: Edm.Guid; Id?: Edm.Guid; IsActive?: Edm.Boolean; LegacyId?: Edm.String; Locations?: Crm.Article.Rest.Model.CrmArticle_Location[]; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; Name?: Edm.String; Serials?: Crm.Article.Rest.Model.CrmArticle_Serial[]; Stocks?: Crm.Article.Rest.Model.CrmArticle_Stock[]; StorageAreas?: Crm.Article.Rest.Model.CrmArticle_StorageArea[]; StoreNo?: Edm.String });

        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        DomainId: Edm.Guid;
        Id: Edm.Guid;
        IsActive: Edm.Boolean;
        LegacyId: Edm.String;
        Locations: Crm.Article.Rest.Model.CrmArticle_Location[];
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        Name: Edm.String;
        Serials: Crm.Article.Rest.Model.CrmArticle_Serial[];
        Stocks: Crm.Article.Rest.Model.CrmArticle_Stock[];
        StorageAreas: Crm.Article.Rest.Model.CrmArticle_StorageArea[];
        StoreNo: Edm.String;
        asKoObservable(): ObservableCrmArticle_Store;
        static create(): CrmArticle_Store;
        static create(initData:any): CrmArticle_Store;
    }

}

namespace Crm.Article.Rest.Model.Lookups {

    export class ObservableCrmArticle_ProductFamilyStatus extends $data.Entity {
        constructor();
        constructor(initData: { Color?: KnockoutObservable<Edm.String>; CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; DomainId?: KnockoutObservable<Edm.Guid>; Favorite?: KnockoutObservable<Edm.Boolean>; Id?: KnockoutObservable<Edm.Guid>; IsActive?: KnockoutObservable<Edm.Boolean>; Key?: KnockoutObservable<Edm.String>; Language?: KnockoutObservable<Edm.String>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; SortOrder?: KnockoutObservable<Edm.Int32>; Value?: KnockoutObservable<Edm.String> });

        Color: KnockoutObservable<Edm.String>;
        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        DomainId: KnockoutObservable<Edm.Guid>;
        Favorite: KnockoutObservable<Edm.Boolean>;
        Id: KnockoutObservable<Edm.Guid>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        Key: KnockoutObservable<Edm.String>;
        Language: KnockoutObservable<Edm.String>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        SortOrder: KnockoutObservable<Edm.Int32>;
        Value: KnockoutObservable<Edm.String>;
        innerInstance: CrmArticle_ProductFamilyStatus;
    }

    export class ObservableCrmArticle_ArticleCompanyRelationshipType extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; DomainId?: KnockoutObservable<Edm.Guid>; Favorite?: KnockoutObservable<Edm.Boolean>; Id?: KnockoutObservable<Edm.Guid>; IsActive?: KnockoutObservable<Edm.Boolean>; Key?: KnockoutObservable<Edm.String>; Language?: KnockoutObservable<Edm.String>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; SortOrder?: KnockoutObservable<Edm.Int32>; Value?: KnockoutObservable<Edm.String> });

        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        DomainId: KnockoutObservable<Edm.Guid>;
        Favorite: KnockoutObservable<Edm.Boolean>;
        Id: KnockoutObservable<Edm.Guid>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        Key: KnockoutObservable<Edm.String>;
        Language: KnockoutObservable<Edm.String>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        SortOrder: KnockoutObservable<Edm.Int32>;
        Value: KnockoutObservable<Edm.String>;
        innerInstance: CrmArticle_ArticleCompanyRelationshipType;
    }

    export class ObservableCrmArticle_ArticleGroup01 extends $data.Entity {
        constructor();
        constructor(initData: { Base64Image?: KnockoutObservable<Edm.String>; CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; DomainId?: KnockoutObservable<Edm.Guid>; ExtensionValues?: KnockoutObservable<Default.ObservableCrmArticle_ArticleGroup01_ExtensionValues>; Favorite?: KnockoutObservable<Edm.Boolean>; Id?: KnockoutObservable<Edm.Guid>; Image?: KnockoutObservable<Edm.String>; IsActive?: KnockoutObservable<Edm.Boolean>; Key?: KnockoutObservable<Edm.String>; Language?: KnockoutObservable<Edm.String>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; SortOrder?: KnockoutObservable<Edm.Int32>; Value?: KnockoutObservable<Edm.String> });

        Base64Image: KnockoutObservable<Edm.String>;
        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        DomainId: KnockoutObservable<Edm.Guid>;
        ExtensionValues: KnockoutObservable<Default.ObservableCrmArticle_ArticleGroup01_ExtensionValues>;
        Favorite: KnockoutObservable<Edm.Boolean>;
        Id: KnockoutObservable<Edm.Guid>;
        Image: KnockoutObservable<Edm.String>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        Key: KnockoutObservable<Edm.String>;
        Language: KnockoutObservable<Edm.String>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        SortOrder: KnockoutObservable<Edm.Int32>;
        Value: KnockoutObservable<Edm.String>;
        innerInstance: CrmArticle_ArticleGroup01;
    }

    export class ObservableCrmArticle_ArticleGroup02 extends $data.Entity {
        constructor();
        constructor(initData: { Base64Image?: KnockoutObservable<Edm.String>; CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; DomainId?: KnockoutObservable<Edm.Guid>; Favorite?: KnockoutObservable<Edm.Boolean>; Id?: KnockoutObservable<Edm.Guid>; Image?: KnockoutObservable<Edm.String>; IsActive?: KnockoutObservable<Edm.Boolean>; Key?: KnockoutObservable<Edm.String>; Language?: KnockoutObservable<Edm.String>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; ParentArticleGroup?: KnockoutObservable<Edm.String>; SortOrder?: KnockoutObservable<Edm.Int32>; Value?: KnockoutObservable<Edm.String> });

        Base64Image: KnockoutObservable<Edm.String>;
        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        DomainId: KnockoutObservable<Edm.Guid>;
        Favorite: KnockoutObservable<Edm.Boolean>;
        Id: KnockoutObservable<Edm.Guid>;
        Image: KnockoutObservable<Edm.String>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        Key: KnockoutObservable<Edm.String>;
        Language: KnockoutObservable<Edm.String>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        ParentArticleGroup: KnockoutObservable<Edm.String>;
        SortOrder: KnockoutObservable<Edm.Int32>;
        Value: KnockoutObservable<Edm.String>;
        innerInstance: CrmArticle_ArticleGroup02;
    }

    export class ObservableCrmArticle_ArticleGroup03 extends $data.Entity {
        constructor();
        constructor(initData: { Base64Image?: KnockoutObservable<Edm.String>; CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; DomainId?: KnockoutObservable<Edm.Guid>; Favorite?: KnockoutObservable<Edm.Boolean>; Id?: KnockoutObservable<Edm.Guid>; Image?: KnockoutObservable<Edm.String>; IsActive?: KnockoutObservable<Edm.Boolean>; Key?: KnockoutObservable<Edm.String>; Language?: KnockoutObservable<Edm.String>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; ParentArticleGroup?: KnockoutObservable<Edm.String>; SortOrder?: KnockoutObservable<Edm.Int32>; Value?: KnockoutObservable<Edm.String> });

        Base64Image: KnockoutObservable<Edm.String>;
        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        DomainId: KnockoutObservable<Edm.Guid>;
        Favorite: KnockoutObservable<Edm.Boolean>;
        Id: KnockoutObservable<Edm.Guid>;
        Image: KnockoutObservable<Edm.String>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        Key: KnockoutObservable<Edm.String>;
        Language: KnockoutObservable<Edm.String>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        ParentArticleGroup: KnockoutObservable<Edm.String>;
        SortOrder: KnockoutObservable<Edm.Int32>;
        Value: KnockoutObservable<Edm.String>;
        innerInstance: CrmArticle_ArticleGroup03;
    }

    export class ObservableCrmArticle_ArticleGroup04 extends $data.Entity {
        constructor();
        constructor(initData: { Base64Image?: KnockoutObservable<Edm.String>; CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; DomainId?: KnockoutObservable<Edm.Guid>; Favorite?: KnockoutObservable<Edm.Boolean>; Id?: KnockoutObservable<Edm.Guid>; Image?: KnockoutObservable<Edm.String>; IsActive?: KnockoutObservable<Edm.Boolean>; Key?: KnockoutObservable<Edm.String>; Language?: KnockoutObservable<Edm.String>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; ParentArticleGroup?: KnockoutObservable<Edm.String>; SortOrder?: KnockoutObservable<Edm.Int32>; Value?: KnockoutObservable<Edm.String> });

        Base64Image: KnockoutObservable<Edm.String>;
        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        DomainId: KnockoutObservable<Edm.Guid>;
        Favorite: KnockoutObservable<Edm.Boolean>;
        Id: KnockoutObservable<Edm.Guid>;
        Image: KnockoutObservable<Edm.String>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        Key: KnockoutObservable<Edm.String>;
        Language: KnockoutObservable<Edm.String>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        ParentArticleGroup: KnockoutObservable<Edm.String>;
        SortOrder: KnockoutObservable<Edm.Int32>;
        Value: KnockoutObservable<Edm.String>;
        innerInstance: CrmArticle_ArticleGroup04;
    }

    export class ObservableCrmArticle_ArticleGroup05 extends $data.Entity {
        constructor();
        constructor(initData: { Base64Image?: KnockoutObservable<Edm.String>; CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; DomainId?: KnockoutObservable<Edm.Guid>; Favorite?: KnockoutObservable<Edm.Boolean>; Id?: KnockoutObservable<Edm.Guid>; Image?: KnockoutObservable<Edm.String>; IsActive?: KnockoutObservable<Edm.Boolean>; Key?: KnockoutObservable<Edm.String>; Language?: KnockoutObservable<Edm.String>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; ParentArticleGroup?: KnockoutObservable<Edm.String>; SortOrder?: KnockoutObservable<Edm.Int32>; Value?: KnockoutObservable<Edm.String> });

        Base64Image: KnockoutObservable<Edm.String>;
        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        DomainId: KnockoutObservable<Edm.Guid>;
        Favorite: KnockoutObservable<Edm.Boolean>;
        Id: KnockoutObservable<Edm.Guid>;
        Image: KnockoutObservable<Edm.String>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        Key: KnockoutObservable<Edm.String>;
        Language: KnockoutObservable<Edm.String>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        ParentArticleGroup: KnockoutObservable<Edm.String>;
        SortOrder: KnockoutObservable<Edm.Int32>;
        Value: KnockoutObservable<Edm.String>;
        innerInstance: CrmArticle_ArticleGroup05;
    }

    export class ObservableCrmArticle_ArticleRelationshipType extends $data.Entity {
        constructor();
        constructor(initData: { ArticleTypes?: KnockoutObservableArray<Edm.String>; CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; DomainId?: KnockoutObservable<Edm.Guid>; Favorite?: KnockoutObservable<Edm.Boolean>; HasQuantity?: KnockoutObservable<Edm.Boolean>; Id?: KnockoutObservable<Edm.Guid>; InverseValue?: KnockoutObservable<Edm.String>; IsActive?: KnockoutObservable<Edm.Boolean>; Key?: KnockoutObservable<Edm.String>; Language?: KnockoutObservable<Edm.String>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; SortOrder?: KnockoutObservable<Edm.Int32>; Value?: KnockoutObservable<Edm.String> });

        ArticleTypes: KnockoutObservableArray<Edm.String>;
        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        DomainId: KnockoutObservable<Edm.Guid>;
        Favorite: KnockoutObservable<Edm.Boolean>;
        HasQuantity: KnockoutObservable<Edm.Boolean>;
        Id: KnockoutObservable<Edm.Guid>;
        InverseValue: KnockoutObservable<Edm.String>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        Key: KnockoutObservable<Edm.String>;
        Language: KnockoutObservable<Edm.String>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        SortOrder: KnockoutObservable<Edm.Int32>;
        Value: KnockoutObservable<Edm.String>;
        innerInstance: CrmArticle_ArticleRelationshipType;
    }

    export class ObservableCrmArticle_ArticleType extends $data.Entity {
        constructor();
        constructor(initData: { Color?: KnockoutObservable<Edm.String>; CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; DomainId?: KnockoutObservable<Edm.Guid>; Favorite?: KnockoutObservable<Edm.Boolean>; Id?: KnockoutObservable<Edm.Guid>; IsActive?: KnockoutObservable<Edm.Boolean>; Key?: KnockoutObservable<Edm.String>; Language?: KnockoutObservable<Edm.String>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; SortOrder?: KnockoutObservable<Edm.Int32>; Value?: KnockoutObservable<Edm.String> });

        Color: KnockoutObservable<Edm.String>;
        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        DomainId: KnockoutObservable<Edm.Guid>;
        Favorite: KnockoutObservable<Edm.Boolean>;
        Id: KnockoutObservable<Edm.Guid>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        Key: KnockoutObservable<Edm.String>;
        Language: KnockoutObservable<Edm.String>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        SortOrder: KnockoutObservable<Edm.Int32>;
        Value: KnockoutObservable<Edm.String>;
        innerInstance: CrmArticle_ArticleType;
    }

    export class ObservableCrmArticle_QuantityUnit extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; DomainId?: KnockoutObservable<Edm.Guid>; Favorite?: KnockoutObservable<Edm.Boolean>; Id?: KnockoutObservable<Edm.Guid>; IsActive?: KnockoutObservable<Edm.Boolean>; Key?: KnockoutObservable<Edm.String>; Language?: KnockoutObservable<Edm.String>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; SortOrder?: KnockoutObservable<Edm.Int32>; Value?: KnockoutObservable<Edm.String> });

        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        DomainId: KnockoutObservable<Edm.Guid>;
        Favorite: KnockoutObservable<Edm.Boolean>;
        Id: KnockoutObservable<Edm.Guid>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        Key: KnockoutObservable<Edm.String>;
        Language: KnockoutObservable<Edm.String>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        SortOrder: KnockoutObservable<Edm.Int32>;
        Value: KnockoutObservable<Edm.String>;
        innerInstance: CrmArticle_QuantityUnit;
    }

    export class ObservableCrmArticle_VATLevel extends $data.Entity {
        constructor();
        constructor(initData: { CountryKey?: KnockoutObservable<Edm.String>; CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; DomainId?: KnockoutObservable<Edm.Guid>; Favorite?: KnockoutObservable<Edm.Boolean>; Id?: KnockoutObservable<Edm.Guid>; IsActive?: KnockoutObservable<Edm.Boolean>; Key?: KnockoutObservable<Edm.String>; Language?: KnockoutObservable<Edm.String>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; PercentageValue?: KnockoutObservable<Edm.Decimal>; SortOrder?: KnockoutObservable<Edm.Int32>; Value?: KnockoutObservable<Edm.String> });

        CountryKey: KnockoutObservable<Edm.String>;
        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        DomainId: KnockoutObservable<Edm.Guid>;
        Favorite: KnockoutObservable<Edm.Boolean>;
        Id: KnockoutObservable<Edm.Guid>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        Key: KnockoutObservable<Edm.String>;
        Language: KnockoutObservable<Edm.String>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        PercentageValue: KnockoutObservable<Edm.Decimal>;
        SortOrder: KnockoutObservable<Edm.Int32>;
        Value: KnockoutObservable<Edm.String>;
        innerInstance: CrmArticle_VATLevel;
    }

    export class ObservableCrmArticle_ArticleDescription extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; Favorite?: KnockoutObservable<Edm.Boolean>; Id?: KnockoutObservable<Edm.Guid>; IsActive?: KnockoutObservable<Edm.Boolean>; Key?: KnockoutObservable<Edm.String>; Language?: KnockoutObservable<Edm.String>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; SortOrder?: KnockoutObservable<Edm.Int32>; Value?: KnockoutObservable<Edm.String> });

        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        Favorite: KnockoutObservable<Edm.Boolean>;
        Id: KnockoutObservable<Edm.Guid>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        Key: KnockoutObservable<Edm.String>;
        Language: KnockoutObservable<Edm.String>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        SortOrder: KnockoutObservable<Edm.Int32>;
        Value: KnockoutObservable<Edm.String>;
        innerInstance: CrmArticle_ArticleDescription;
    }

    export class ObservableCrmArticle_ProductFamilyDescription extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; DomainId?: KnockoutObservable<Edm.Guid>; Favorite?: KnockoutObservable<Edm.Boolean>; Id?: KnockoutObservable<Edm.Guid>; IsActive?: KnockoutObservable<Edm.Boolean>; Key?: KnockoutObservable<Edm.String>; Language?: KnockoutObservable<Edm.String>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; SortOrder?: KnockoutObservable<Edm.Int32>; Value?: KnockoutObservable<Edm.String> });

        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        DomainId: KnockoutObservable<Edm.Guid>;
        Favorite: KnockoutObservable<Edm.Boolean>;
        Id: KnockoutObservable<Edm.Guid>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        Key: KnockoutObservable<Edm.String>;
        Language: KnockoutObservable<Edm.String>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        SortOrder: KnockoutObservable<Edm.Int32>;
        Value: KnockoutObservable<Edm.String>;
        innerInstance: CrmArticle_ProductFamilyDescription;
    }

    export class ObservableCrmArticle_StoreName extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; Favorite?: KnockoutObservable<Edm.Boolean>; Id?: KnockoutObservable<Edm.Guid>; IsActive?: KnockoutObservable<Edm.Boolean>; Key?: KnockoutObservable<Edm.String>; Language?: KnockoutObservable<Edm.String>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; SortOrder?: KnockoutObservable<Edm.Int32>; Value?: KnockoutObservable<Edm.String> });

        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        Favorite: KnockoutObservable<Edm.Boolean>;
        Id: KnockoutObservable<Edm.Guid>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        Key: KnockoutObservable<Edm.String>;
        Language: KnockoutObservable<Edm.String>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        SortOrder: KnockoutObservable<Edm.Int32>;
        Value: KnockoutObservable<Edm.String>;
        innerInstance: CrmArticle_StoreName;
    }

    export class CrmArticle_ProductFamilyStatus extends $data.Entity {
        constructor();
        constructor(initData: { Color?: Edm.String; CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; DomainId?: Edm.Guid; Favorite?: Edm.Boolean; Id?: Edm.Guid; IsActive?: Edm.Boolean; Key?: Edm.String; Language?: Edm.String; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; SortOrder?: Edm.Int32; Value?: Edm.String });

        Color: Edm.String;
        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        DomainId: Edm.Guid;
        Favorite: Edm.Boolean;
        Id: Edm.Guid;
        IsActive: Edm.Boolean;
        Key: Edm.String;
        Language: Edm.String;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        SortOrder: Edm.Int32;
        Value: Edm.String;
        asKoObservable(): ObservableCrmArticle_ProductFamilyStatus;
        static create(): CrmArticle_ProductFamilyStatus;
        static create(initData:any): CrmArticle_ProductFamilyStatus;
    }

    export class CrmArticle_ArticleCompanyRelationshipType extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; DomainId?: Edm.Guid; Favorite?: Edm.Boolean; Id?: Edm.Guid; IsActive?: Edm.Boolean; Key?: Edm.String; Language?: Edm.String; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; SortOrder?: Edm.Int32; Value?: Edm.String });

        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        DomainId: Edm.Guid;
        Favorite: Edm.Boolean;
        Id: Edm.Guid;
        IsActive: Edm.Boolean;
        Key: Edm.String;
        Language: Edm.String;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        SortOrder: Edm.Int32;
        Value: Edm.String;
        asKoObservable(): ObservableCrmArticle_ArticleCompanyRelationshipType;
        static create(): CrmArticle_ArticleCompanyRelationshipType;
        static create(initData:any): CrmArticle_ArticleCompanyRelationshipType;
    }

    export class CrmArticle_ArticleGroup01 extends $data.Entity {
        constructor();
        constructor(initData: { Base64Image?: Edm.String; CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; DomainId?: Edm.Guid; ExtensionValues?: Default.CrmArticle_ArticleGroup01_ExtensionValues; Favorite?: Edm.Boolean; Id?: Edm.Guid; Image?: Edm.String; IsActive?: Edm.Boolean; Key?: Edm.String; Language?: Edm.String; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; SortOrder?: Edm.Int32; Value?: Edm.String });

        Base64Image: Edm.String;
        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        DomainId: Edm.Guid;
        ExtensionValues: Default.CrmArticle_ArticleGroup01_ExtensionValues;
        Favorite: Edm.Boolean;
        Id: Edm.Guid;
        Image: Edm.String;
        IsActive: Edm.Boolean;
        Key: Edm.String;
        Language: Edm.String;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        SortOrder: Edm.Int32;
        Value: Edm.String;
        asKoObservable(): ObservableCrmArticle_ArticleGroup01;
        static create(): CrmArticle_ArticleGroup01;
        static create(initData:any): CrmArticle_ArticleGroup01;
    }

    export class CrmArticle_ArticleGroup02 extends $data.Entity {
        constructor();
        constructor(initData: { Base64Image?: Edm.String; CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; DomainId?: Edm.Guid; Favorite?: Edm.Boolean; Id?: Edm.Guid; Image?: Edm.String; IsActive?: Edm.Boolean; Key?: Edm.String; Language?: Edm.String; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; ParentArticleGroup?: Edm.String; SortOrder?: Edm.Int32; Value?: Edm.String });

        Base64Image: Edm.String;
        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        DomainId: Edm.Guid;
        Favorite: Edm.Boolean;
        Id: Edm.Guid;
        Image: Edm.String;
        IsActive: Edm.Boolean;
        Key: Edm.String;
        Language: Edm.String;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        ParentArticleGroup: Edm.String;
        SortOrder: Edm.Int32;
        Value: Edm.String;
        asKoObservable(): ObservableCrmArticle_ArticleGroup02;
        static create(): CrmArticle_ArticleGroup02;
        static create(initData:any): CrmArticle_ArticleGroup02;
    }

    export class CrmArticle_ArticleGroup03 extends $data.Entity {
        constructor();
        constructor(initData: { Base64Image?: Edm.String; CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; DomainId?: Edm.Guid; Favorite?: Edm.Boolean; Id?: Edm.Guid; Image?: Edm.String; IsActive?: Edm.Boolean; Key?: Edm.String; Language?: Edm.String; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; ParentArticleGroup?: Edm.String; SortOrder?: Edm.Int32; Value?: Edm.String });

        Base64Image: Edm.String;
        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        DomainId: Edm.Guid;
        Favorite: Edm.Boolean;
        Id: Edm.Guid;
        Image: Edm.String;
        IsActive: Edm.Boolean;
        Key: Edm.String;
        Language: Edm.String;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        ParentArticleGroup: Edm.String;
        SortOrder: Edm.Int32;
        Value: Edm.String;
        asKoObservable(): ObservableCrmArticle_ArticleGroup03;
        static create(): CrmArticle_ArticleGroup03;
        static create(initData:any): CrmArticle_ArticleGroup03;
    }

    export class CrmArticle_ArticleGroup04 extends $data.Entity {
        constructor();
        constructor(initData: { Base64Image?: Edm.String; CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; DomainId?: Edm.Guid; Favorite?: Edm.Boolean; Id?: Edm.Guid; Image?: Edm.String; IsActive?: Edm.Boolean; Key?: Edm.String; Language?: Edm.String; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; ParentArticleGroup?: Edm.String; SortOrder?: Edm.Int32; Value?: Edm.String });

        Base64Image: Edm.String;
        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        DomainId: Edm.Guid;
        Favorite: Edm.Boolean;
        Id: Edm.Guid;
        Image: Edm.String;
        IsActive: Edm.Boolean;
        Key: Edm.String;
        Language: Edm.String;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        ParentArticleGroup: Edm.String;
        SortOrder: Edm.Int32;
        Value: Edm.String;
        asKoObservable(): ObservableCrmArticle_ArticleGroup04;
        static create(): CrmArticle_ArticleGroup04;
        static create(initData:any): CrmArticle_ArticleGroup04;
    }

    export class CrmArticle_ArticleGroup05 extends $data.Entity {
        constructor();
        constructor(initData: { Base64Image?: Edm.String; CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; DomainId?: Edm.Guid; Favorite?: Edm.Boolean; Id?: Edm.Guid; Image?: Edm.String; IsActive?: Edm.Boolean; Key?: Edm.String; Language?: Edm.String; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; ParentArticleGroup?: Edm.String; SortOrder?: Edm.Int32; Value?: Edm.String });

        Base64Image: Edm.String;
        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        DomainId: Edm.Guid;
        Favorite: Edm.Boolean;
        Id: Edm.Guid;
        Image: Edm.String;
        IsActive: Edm.Boolean;
        Key: Edm.String;
        Language: Edm.String;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        ParentArticleGroup: Edm.String;
        SortOrder: Edm.Int32;
        Value: Edm.String;
        asKoObservable(): ObservableCrmArticle_ArticleGroup05;
        static create(): CrmArticle_ArticleGroup05;
        static create(initData:any): CrmArticle_ArticleGroup05;
    }

    export class CrmArticle_ArticleRelationshipType extends $data.Entity {
        constructor();
        constructor(initData: { ArticleTypes?: Edm.String[]; CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; DomainId?: Edm.Guid; Favorite?: Edm.Boolean; HasQuantity?: Edm.Boolean; Id?: Edm.Guid; InverseValue?: Edm.String; IsActive?: Edm.Boolean; Key?: Edm.String; Language?: Edm.String; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; SortOrder?: Edm.Int32; Value?: Edm.String });

        ArticleTypes: Edm.String[];
        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        DomainId: Edm.Guid;
        Favorite: Edm.Boolean;
        HasQuantity: Edm.Boolean;
        Id: Edm.Guid;
        InverseValue: Edm.String;
        IsActive: Edm.Boolean;
        Key: Edm.String;
        Language: Edm.String;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        SortOrder: Edm.Int32;
        Value: Edm.String;
        asKoObservable(): ObservableCrmArticle_ArticleRelationshipType;
        static create(): CrmArticle_ArticleRelationshipType;
        static create(initData:any): CrmArticle_ArticleRelationshipType;
    }

    export class CrmArticle_ArticleType extends $data.Entity {
        constructor();
        constructor(initData: { Color?: Edm.String; CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; DomainId?: Edm.Guid; Favorite?: Edm.Boolean; Id?: Edm.Guid; IsActive?: Edm.Boolean; Key?: Edm.String; Language?: Edm.String; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; SortOrder?: Edm.Int32; Value?: Edm.String });

        Color: Edm.String;
        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        DomainId: Edm.Guid;
        Favorite: Edm.Boolean;
        Id: Edm.Guid;
        IsActive: Edm.Boolean;
        Key: Edm.String;
        Language: Edm.String;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        SortOrder: Edm.Int32;
        Value: Edm.String;
        asKoObservable(): ObservableCrmArticle_ArticleType;
        static create(): CrmArticle_ArticleType;
        static create(initData:any): CrmArticle_ArticleType;
    }

    export class CrmArticle_QuantityUnit extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; DomainId?: Edm.Guid; Favorite?: Edm.Boolean; Id?: Edm.Guid; IsActive?: Edm.Boolean; Key?: Edm.String; Language?: Edm.String; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; SortOrder?: Edm.Int32; Value?: Edm.String });

        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        DomainId: Edm.Guid;
        Favorite: Edm.Boolean;
        Id: Edm.Guid;
        IsActive: Edm.Boolean;
        Key: Edm.String;
        Language: Edm.String;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        SortOrder: Edm.Int32;
        Value: Edm.String;
        asKoObservable(): ObservableCrmArticle_QuantityUnit;
        static create(): CrmArticle_QuantityUnit;
        static create(initData:any): CrmArticle_QuantityUnit;
    }

    export class CrmArticle_VATLevel extends $data.Entity {
        constructor();
        constructor(initData: { CountryKey?: Edm.String; CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; DomainId?: Edm.Guid; Favorite?: Edm.Boolean; Id?: Edm.Guid; IsActive?: Edm.Boolean; Key?: Edm.String; Language?: Edm.String; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; PercentageValue?: Edm.Decimal; SortOrder?: Edm.Int32; Value?: Edm.String });

        CountryKey: Edm.String;
        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        DomainId: Edm.Guid;
        Favorite: Edm.Boolean;
        Id: Edm.Guid;
        IsActive: Edm.Boolean;
        Key: Edm.String;
        Language: Edm.String;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        PercentageValue: Edm.Decimal;
        SortOrder: Edm.Int32;
        Value: Edm.String;
        asKoObservable(): ObservableCrmArticle_VATLevel;
        static create(): CrmArticle_VATLevel;
        static create(initData:any): CrmArticle_VATLevel;
    }

    export class CrmArticle_ArticleDescription extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; Favorite?: Edm.Boolean; Id?: Edm.Guid; IsActive?: Edm.Boolean; Key?: Edm.String; Language?: Edm.String; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; SortOrder?: Edm.Int32; Value?: Edm.String });

        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        Favorite: Edm.Boolean;
        Id: Edm.Guid;
        IsActive: Edm.Boolean;
        Key: Edm.String;
        Language: Edm.String;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        SortOrder: Edm.Int32;
        Value: Edm.String;
        asKoObservable(): ObservableCrmArticle_ArticleDescription;
        static create(): CrmArticle_ArticleDescription;
        static create(initData:any): CrmArticle_ArticleDescription;
    }

    export class CrmArticle_ProductFamilyDescription extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; DomainId?: Edm.Guid; Favorite?: Edm.Boolean; Id?: Edm.Guid; IsActive?: Edm.Boolean; Key?: Edm.String; Language?: Edm.String; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; SortOrder?: Edm.Int32; Value?: Edm.String });

        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        DomainId: Edm.Guid;
        Favorite: Edm.Boolean;
        Id: Edm.Guid;
        IsActive: Edm.Boolean;
        Key: Edm.String;
        Language: Edm.String;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        SortOrder: Edm.Int32;
        Value: Edm.String;
        asKoObservable(): ObservableCrmArticle_ProductFamilyDescription;
        static create(): CrmArticle_ProductFamilyDescription;
        static create(initData:any): CrmArticle_ProductFamilyDescription;
    }

    export class CrmArticle_StoreName extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; Favorite?: Edm.Boolean; Id?: Edm.Guid; IsActive?: Edm.Boolean; Key?: Edm.String; Language?: Edm.String; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; SortOrder?: Edm.Int32; Value?: Edm.String });

        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        Favorite: Edm.Boolean;
        Id: Edm.Guid;
        IsActive: Edm.Boolean;
        Key: Edm.String;
        Language: Edm.String;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        SortOrder: Edm.Int32;
        Value: Edm.String;
        asKoObservable(): ObservableCrmArticle_StoreName;
        static create(): CrmArticle_StoreName;
        static create(initData:any): CrmArticle_StoreName;
    }

}

namespace Sms.TimeManagement.Rest.Model.Lookups {

    export class ObservableSmsTimeManagement_TimeManagementEventType extends $data.Entity {
        constructor();
        constructor(initData: { AbsenceType1?: KnockoutObservable<Edm.String>; AbsenceType2?: KnockoutObservable<Edm.String>; AbsenceType3?: KnockoutObservable<Edm.String>; AbsenceType4?: KnockoutObservable<Edm.String>; ArticleId?: KnockoutObservable<Edm.Guid>; CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; DisplaySynchronizationWarning?: KnockoutObservable<Edm.Boolean>; DomainId?: KnockoutObservable<Edm.Guid>; EventId?: KnockoutObservable<Edm.Int32>; Favorite?: KnockoutObservable<Edm.Boolean>; HasDispatchSelection?: KnockoutObservable<Edm.Boolean>; HasDuration?: KnockoutObservable<Edm.Boolean>; HasInstallationSelection?: KnockoutObservable<Edm.Boolean>; HasLocation?: KnockoutObservable<Edm.Boolean>; Id?: KnockoutObservable<Edm.Guid>; InterflexPosting1?: KnockoutObservable<Edm.String>; InterflexPosting2?: KnockoutObservable<Edm.String>; InterflexPosting3?: KnockoutObservable<Edm.String>; InterflexPosting4?: KnockoutObservable<Edm.String>; IsActive?: KnockoutObservable<Edm.Boolean>; Key?: KnockoutObservable<Edm.Int32>; Language?: KnockoutObservable<Edm.String>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; PredecessorEventId?: KnockoutObservable<Edm.Int32>; SortOrder?: KnockoutObservable<Edm.Int32>; Value?: KnockoutObservable<Edm.String> });

        AbsenceType1: KnockoutObservable<Edm.String>;
        AbsenceType2: KnockoutObservable<Edm.String>;
        AbsenceType3: KnockoutObservable<Edm.String>;
        AbsenceType4: KnockoutObservable<Edm.String>;
        ArticleId: KnockoutObservable<Edm.Guid>;
        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        DisplaySynchronizationWarning: KnockoutObservable<Edm.Boolean>;
        DomainId: KnockoutObservable<Edm.Guid>;
        EventId: KnockoutObservable<Edm.Int32>;
        Favorite: KnockoutObservable<Edm.Boolean>;
        HasDispatchSelection: KnockoutObservable<Edm.Boolean>;
        HasDuration: KnockoutObservable<Edm.Boolean>;
        HasInstallationSelection: KnockoutObservable<Edm.Boolean>;
        HasLocation: KnockoutObservable<Edm.Boolean>;
        Id: KnockoutObservable<Edm.Guid>;
        InterflexPosting1: KnockoutObservable<Edm.String>;
        InterflexPosting2: KnockoutObservable<Edm.String>;
        InterflexPosting3: KnockoutObservable<Edm.String>;
        InterflexPosting4: KnockoutObservable<Edm.String>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        Key: KnockoutObservable<Edm.Int32>;
        Language: KnockoutObservable<Edm.String>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        PredecessorEventId: KnockoutObservable<Edm.Int32>;
        SortOrder: KnockoutObservable<Edm.Int32>;
        Value: KnockoutObservable<Edm.String>;
        innerInstance: SmsTimeManagement_TimeManagementEventType;
    }

    export class SmsTimeManagement_TimeManagementEventType extends $data.Entity {
        constructor();
        constructor(initData: { AbsenceType1?: Edm.String; AbsenceType2?: Edm.String; AbsenceType3?: Edm.String; AbsenceType4?: Edm.String; ArticleId?: Edm.Guid; CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; DisplaySynchronizationWarning?: Edm.Boolean; DomainId?: Edm.Guid; EventId?: Edm.Int32; Favorite?: Edm.Boolean; HasDispatchSelection?: Edm.Boolean; HasDuration?: Edm.Boolean; HasInstallationSelection?: Edm.Boolean; HasLocation?: Edm.Boolean; Id?: Edm.Guid; InterflexPosting1?: Edm.String; InterflexPosting2?: Edm.String; InterflexPosting3?: Edm.String; InterflexPosting4?: Edm.String; IsActive?: Edm.Boolean; Key?: Edm.Int32; Language?: Edm.String; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; PredecessorEventId?: Edm.Int32; SortOrder?: Edm.Int32; Value?: Edm.String });

        AbsenceType1: Edm.String;
        AbsenceType2: Edm.String;
        AbsenceType3: Edm.String;
        AbsenceType4: Edm.String;
        ArticleId: Edm.Guid;
        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        DisplaySynchronizationWarning: Edm.Boolean;
        DomainId: Edm.Guid;
        EventId: Edm.Int32;
        Favorite: Edm.Boolean;
        HasDispatchSelection: Edm.Boolean;
        HasDuration: Edm.Boolean;
        HasInstallationSelection: Edm.Boolean;
        HasLocation: Edm.Boolean;
        Id: Edm.Guid;
        InterflexPosting1: Edm.String;
        InterflexPosting2: Edm.String;
        InterflexPosting3: Edm.String;
        InterflexPosting4: Edm.String;
        IsActive: Edm.Boolean;
        Key: Edm.Int32;
        Language: Edm.String;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        PredecessorEventId: Edm.Int32;
        SortOrder: Edm.Int32;
        Value: Edm.String;
        asKoObservable(): ObservableSmsTimeManagement_TimeManagementEventType;
        static create(): SmsTimeManagement_TimeManagementEventType;
        static create(initData:any): SmsTimeManagement_TimeManagementEventType;
    }

}

namespace Main.Rest.Model.Lookups {

    export class ObservableMain_Asset extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; DomainId?: KnockoutObservable<Edm.Guid>; Favorite?: KnockoutObservable<Edm.Boolean>; Id?: KnockoutObservable<Edm.Guid>; IsActive?: KnockoutObservable<Edm.Boolean>; Key?: KnockoutObservable<Edm.String>; Language?: KnockoutObservable<Edm.String>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; SortOrder?: KnockoutObservable<Edm.Int32>; Value?: KnockoutObservable<Edm.String> });

        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        DomainId: KnockoutObservable<Edm.Guid>;
        Favorite: KnockoutObservable<Edm.Boolean>;
        Id: KnockoutObservable<Edm.Guid>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        Key: KnockoutObservable<Edm.String>;
        Language: KnockoutObservable<Edm.String>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        SortOrder: KnockoutObservable<Edm.Int32>;
        Value: KnockoutObservable<Edm.String>;
        innerInstance: Main_Asset;
    }

    export class ObservableMain_CostCenter extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; DomainId?: KnockoutObservable<Edm.Guid>; Favorite?: KnockoutObservable<Edm.Boolean>; Id?: KnockoutObservable<Edm.Guid>; IsActive?: KnockoutObservable<Edm.Boolean>; Key?: KnockoutObservable<Edm.String>; Language?: KnockoutObservable<Edm.String>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; SortOrder?: KnockoutObservable<Edm.Int32>; Value?: KnockoutObservable<Edm.String> });

        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        DomainId: KnockoutObservable<Edm.Guid>;
        Favorite: KnockoutObservable<Edm.Boolean>;
        Id: KnockoutObservable<Edm.Guid>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        Key: KnockoutObservable<Edm.String>;
        Language: KnockoutObservable<Edm.String>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        SortOrder: KnockoutObservable<Edm.Int32>;
        Value: KnockoutObservable<Edm.String>;
        innerInstance: Main_CostCenter;
    }

    export class ObservableMain_Country extends $data.Entity {
        constructor();
        constructor(initData: { CallingCode?: KnockoutObservable<Edm.String>; CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; DomainId?: KnockoutObservable<Edm.Guid>; ExtensionValues?: KnockoutObservable<Default.ObservableMain_Country_ExtensionValues>; Favorite?: KnockoutObservable<Edm.Boolean>; Id?: KnockoutObservable<Edm.Guid>; IsActive?: KnockoutObservable<Edm.Boolean>; Iso2Code?: KnockoutObservable<Edm.String>; Iso3Code?: KnockoutObservable<Edm.String>; Key?: KnockoutObservable<Edm.String>; Language?: KnockoutObservable<Edm.String>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; SortOrder?: KnockoutObservable<Edm.Int32>; Value?: KnockoutObservable<Edm.String> });

        CallingCode: KnockoutObservable<Edm.String>;
        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        DomainId: KnockoutObservable<Edm.Guid>;
        ExtensionValues: KnockoutObservable<Default.ObservableMain_Country_ExtensionValues>;
        Favorite: KnockoutObservable<Edm.Boolean>;
        Id: KnockoutObservable<Edm.Guid>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        Iso2Code: KnockoutObservable<Edm.String>;
        Iso3Code: KnockoutObservable<Edm.String>;
        Key: KnockoutObservable<Edm.String>;
        Language: KnockoutObservable<Edm.String>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        SortOrder: KnockoutObservable<Edm.Int32>;
        Value: KnockoutObservable<Edm.String>;
        innerInstance: Main_Country;
    }

    export class ObservableMain_Currency extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; DomainId?: KnockoutObservable<Edm.Guid>; Favorite?: KnockoutObservable<Edm.Boolean>; Id?: KnockoutObservable<Edm.Guid>; IsActive?: KnockoutObservable<Edm.Boolean>; Key?: KnockoutObservable<Edm.String>; Language?: KnockoutObservable<Edm.String>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; SortOrder?: KnockoutObservable<Edm.Int32>; Value?: KnockoutObservable<Edm.String> });

        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        DomainId: KnockoutObservable<Edm.Guid>;
        Favorite: KnockoutObservable<Edm.Boolean>;
        Id: KnockoutObservable<Edm.Guid>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        Key: KnockoutObservable<Edm.String>;
        Language: KnockoutObservable<Edm.String>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        SortOrder: KnockoutObservable<Edm.Int32>;
        Value: KnockoutObservable<Edm.String>;
        innerInstance: Main_Currency;
    }

    export class ObservableMain_DocumentCategory extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; DomainId?: KnockoutObservable<Edm.Guid>; ExtensionValues?: KnockoutObservable<Default.ObservableMain_DocumentCategory_ExtensionValues>; Favorite?: KnockoutObservable<Edm.Boolean>; Id?: KnockoutObservable<Edm.Guid>; IsActive?: KnockoutObservable<Edm.Boolean>; Key?: KnockoutObservable<Edm.String>; Language?: KnockoutObservable<Edm.String>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; OfflineRelevant?: KnockoutObservable<Edm.Boolean>; SortOrder?: KnockoutObservable<Edm.Int32>; Value?: KnockoutObservable<Edm.String> });

        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        DomainId: KnockoutObservable<Edm.Guid>;
        ExtensionValues: KnockoutObservable<Default.ObservableMain_DocumentCategory_ExtensionValues>;
        Favorite: KnockoutObservable<Edm.Boolean>;
        Id: KnockoutObservable<Edm.Guid>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        Key: KnockoutObservable<Edm.String>;
        Language: KnockoutObservable<Edm.String>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        OfflineRelevant: KnockoutObservable<Edm.Boolean>;
        SortOrder: KnockoutObservable<Edm.Int32>;
        Value: KnockoutObservable<Edm.String>;
        innerInstance: Main_DocumentCategory;
    }

    export class ObservableMain_InvoicingType extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; DomainId?: KnockoutObservable<Edm.Guid>; ExtensionValues?: KnockoutObservable<Default.ObservableMain_InvoicingType_ExtensionValues>; Favorite?: KnockoutObservable<Edm.Boolean>; Id?: KnockoutObservable<Edm.Guid>; IsActive?: KnockoutObservable<Edm.Boolean>; Key?: KnockoutObservable<Edm.String>; Language?: KnockoutObservable<Edm.String>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; SortOrder?: KnockoutObservable<Edm.Int32>; Value?: KnockoutObservable<Edm.String> });

        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        DomainId: KnockoutObservable<Edm.Guid>;
        ExtensionValues: KnockoutObservable<Default.ObservableMain_InvoicingType_ExtensionValues>;
        Favorite: KnockoutObservable<Edm.Boolean>;
        Id: KnockoutObservable<Edm.Guid>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        Key: KnockoutObservable<Edm.String>;
        Language: KnockoutObservable<Edm.String>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        SortOrder: KnockoutObservable<Edm.Int32>;
        Value: KnockoutObservable<Edm.String>;
        innerInstance: Main_InvoicingType;
    }

    export class ObservableMain_Language extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; DefaultLocale?: KnockoutObservable<Edm.String>; DomainId?: KnockoutObservable<Edm.Guid>; Favorite?: KnockoutObservable<Edm.Boolean>; Id?: KnockoutObservable<Edm.Guid>; IsActive?: KnockoutObservable<Edm.Boolean>; IsSystemLanguage?: KnockoutObservable<Edm.Boolean>; Key?: KnockoutObservable<Edm.String>; Language?: KnockoutObservable<Edm.String>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; SortOrder?: KnockoutObservable<Edm.Int32>; Value?: KnockoutObservable<Edm.String> });

        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        DefaultLocale: KnockoutObservable<Edm.String>;
        DomainId: KnockoutObservable<Edm.Guid>;
        Favorite: KnockoutObservable<Edm.Boolean>;
        Id: KnockoutObservable<Edm.Guid>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        IsSystemLanguage: KnockoutObservable<Edm.Boolean>;
        Key: KnockoutObservable<Edm.String>;
        Language: KnockoutObservable<Edm.String>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        SortOrder: KnockoutObservable<Edm.Int32>;
        Value: KnockoutObservable<Edm.String>;
        innerInstance: Main_Language;
    }

    export class ObservableMain_LengthUnit extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; DomainId?: KnockoutObservable<Edm.Guid>; Favorite?: KnockoutObservable<Edm.Boolean>; Id?: KnockoutObservable<Edm.Guid>; IsActive?: KnockoutObservable<Edm.Boolean>; Key?: KnockoutObservable<Edm.String>; Language?: KnockoutObservable<Edm.String>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; SortOrder?: KnockoutObservable<Edm.Int32>; Value?: KnockoutObservable<Edm.String> });

        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        DomainId: KnockoutObservable<Edm.Guid>;
        Favorite: KnockoutObservable<Edm.Boolean>;
        Id: KnockoutObservable<Edm.Guid>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        Key: KnockoutObservable<Edm.String>;
        Language: KnockoutObservable<Edm.String>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        SortOrder: KnockoutObservable<Edm.Int32>;
        Value: KnockoutObservable<Edm.String>;
        innerInstance: Main_LengthUnit;
    }

    export class ObservableMain_MultiFactorAuthenticationMode extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; DomainId?: KnockoutObservable<Edm.Guid>; Favorite?: KnockoutObservable<Edm.Boolean>; Id?: KnockoutObservable<Edm.Guid>; IsActive?: KnockoutObservable<Edm.Boolean>; Key?: KnockoutObservable<Edm.String>; Language?: KnockoutObservable<Edm.String>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; SortOrder?: KnockoutObservable<Edm.Int32>; Value?: KnockoutObservable<Edm.String> });

        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        DomainId: KnockoutObservable<Edm.Guid>;
        Favorite: KnockoutObservable<Edm.Boolean>;
        Id: KnockoutObservable<Edm.Guid>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        Key: KnockoutObservable<Edm.String>;
        Language: KnockoutObservable<Edm.String>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        SortOrder: KnockoutObservable<Edm.Int32>;
        Value: KnockoutObservable<Edm.String>;
        innerInstance: Main_MultiFactorAuthenticationMode;
    }

    export class ObservableMain_PaymentCondition extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; DomainId?: KnockoutObservable<Edm.Guid>; Favorite?: KnockoutObservable<Edm.Boolean>; Id?: KnockoutObservable<Edm.Guid>; IsActive?: KnockoutObservable<Edm.Boolean>; Key?: KnockoutObservable<Edm.String>; Language?: KnockoutObservable<Edm.String>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; SortOrder?: KnockoutObservable<Edm.Int32>; Value?: KnockoutObservable<Edm.String> });

        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        DomainId: KnockoutObservable<Edm.Guid>;
        Favorite: KnockoutObservable<Edm.Boolean>;
        Id: KnockoutObservable<Edm.Guid>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        Key: KnockoutObservable<Edm.String>;
        Language: KnockoutObservable<Edm.String>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        SortOrder: KnockoutObservable<Edm.Int32>;
        Value: KnockoutObservable<Edm.String>;
        innerInstance: Main_PaymentCondition;
    }

    export class ObservableMain_PaymentInterval extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; DomainId?: KnockoutObservable<Edm.Guid>; Favorite?: KnockoutObservable<Edm.Boolean>; Id?: KnockoutObservable<Edm.Guid>; IsActive?: KnockoutObservable<Edm.Boolean>; Key?: KnockoutObservable<Edm.String>; Language?: KnockoutObservable<Edm.String>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; SortOrder?: KnockoutObservable<Edm.Int32>; Value?: KnockoutObservable<Edm.String> });

        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        DomainId: KnockoutObservable<Edm.Guid>;
        Favorite: KnockoutObservable<Edm.Boolean>;
        Id: KnockoutObservable<Edm.Guid>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        Key: KnockoutObservable<Edm.String>;
        Language: KnockoutObservable<Edm.String>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        SortOrder: KnockoutObservable<Edm.Int32>;
        Value: KnockoutObservable<Edm.String>;
        innerInstance: Main_PaymentInterval;
    }

    export class ObservableMain_PaymentType extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; DomainId?: KnockoutObservable<Edm.Guid>; Favorite?: KnockoutObservable<Edm.Boolean>; Id?: KnockoutObservable<Edm.Guid>; IsActive?: KnockoutObservable<Edm.Boolean>; Key?: KnockoutObservable<Edm.String>; Language?: KnockoutObservable<Edm.String>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; SortOrder?: KnockoutObservable<Edm.Int32>; Value?: KnockoutObservable<Edm.String> });

        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        DomainId: KnockoutObservable<Edm.Guid>;
        Favorite: KnockoutObservable<Edm.Boolean>;
        Id: KnockoutObservable<Edm.Guid>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        Key: KnockoutObservable<Edm.String>;
        Language: KnockoutObservable<Edm.String>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        SortOrder: KnockoutObservable<Edm.Int32>;
        Value: KnockoutObservable<Edm.String>;
        innerInstance: Main_PaymentType;
    }

    export class ObservableMain_Region extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; DomainId?: KnockoutObservable<Edm.Guid>; Favorite?: KnockoutObservable<Edm.Boolean>; Id?: KnockoutObservable<Edm.Guid>; IsActive?: KnockoutObservable<Edm.Boolean>; Key?: KnockoutObservable<Edm.String>; Language?: KnockoutObservable<Edm.String>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; SortOrder?: KnockoutObservable<Edm.Int32>; Value?: KnockoutObservable<Edm.String> });

        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        DomainId: KnockoutObservable<Edm.Guid>;
        Favorite: KnockoutObservable<Edm.Boolean>;
        Id: KnockoutObservable<Edm.Guid>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        Key: KnockoutObservable<Edm.String>;
        Language: KnockoutObservable<Edm.String>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        SortOrder: KnockoutObservable<Edm.Int32>;
        Value: KnockoutObservable<Edm.String>;
        innerInstance: Main_Region;
    }

    export class ObservableMain_ReplicationGroup extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; DefaultValue?: KnockoutObservable<Edm.Int32>; Description?: KnockoutObservable<Edm.String>; DomainId?: KnockoutObservable<Edm.Guid>; Favorite?: KnockoutObservable<Edm.Boolean>; HasParameter?: KnockoutObservable<Edm.Boolean>; Id?: KnockoutObservable<Edm.Guid>; IsActive?: KnockoutObservable<Edm.Boolean>; Key?: KnockoutObservable<Edm.String>; Language?: KnockoutObservable<Edm.String>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; SortOrder?: KnockoutObservable<Edm.Int32>; TableName?: KnockoutObservable<Edm.String>; Value?: KnockoutObservable<Edm.String> });

        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        DefaultValue: KnockoutObservable<Edm.Int32>;
        Description: KnockoutObservable<Edm.String>;
        DomainId: KnockoutObservable<Edm.Guid>;
        Favorite: KnockoutObservable<Edm.Boolean>;
        HasParameter: KnockoutObservable<Edm.Boolean>;
        Id: KnockoutObservable<Edm.Guid>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        Key: KnockoutObservable<Edm.String>;
        Language: KnockoutObservable<Edm.String>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        SortOrder: KnockoutObservable<Edm.Int32>;
        TableName: KnockoutObservable<Edm.String>;
        Value: KnockoutObservable<Edm.String>;
        innerInstance: Main_ReplicationGroup;
    }

    export class ObservableMain_Skill extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; DomainId?: KnockoutObservable<Edm.Guid>; Favorite?: KnockoutObservable<Edm.Boolean>; Id?: KnockoutObservable<Edm.Guid>; IsActive?: KnockoutObservable<Edm.Boolean>; Key?: KnockoutObservable<Edm.String>; Language?: KnockoutObservable<Edm.String>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; SortOrder?: KnockoutObservable<Edm.Int32>; Value?: KnockoutObservable<Edm.String> });

        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        DomainId: KnockoutObservable<Edm.Guid>;
        Favorite: KnockoutObservable<Edm.Boolean>;
        Id: KnockoutObservable<Edm.Guid>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        Key: KnockoutObservable<Edm.String>;
        Language: KnockoutObservable<Edm.String>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        SortOrder: KnockoutObservable<Edm.Int32>;
        Value: KnockoutObservable<Edm.String>;
        innerInstance: Main_Skill;
    }

    export class ObservableMain_TimeUnit extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; DomainId?: KnockoutObservable<Edm.Guid>; Favorite?: KnockoutObservable<Edm.Boolean>; Id?: KnockoutObservable<Edm.Guid>; IsActive?: KnockoutObservable<Edm.Boolean>; Key?: KnockoutObservable<Edm.String>; Language?: KnockoutObservable<Edm.String>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; SortOrder?: KnockoutObservable<Edm.Int32>; TimeUnitsPerYear?: KnockoutObservable<Edm.Int32>; Value?: KnockoutObservable<Edm.String> });

        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        DomainId: KnockoutObservable<Edm.Guid>;
        Favorite: KnockoutObservable<Edm.Boolean>;
        Id: KnockoutObservable<Edm.Guid>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        Key: KnockoutObservable<Edm.String>;
        Language: KnockoutObservable<Edm.String>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        SortOrder: KnockoutObservable<Edm.Int32>;
        TimeUnitsPerYear: KnockoutObservable<Edm.Int32>;
        Value: KnockoutObservable<Edm.String>;
        innerInstance: Main_TimeUnit;
    }

    export class ObservableMain_UserStatus extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; DomainId?: KnockoutObservable<Edm.Guid>; Favorite?: KnockoutObservable<Edm.Boolean>; Id?: KnockoutObservable<Edm.Guid>; IsActive?: KnockoutObservable<Edm.Boolean>; Key?: KnockoutObservable<Edm.String>; Language?: KnockoutObservable<Edm.String>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; SortOrder?: KnockoutObservable<Edm.Int32>; Value?: KnockoutObservable<Edm.String> });

        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        DomainId: KnockoutObservable<Edm.Guid>;
        Favorite: KnockoutObservable<Edm.Boolean>;
        Id: KnockoutObservable<Edm.Guid>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        Key: KnockoutObservable<Edm.String>;
        Language: KnockoutObservable<Edm.String>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        SortOrder: KnockoutObservable<Edm.Int32>;
        Value: KnockoutObservable<Edm.String>;
        innerInstance: Main_UserStatus;
    }

    export class Main_Asset extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; DomainId?: Edm.Guid; Favorite?: Edm.Boolean; Id?: Edm.Guid; IsActive?: Edm.Boolean; Key?: Edm.String; Language?: Edm.String; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; SortOrder?: Edm.Int32; Value?: Edm.String });

        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        DomainId: Edm.Guid;
        Favorite: Edm.Boolean;
        Id: Edm.Guid;
        IsActive: Edm.Boolean;
        Key: Edm.String;
        Language: Edm.String;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        SortOrder: Edm.Int32;
        Value: Edm.String;
        asKoObservable(): ObservableMain_Asset;
        static create(): Main_Asset;
        static create(initData:any): Main_Asset;
    }

    export class Main_CostCenter extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; DomainId?: Edm.Guid; Favorite?: Edm.Boolean; Id?: Edm.Guid; IsActive?: Edm.Boolean; Key?: Edm.String; Language?: Edm.String; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; SortOrder?: Edm.Int32; Value?: Edm.String });

        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        DomainId: Edm.Guid;
        Favorite: Edm.Boolean;
        Id: Edm.Guid;
        IsActive: Edm.Boolean;
        Key: Edm.String;
        Language: Edm.String;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        SortOrder: Edm.Int32;
        Value: Edm.String;
        asKoObservable(): ObservableMain_CostCenter;
        static create(): Main_CostCenter;
        static create(initData:any): Main_CostCenter;
    }

    export class Main_Country extends $data.Entity {
        constructor();
        constructor(initData: { CallingCode?: Edm.String; CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; DomainId?: Edm.Guid; ExtensionValues?: Default.Main_Country_ExtensionValues; Favorite?: Edm.Boolean; Id?: Edm.Guid; IsActive?: Edm.Boolean; Iso2Code?: Edm.String; Iso3Code?: Edm.String; Key?: Edm.String; Language?: Edm.String; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; SortOrder?: Edm.Int32; Value?: Edm.String });

        CallingCode: Edm.String;
        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        DomainId: Edm.Guid;
        ExtensionValues: Default.Main_Country_ExtensionValues;
        Favorite: Edm.Boolean;
        Id: Edm.Guid;
        IsActive: Edm.Boolean;
        Iso2Code: Edm.String;
        Iso3Code: Edm.String;
        Key: Edm.String;
        Language: Edm.String;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        SortOrder: Edm.Int32;
        Value: Edm.String;
        asKoObservable(): ObservableMain_Country;
        static create(): Main_Country;
        static create(initData:any): Main_Country;
    }

    export class Main_Currency extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; DomainId?: Edm.Guid; Favorite?: Edm.Boolean; Id?: Edm.Guid; IsActive?: Edm.Boolean; Key?: Edm.String; Language?: Edm.String; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; SortOrder?: Edm.Int32; Value?: Edm.String });

        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        DomainId: Edm.Guid;
        Favorite: Edm.Boolean;
        Id: Edm.Guid;
        IsActive: Edm.Boolean;
        Key: Edm.String;
        Language: Edm.String;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        SortOrder: Edm.Int32;
        Value: Edm.String;
        asKoObservable(): ObservableMain_Currency;
        static create(): Main_Currency;
        static create(initData:any): Main_Currency;
    }

    export class Main_DocumentCategory extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; DomainId?: Edm.Guid; ExtensionValues?: Default.Main_DocumentCategory_ExtensionValues; Favorite?: Edm.Boolean; Id?: Edm.Guid; IsActive?: Edm.Boolean; Key?: Edm.String; Language?: Edm.String; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; OfflineRelevant?: Edm.Boolean; SortOrder?: Edm.Int32; Value?: Edm.String });

        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        DomainId: Edm.Guid;
        ExtensionValues: Default.Main_DocumentCategory_ExtensionValues;
        Favorite: Edm.Boolean;
        Id: Edm.Guid;
        IsActive: Edm.Boolean;
        Key: Edm.String;
        Language: Edm.String;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        OfflineRelevant: Edm.Boolean;
        SortOrder: Edm.Int32;
        Value: Edm.String;
        asKoObservable(): ObservableMain_DocumentCategory;
        static create(): Main_DocumentCategory;
        static create(initData:any): Main_DocumentCategory;
    }

    export class Main_InvoicingType extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; DomainId?: Edm.Guid; ExtensionValues?: Default.Main_InvoicingType_ExtensionValues; Favorite?: Edm.Boolean; Id?: Edm.Guid; IsActive?: Edm.Boolean; Key?: Edm.String; Language?: Edm.String; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; SortOrder?: Edm.Int32; Value?: Edm.String });

        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        DomainId: Edm.Guid;
        ExtensionValues: Default.Main_InvoicingType_ExtensionValues;
        Favorite: Edm.Boolean;
        Id: Edm.Guid;
        IsActive: Edm.Boolean;
        Key: Edm.String;
        Language: Edm.String;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        SortOrder: Edm.Int32;
        Value: Edm.String;
        asKoObservable(): ObservableMain_InvoicingType;
        static create(): Main_InvoicingType;
        static create(initData:any): Main_InvoicingType;
    }

    export class Main_Language extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; DefaultLocale?: Edm.String; DomainId?: Edm.Guid; Favorite?: Edm.Boolean; Id?: Edm.Guid; IsActive?: Edm.Boolean; IsSystemLanguage?: Edm.Boolean; Key?: Edm.String; Language?: Edm.String; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; SortOrder?: Edm.Int32; Value?: Edm.String });

        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        DefaultLocale: Edm.String;
        DomainId: Edm.Guid;
        Favorite: Edm.Boolean;
        Id: Edm.Guid;
        IsActive: Edm.Boolean;
        IsSystemLanguage: Edm.Boolean;
        Key: Edm.String;
        Language: Edm.String;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        SortOrder: Edm.Int32;
        Value: Edm.String;
        asKoObservable(): ObservableMain_Language;
        static create(): Main_Language;
        static create(initData:any): Main_Language;
    }

    export class Main_LengthUnit extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; DomainId?: Edm.Guid; Favorite?: Edm.Boolean; Id?: Edm.Guid; IsActive?: Edm.Boolean; Key?: Edm.String; Language?: Edm.String; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; SortOrder?: Edm.Int32; Value?: Edm.String });

        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        DomainId: Edm.Guid;
        Favorite: Edm.Boolean;
        Id: Edm.Guid;
        IsActive: Edm.Boolean;
        Key: Edm.String;
        Language: Edm.String;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        SortOrder: Edm.Int32;
        Value: Edm.String;
        asKoObservable(): ObservableMain_LengthUnit;
        static create(): Main_LengthUnit;
        static create(initData:any): Main_LengthUnit;
    }

    export class Main_MultiFactorAuthenticationMode extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; DomainId?: Edm.Guid; Favorite?: Edm.Boolean; Id?: Edm.Guid; IsActive?: Edm.Boolean; Key?: Edm.String; Language?: Edm.String; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; SortOrder?: Edm.Int32; Value?: Edm.String });

        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        DomainId: Edm.Guid;
        Favorite: Edm.Boolean;
        Id: Edm.Guid;
        IsActive: Edm.Boolean;
        Key: Edm.String;
        Language: Edm.String;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        SortOrder: Edm.Int32;
        Value: Edm.String;
        asKoObservable(): ObservableMain_MultiFactorAuthenticationMode;
        static create(): Main_MultiFactorAuthenticationMode;
        static create(initData:any): Main_MultiFactorAuthenticationMode;
    }

    export class Main_PaymentCondition extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; DomainId?: Edm.Guid; Favorite?: Edm.Boolean; Id?: Edm.Guid; IsActive?: Edm.Boolean; Key?: Edm.String; Language?: Edm.String; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; SortOrder?: Edm.Int32; Value?: Edm.String });

        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        DomainId: Edm.Guid;
        Favorite: Edm.Boolean;
        Id: Edm.Guid;
        IsActive: Edm.Boolean;
        Key: Edm.String;
        Language: Edm.String;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        SortOrder: Edm.Int32;
        Value: Edm.String;
        asKoObservable(): ObservableMain_PaymentCondition;
        static create(): Main_PaymentCondition;
        static create(initData:any): Main_PaymentCondition;
    }

    export class Main_PaymentInterval extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; DomainId?: Edm.Guid; Favorite?: Edm.Boolean; Id?: Edm.Guid; IsActive?: Edm.Boolean; Key?: Edm.String; Language?: Edm.String; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; SortOrder?: Edm.Int32; Value?: Edm.String });

        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        DomainId: Edm.Guid;
        Favorite: Edm.Boolean;
        Id: Edm.Guid;
        IsActive: Edm.Boolean;
        Key: Edm.String;
        Language: Edm.String;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        SortOrder: Edm.Int32;
        Value: Edm.String;
        asKoObservable(): ObservableMain_PaymentInterval;
        static create(): Main_PaymentInterval;
        static create(initData:any): Main_PaymentInterval;
    }

    export class Main_PaymentType extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; DomainId?: Edm.Guid; Favorite?: Edm.Boolean; Id?: Edm.Guid; IsActive?: Edm.Boolean; Key?: Edm.String; Language?: Edm.String; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; SortOrder?: Edm.Int32; Value?: Edm.String });

        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        DomainId: Edm.Guid;
        Favorite: Edm.Boolean;
        Id: Edm.Guid;
        IsActive: Edm.Boolean;
        Key: Edm.String;
        Language: Edm.String;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        SortOrder: Edm.Int32;
        Value: Edm.String;
        asKoObservable(): ObservableMain_PaymentType;
        static create(): Main_PaymentType;
        static create(initData:any): Main_PaymentType;
    }

    export class Main_Region extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; DomainId?: Edm.Guid; Favorite?: Edm.Boolean; Id?: Edm.Guid; IsActive?: Edm.Boolean; Key?: Edm.String; Language?: Edm.String; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; SortOrder?: Edm.Int32; Value?: Edm.String });

        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        DomainId: Edm.Guid;
        Favorite: Edm.Boolean;
        Id: Edm.Guid;
        IsActive: Edm.Boolean;
        Key: Edm.String;
        Language: Edm.String;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        SortOrder: Edm.Int32;
        Value: Edm.String;
        asKoObservable(): ObservableMain_Region;
        static create(): Main_Region;
        static create(initData:any): Main_Region;
    }

    export class Main_ReplicationGroup extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; DefaultValue?: Edm.Int32; Description?: Edm.String; DomainId?: Edm.Guid; Favorite?: Edm.Boolean; HasParameter?: Edm.Boolean; Id?: Edm.Guid; IsActive?: Edm.Boolean; Key?: Edm.String; Language?: Edm.String; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; SortOrder?: Edm.Int32; TableName?: Edm.String; Value?: Edm.String });

        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        DefaultValue: Edm.Int32;
        Description: Edm.String;
        DomainId: Edm.Guid;
        Favorite: Edm.Boolean;
        HasParameter: Edm.Boolean;
        Id: Edm.Guid;
        IsActive: Edm.Boolean;
        Key: Edm.String;
        Language: Edm.String;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        SortOrder: Edm.Int32;
        TableName: Edm.String;
        Value: Edm.String;
        asKoObservable(): ObservableMain_ReplicationGroup;
        static create(): Main_ReplicationGroup;
        static create(initData:any): Main_ReplicationGroup;
    }

    export class Main_Skill extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; DomainId?: Edm.Guid; Favorite?: Edm.Boolean; Id?: Edm.Guid; IsActive?: Edm.Boolean; Key?: Edm.String; Language?: Edm.String; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; SortOrder?: Edm.Int32; Value?: Edm.String });

        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        DomainId: Edm.Guid;
        Favorite: Edm.Boolean;
        Id: Edm.Guid;
        IsActive: Edm.Boolean;
        Key: Edm.String;
        Language: Edm.String;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        SortOrder: Edm.Int32;
        Value: Edm.String;
        asKoObservable(): ObservableMain_Skill;
        static create(): Main_Skill;
        static create(initData:any): Main_Skill;
    }

    export class Main_TimeUnit extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; DomainId?: Edm.Guid; Favorite?: Edm.Boolean; Id?: Edm.Guid; IsActive?: Edm.Boolean; Key?: Edm.String; Language?: Edm.String; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; SortOrder?: Edm.Int32; TimeUnitsPerYear?: Edm.Int32; Value?: Edm.String });

        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        DomainId: Edm.Guid;
        Favorite: Edm.Boolean;
        Id: Edm.Guid;
        IsActive: Edm.Boolean;
        Key: Edm.String;
        Language: Edm.String;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        SortOrder: Edm.Int32;
        TimeUnitsPerYear: Edm.Int32;
        Value: Edm.String;
        asKoObservable(): ObservableMain_TimeUnit;
        static create(): Main_TimeUnit;
        static create(initData:any): Main_TimeUnit;
    }

    export class Main_UserStatus extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; DomainId?: Edm.Guid; Favorite?: Edm.Boolean; Id?: Edm.Guid; IsActive?: Edm.Boolean; Key?: Edm.String; Language?: Edm.String; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; SortOrder?: Edm.Int32; Value?: Edm.String });

        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        DomainId: Edm.Guid;
        Favorite: Edm.Boolean;
        Id: Edm.Guid;
        IsActive: Edm.Boolean;
        Key: Edm.String;
        Language: Edm.String;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        SortOrder: Edm.Int32;
        Value: Edm.String;
        asKoObservable(): ObservableMain_UserStatus;
        static create(): Main_UserStatus;
        static create(initData:any): Main_UserStatus;
    }

}

namespace Main.Model.Lookups {

    export class ObservableMain_LicenseModule extends $data.Entity {
        constructor();
        constructor(initData: { AuthDataId?: KnockoutObservable<Edm.Guid>; CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; Favorite?: KnockoutObservable<Edm.Boolean>; Id?: KnockoutObservable<Edm.Guid>; IsActive?: KnockoutObservable<Edm.Boolean>; Key?: KnockoutObservable<Edm.String>; Language?: KnockoutObservable<Edm.String>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; ParentModuleId?: KnockoutObservable<Edm.String>; SortOrder?: KnockoutObservable<Edm.Int32>; Value?: KnockoutObservable<Edm.String> });

        AuthDataId: KnockoutObservable<Edm.Guid>;
        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        Favorite: KnockoutObservable<Edm.Boolean>;
        Id: KnockoutObservable<Edm.Guid>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        Key: KnockoutObservable<Edm.String>;
        Language: KnockoutObservable<Edm.String>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        ParentModuleId: KnockoutObservable<Edm.String>;
        SortOrder: KnockoutObservable<Edm.Int32>;
        Value: KnockoutObservable<Edm.String>;
        innerInstance: Main_LicenseModule;
    }

    export class ObservableMain_PasswordStrength extends $data.Entity {
        constructor();
        constructor(initData: { AuthDataId?: KnockoutObservable<Edm.Guid>; CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; Example?: KnockoutObservable<Edm.String>; Favorite?: KnockoutObservable<Edm.Boolean>; Id?: KnockoutObservable<Edm.Guid>; IsActive?: KnockoutObservable<Edm.Boolean>; Key?: KnockoutObservable<Edm.String>; Language?: KnockoutObservable<Edm.String>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; SortOrder?: KnockoutObservable<Edm.Int32>; Value?: KnockoutObservable<Edm.String> });

        AuthDataId: KnockoutObservable<Edm.Guid>;
        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        Example: KnockoutObservable<Edm.String>;
        Favorite: KnockoutObservable<Edm.Boolean>;
        Id: KnockoutObservable<Edm.Guid>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        Key: KnockoutObservable<Edm.String>;
        Language: KnockoutObservable<Edm.String>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        SortOrder: KnockoutObservable<Edm.Int32>;
        Value: KnockoutObservable<Edm.String>;
        innerInstance: Main_PasswordStrength;
    }

    export class Main_LicenseModule extends $data.Entity {
        constructor();
        constructor(initData: { AuthDataId?: Edm.Guid; CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; Favorite?: Edm.Boolean; Id?: Edm.Guid; IsActive?: Edm.Boolean; Key?: Edm.String; Language?: Edm.String; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; ParentModuleId?: Edm.String; SortOrder?: Edm.Int32; Value?: Edm.String });

        AuthDataId: Edm.Guid;
        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        Favorite: Edm.Boolean;
        Id: Edm.Guid;
        IsActive: Edm.Boolean;
        Key: Edm.String;
        Language: Edm.String;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        ParentModuleId: Edm.String;
        SortOrder: Edm.Int32;
        Value: Edm.String;
        asKoObservable(): ObservableMain_LicenseModule;
        static create(): Main_LicenseModule;
        static create(initData:any): Main_LicenseModule;
    }

    export class Main_PasswordStrength extends $data.Entity {
        constructor();
        constructor(initData: { AuthDataId?: Edm.Guid; CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; Example?: Edm.String; Favorite?: Edm.Boolean; Id?: Edm.Guid; IsActive?: Edm.Boolean; Key?: Edm.String; Language?: Edm.String; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; SortOrder?: Edm.Int32; Value?: Edm.String });

        AuthDataId: Edm.Guid;
        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        Example: Edm.String;
        Favorite: Edm.Boolean;
        Id: Edm.Guid;
        IsActive: Edm.Boolean;
        Key: Edm.String;
        Language: Edm.String;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        SortOrder: Edm.Int32;
        Value: Edm.String;
        asKoObservable(): ObservableMain_PasswordStrength;
        static create(): Main_PasswordStrength;
        static create(initData:any): Main_PasswordStrength;
    }

}

namespace Crm.VisitReport.Rest.Model.Lookups {

    export class ObservableCrmVisitReport_ContactPersonRelationshipType extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; DomainId?: KnockoutObservable<Edm.Guid>; Favorite?: KnockoutObservable<Edm.Boolean>; Id?: KnockoutObservable<Edm.Guid>; IsActive?: KnockoutObservable<Edm.Boolean>; Key?: KnockoutObservable<Edm.String>; Language?: KnockoutObservable<Edm.String>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; SortOrder?: KnockoutObservable<Edm.Int32>; Value?: KnockoutObservable<Edm.String> });

        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        DomainId: KnockoutObservable<Edm.Guid>;
        Favorite: KnockoutObservable<Edm.Boolean>;
        Id: KnockoutObservable<Edm.Guid>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        Key: KnockoutObservable<Edm.String>;
        Language: KnockoutObservable<Edm.String>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        SortOrder: KnockoutObservable<Edm.Int32>;
        Value: KnockoutObservable<Edm.String>;
        innerInstance: CrmVisitReport_ContactPersonRelationshipType;
    }

    export class ObservableCrmVisitReport_VisitAim extends $data.Entity {
        constructor();
        constructor(initData: { Color?: KnockoutObservable<Edm.String>; CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; DomainId?: KnockoutObservable<Edm.Guid>; DynamicFormKey?: KnockoutObservable<Edm.Guid>; Favorite?: KnockoutObservable<Edm.Boolean>; Id?: KnockoutObservable<Edm.Guid>; IsActive?: KnockoutObservable<Edm.Boolean>; Key?: KnockoutObservable<Edm.String>; Language?: KnockoutObservable<Edm.String>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; SortOrder?: KnockoutObservable<Edm.Int32>; Value?: KnockoutObservable<Edm.String> });

        Color: KnockoutObservable<Edm.String>;
        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        DomainId: KnockoutObservable<Edm.Guid>;
        DynamicFormKey: KnockoutObservable<Edm.Guid>;
        Favorite: KnockoutObservable<Edm.Boolean>;
        Id: KnockoutObservable<Edm.Guid>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        Key: KnockoutObservable<Edm.String>;
        Language: KnockoutObservable<Edm.String>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        SortOrder: KnockoutObservable<Edm.Int32>;
        Value: KnockoutObservable<Edm.String>;
        innerInstance: CrmVisitReport_VisitAim;
    }

    export class ObservableCrmVisitReport_VisitStatus extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; DomainId?: KnockoutObservable<Edm.Guid>; Favorite?: KnockoutObservable<Edm.Boolean>; Id?: KnockoutObservable<Edm.Guid>; IsActive?: KnockoutObservable<Edm.Boolean>; Key?: KnockoutObservable<Edm.String>; Language?: KnockoutObservable<Edm.String>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; SettableStatuses?: KnockoutObservable<Edm.String>; SortOrder?: KnockoutObservable<Edm.Int32>; Value?: KnockoutObservable<Edm.String> });

        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        DomainId: KnockoutObservable<Edm.Guid>;
        Favorite: KnockoutObservable<Edm.Boolean>;
        Id: KnockoutObservable<Edm.Guid>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        Key: KnockoutObservable<Edm.String>;
        Language: KnockoutObservable<Edm.String>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        SettableStatuses: KnockoutObservable<Edm.String>;
        SortOrder: KnockoutObservable<Edm.Int32>;
        Value: KnockoutObservable<Edm.String>;
        innerInstance: CrmVisitReport_VisitStatus;
    }

    export class CrmVisitReport_ContactPersonRelationshipType extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; DomainId?: Edm.Guid; Favorite?: Edm.Boolean; Id?: Edm.Guid; IsActive?: Edm.Boolean; Key?: Edm.String; Language?: Edm.String; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; SortOrder?: Edm.Int32; Value?: Edm.String });

        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        DomainId: Edm.Guid;
        Favorite: Edm.Boolean;
        Id: Edm.Guid;
        IsActive: Edm.Boolean;
        Key: Edm.String;
        Language: Edm.String;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        SortOrder: Edm.Int32;
        Value: Edm.String;
        asKoObservable(): ObservableCrmVisitReport_ContactPersonRelationshipType;
        static create(): CrmVisitReport_ContactPersonRelationshipType;
        static create(initData:any): CrmVisitReport_ContactPersonRelationshipType;
    }

    export class CrmVisitReport_VisitAim extends $data.Entity {
        constructor();
        constructor(initData: { Color?: Edm.String; CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; DomainId?: Edm.Guid; DynamicFormKey?: Edm.Guid; Favorite?: Edm.Boolean; Id?: Edm.Guid; IsActive?: Edm.Boolean; Key?: Edm.String; Language?: Edm.String; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; SortOrder?: Edm.Int32; Value?: Edm.String });

        Color: Edm.String;
        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        DomainId: Edm.Guid;
        DynamicFormKey: Edm.Guid;
        Favorite: Edm.Boolean;
        Id: Edm.Guid;
        IsActive: Edm.Boolean;
        Key: Edm.String;
        Language: Edm.String;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        SortOrder: Edm.Int32;
        Value: Edm.String;
        asKoObservable(): ObservableCrmVisitReport_VisitAim;
        static create(): CrmVisitReport_VisitAim;
        static create(initData:any): CrmVisitReport_VisitAim;
    }

    export class CrmVisitReport_VisitStatus extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; DomainId?: Edm.Guid; Favorite?: Edm.Boolean; Id?: Edm.Guid; IsActive?: Edm.Boolean; Key?: Edm.String; Language?: Edm.String; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; SettableStatuses?: Edm.String; SortOrder?: Edm.Int32; Value?: Edm.String });

        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        DomainId: Edm.Guid;
        Favorite: Edm.Boolean;
        Id: Edm.Guid;
        IsActive: Edm.Boolean;
        Key: Edm.String;
        Language: Edm.String;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        SettableStatuses: Edm.String;
        SortOrder: Edm.Int32;
        Value: Edm.String;
        asKoObservable(): ObservableCrmVisitReport_VisitStatus;
        static create(): CrmVisitReport_VisitStatus;
        static create(initData:any): CrmVisitReport_VisitStatus;
    }

}

namespace Crm.Service.Rest.Model.Lookups {

    export class ObservableCrmService_CommissioningStatus extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; DomainId?: KnockoutObservable<Edm.Guid>; Favorite?: KnockoutObservable<Edm.Boolean>; Id?: KnockoutObservable<Edm.Guid>; IsActive?: KnockoutObservable<Edm.Boolean>; Key?: KnockoutObservable<Edm.String>; Language?: KnockoutObservable<Edm.String>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; SortOrder?: KnockoutObservable<Edm.Int32>; Value?: KnockoutObservable<Edm.String> });

        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        DomainId: KnockoutObservable<Edm.Guid>;
        Favorite: KnockoutObservable<Edm.Boolean>;
        Id: KnockoutObservable<Edm.Guid>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        Key: KnockoutObservable<Edm.String>;
        Language: KnockoutObservable<Edm.String>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        SortOrder: KnockoutObservable<Edm.Int32>;
        Value: KnockoutObservable<Edm.String>;
        innerInstance: CrmService_CommissioningStatus;
    }

    export class ObservableCrmService_Component extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; DomainId?: KnockoutObservable<Edm.Guid>; Favorite?: KnockoutObservable<Edm.Boolean>; Id?: KnockoutObservable<Edm.Guid>; IsActive?: KnockoutObservable<Edm.Boolean>; Key?: KnockoutObservable<Edm.String>; Language?: KnockoutObservable<Edm.String>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; SortOrder?: KnockoutObservable<Edm.Int32>; Value?: KnockoutObservable<Edm.String> });

        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        DomainId: KnockoutObservable<Edm.Guid>;
        Favorite: KnockoutObservable<Edm.Boolean>;
        Id: KnockoutObservable<Edm.Guid>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        Key: KnockoutObservable<Edm.String>;
        Language: KnockoutObservable<Edm.String>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        SortOrder: KnockoutObservable<Edm.Int32>;
        Value: KnockoutObservable<Edm.String>;
        innerInstance: CrmService_Component;
    }

    export class ObservableCrmService_ErrorCode extends $data.Entity {
        constructor();
        constructor(initData: { BPChecklistId?: KnockoutObservable<Edm.Int32>; Code?: KnockoutObservable<Edm.String>; Component?: KnockoutObservable<Edm.Int32>; CountOfNotifications?: KnockoutObservable<Edm.Int32>; CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; Description?: KnockoutObservable<Edm.String>; DomainId?: KnockoutObservable<Edm.Guid>; ErrorCodeId?: KnockoutObservable<Edm.Int32>; Favorite?: KnockoutObservable<Edm.Boolean>; Id?: KnockoutObservable<Edm.Guid>; InstallationType?: KnockoutObservable<Edm.String>; IsActive?: KnockoutObservable<Edm.Boolean>; Key?: KnockoutObservable<Edm.String>; Language?: KnockoutObservable<Edm.String>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; MonitoringCode?: KnockoutObservable<Edm.String>; Priority?: KnockoutObservable<Edm.Int32>; QualityPlanId?: KnockoutObservable<Edm.Int32>; RdsPpClassification?: KnockoutObservable<Edm.String>; ReactionTime?: KnockoutObservable<Edm.Int32>; ReactionTimeType?: KnockoutObservable<Edm.String>; Remark?: KnockoutObservable<Edm.String>; SortOrder?: KnockoutObservable<Edm.Int32>; StandardAction?: KnockoutObservable<Edm.String>; StandardActionExecuteCount?: KnockoutObservable<Edm.Int32>; StandardActionExecuteTimeout?: KnockoutObservable<Edm.String>; TemplateOrderNo?: KnockoutObservable<Edm.String>; Value?: KnockoutObservable<Edm.String> });

        BPChecklistId: KnockoutObservable<Edm.Int32>;
        Code: KnockoutObservable<Edm.String>;
        Component: KnockoutObservable<Edm.Int32>;
        CountOfNotifications: KnockoutObservable<Edm.Int32>;
        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        Description: KnockoutObservable<Edm.String>;
        DomainId: KnockoutObservable<Edm.Guid>;
        ErrorCodeId: KnockoutObservable<Edm.Int32>;
        Favorite: KnockoutObservable<Edm.Boolean>;
        Id: KnockoutObservable<Edm.Guid>;
        InstallationType: KnockoutObservable<Edm.String>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        Key: KnockoutObservable<Edm.String>;
        Language: KnockoutObservable<Edm.String>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        MonitoringCode: KnockoutObservable<Edm.String>;
        Priority: KnockoutObservable<Edm.Int32>;
        QualityPlanId: KnockoutObservable<Edm.Int32>;
        RdsPpClassification: KnockoutObservable<Edm.String>;
        ReactionTime: KnockoutObservable<Edm.Int32>;
        ReactionTimeType: KnockoutObservable<Edm.String>;
        Remark: KnockoutObservable<Edm.String>;
        SortOrder: KnockoutObservable<Edm.Int32>;
        StandardAction: KnockoutObservable<Edm.String>;
        StandardActionExecuteCount: KnockoutObservable<Edm.Int32>;
        StandardActionExecuteTimeout: KnockoutObservable<Edm.String>;
        TemplateOrderNo: KnockoutObservable<Edm.String>;
        Value: KnockoutObservable<Edm.String>;
        innerInstance: CrmService_ErrorCode;
    }

    export class ObservableCrmService_InstallationAddressRelationshipType extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; DomainId?: KnockoutObservable<Edm.Guid>; Favorite?: KnockoutObservable<Edm.Boolean>; Id?: KnockoutObservable<Edm.Guid>; IsActive?: KnockoutObservable<Edm.Boolean>; Key?: KnockoutObservable<Edm.String>; Language?: KnockoutObservable<Edm.String>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; SortOrder?: KnockoutObservable<Edm.Int32>; Value?: KnockoutObservable<Edm.String> });

        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        DomainId: KnockoutObservable<Edm.Guid>;
        Favorite: KnockoutObservable<Edm.Boolean>;
        Id: KnockoutObservable<Edm.Guid>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        Key: KnockoutObservable<Edm.String>;
        Language: KnockoutObservable<Edm.String>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        SortOrder: KnockoutObservable<Edm.Int32>;
        Value: KnockoutObservable<Edm.String>;
        innerInstance: CrmService_InstallationAddressRelationshipType;
    }

    export class ObservableCrmService_InstallationCompanyRelationshipType extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; DomainId?: KnockoutObservable<Edm.Guid>; Favorite?: KnockoutObservable<Edm.Boolean>; Id?: KnockoutObservable<Edm.Guid>; IsActive?: KnockoutObservable<Edm.Boolean>; Key?: KnockoutObservable<Edm.String>; Language?: KnockoutObservable<Edm.String>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; SortOrder?: KnockoutObservable<Edm.Int32>; Value?: KnockoutObservable<Edm.String> });

        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        DomainId: KnockoutObservable<Edm.Guid>;
        Favorite: KnockoutObservable<Edm.Boolean>;
        Id: KnockoutObservable<Edm.Guid>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        Key: KnockoutObservable<Edm.String>;
        Language: KnockoutObservable<Edm.String>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        SortOrder: KnockoutObservable<Edm.Int32>;
        Value: KnockoutObservable<Edm.String>;
        innerInstance: CrmService_InstallationCompanyRelationshipType;
    }

    export class ObservableCrmService_InstallationHeadStatus extends $data.Entity {
        constructor();
        constructor(initData: { Color?: KnockoutObservable<Edm.String>; CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; DomainId?: KnockoutObservable<Edm.Guid>; Favorite?: KnockoutObservable<Edm.Boolean>; Id?: KnockoutObservable<Edm.Guid>; IsActive?: KnockoutObservable<Edm.Boolean>; Key?: KnockoutObservable<Edm.String>; Language?: KnockoutObservable<Edm.String>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; SortOrder?: KnockoutObservable<Edm.Int32>; Value?: KnockoutObservable<Edm.String> });

        Color: KnockoutObservable<Edm.String>;
        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        DomainId: KnockoutObservable<Edm.Guid>;
        Favorite: KnockoutObservable<Edm.Boolean>;
        Id: KnockoutObservable<Edm.Guid>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        Key: KnockoutObservable<Edm.String>;
        Language: KnockoutObservable<Edm.String>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        SortOrder: KnockoutObservable<Edm.Int32>;
        Value: KnockoutObservable<Edm.String>;
        innerInstance: CrmService_InstallationHeadStatus;
    }

    export class ObservableCrmService_InstallationPersonRelationshipType extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; DomainId?: KnockoutObservable<Edm.Guid>; Favorite?: KnockoutObservable<Edm.Boolean>; Id?: KnockoutObservable<Edm.Guid>; IsActive?: KnockoutObservable<Edm.Boolean>; Key?: KnockoutObservable<Edm.String>; Language?: KnockoutObservable<Edm.String>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; SortOrder?: KnockoutObservable<Edm.Int32>; Value?: KnockoutObservable<Edm.String> });

        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        DomainId: KnockoutObservable<Edm.Guid>;
        Favorite: KnockoutObservable<Edm.Boolean>;
        Id: KnockoutObservable<Edm.Guid>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        Key: KnockoutObservable<Edm.String>;
        Language: KnockoutObservable<Edm.String>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        SortOrder: KnockoutObservable<Edm.Int32>;
        Value: KnockoutObservable<Edm.String>;
        innerInstance: CrmService_InstallationPersonRelationshipType;
    }

    export class ObservableCrmService_InstallationType extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; DomainId?: KnockoutObservable<Edm.Guid>; Favorite?: KnockoutObservable<Edm.Boolean>; Id?: KnockoutObservable<Edm.Guid>; IsActive?: KnockoutObservable<Edm.Boolean>; Key?: KnockoutObservable<Edm.String>; Language?: KnockoutObservable<Edm.String>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; SortOrder?: KnockoutObservable<Edm.Int32>; Value?: KnockoutObservable<Edm.String> });

        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        DomainId: KnockoutObservable<Edm.Guid>;
        Favorite: KnockoutObservable<Edm.Boolean>;
        Id: KnockoutObservable<Edm.Guid>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        Key: KnockoutObservable<Edm.String>;
        Language: KnockoutObservable<Edm.String>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        SortOrder: KnockoutObservable<Edm.Int32>;
        Value: KnockoutObservable<Edm.String>;
        innerInstance: CrmService_InstallationType;
    }

    export class ObservableCrmService_Manufacturer extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; DomainId?: KnockoutObservable<Edm.Guid>; Favorite?: KnockoutObservable<Edm.Boolean>; Id?: KnockoutObservable<Edm.Guid>; IsActive?: KnockoutObservable<Edm.Boolean>; Key?: KnockoutObservable<Edm.String>; Language?: KnockoutObservable<Edm.String>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; SortOrder?: KnockoutObservable<Edm.Int32>; Value?: KnockoutObservable<Edm.String> });

        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        DomainId: KnockoutObservable<Edm.Guid>;
        Favorite: KnockoutObservable<Edm.Boolean>;
        Id: KnockoutObservable<Edm.Guid>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        Key: KnockoutObservable<Edm.String>;
        Language: KnockoutObservable<Edm.String>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        SortOrder: KnockoutObservable<Edm.Int32>;
        Value: KnockoutObservable<Edm.String>;
        innerInstance: CrmService_Manufacturer;
    }

    export class ObservableCrmService_MonitoringDataType extends $data.Entity {
        constructor();
        constructor(initData: { BitIndex?: KnockoutObservable<Edm.Int32>; CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; DataTypeKey?: KnockoutObservable<Edm.String>; DomainId?: KnockoutObservable<Edm.Guid>; Favorite?: KnockoutObservable<Edm.Boolean>; Id?: KnockoutObservable<Edm.Guid>; IsActive?: KnockoutObservable<Edm.Boolean>; Key?: KnockoutObservable<Edm.String>; Language?: KnockoutObservable<Edm.String>; Max?: KnockoutObservable<Edm.Double>; Min?: KnockoutObservable<Edm.Double>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; MonitoringDataTypeId?: KnockoutObservable<Edm.Int32>; QuantityUnit?: KnockoutObservable<Edm.String>; SortOrder?: KnockoutObservable<Edm.Int32>; Value?: KnockoutObservable<Edm.String> });

        BitIndex: KnockoutObservable<Edm.Int32>;
        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        DataTypeKey: KnockoutObservable<Edm.String>;
        DomainId: KnockoutObservable<Edm.Guid>;
        Favorite: KnockoutObservable<Edm.Boolean>;
        Id: KnockoutObservable<Edm.Guid>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        Key: KnockoutObservable<Edm.String>;
        Language: KnockoutObservable<Edm.String>;
        Max: KnockoutObservable<Edm.Double>;
        Min: KnockoutObservable<Edm.Double>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        MonitoringDataTypeId: KnockoutObservable<Edm.Int32>;
        QuantityUnit: KnockoutObservable<Edm.String>;
        SortOrder: KnockoutObservable<Edm.Int32>;
        Value: KnockoutObservable<Edm.String>;
        innerInstance: CrmService_MonitoringDataType;
    }

    export class ObservableCrmService_NoCausingItemPreviousSerialNoReason extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; DomainId?: KnockoutObservable<Edm.Guid>; Favorite?: KnockoutObservable<Edm.Boolean>; Id?: KnockoutObservable<Edm.Guid>; IsActive?: KnockoutObservable<Edm.Boolean>; Key?: KnockoutObservable<Edm.String>; Language?: KnockoutObservable<Edm.String>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; SortOrder?: KnockoutObservable<Edm.Int32>; Value?: KnockoutObservable<Edm.String> });

        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        DomainId: KnockoutObservable<Edm.Guid>;
        Favorite: KnockoutObservable<Edm.Boolean>;
        Id: KnockoutObservable<Edm.Guid>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        Key: KnockoutObservable<Edm.String>;
        Language: KnockoutObservable<Edm.String>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        SortOrder: KnockoutObservable<Edm.Int32>;
        Value: KnockoutObservable<Edm.String>;
        innerInstance: CrmService_NoCausingItemPreviousSerialNoReason;
    }

    export class ObservableCrmService_NoCausingItemSerialNoReason extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; DomainId?: KnockoutObservable<Edm.Guid>; Favorite?: KnockoutObservable<Edm.Boolean>; Id?: KnockoutObservable<Edm.Guid>; IsActive?: KnockoutObservable<Edm.Boolean>; Key?: KnockoutObservable<Edm.String>; Language?: KnockoutObservable<Edm.String>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; SortOrder?: KnockoutObservable<Edm.Int32>; Value?: KnockoutObservable<Edm.String> });

        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        DomainId: KnockoutObservable<Edm.Guid>;
        Favorite: KnockoutObservable<Edm.Boolean>;
        Id: KnockoutObservable<Edm.Guid>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        Key: KnockoutObservable<Edm.String>;
        Language: KnockoutObservable<Edm.String>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        SortOrder: KnockoutObservable<Edm.Int32>;
        Value: KnockoutObservable<Edm.String>;
        innerInstance: CrmService_NoCausingItemSerialNoReason;
    }

    export class ObservableCrmService_NoPreviousSerialNoReason extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; DomainId?: KnockoutObservable<Edm.Guid>; Favorite?: KnockoutObservable<Edm.Boolean>; Id?: KnockoutObservable<Edm.Guid>; IsActive?: KnockoutObservable<Edm.Boolean>; Key?: KnockoutObservable<Edm.String>; Language?: KnockoutObservable<Edm.String>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; SortOrder?: KnockoutObservable<Edm.Int32>; Value?: KnockoutObservable<Edm.String> });

        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        DomainId: KnockoutObservable<Edm.Guid>;
        Favorite: KnockoutObservable<Edm.Boolean>;
        Id: KnockoutObservable<Edm.Guid>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        Key: KnockoutObservable<Edm.String>;
        Language: KnockoutObservable<Edm.String>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        SortOrder: KnockoutObservable<Edm.Int32>;
        Value: KnockoutObservable<Edm.String>;
        innerInstance: CrmService_NoPreviousSerialNoReason;
    }

    export class ObservableCrmService_ServiceCaseCategory extends $data.Entity {
        constructor();
        constructor(initData: { Color?: KnockoutObservable<Edm.String>; CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; DomainId?: KnockoutObservable<Edm.Guid>; Favorite?: KnockoutObservable<Edm.Boolean>; Id?: KnockoutObservable<Edm.Guid>; IsActive?: KnockoutObservable<Edm.Boolean>; Key?: KnockoutObservable<Edm.String>; Language?: KnockoutObservable<Edm.String>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; SortOrder?: KnockoutObservable<Edm.Int32>; Value?: KnockoutObservable<Edm.String> });

        Color: KnockoutObservable<Edm.String>;
        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        DomainId: KnockoutObservable<Edm.Guid>;
        Favorite: KnockoutObservable<Edm.Boolean>;
        Id: KnockoutObservable<Edm.Guid>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        Key: KnockoutObservable<Edm.String>;
        Language: KnockoutObservable<Edm.String>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        SortOrder: KnockoutObservable<Edm.Int32>;
        Value: KnockoutObservable<Edm.String>;
        innerInstance: CrmService_ServiceCaseCategory;
    }

    export class ObservableCrmService_ServiceCaseStatus extends $data.Entity {
        constructor();
        constructor(initData: { Color?: KnockoutObservable<Edm.String>; CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; DomainId?: KnockoutObservable<Edm.Guid>; Favorite?: KnockoutObservable<Edm.Boolean>; Groups?: KnockoutObservable<Edm.String>; Id?: KnockoutObservable<Edm.Guid>; IsActive?: KnockoutObservable<Edm.Boolean>; Key?: KnockoutObservable<Edm.Int32>; Language?: KnockoutObservable<Edm.String>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; SettableStatuses?: KnockoutObservable<Edm.String>; SortOrder?: KnockoutObservable<Edm.Int32>; Value?: KnockoutObservable<Edm.String> });

        Color: KnockoutObservable<Edm.String>;
        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        DomainId: KnockoutObservable<Edm.Guid>;
        Favorite: KnockoutObservable<Edm.Boolean>;
        Groups: KnockoutObservable<Edm.String>;
        Id: KnockoutObservable<Edm.Guid>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        Key: KnockoutObservable<Edm.Int32>;
        Language: KnockoutObservable<Edm.String>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        SettableStatuses: KnockoutObservable<Edm.String>;
        SortOrder: KnockoutObservable<Edm.Int32>;
        Value: KnockoutObservable<Edm.String>;
        innerInstance: CrmService_ServiceCaseStatus;
    }

    export class ObservableCrmService_ServiceContractAddressRelationshipType extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; DomainId?: KnockoutObservable<Edm.Guid>; Favorite?: KnockoutObservable<Edm.Boolean>; Id?: KnockoutObservable<Edm.Guid>; IsActive?: KnockoutObservable<Edm.Boolean>; Key?: KnockoutObservable<Edm.String>; Language?: KnockoutObservable<Edm.String>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; SortOrder?: KnockoutObservable<Edm.Int32>; Value?: KnockoutObservable<Edm.String> });

        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        DomainId: KnockoutObservable<Edm.Guid>;
        Favorite: KnockoutObservable<Edm.Boolean>;
        Id: KnockoutObservable<Edm.Guid>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        Key: KnockoutObservable<Edm.String>;
        Language: KnockoutObservable<Edm.String>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        SortOrder: KnockoutObservable<Edm.Int32>;
        Value: KnockoutObservable<Edm.String>;
        innerInstance: CrmService_ServiceContractAddressRelationshipType;
    }

    export class ObservableCrmService_ServiceContractLimitType extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; DomainId?: KnockoutObservable<Edm.Guid>; Favorite?: KnockoutObservable<Edm.Boolean>; Id?: KnockoutObservable<Edm.Guid>; IsActive?: KnockoutObservable<Edm.Boolean>; Key?: KnockoutObservable<Edm.String>; Language?: KnockoutObservable<Edm.String>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; SortOrder?: KnockoutObservable<Edm.Int32>; Value?: KnockoutObservable<Edm.String> });

        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        DomainId: KnockoutObservable<Edm.Guid>;
        Favorite: KnockoutObservable<Edm.Boolean>;
        Id: KnockoutObservable<Edm.Guid>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        Key: KnockoutObservable<Edm.String>;
        Language: KnockoutObservable<Edm.String>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        SortOrder: KnockoutObservable<Edm.Int32>;
        Value: KnockoutObservable<Edm.String>;
        innerInstance: CrmService_ServiceContractLimitType;
    }

    export class ObservableCrmService_ServiceContractStatus extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; DomainId?: KnockoutObservable<Edm.Guid>; Favorite?: KnockoutObservable<Edm.Boolean>; Id?: KnockoutObservable<Edm.Guid>; IsActive?: KnockoutObservable<Edm.Boolean>; Key?: KnockoutObservable<Edm.String>; Language?: KnockoutObservable<Edm.String>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; SettableStatuses?: KnockoutObservable<Edm.String>; SortOrder?: KnockoutObservable<Edm.Int32>; Value?: KnockoutObservable<Edm.String> });

        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        DomainId: KnockoutObservable<Edm.Guid>;
        Favorite: KnockoutObservable<Edm.Boolean>;
        Id: KnockoutObservable<Edm.Guid>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        Key: KnockoutObservable<Edm.String>;
        Language: KnockoutObservable<Edm.String>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        SettableStatuses: KnockoutObservable<Edm.String>;
        SortOrder: KnockoutObservable<Edm.Int32>;
        Value: KnockoutObservable<Edm.String>;
        innerInstance: CrmService_ServiceContractStatus;
    }

    export class ObservableCrmService_ServiceContractType extends $data.Entity {
        constructor();
        constructor(initData: { Color?: KnockoutObservable<Edm.String>; CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; DomainId?: KnockoutObservable<Edm.Guid>; Favorite?: KnockoutObservable<Edm.Boolean>; GracePeriodInDays?: KnockoutObservable<Edm.Int32>; Id?: KnockoutObservable<Edm.Guid>; IsActive?: KnockoutObservable<Edm.Boolean>; Key?: KnockoutObservable<Edm.String>; Language?: KnockoutObservable<Edm.String>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; SortOrder?: KnockoutObservable<Edm.Int32>; Value?: KnockoutObservable<Edm.String> });

        Color: KnockoutObservable<Edm.String>;
        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        DomainId: KnockoutObservable<Edm.Guid>;
        Favorite: KnockoutObservable<Edm.Boolean>;
        GracePeriodInDays: KnockoutObservable<Edm.Int32>;
        Id: KnockoutObservable<Edm.Guid>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        Key: KnockoutObservable<Edm.String>;
        Language: KnockoutObservable<Edm.String>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        SortOrder: KnockoutObservable<Edm.Int32>;
        Value: KnockoutObservable<Edm.String>;
        innerInstance: CrmService_ServiceContractType;
    }

    export class ObservableCrmService_ServiceObjectCategory extends $data.Entity {
        constructor();
        constructor(initData: { Color?: KnockoutObservable<Edm.String>; CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; DomainId?: KnockoutObservable<Edm.Guid>; Favorite?: KnockoutObservable<Edm.Boolean>; Id?: KnockoutObservable<Edm.Guid>; IsActive?: KnockoutObservable<Edm.Boolean>; Key?: KnockoutObservable<Edm.String>; Language?: KnockoutObservable<Edm.String>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; SortOrder?: KnockoutObservable<Edm.Int32>; Value?: KnockoutObservable<Edm.String> });

        Color: KnockoutObservable<Edm.String>;
        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        DomainId: KnockoutObservable<Edm.Guid>;
        Favorite: KnockoutObservable<Edm.Boolean>;
        Id: KnockoutObservable<Edm.Guid>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        Key: KnockoutObservable<Edm.String>;
        Language: KnockoutObservable<Edm.String>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        SortOrder: KnockoutObservable<Edm.Int32>;
        Value: KnockoutObservable<Edm.String>;
        innerInstance: CrmService_ServiceObjectCategory;
    }

    export class ObservableCrmService_ServiceOrderDispatchCancellationReason extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; DomainId?: KnockoutObservable<Edm.Guid>; Favorite?: KnockoutObservable<Edm.Boolean>; Id?: KnockoutObservable<Edm.Guid>; IsActive?: KnockoutObservable<Edm.Boolean>; Key?: KnockoutObservable<Edm.String>; Language?: KnockoutObservable<Edm.String>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; SortOrder?: KnockoutObservable<Edm.Int32>; Value?: KnockoutObservable<Edm.String> });

        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        DomainId: KnockoutObservable<Edm.Guid>;
        Favorite: KnockoutObservable<Edm.Boolean>;
        Id: KnockoutObservable<Edm.Guid>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        Key: KnockoutObservable<Edm.String>;
        Language: KnockoutObservable<Edm.String>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        SortOrder: KnockoutObservable<Edm.Int32>;
        Value: KnockoutObservable<Edm.String>;
        innerInstance: CrmService_ServiceOrderDispatchCancellationReason;
    }

    export class ObservableCrmService_ServiceOrderDispatchRejectReason extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; DomainId?: KnockoutObservable<Edm.Guid>; Favorite?: KnockoutObservable<Edm.Boolean>; Id?: KnockoutObservable<Edm.Guid>; IsActive?: KnockoutObservable<Edm.Boolean>; Key?: KnockoutObservable<Edm.String>; Language?: KnockoutObservable<Edm.String>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; ServiceOrderStatusKey?: KnockoutObservable<Edm.String>; ShowInMobileClient?: KnockoutObservable<Edm.Boolean>; SortOrder?: KnockoutObservable<Edm.Int32>; Value?: KnockoutObservable<Edm.String> });

        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        DomainId: KnockoutObservable<Edm.Guid>;
        Favorite: KnockoutObservable<Edm.Boolean>;
        Id: KnockoutObservable<Edm.Guid>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        Key: KnockoutObservable<Edm.String>;
        Language: KnockoutObservable<Edm.String>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        ServiceOrderStatusKey: KnockoutObservable<Edm.String>;
        ShowInMobileClient: KnockoutObservable<Edm.Boolean>;
        SortOrder: KnockoutObservable<Edm.Int32>;
        Value: KnockoutObservable<Edm.String>;
        innerInstance: CrmService_ServiceOrderDispatchRejectReason;
    }

    export class ObservableCrmService_ServiceOrderDispatchStatus extends $data.Entity {
        constructor();
        constructor(initData: { Color?: KnockoutObservable<Edm.String>; CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; DomainId?: KnockoutObservable<Edm.Guid>; Favorite?: KnockoutObservable<Edm.Boolean>; Id?: KnockoutObservable<Edm.Guid>; IsActive?: KnockoutObservable<Edm.Boolean>; Key?: KnockoutObservable<Edm.String>; Language?: KnockoutObservable<Edm.String>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; SortOrder?: KnockoutObservable<Edm.Int32>; Value?: KnockoutObservable<Edm.String> });

        Color: KnockoutObservable<Edm.String>;
        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        DomainId: KnockoutObservable<Edm.Guid>;
        Favorite: KnockoutObservable<Edm.Boolean>;
        Id: KnockoutObservable<Edm.Guid>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        Key: KnockoutObservable<Edm.String>;
        Language: KnockoutObservable<Edm.String>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        SortOrder: KnockoutObservable<Edm.Int32>;
        Value: KnockoutObservable<Edm.String>;
        innerInstance: CrmService_ServiceOrderDispatchStatus;
    }

    export class ObservableCrmService_ServiceOrderInvoiceReason extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; DomainId?: KnockoutObservable<Edm.Guid>; Favorite?: KnockoutObservable<Edm.Boolean>; Id?: KnockoutObservable<Edm.Guid>; IsActive?: KnockoutObservable<Edm.Boolean>; Key?: KnockoutObservable<Edm.String>; Language?: KnockoutObservable<Edm.String>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; SortOrder?: KnockoutObservable<Edm.Int32>; Value?: KnockoutObservable<Edm.String> });

        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        DomainId: KnockoutObservable<Edm.Guid>;
        Favorite: KnockoutObservable<Edm.Boolean>;
        Id: KnockoutObservable<Edm.Guid>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        Key: KnockoutObservable<Edm.String>;
        Language: KnockoutObservable<Edm.String>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        SortOrder: KnockoutObservable<Edm.Int32>;
        Value: KnockoutObservable<Edm.String>;
        innerInstance: CrmService_ServiceOrderInvoiceReason;
    }

    export class ObservableCrmService_ServiceOrderNoInvoiceReason extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; DomainId?: KnockoutObservable<Edm.Guid>; Favorite?: KnockoutObservable<Edm.Boolean>; Id?: KnockoutObservable<Edm.Guid>; IsActive?: KnockoutObservable<Edm.Boolean>; Key?: KnockoutObservable<Edm.String>; Language?: KnockoutObservable<Edm.String>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; SortOrder?: KnockoutObservable<Edm.Int32>; Value?: KnockoutObservable<Edm.String> });

        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        DomainId: KnockoutObservable<Edm.Guid>;
        Favorite: KnockoutObservable<Edm.Boolean>;
        Id: KnockoutObservable<Edm.Guid>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        Key: KnockoutObservable<Edm.String>;
        Language: KnockoutObservable<Edm.String>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        SortOrder: KnockoutObservable<Edm.Int32>;
        Value: KnockoutObservable<Edm.String>;
        innerInstance: CrmService_ServiceOrderNoInvoiceReason;
    }

    export class ObservableCrmService_ServiceOrderStatus extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; DomainId?: KnockoutObservable<Edm.Guid>; Favorite?: KnockoutObservable<Edm.Boolean>; Groups?: KnockoutObservable<Edm.String>; Id?: KnockoutObservable<Edm.Guid>; IsActive?: KnockoutObservable<Edm.Boolean>; Key?: KnockoutObservable<Edm.String>; Language?: KnockoutObservable<Edm.String>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; SettableStatuses?: KnockoutObservable<Edm.String>; SortOrder?: KnockoutObservable<Edm.Int32>; Value?: KnockoutObservable<Edm.String> });

        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        DomainId: KnockoutObservable<Edm.Guid>;
        Favorite: KnockoutObservable<Edm.Boolean>;
        Groups: KnockoutObservable<Edm.String>;
        Id: KnockoutObservable<Edm.Guid>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        Key: KnockoutObservable<Edm.String>;
        Language: KnockoutObservable<Edm.String>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        SettableStatuses: KnockoutObservable<Edm.String>;
        SortOrder: KnockoutObservable<Edm.Int32>;
        Value: KnockoutObservable<Edm.String>;
        innerInstance: CrmService_ServiceOrderStatus;
    }

    export class ObservableCrmService_ServiceOrderTimeCategory extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; DomainId?: KnockoutObservable<Edm.Guid>; Favorite?: KnockoutObservable<Edm.Boolean>; Id?: KnockoutObservable<Edm.Guid>; IsActive?: KnockoutObservable<Edm.Boolean>; Key?: KnockoutObservable<Edm.String>; Language?: KnockoutObservable<Edm.String>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; SortOrder?: KnockoutObservable<Edm.Int32>; Value?: KnockoutObservable<Edm.String> });

        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        DomainId: KnockoutObservable<Edm.Guid>;
        Favorite: KnockoutObservable<Edm.Boolean>;
        Id: KnockoutObservable<Edm.Guid>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        Key: KnockoutObservable<Edm.String>;
        Language: KnockoutObservable<Edm.String>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        SortOrder: KnockoutObservable<Edm.Int32>;
        Value: KnockoutObservable<Edm.String>;
        innerInstance: CrmService_ServiceOrderTimeCategory;
    }

    export class ObservableCrmService_ServiceOrderTimeLocation extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; DomainId?: KnockoutObservable<Edm.Guid>; Favorite?: KnockoutObservable<Edm.Boolean>; Id?: KnockoutObservable<Edm.Guid>; IsActive?: KnockoutObservable<Edm.Boolean>; Key?: KnockoutObservable<Edm.String>; Language?: KnockoutObservable<Edm.String>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; SortOrder?: KnockoutObservable<Edm.Int32>; Value?: KnockoutObservable<Edm.String> });

        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        DomainId: KnockoutObservable<Edm.Guid>;
        Favorite: KnockoutObservable<Edm.Boolean>;
        Id: KnockoutObservable<Edm.Guid>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        Key: KnockoutObservable<Edm.String>;
        Language: KnockoutObservable<Edm.String>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        SortOrder: KnockoutObservable<Edm.Int32>;
        Value: KnockoutObservable<Edm.String>;
        innerInstance: CrmService_ServiceOrderTimeLocation;
    }

    export class ObservableCrmService_ServiceOrderTimePriority extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; DomainId?: KnockoutObservable<Edm.Guid>; Favorite?: KnockoutObservable<Edm.Boolean>; Id?: KnockoutObservable<Edm.Guid>; IsActive?: KnockoutObservable<Edm.Boolean>; Key?: KnockoutObservable<Edm.String>; Language?: KnockoutObservable<Edm.String>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; SortOrder?: KnockoutObservable<Edm.Int32>; Value?: KnockoutObservable<Edm.String> });

        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        DomainId: KnockoutObservable<Edm.Guid>;
        Favorite: KnockoutObservable<Edm.Boolean>;
        Id: KnockoutObservable<Edm.Guid>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        Key: KnockoutObservable<Edm.String>;
        Language: KnockoutObservable<Edm.String>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        SortOrder: KnockoutObservable<Edm.Int32>;
        Value: KnockoutObservable<Edm.String>;
        innerInstance: CrmService_ServiceOrderTimePriority;
    }

    export class ObservableCrmService_ServiceOrderTimeStatus extends $data.Entity {
        constructor();
        constructor(initData: { Color?: KnockoutObservable<Edm.String>; CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; DomainId?: KnockoutObservable<Edm.Guid>; Favorite?: KnockoutObservable<Edm.Boolean>; Id?: KnockoutObservable<Edm.Guid>; IsActive?: KnockoutObservable<Edm.Boolean>; Key?: KnockoutObservable<Edm.String>; Language?: KnockoutObservable<Edm.String>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; SortOrder?: KnockoutObservable<Edm.Int32>; Value?: KnockoutObservable<Edm.String> });

        Color: KnockoutObservable<Edm.String>;
        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        DomainId: KnockoutObservable<Edm.Guid>;
        Favorite: KnockoutObservable<Edm.Boolean>;
        Id: KnockoutObservable<Edm.Guid>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        Key: KnockoutObservable<Edm.String>;
        Language: KnockoutObservable<Edm.String>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        SortOrder: KnockoutObservable<Edm.Int32>;
        Value: KnockoutObservable<Edm.String>;
        innerInstance: CrmService_ServiceOrderTimeStatus;
    }

    export class ObservableCrmService_ServiceOrderType extends $data.Entity {
        constructor();
        constructor(initData: { Color?: KnockoutObservable<Edm.String>; CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; DefaultInvoicingTypeKey?: KnockoutObservable<Edm.String>; DomainId?: KnockoutObservable<Edm.Guid>; Favorite?: KnockoutObservable<Edm.Boolean>; Id?: KnockoutObservable<Edm.Guid>; IsActive?: KnockoutObservable<Edm.Boolean>; Key?: KnockoutObservable<Edm.String>; Language?: KnockoutObservable<Edm.String>; MaintenanceOrder?: KnockoutObservable<Edm.Boolean>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; NumberingSequence?: KnockoutObservable<Edm.String>; ShowInMobileClient?: KnockoutObservable<Edm.Boolean>; SortOrder?: KnockoutObservable<Edm.Int32>; Value?: KnockoutObservable<Edm.String> });

        Color: KnockoutObservable<Edm.String>;
        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        DefaultInvoicingTypeKey: KnockoutObservable<Edm.String>;
        DomainId: KnockoutObservable<Edm.Guid>;
        Favorite: KnockoutObservable<Edm.Boolean>;
        Id: KnockoutObservable<Edm.Guid>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        Key: KnockoutObservable<Edm.String>;
        Language: KnockoutObservable<Edm.String>;
        MaintenanceOrder: KnockoutObservable<Edm.Boolean>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        NumberingSequence: KnockoutObservable<Edm.String>;
        ShowInMobileClient: KnockoutObservable<Edm.Boolean>;
        SortOrder: KnockoutObservable<Edm.Int32>;
        Value: KnockoutObservable<Edm.String>;
        innerInstance: CrmService_ServiceOrderType;
    }

    export class ObservableCrmService_ServicePriority extends $data.Entity {
        constructor();
        constructor(initData: { Color?: KnockoutObservable<Edm.String>; CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; DomainId?: KnockoutObservable<Edm.Guid>; Favorite?: KnockoutObservable<Edm.Boolean>; Id?: KnockoutObservable<Edm.Guid>; IsActive?: KnockoutObservable<Edm.Boolean>; IsFastLane?: KnockoutObservable<Edm.Boolean>; Key?: KnockoutObservable<Edm.String>; Language?: KnockoutObservable<Edm.String>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; SortOrder?: KnockoutObservable<Edm.Int32>; Value?: KnockoutObservable<Edm.String> });

        Color: KnockoutObservable<Edm.String>;
        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        DomainId: KnockoutObservable<Edm.Guid>;
        Favorite: KnockoutObservable<Edm.Boolean>;
        Id: KnockoutObservable<Edm.Guid>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        IsFastLane: KnockoutObservable<Edm.Boolean>;
        Key: KnockoutObservable<Edm.String>;
        Language: KnockoutObservable<Edm.String>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        SortOrder: KnockoutObservable<Edm.Int32>;
        Value: KnockoutObservable<Edm.String>;
        innerInstance: CrmService_ServicePriority;
    }

    export class ObservableCrmService_SparePartsBudgetInvoiceType extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; DomainId?: KnockoutObservable<Edm.Guid>; Favorite?: KnockoutObservable<Edm.Boolean>; Id?: KnockoutObservable<Edm.Guid>; IsActive?: KnockoutObservable<Edm.Boolean>; Key?: KnockoutObservable<Edm.String>; Language?: KnockoutObservable<Edm.String>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; SortOrder?: KnockoutObservable<Edm.Int32>; Value?: KnockoutObservable<Edm.String> });

        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        DomainId: KnockoutObservable<Edm.Guid>;
        Favorite: KnockoutObservable<Edm.Boolean>;
        Id: KnockoutObservable<Edm.Guid>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        Key: KnockoutObservable<Edm.String>;
        Language: KnockoutObservable<Edm.String>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        SortOrder: KnockoutObservable<Edm.Int32>;
        Value: KnockoutObservable<Edm.String>;
        innerInstance: CrmService_SparePartsBudgetInvoiceType;
    }

    export class ObservableCrmService_SparePartsBudgetTimeSpanUnit extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; DomainId?: KnockoutObservable<Edm.Guid>; Favorite?: KnockoutObservable<Edm.Boolean>; Id?: KnockoutObservable<Edm.Guid>; IsActive?: KnockoutObservable<Edm.Boolean>; Key?: KnockoutObservable<Edm.String>; Language?: KnockoutObservable<Edm.String>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; SortOrder?: KnockoutObservable<Edm.Int32>; Value?: KnockoutObservable<Edm.String> });

        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        DomainId: KnockoutObservable<Edm.Guid>;
        Favorite: KnockoutObservable<Edm.Boolean>;
        Id: KnockoutObservable<Edm.Guid>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        Key: KnockoutObservable<Edm.String>;
        Language: KnockoutObservable<Edm.String>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        SortOrder: KnockoutObservable<Edm.Int32>;
        Value: KnockoutObservable<Edm.String>;
        innerInstance: CrmService_SparePartsBudgetTimeSpanUnit;
    }

    export class ObservableCrmService_StatisticsKeyProductType extends $data.Entity {
        constructor();
        constructor(initData: { Code?: KnockoutObservable<Edm.String>; CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; DomainId?: KnockoutObservable<Edm.Guid>; Favorite?: KnockoutObservable<Edm.Boolean>; Id?: KnockoutObservable<Edm.Guid>; IsActive?: KnockoutObservable<Edm.Boolean>; Key?: KnockoutObservable<Edm.String>; Language?: KnockoutObservable<Edm.String>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; SortOrder?: KnockoutObservable<Edm.Int32>; Value?: KnockoutObservable<Edm.String> });

        Code: KnockoutObservable<Edm.String>;
        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        DomainId: KnockoutObservable<Edm.Guid>;
        Favorite: KnockoutObservable<Edm.Boolean>;
        Id: KnockoutObservable<Edm.Guid>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        Key: KnockoutObservable<Edm.String>;
        Language: KnockoutObservable<Edm.String>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        SortOrder: KnockoutObservable<Edm.Int32>;
        Value: KnockoutObservable<Edm.String>;
        innerInstance: CrmService_StatisticsKeyProductType;
    }

    export class ObservableCrmService_StatisticsKeyMainAssembly extends $data.Entity {
        constructor();
        constructor(initData: { Code?: KnockoutObservable<Edm.String>; CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; DomainId?: KnockoutObservable<Edm.Guid>; Favorite?: KnockoutObservable<Edm.Boolean>; Id?: KnockoutObservable<Edm.Guid>; IsActive?: KnockoutObservable<Edm.Boolean>; Key?: KnockoutObservable<Edm.String>; Language?: KnockoutObservable<Edm.String>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; ProductTypeKey?: KnockoutObservable<Edm.String>; SortOrder?: KnockoutObservable<Edm.Int32>; Value?: KnockoutObservable<Edm.String> });

        Code: KnockoutObservable<Edm.String>;
        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        DomainId: KnockoutObservable<Edm.Guid>;
        Favorite: KnockoutObservable<Edm.Boolean>;
        Id: KnockoutObservable<Edm.Guid>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        Key: KnockoutObservable<Edm.String>;
        Language: KnockoutObservable<Edm.String>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        ProductTypeKey: KnockoutObservable<Edm.String>;
        SortOrder: KnockoutObservable<Edm.Int32>;
        Value: KnockoutObservable<Edm.String>;
        innerInstance: CrmService_StatisticsKeyMainAssembly;
    }

    export class ObservableCrmService_StatisticsKeySubAssembly extends $data.Entity {
        constructor();
        constructor(initData: { Code?: KnockoutObservable<Edm.String>; CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; DomainId?: KnockoutObservable<Edm.Guid>; Favorite?: KnockoutObservable<Edm.Boolean>; Id?: KnockoutObservable<Edm.Guid>; IsActive?: KnockoutObservable<Edm.Boolean>; Key?: KnockoutObservable<Edm.String>; Language?: KnockoutObservable<Edm.String>; MainAssemblyKey?: KnockoutObservable<Edm.String>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; ProductTypeKey?: KnockoutObservable<Edm.String>; SortOrder?: KnockoutObservable<Edm.Int32>; Value?: KnockoutObservable<Edm.String> });

        Code: KnockoutObservable<Edm.String>;
        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        DomainId: KnockoutObservable<Edm.Guid>;
        Favorite: KnockoutObservable<Edm.Boolean>;
        Id: KnockoutObservable<Edm.Guid>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        Key: KnockoutObservable<Edm.String>;
        Language: KnockoutObservable<Edm.String>;
        MainAssemblyKey: KnockoutObservable<Edm.String>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        ProductTypeKey: KnockoutObservable<Edm.String>;
        SortOrder: KnockoutObservable<Edm.Int32>;
        Value: KnockoutObservable<Edm.String>;
        innerInstance: CrmService_StatisticsKeySubAssembly;
    }

    export class ObservableCrmService_StatisticsKeyAssemblyGroup extends $data.Entity {
        constructor();
        constructor(initData: { Code?: KnockoutObservable<Edm.String>; CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; DomainId?: KnockoutObservable<Edm.Guid>; Favorite?: KnockoutObservable<Edm.Boolean>; Id?: KnockoutObservable<Edm.Guid>; IsActive?: KnockoutObservable<Edm.Boolean>; Key?: KnockoutObservable<Edm.String>; Language?: KnockoutObservable<Edm.String>; MainAssemblyKey?: KnockoutObservable<Edm.String>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; ProductTypeKey?: KnockoutObservable<Edm.String>; SortOrder?: KnockoutObservable<Edm.Int32>; SubAssemblyKey?: KnockoutObservable<Edm.String>; Value?: KnockoutObservable<Edm.String> });

        Code: KnockoutObservable<Edm.String>;
        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        DomainId: KnockoutObservable<Edm.Guid>;
        Favorite: KnockoutObservable<Edm.Boolean>;
        Id: KnockoutObservable<Edm.Guid>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        Key: KnockoutObservable<Edm.String>;
        Language: KnockoutObservable<Edm.String>;
        MainAssemblyKey: KnockoutObservable<Edm.String>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        ProductTypeKey: KnockoutObservable<Edm.String>;
        SortOrder: KnockoutObservable<Edm.Int32>;
        SubAssemblyKey: KnockoutObservable<Edm.String>;
        Value: KnockoutObservable<Edm.String>;
        innerInstance: CrmService_StatisticsKeyAssemblyGroup;
    }

    export class ObservableCrmService_StatisticsKeyFaultImage extends $data.Entity {
        constructor();
        constructor(initData: { AssemblyGroupKey?: KnockoutObservable<Edm.String>; Code?: KnockoutObservable<Edm.String>; CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; DomainId?: KnockoutObservable<Edm.Guid>; Favorite?: KnockoutObservable<Edm.Boolean>; Id?: KnockoutObservable<Edm.Guid>; InstallationTypeKey?: KnockoutObservable<Edm.String>; IsActive?: KnockoutObservable<Edm.Boolean>; Key?: KnockoutObservable<Edm.String>; Language?: KnockoutObservable<Edm.String>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; ProductTypeKey?: KnockoutObservable<Edm.String>; SortOrder?: KnockoutObservable<Edm.Int32>; Value?: KnockoutObservable<Edm.String> });

        AssemblyGroupKey: KnockoutObservable<Edm.String>;
        Code: KnockoutObservable<Edm.String>;
        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        DomainId: KnockoutObservable<Edm.Guid>;
        Favorite: KnockoutObservable<Edm.Boolean>;
        Id: KnockoutObservable<Edm.Guid>;
        InstallationTypeKey: KnockoutObservable<Edm.String>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        Key: KnockoutObservable<Edm.String>;
        Language: KnockoutObservable<Edm.String>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        ProductTypeKey: KnockoutObservable<Edm.String>;
        SortOrder: KnockoutObservable<Edm.Int32>;
        Value: KnockoutObservable<Edm.String>;
        innerInstance: CrmService_StatisticsKeyFaultImage;
    }

    export class ObservableCrmService_StatisticsKeyRemedy extends $data.Entity {
        constructor();
        constructor(initData: { Code?: KnockoutObservable<Edm.String>; CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; DomainId?: KnockoutObservable<Edm.Guid>; Favorite?: KnockoutObservable<Edm.Boolean>; Id?: KnockoutObservable<Edm.Guid>; IsActive?: KnockoutObservable<Edm.Boolean>; Key?: KnockoutObservable<Edm.String>; Language?: KnockoutObservable<Edm.String>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; ProductTypeKey?: KnockoutObservable<Edm.String>; SortOrder?: KnockoutObservable<Edm.Int32>; Value?: KnockoutObservable<Edm.String> });

        Code: KnockoutObservable<Edm.String>;
        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        DomainId: KnockoutObservable<Edm.Guid>;
        Favorite: KnockoutObservable<Edm.Boolean>;
        Id: KnockoutObservable<Edm.Guid>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        Key: KnockoutObservable<Edm.String>;
        Language: KnockoutObservable<Edm.String>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        ProductTypeKey: KnockoutObservable<Edm.String>;
        SortOrder: KnockoutObservable<Edm.Int32>;
        Value: KnockoutObservable<Edm.String>;
        innerInstance: CrmService_StatisticsKeyRemedy;
    }

    export class ObservableCrmService_StatisticsKeyCause extends $data.Entity {
        constructor();
        constructor(initData: { Code?: KnockoutObservable<Edm.String>; CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; DomainId?: KnockoutObservable<Edm.Guid>; ErrorTypes?: KnockoutObservable<Edm.String>; Favorite?: KnockoutObservable<Edm.Boolean>; Id?: KnockoutObservable<Edm.Guid>; IsActive?: KnockoutObservable<Edm.Boolean>; Key?: KnockoutObservable<Edm.String>; Language?: KnockoutObservable<Edm.String>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; ProductTypeKey?: KnockoutObservable<Edm.String>; SortOrder?: KnockoutObservable<Edm.Int32>; Value?: KnockoutObservable<Edm.String> });

        Code: KnockoutObservable<Edm.String>;
        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        DomainId: KnockoutObservable<Edm.Guid>;
        ErrorTypes: KnockoutObservable<Edm.String>;
        Favorite: KnockoutObservable<Edm.Boolean>;
        Id: KnockoutObservable<Edm.Guid>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        Key: KnockoutObservable<Edm.String>;
        Language: KnockoutObservable<Edm.String>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        ProductTypeKey: KnockoutObservable<Edm.String>;
        SortOrder: KnockoutObservable<Edm.Int32>;
        Value: KnockoutObservable<Edm.String>;
        innerInstance: CrmService_StatisticsKeyCause;
    }

    export class ObservableCrmService_StatisticsKeyWeighting extends $data.Entity {
        constructor();
        constructor(initData: { Code?: KnockoutObservable<Edm.String>; CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; DomainId?: KnockoutObservable<Edm.Guid>; Favorite?: KnockoutObservable<Edm.Boolean>; Id?: KnockoutObservable<Edm.Guid>; IsActive?: KnockoutObservable<Edm.Boolean>; Key?: KnockoutObservable<Edm.String>; Language?: KnockoutObservable<Edm.String>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; ProductTypeKey?: KnockoutObservable<Edm.String>; SortOrder?: KnockoutObservable<Edm.Int32>; Value?: KnockoutObservable<Edm.String> });

        Code: KnockoutObservable<Edm.String>;
        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        DomainId: KnockoutObservable<Edm.Guid>;
        Favorite: KnockoutObservable<Edm.Boolean>;
        Id: KnockoutObservable<Edm.Guid>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        Key: KnockoutObservable<Edm.String>;
        Language: KnockoutObservable<Edm.String>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        ProductTypeKey: KnockoutObservable<Edm.String>;
        SortOrder: KnockoutObservable<Edm.Int32>;
        Value: KnockoutObservable<Edm.String>;
        innerInstance: CrmService_StatisticsKeyWeighting;
    }

    export class ObservableCrmService_StatisticsKeyCauser extends $data.Entity {
        constructor();
        constructor(initData: { Code?: KnockoutObservable<Edm.String>; CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; DomainId?: KnockoutObservable<Edm.Guid>; Favorite?: KnockoutObservable<Edm.Boolean>; Id?: KnockoutObservable<Edm.Guid>; IsActive?: KnockoutObservable<Edm.Boolean>; Key?: KnockoutObservable<Edm.String>; Language?: KnockoutObservable<Edm.String>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; ProductTypeKey?: KnockoutObservable<Edm.String>; SortOrder?: KnockoutObservable<Edm.Int32>; Value?: KnockoutObservable<Edm.String> });

        Code: KnockoutObservable<Edm.String>;
        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        DomainId: KnockoutObservable<Edm.Guid>;
        Favorite: KnockoutObservable<Edm.Boolean>;
        Id: KnockoutObservable<Edm.Guid>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        Key: KnockoutObservable<Edm.String>;
        Language: KnockoutObservable<Edm.String>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        ProductTypeKey: KnockoutObservable<Edm.String>;
        SortOrder: KnockoutObservable<Edm.Int32>;
        Value: KnockoutObservable<Edm.String>;
        innerInstance: CrmService_StatisticsKeyCauser;
    }

    export class CrmService_CommissioningStatus extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; DomainId?: Edm.Guid; Favorite?: Edm.Boolean; Id?: Edm.Guid; IsActive?: Edm.Boolean; Key?: Edm.String; Language?: Edm.String; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; SortOrder?: Edm.Int32; Value?: Edm.String });

        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        DomainId: Edm.Guid;
        Favorite: Edm.Boolean;
        Id: Edm.Guid;
        IsActive: Edm.Boolean;
        Key: Edm.String;
        Language: Edm.String;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        SortOrder: Edm.Int32;
        Value: Edm.String;
        asKoObservable(): ObservableCrmService_CommissioningStatus;
        static create(): CrmService_CommissioningStatus;
        static create(initData:any): CrmService_CommissioningStatus;
    }

    export class CrmService_Component extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; DomainId?: Edm.Guid; Favorite?: Edm.Boolean; Id?: Edm.Guid; IsActive?: Edm.Boolean; Key?: Edm.String; Language?: Edm.String; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; SortOrder?: Edm.Int32; Value?: Edm.String });

        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        DomainId: Edm.Guid;
        Favorite: Edm.Boolean;
        Id: Edm.Guid;
        IsActive: Edm.Boolean;
        Key: Edm.String;
        Language: Edm.String;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        SortOrder: Edm.Int32;
        Value: Edm.String;
        asKoObservable(): ObservableCrmService_Component;
        static create(): CrmService_Component;
        static create(initData:any): CrmService_Component;
    }

    export class CrmService_ErrorCode extends $data.Entity {
        constructor();
        constructor(initData: { BPChecklistId?: Edm.Int32; Code?: Edm.String; Component?: Edm.Int32; CountOfNotifications?: Edm.Int32; CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; Description?: Edm.String; DomainId?: Edm.Guid; ErrorCodeId?: Edm.Int32; Favorite?: Edm.Boolean; Id?: Edm.Guid; InstallationType?: Edm.String; IsActive?: Edm.Boolean; Key?: Edm.String; Language?: Edm.String; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; MonitoringCode?: Edm.String; Priority?: Edm.Int32; QualityPlanId?: Edm.Int32; RdsPpClassification?: Edm.String; ReactionTime?: Edm.Int32; ReactionTimeType?: Edm.String; Remark?: Edm.String; SortOrder?: Edm.Int32; StandardAction?: Edm.String; StandardActionExecuteCount?: Edm.Int32; StandardActionExecuteTimeout?: Edm.String; TemplateOrderNo?: Edm.String; Value?: Edm.String });

        BPChecklistId: Edm.Int32;
        Code: Edm.String;
        Component: Edm.Int32;
        CountOfNotifications: Edm.Int32;
        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        Description: Edm.String;
        DomainId: Edm.Guid;
        ErrorCodeId: Edm.Int32;
        Favorite: Edm.Boolean;
        Id: Edm.Guid;
        InstallationType: Edm.String;
        IsActive: Edm.Boolean;
        Key: Edm.String;
        Language: Edm.String;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        MonitoringCode: Edm.String;
        Priority: Edm.Int32;
        QualityPlanId: Edm.Int32;
        RdsPpClassification: Edm.String;
        ReactionTime: Edm.Int32;
        ReactionTimeType: Edm.String;
        Remark: Edm.String;
        SortOrder: Edm.Int32;
        StandardAction: Edm.String;
        StandardActionExecuteCount: Edm.Int32;
        StandardActionExecuteTimeout: Edm.String;
        TemplateOrderNo: Edm.String;
        Value: Edm.String;
        asKoObservable(): ObservableCrmService_ErrorCode;
        static create(): CrmService_ErrorCode;
        static create(initData:any): CrmService_ErrorCode;
    }

    export class CrmService_InstallationAddressRelationshipType extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; DomainId?: Edm.Guid; Favorite?: Edm.Boolean; Id?: Edm.Guid; IsActive?: Edm.Boolean; Key?: Edm.String; Language?: Edm.String; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; SortOrder?: Edm.Int32; Value?: Edm.String });

        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        DomainId: Edm.Guid;
        Favorite: Edm.Boolean;
        Id: Edm.Guid;
        IsActive: Edm.Boolean;
        Key: Edm.String;
        Language: Edm.String;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        SortOrder: Edm.Int32;
        Value: Edm.String;
        asKoObservable(): ObservableCrmService_InstallationAddressRelationshipType;
        static create(): CrmService_InstallationAddressRelationshipType;
        static create(initData:any): CrmService_InstallationAddressRelationshipType;
    }

    export class CrmService_InstallationCompanyRelationshipType extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; DomainId?: Edm.Guid; Favorite?: Edm.Boolean; Id?: Edm.Guid; IsActive?: Edm.Boolean; Key?: Edm.String; Language?: Edm.String; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; SortOrder?: Edm.Int32; Value?: Edm.String });

        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        DomainId: Edm.Guid;
        Favorite: Edm.Boolean;
        Id: Edm.Guid;
        IsActive: Edm.Boolean;
        Key: Edm.String;
        Language: Edm.String;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        SortOrder: Edm.Int32;
        Value: Edm.String;
        asKoObservable(): ObservableCrmService_InstallationCompanyRelationshipType;
        static create(): CrmService_InstallationCompanyRelationshipType;
        static create(initData:any): CrmService_InstallationCompanyRelationshipType;
    }

    export class CrmService_InstallationHeadStatus extends $data.Entity {
        constructor();
        constructor(initData: { Color?: Edm.String; CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; DomainId?: Edm.Guid; Favorite?: Edm.Boolean; Id?: Edm.Guid; IsActive?: Edm.Boolean; Key?: Edm.String; Language?: Edm.String; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; SortOrder?: Edm.Int32; Value?: Edm.String });

        Color: Edm.String;
        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        DomainId: Edm.Guid;
        Favorite: Edm.Boolean;
        Id: Edm.Guid;
        IsActive: Edm.Boolean;
        Key: Edm.String;
        Language: Edm.String;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        SortOrder: Edm.Int32;
        Value: Edm.String;
        asKoObservable(): ObservableCrmService_InstallationHeadStatus;
        static create(): CrmService_InstallationHeadStatus;
        static create(initData:any): CrmService_InstallationHeadStatus;
    }

    export class CrmService_InstallationPersonRelationshipType extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; DomainId?: Edm.Guid; Favorite?: Edm.Boolean; Id?: Edm.Guid; IsActive?: Edm.Boolean; Key?: Edm.String; Language?: Edm.String; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; SortOrder?: Edm.Int32; Value?: Edm.String });

        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        DomainId: Edm.Guid;
        Favorite: Edm.Boolean;
        Id: Edm.Guid;
        IsActive: Edm.Boolean;
        Key: Edm.String;
        Language: Edm.String;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        SortOrder: Edm.Int32;
        Value: Edm.String;
        asKoObservable(): ObservableCrmService_InstallationPersonRelationshipType;
        static create(): CrmService_InstallationPersonRelationshipType;
        static create(initData:any): CrmService_InstallationPersonRelationshipType;
    }

    export class CrmService_InstallationType extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; DomainId?: Edm.Guid; Favorite?: Edm.Boolean; Id?: Edm.Guid; IsActive?: Edm.Boolean; Key?: Edm.String; Language?: Edm.String; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; SortOrder?: Edm.Int32; Value?: Edm.String });

        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        DomainId: Edm.Guid;
        Favorite: Edm.Boolean;
        Id: Edm.Guid;
        IsActive: Edm.Boolean;
        Key: Edm.String;
        Language: Edm.String;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        SortOrder: Edm.Int32;
        Value: Edm.String;
        asKoObservable(): ObservableCrmService_InstallationType;
        static create(): CrmService_InstallationType;
        static create(initData:any): CrmService_InstallationType;
    }

    export class CrmService_Manufacturer extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; DomainId?: Edm.Guid; Favorite?: Edm.Boolean; Id?: Edm.Guid; IsActive?: Edm.Boolean; Key?: Edm.String; Language?: Edm.String; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; SortOrder?: Edm.Int32; Value?: Edm.String });

        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        DomainId: Edm.Guid;
        Favorite: Edm.Boolean;
        Id: Edm.Guid;
        IsActive: Edm.Boolean;
        Key: Edm.String;
        Language: Edm.String;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        SortOrder: Edm.Int32;
        Value: Edm.String;
        asKoObservable(): ObservableCrmService_Manufacturer;
        static create(): CrmService_Manufacturer;
        static create(initData:any): CrmService_Manufacturer;
    }

    export class CrmService_MonitoringDataType extends $data.Entity {
        constructor();
        constructor(initData: { BitIndex?: Edm.Int32; CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; DataTypeKey?: Edm.String; DomainId?: Edm.Guid; Favorite?: Edm.Boolean; Id?: Edm.Guid; IsActive?: Edm.Boolean; Key?: Edm.String; Language?: Edm.String; Max?: Edm.Double; Min?: Edm.Double; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; MonitoringDataTypeId?: Edm.Int32; QuantityUnit?: Edm.String; SortOrder?: Edm.Int32; Value?: Edm.String });

        BitIndex: Edm.Int32;
        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        DataTypeKey: Edm.String;
        DomainId: Edm.Guid;
        Favorite: Edm.Boolean;
        Id: Edm.Guid;
        IsActive: Edm.Boolean;
        Key: Edm.String;
        Language: Edm.String;
        Max: Edm.Double;
        Min: Edm.Double;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        MonitoringDataTypeId: Edm.Int32;
        QuantityUnit: Edm.String;
        SortOrder: Edm.Int32;
        Value: Edm.String;
        asKoObservable(): ObservableCrmService_MonitoringDataType;
        static create(): CrmService_MonitoringDataType;
        static create(initData:any): CrmService_MonitoringDataType;
    }

    export class CrmService_NoCausingItemPreviousSerialNoReason extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; DomainId?: Edm.Guid; Favorite?: Edm.Boolean; Id?: Edm.Guid; IsActive?: Edm.Boolean; Key?: Edm.String; Language?: Edm.String; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; SortOrder?: Edm.Int32; Value?: Edm.String });

        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        DomainId: Edm.Guid;
        Favorite: Edm.Boolean;
        Id: Edm.Guid;
        IsActive: Edm.Boolean;
        Key: Edm.String;
        Language: Edm.String;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        SortOrder: Edm.Int32;
        Value: Edm.String;
        asKoObservable(): ObservableCrmService_NoCausingItemPreviousSerialNoReason;
        static create(): CrmService_NoCausingItemPreviousSerialNoReason;
        static create(initData:any): CrmService_NoCausingItemPreviousSerialNoReason;
    }

    export class CrmService_NoCausingItemSerialNoReason extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; DomainId?: Edm.Guid; Favorite?: Edm.Boolean; Id?: Edm.Guid; IsActive?: Edm.Boolean; Key?: Edm.String; Language?: Edm.String; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; SortOrder?: Edm.Int32; Value?: Edm.String });

        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        DomainId: Edm.Guid;
        Favorite: Edm.Boolean;
        Id: Edm.Guid;
        IsActive: Edm.Boolean;
        Key: Edm.String;
        Language: Edm.String;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        SortOrder: Edm.Int32;
        Value: Edm.String;
        asKoObservable(): ObservableCrmService_NoCausingItemSerialNoReason;
        static create(): CrmService_NoCausingItemSerialNoReason;
        static create(initData:any): CrmService_NoCausingItemSerialNoReason;
    }

    export class CrmService_NoPreviousSerialNoReason extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; DomainId?: Edm.Guid; Favorite?: Edm.Boolean; Id?: Edm.Guid; IsActive?: Edm.Boolean; Key?: Edm.String; Language?: Edm.String; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; SortOrder?: Edm.Int32; Value?: Edm.String });

        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        DomainId: Edm.Guid;
        Favorite: Edm.Boolean;
        Id: Edm.Guid;
        IsActive: Edm.Boolean;
        Key: Edm.String;
        Language: Edm.String;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        SortOrder: Edm.Int32;
        Value: Edm.String;
        asKoObservable(): ObservableCrmService_NoPreviousSerialNoReason;
        static create(): CrmService_NoPreviousSerialNoReason;
        static create(initData:any): CrmService_NoPreviousSerialNoReason;
    }

    export class CrmService_ServiceCaseCategory extends $data.Entity {
        constructor();
        constructor(initData: { Color?: Edm.String; CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; DomainId?: Edm.Guid; Favorite?: Edm.Boolean; Id?: Edm.Guid; IsActive?: Edm.Boolean; Key?: Edm.String; Language?: Edm.String; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; SortOrder?: Edm.Int32; Value?: Edm.String });

        Color: Edm.String;
        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        DomainId: Edm.Guid;
        Favorite: Edm.Boolean;
        Id: Edm.Guid;
        IsActive: Edm.Boolean;
        Key: Edm.String;
        Language: Edm.String;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        SortOrder: Edm.Int32;
        Value: Edm.String;
        asKoObservable(): ObservableCrmService_ServiceCaseCategory;
        static create(): CrmService_ServiceCaseCategory;
        static create(initData:any): CrmService_ServiceCaseCategory;
    }

    export class CrmService_ServiceCaseStatus extends $data.Entity {
        constructor();
        constructor(initData: { Color?: Edm.String; CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; DomainId?: Edm.Guid; Favorite?: Edm.Boolean; Groups?: Edm.String; Id?: Edm.Guid; IsActive?: Edm.Boolean; Key?: Edm.Int32; Language?: Edm.String; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; SettableStatuses?: Edm.String; SortOrder?: Edm.Int32; Value?: Edm.String });

        Color: Edm.String;
        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        DomainId: Edm.Guid;
        Favorite: Edm.Boolean;
        Groups: Edm.String;
        Id: Edm.Guid;
        IsActive: Edm.Boolean;
        Key: Edm.Int32;
        Language: Edm.String;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        SettableStatuses: Edm.String;
        SortOrder: Edm.Int32;
        Value: Edm.String;
        asKoObservable(): ObservableCrmService_ServiceCaseStatus;
        static create(): CrmService_ServiceCaseStatus;
        static create(initData:any): CrmService_ServiceCaseStatus;
    }

    export class CrmService_ServiceContractAddressRelationshipType extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; DomainId?: Edm.Guid; Favorite?: Edm.Boolean; Id?: Edm.Guid; IsActive?: Edm.Boolean; Key?: Edm.String; Language?: Edm.String; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; SortOrder?: Edm.Int32; Value?: Edm.String });

        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        DomainId: Edm.Guid;
        Favorite: Edm.Boolean;
        Id: Edm.Guid;
        IsActive: Edm.Boolean;
        Key: Edm.String;
        Language: Edm.String;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        SortOrder: Edm.Int32;
        Value: Edm.String;
        asKoObservable(): ObservableCrmService_ServiceContractAddressRelationshipType;
        static create(): CrmService_ServiceContractAddressRelationshipType;
        static create(initData:any): CrmService_ServiceContractAddressRelationshipType;
    }

    export class CrmService_ServiceContractLimitType extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; DomainId?: Edm.Guid; Favorite?: Edm.Boolean; Id?: Edm.Guid; IsActive?: Edm.Boolean; Key?: Edm.String; Language?: Edm.String; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; SortOrder?: Edm.Int32; Value?: Edm.String });

        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        DomainId: Edm.Guid;
        Favorite: Edm.Boolean;
        Id: Edm.Guid;
        IsActive: Edm.Boolean;
        Key: Edm.String;
        Language: Edm.String;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        SortOrder: Edm.Int32;
        Value: Edm.String;
        asKoObservable(): ObservableCrmService_ServiceContractLimitType;
        static create(): CrmService_ServiceContractLimitType;
        static create(initData:any): CrmService_ServiceContractLimitType;
    }

    export class CrmService_ServiceContractStatus extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; DomainId?: Edm.Guid; Favorite?: Edm.Boolean; Id?: Edm.Guid; IsActive?: Edm.Boolean; Key?: Edm.String; Language?: Edm.String; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; SettableStatuses?: Edm.String; SortOrder?: Edm.Int32; Value?: Edm.String });

        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        DomainId: Edm.Guid;
        Favorite: Edm.Boolean;
        Id: Edm.Guid;
        IsActive: Edm.Boolean;
        Key: Edm.String;
        Language: Edm.String;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        SettableStatuses: Edm.String;
        SortOrder: Edm.Int32;
        Value: Edm.String;
        asKoObservable(): ObservableCrmService_ServiceContractStatus;
        static create(): CrmService_ServiceContractStatus;
        static create(initData:any): CrmService_ServiceContractStatus;
    }

    export class CrmService_ServiceContractType extends $data.Entity {
        constructor();
        constructor(initData: { Color?: Edm.String; CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; DomainId?: Edm.Guid; Favorite?: Edm.Boolean; GracePeriodInDays?: Edm.Int32; Id?: Edm.Guid; IsActive?: Edm.Boolean; Key?: Edm.String; Language?: Edm.String; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; SortOrder?: Edm.Int32; Value?: Edm.String });

        Color: Edm.String;
        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        DomainId: Edm.Guid;
        Favorite: Edm.Boolean;
        GracePeriodInDays: Edm.Int32;
        Id: Edm.Guid;
        IsActive: Edm.Boolean;
        Key: Edm.String;
        Language: Edm.String;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        SortOrder: Edm.Int32;
        Value: Edm.String;
        asKoObservable(): ObservableCrmService_ServiceContractType;
        static create(): CrmService_ServiceContractType;
        static create(initData:any): CrmService_ServiceContractType;
    }

    export class CrmService_ServiceObjectCategory extends $data.Entity {
        constructor();
        constructor(initData: { Color?: Edm.String; CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; DomainId?: Edm.Guid; Favorite?: Edm.Boolean; Id?: Edm.Guid; IsActive?: Edm.Boolean; Key?: Edm.String; Language?: Edm.String; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; SortOrder?: Edm.Int32; Value?: Edm.String });

        Color: Edm.String;
        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        DomainId: Edm.Guid;
        Favorite: Edm.Boolean;
        Id: Edm.Guid;
        IsActive: Edm.Boolean;
        Key: Edm.String;
        Language: Edm.String;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        SortOrder: Edm.Int32;
        Value: Edm.String;
        asKoObservable(): ObservableCrmService_ServiceObjectCategory;
        static create(): CrmService_ServiceObjectCategory;
        static create(initData:any): CrmService_ServiceObjectCategory;
    }

    export class CrmService_ServiceOrderDispatchCancellationReason extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; DomainId?: Edm.Guid; Favorite?: Edm.Boolean; Id?: Edm.Guid; IsActive?: Edm.Boolean; Key?: Edm.String; Language?: Edm.String; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; SortOrder?: Edm.Int32; Value?: Edm.String });

        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        DomainId: Edm.Guid;
        Favorite: Edm.Boolean;
        Id: Edm.Guid;
        IsActive: Edm.Boolean;
        Key: Edm.String;
        Language: Edm.String;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        SortOrder: Edm.Int32;
        Value: Edm.String;
        asKoObservable(): ObservableCrmService_ServiceOrderDispatchCancellationReason;
        static create(): CrmService_ServiceOrderDispatchCancellationReason;
        static create(initData:any): CrmService_ServiceOrderDispatchCancellationReason;
    }

    export class CrmService_ServiceOrderDispatchRejectReason extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; DomainId?: Edm.Guid; Favorite?: Edm.Boolean; Id?: Edm.Guid; IsActive?: Edm.Boolean; Key?: Edm.String; Language?: Edm.String; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; ServiceOrderStatusKey?: Edm.String; ShowInMobileClient?: Edm.Boolean; SortOrder?: Edm.Int32; Value?: Edm.String });

        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        DomainId: Edm.Guid;
        Favorite: Edm.Boolean;
        Id: Edm.Guid;
        IsActive: Edm.Boolean;
        Key: Edm.String;
        Language: Edm.String;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        ServiceOrderStatusKey: Edm.String;
        ShowInMobileClient: Edm.Boolean;
        SortOrder: Edm.Int32;
        Value: Edm.String;
        asKoObservable(): ObservableCrmService_ServiceOrderDispatchRejectReason;
        static create(): CrmService_ServiceOrderDispatchRejectReason;
        static create(initData:any): CrmService_ServiceOrderDispatchRejectReason;
    }

    export class CrmService_ServiceOrderDispatchStatus extends $data.Entity {
        constructor();
        constructor(initData: { Color?: Edm.String; CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; DomainId?: Edm.Guid; Favorite?: Edm.Boolean; Id?: Edm.Guid; IsActive?: Edm.Boolean; Key?: Edm.String; Language?: Edm.String; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; SortOrder?: Edm.Int32; Value?: Edm.String });

        Color: Edm.String;
        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        DomainId: Edm.Guid;
        Favorite: Edm.Boolean;
        Id: Edm.Guid;
        IsActive: Edm.Boolean;
        Key: Edm.String;
        Language: Edm.String;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        SortOrder: Edm.Int32;
        Value: Edm.String;
        asKoObservable(): ObservableCrmService_ServiceOrderDispatchStatus;
        static create(): CrmService_ServiceOrderDispatchStatus;
        static create(initData:any): CrmService_ServiceOrderDispatchStatus;
    }

    export class CrmService_ServiceOrderInvoiceReason extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; DomainId?: Edm.Guid; Favorite?: Edm.Boolean; Id?: Edm.Guid; IsActive?: Edm.Boolean; Key?: Edm.String; Language?: Edm.String; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; SortOrder?: Edm.Int32; Value?: Edm.String });

        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        DomainId: Edm.Guid;
        Favorite: Edm.Boolean;
        Id: Edm.Guid;
        IsActive: Edm.Boolean;
        Key: Edm.String;
        Language: Edm.String;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        SortOrder: Edm.Int32;
        Value: Edm.String;
        asKoObservable(): ObservableCrmService_ServiceOrderInvoiceReason;
        static create(): CrmService_ServiceOrderInvoiceReason;
        static create(initData:any): CrmService_ServiceOrderInvoiceReason;
    }

    export class CrmService_ServiceOrderNoInvoiceReason extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; DomainId?: Edm.Guid; Favorite?: Edm.Boolean; Id?: Edm.Guid; IsActive?: Edm.Boolean; Key?: Edm.String; Language?: Edm.String; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; SortOrder?: Edm.Int32; Value?: Edm.String });

        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        DomainId: Edm.Guid;
        Favorite: Edm.Boolean;
        Id: Edm.Guid;
        IsActive: Edm.Boolean;
        Key: Edm.String;
        Language: Edm.String;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        SortOrder: Edm.Int32;
        Value: Edm.String;
        asKoObservable(): ObservableCrmService_ServiceOrderNoInvoiceReason;
        static create(): CrmService_ServiceOrderNoInvoiceReason;
        static create(initData:any): CrmService_ServiceOrderNoInvoiceReason;
    }

    export class CrmService_ServiceOrderStatus extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; DomainId?: Edm.Guid; Favorite?: Edm.Boolean; Groups?: Edm.String; Id?: Edm.Guid; IsActive?: Edm.Boolean; Key?: Edm.String; Language?: Edm.String; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; SettableStatuses?: Edm.String; SortOrder?: Edm.Int32; Value?: Edm.String });

        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        DomainId: Edm.Guid;
        Favorite: Edm.Boolean;
        Groups: Edm.String;
        Id: Edm.Guid;
        IsActive: Edm.Boolean;
        Key: Edm.String;
        Language: Edm.String;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        SettableStatuses: Edm.String;
        SortOrder: Edm.Int32;
        Value: Edm.String;
        asKoObservable(): ObservableCrmService_ServiceOrderStatus;
        static create(): CrmService_ServiceOrderStatus;
        static create(initData:any): CrmService_ServiceOrderStatus;
    }

    export class CrmService_ServiceOrderTimeCategory extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; DomainId?: Edm.Guid; Favorite?: Edm.Boolean; Id?: Edm.Guid; IsActive?: Edm.Boolean; Key?: Edm.String; Language?: Edm.String; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; SortOrder?: Edm.Int32; Value?: Edm.String });

        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        DomainId: Edm.Guid;
        Favorite: Edm.Boolean;
        Id: Edm.Guid;
        IsActive: Edm.Boolean;
        Key: Edm.String;
        Language: Edm.String;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        SortOrder: Edm.Int32;
        Value: Edm.String;
        asKoObservable(): ObservableCrmService_ServiceOrderTimeCategory;
        static create(): CrmService_ServiceOrderTimeCategory;
        static create(initData:any): CrmService_ServiceOrderTimeCategory;
    }

    export class CrmService_ServiceOrderTimeLocation extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; DomainId?: Edm.Guid; Favorite?: Edm.Boolean; Id?: Edm.Guid; IsActive?: Edm.Boolean; Key?: Edm.String; Language?: Edm.String; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; SortOrder?: Edm.Int32; Value?: Edm.String });

        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        DomainId: Edm.Guid;
        Favorite: Edm.Boolean;
        Id: Edm.Guid;
        IsActive: Edm.Boolean;
        Key: Edm.String;
        Language: Edm.String;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        SortOrder: Edm.Int32;
        Value: Edm.String;
        asKoObservable(): ObservableCrmService_ServiceOrderTimeLocation;
        static create(): CrmService_ServiceOrderTimeLocation;
        static create(initData:any): CrmService_ServiceOrderTimeLocation;
    }

    export class CrmService_ServiceOrderTimePriority extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; DomainId?: Edm.Guid; Favorite?: Edm.Boolean; Id?: Edm.Guid; IsActive?: Edm.Boolean; Key?: Edm.String; Language?: Edm.String; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; SortOrder?: Edm.Int32; Value?: Edm.String });

        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        DomainId: Edm.Guid;
        Favorite: Edm.Boolean;
        Id: Edm.Guid;
        IsActive: Edm.Boolean;
        Key: Edm.String;
        Language: Edm.String;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        SortOrder: Edm.Int32;
        Value: Edm.String;
        asKoObservable(): ObservableCrmService_ServiceOrderTimePriority;
        static create(): CrmService_ServiceOrderTimePriority;
        static create(initData:any): CrmService_ServiceOrderTimePriority;
    }

    export class CrmService_ServiceOrderTimeStatus extends $data.Entity {
        constructor();
        constructor(initData: { Color?: Edm.String; CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; DomainId?: Edm.Guid; Favorite?: Edm.Boolean; Id?: Edm.Guid; IsActive?: Edm.Boolean; Key?: Edm.String; Language?: Edm.String; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; SortOrder?: Edm.Int32; Value?: Edm.String });

        Color: Edm.String;
        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        DomainId: Edm.Guid;
        Favorite: Edm.Boolean;
        Id: Edm.Guid;
        IsActive: Edm.Boolean;
        Key: Edm.String;
        Language: Edm.String;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        SortOrder: Edm.Int32;
        Value: Edm.String;
        asKoObservable(): ObservableCrmService_ServiceOrderTimeStatus;
        static create(): CrmService_ServiceOrderTimeStatus;
        static create(initData:any): CrmService_ServiceOrderTimeStatus;
    }

    export class CrmService_ServiceOrderType extends $data.Entity {
        constructor();
        constructor(initData: { Color?: Edm.String; CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; DefaultInvoicingTypeKey?: Edm.String; DomainId?: Edm.Guid; Favorite?: Edm.Boolean; Id?: Edm.Guid; IsActive?: Edm.Boolean; Key?: Edm.String; Language?: Edm.String; MaintenanceOrder?: Edm.Boolean; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; NumberingSequence?: Edm.String; ShowInMobileClient?: Edm.Boolean; SortOrder?: Edm.Int32; Value?: Edm.String });

        Color: Edm.String;
        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        DefaultInvoicingTypeKey: Edm.String;
        DomainId: Edm.Guid;
        Favorite: Edm.Boolean;
        Id: Edm.Guid;
        IsActive: Edm.Boolean;
        Key: Edm.String;
        Language: Edm.String;
        MaintenanceOrder: Edm.Boolean;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        NumberingSequence: Edm.String;
        ShowInMobileClient: Edm.Boolean;
        SortOrder: Edm.Int32;
        Value: Edm.String;
        asKoObservable(): ObservableCrmService_ServiceOrderType;
        static create(): CrmService_ServiceOrderType;
        static create(initData:any): CrmService_ServiceOrderType;
    }

    export class CrmService_ServicePriority extends $data.Entity {
        constructor();
        constructor(initData: { Color?: Edm.String; CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; DomainId?: Edm.Guid; Favorite?: Edm.Boolean; Id?: Edm.Guid; IsActive?: Edm.Boolean; IsFastLane?: Edm.Boolean; Key?: Edm.String; Language?: Edm.String; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; SortOrder?: Edm.Int32; Value?: Edm.String });

        Color: Edm.String;
        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        DomainId: Edm.Guid;
        Favorite: Edm.Boolean;
        Id: Edm.Guid;
        IsActive: Edm.Boolean;
        IsFastLane: Edm.Boolean;
        Key: Edm.String;
        Language: Edm.String;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        SortOrder: Edm.Int32;
        Value: Edm.String;
        asKoObservable(): ObservableCrmService_ServicePriority;
        static create(): CrmService_ServicePriority;
        static create(initData:any): CrmService_ServicePriority;
    }

    export class CrmService_SparePartsBudgetInvoiceType extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; DomainId?: Edm.Guid; Favorite?: Edm.Boolean; Id?: Edm.Guid; IsActive?: Edm.Boolean; Key?: Edm.String; Language?: Edm.String; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; SortOrder?: Edm.Int32; Value?: Edm.String });

        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        DomainId: Edm.Guid;
        Favorite: Edm.Boolean;
        Id: Edm.Guid;
        IsActive: Edm.Boolean;
        Key: Edm.String;
        Language: Edm.String;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        SortOrder: Edm.Int32;
        Value: Edm.String;
        asKoObservable(): ObservableCrmService_SparePartsBudgetInvoiceType;
        static create(): CrmService_SparePartsBudgetInvoiceType;
        static create(initData:any): CrmService_SparePartsBudgetInvoiceType;
    }

    export class CrmService_SparePartsBudgetTimeSpanUnit extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; DomainId?: Edm.Guid; Favorite?: Edm.Boolean; Id?: Edm.Guid; IsActive?: Edm.Boolean; Key?: Edm.String; Language?: Edm.String; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; SortOrder?: Edm.Int32; Value?: Edm.String });

        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        DomainId: Edm.Guid;
        Favorite: Edm.Boolean;
        Id: Edm.Guid;
        IsActive: Edm.Boolean;
        Key: Edm.String;
        Language: Edm.String;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        SortOrder: Edm.Int32;
        Value: Edm.String;
        asKoObservable(): ObservableCrmService_SparePartsBudgetTimeSpanUnit;
        static create(): CrmService_SparePartsBudgetTimeSpanUnit;
        static create(initData:any): CrmService_SparePartsBudgetTimeSpanUnit;
    }

    export class CrmService_StatisticsKeyProductType extends $data.Entity {
        constructor();
        constructor(initData: { Code?: Edm.String; CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; DomainId?: Edm.Guid; Favorite?: Edm.Boolean; Id?: Edm.Guid; IsActive?: Edm.Boolean; Key?: Edm.String; Language?: Edm.String; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; SortOrder?: Edm.Int32; Value?: Edm.String });

        Code: Edm.String;
        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        DomainId: Edm.Guid;
        Favorite: Edm.Boolean;
        Id: Edm.Guid;
        IsActive: Edm.Boolean;
        Key: Edm.String;
        Language: Edm.String;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        SortOrder: Edm.Int32;
        Value: Edm.String;
        asKoObservable(): ObservableCrmService_StatisticsKeyProductType;
        static create(): CrmService_StatisticsKeyProductType;
        static create(initData:any): CrmService_StatisticsKeyProductType;
    }

    export class CrmService_StatisticsKeyMainAssembly extends $data.Entity {
        constructor();
        constructor(initData: { Code?: Edm.String; CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; DomainId?: Edm.Guid; Favorite?: Edm.Boolean; Id?: Edm.Guid; IsActive?: Edm.Boolean; Key?: Edm.String; Language?: Edm.String; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; ProductTypeKey?: Edm.String; SortOrder?: Edm.Int32; Value?: Edm.String });

        Code: Edm.String;
        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        DomainId: Edm.Guid;
        Favorite: Edm.Boolean;
        Id: Edm.Guid;
        IsActive: Edm.Boolean;
        Key: Edm.String;
        Language: Edm.String;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        ProductTypeKey: Edm.String;
        SortOrder: Edm.Int32;
        Value: Edm.String;
        asKoObservable(): ObservableCrmService_StatisticsKeyMainAssembly;
        static create(): CrmService_StatisticsKeyMainAssembly;
        static create(initData:any): CrmService_StatisticsKeyMainAssembly;
    }

    export class CrmService_StatisticsKeySubAssembly extends $data.Entity {
        constructor();
        constructor(initData: { Code?: Edm.String; CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; DomainId?: Edm.Guid; Favorite?: Edm.Boolean; Id?: Edm.Guid; IsActive?: Edm.Boolean; Key?: Edm.String; Language?: Edm.String; MainAssemblyKey?: Edm.String; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; ProductTypeKey?: Edm.String; SortOrder?: Edm.Int32; Value?: Edm.String });

        Code: Edm.String;
        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        DomainId: Edm.Guid;
        Favorite: Edm.Boolean;
        Id: Edm.Guid;
        IsActive: Edm.Boolean;
        Key: Edm.String;
        Language: Edm.String;
        MainAssemblyKey: Edm.String;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        ProductTypeKey: Edm.String;
        SortOrder: Edm.Int32;
        Value: Edm.String;
        asKoObservable(): ObservableCrmService_StatisticsKeySubAssembly;
        static create(): CrmService_StatisticsKeySubAssembly;
        static create(initData:any): CrmService_StatisticsKeySubAssembly;
    }

    export class CrmService_StatisticsKeyAssemblyGroup extends $data.Entity {
        constructor();
        constructor(initData: { Code?: Edm.String; CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; DomainId?: Edm.Guid; Favorite?: Edm.Boolean; Id?: Edm.Guid; IsActive?: Edm.Boolean; Key?: Edm.String; Language?: Edm.String; MainAssemblyKey?: Edm.String; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; ProductTypeKey?: Edm.String; SortOrder?: Edm.Int32; SubAssemblyKey?: Edm.String; Value?: Edm.String });

        Code: Edm.String;
        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        DomainId: Edm.Guid;
        Favorite: Edm.Boolean;
        Id: Edm.Guid;
        IsActive: Edm.Boolean;
        Key: Edm.String;
        Language: Edm.String;
        MainAssemblyKey: Edm.String;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        ProductTypeKey: Edm.String;
        SortOrder: Edm.Int32;
        SubAssemblyKey: Edm.String;
        Value: Edm.String;
        asKoObservable(): ObservableCrmService_StatisticsKeyAssemblyGroup;
        static create(): CrmService_StatisticsKeyAssemblyGroup;
        static create(initData:any): CrmService_StatisticsKeyAssemblyGroup;
    }

    export class CrmService_StatisticsKeyFaultImage extends $data.Entity {
        constructor();
        constructor(initData: { AssemblyGroupKey?: Edm.String; Code?: Edm.String; CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; DomainId?: Edm.Guid; Favorite?: Edm.Boolean; Id?: Edm.Guid; InstallationTypeKey?: Edm.String; IsActive?: Edm.Boolean; Key?: Edm.String; Language?: Edm.String; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; ProductTypeKey?: Edm.String; SortOrder?: Edm.Int32; Value?: Edm.String });

        AssemblyGroupKey: Edm.String;
        Code: Edm.String;
        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        DomainId: Edm.Guid;
        Favorite: Edm.Boolean;
        Id: Edm.Guid;
        InstallationTypeKey: Edm.String;
        IsActive: Edm.Boolean;
        Key: Edm.String;
        Language: Edm.String;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        ProductTypeKey: Edm.String;
        SortOrder: Edm.Int32;
        Value: Edm.String;
        asKoObservable(): ObservableCrmService_StatisticsKeyFaultImage;
        static create(): CrmService_StatisticsKeyFaultImage;
        static create(initData:any): CrmService_StatisticsKeyFaultImage;
    }

    export class CrmService_StatisticsKeyRemedy extends $data.Entity {
        constructor();
        constructor(initData: { Code?: Edm.String; CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; DomainId?: Edm.Guid; Favorite?: Edm.Boolean; Id?: Edm.Guid; IsActive?: Edm.Boolean; Key?: Edm.String; Language?: Edm.String; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; ProductTypeKey?: Edm.String; SortOrder?: Edm.Int32; Value?: Edm.String });

        Code: Edm.String;
        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        DomainId: Edm.Guid;
        Favorite: Edm.Boolean;
        Id: Edm.Guid;
        IsActive: Edm.Boolean;
        Key: Edm.String;
        Language: Edm.String;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        ProductTypeKey: Edm.String;
        SortOrder: Edm.Int32;
        Value: Edm.String;
        asKoObservable(): ObservableCrmService_StatisticsKeyRemedy;
        static create(): CrmService_StatisticsKeyRemedy;
        static create(initData:any): CrmService_StatisticsKeyRemedy;
    }

    export class CrmService_StatisticsKeyCause extends $data.Entity {
        constructor();
        constructor(initData: { Code?: Edm.String; CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; DomainId?: Edm.Guid; ErrorTypes?: Edm.String; Favorite?: Edm.Boolean; Id?: Edm.Guid; IsActive?: Edm.Boolean; Key?: Edm.String; Language?: Edm.String; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; ProductTypeKey?: Edm.String; SortOrder?: Edm.Int32; Value?: Edm.String });

        Code: Edm.String;
        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        DomainId: Edm.Guid;
        ErrorTypes: Edm.String;
        Favorite: Edm.Boolean;
        Id: Edm.Guid;
        IsActive: Edm.Boolean;
        Key: Edm.String;
        Language: Edm.String;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        ProductTypeKey: Edm.String;
        SortOrder: Edm.Int32;
        Value: Edm.String;
        asKoObservable(): ObservableCrmService_StatisticsKeyCause;
        static create(): CrmService_StatisticsKeyCause;
        static create(initData:any): CrmService_StatisticsKeyCause;
    }

    export class CrmService_StatisticsKeyWeighting extends $data.Entity {
        constructor();
        constructor(initData: { Code?: Edm.String; CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; DomainId?: Edm.Guid; Favorite?: Edm.Boolean; Id?: Edm.Guid; IsActive?: Edm.Boolean; Key?: Edm.String; Language?: Edm.String; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; ProductTypeKey?: Edm.String; SortOrder?: Edm.Int32; Value?: Edm.String });

        Code: Edm.String;
        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        DomainId: Edm.Guid;
        Favorite: Edm.Boolean;
        Id: Edm.Guid;
        IsActive: Edm.Boolean;
        Key: Edm.String;
        Language: Edm.String;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        ProductTypeKey: Edm.String;
        SortOrder: Edm.Int32;
        Value: Edm.String;
        asKoObservable(): ObservableCrmService_StatisticsKeyWeighting;
        static create(): CrmService_StatisticsKeyWeighting;
        static create(initData:any): CrmService_StatisticsKeyWeighting;
    }

    export class CrmService_StatisticsKeyCauser extends $data.Entity {
        constructor();
        constructor(initData: { Code?: Edm.String; CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; DomainId?: Edm.Guid; Favorite?: Edm.Boolean; Id?: Edm.Guid; IsActive?: Edm.Boolean; Key?: Edm.String; Language?: Edm.String; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; ProductTypeKey?: Edm.String; SortOrder?: Edm.Int32; Value?: Edm.String });

        Code: Edm.String;
        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        DomainId: Edm.Guid;
        Favorite: Edm.Boolean;
        Id: Edm.Guid;
        IsActive: Edm.Boolean;
        Key: Edm.String;
        Language: Edm.String;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        ProductTypeKey: Edm.String;
        SortOrder: Edm.Int32;
        Value: Edm.String;
        asKoObservable(): ObservableCrmService_StatisticsKeyCauser;
        static create(): CrmService_StatisticsKeyCauser;
        static create(initData:any): CrmService_StatisticsKeyCauser;
    }

}

namespace Crm.Project.Rest.Model.Lookups {

    export class ObservableCrmProject_PotentialContactRelationshipType extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; DomainId?: KnockoutObservable<Edm.Guid>; Favorite?: KnockoutObservable<Edm.Boolean>; Id?: KnockoutObservable<Edm.Guid>; IsActive?: KnockoutObservable<Edm.Boolean>; Key?: KnockoutObservable<Edm.String>; Language?: KnockoutObservable<Edm.String>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; SortOrder?: KnockoutObservable<Edm.Int32>; Value?: KnockoutObservable<Edm.String> });

        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        DomainId: KnockoutObservable<Edm.Guid>;
        Favorite: KnockoutObservable<Edm.Boolean>;
        Id: KnockoutObservable<Edm.Guid>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        Key: KnockoutObservable<Edm.String>;
        Language: KnockoutObservable<Edm.String>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        SortOrder: KnockoutObservable<Edm.Int32>;
        Value: KnockoutObservable<Edm.String>;
        innerInstance: CrmProject_PotentialContactRelationshipType;
    }

    export class ObservableCrmProject_PotentialPriority extends $data.Entity {
        constructor();
        constructor(initData: { Color?: KnockoutObservable<Edm.String>; CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; DomainId?: KnockoutObservable<Edm.Guid>; Favorite?: KnockoutObservable<Edm.Boolean>; Id?: KnockoutObservable<Edm.Guid>; IsActive?: KnockoutObservable<Edm.Boolean>; Key?: KnockoutObservable<Edm.String>; Language?: KnockoutObservable<Edm.String>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; SortOrder?: KnockoutObservable<Edm.Int32>; Value?: KnockoutObservable<Edm.String> });

        Color: KnockoutObservable<Edm.String>;
        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        DomainId: KnockoutObservable<Edm.Guid>;
        Favorite: KnockoutObservable<Edm.Boolean>;
        Id: KnockoutObservable<Edm.Guid>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        Key: KnockoutObservable<Edm.String>;
        Language: KnockoutObservable<Edm.String>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        SortOrder: KnockoutObservable<Edm.Int32>;
        Value: KnockoutObservable<Edm.String>;
        innerInstance: CrmProject_PotentialPriority;
    }

    export class ObservableCrmProject_PotentialStatus extends $data.Entity {
        constructor();
        constructor(initData: { Color?: KnockoutObservable<Edm.String>; CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; DomainId?: KnockoutObservable<Edm.Guid>; Favorite?: KnockoutObservable<Edm.Boolean>; Id?: KnockoutObservable<Edm.Guid>; IsActive?: KnockoutObservable<Edm.Boolean>; Key?: KnockoutObservable<Edm.String>; Language?: KnockoutObservable<Edm.String>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; SortOrder?: KnockoutObservable<Edm.Int32>; Value?: KnockoutObservable<Edm.String> });

        Color: KnockoutObservable<Edm.String>;
        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        DomainId: KnockoutObservable<Edm.Guid>;
        Favorite: KnockoutObservable<Edm.Boolean>;
        Id: KnockoutObservable<Edm.Guid>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        Key: KnockoutObservable<Edm.String>;
        Language: KnockoutObservable<Edm.String>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        SortOrder: KnockoutObservable<Edm.Int32>;
        Value: KnockoutObservable<Edm.String>;
        innerInstance: CrmProject_PotentialStatus;
    }

    export class ObservableCrmProject_ProjectCategory extends $data.Entity {
        constructor();
        constructor(initData: { Color?: KnockoutObservable<Edm.String>; CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; DomainId?: KnockoutObservable<Edm.Guid>; Favorite?: KnockoutObservable<Edm.Boolean>; Id?: KnockoutObservable<Edm.Guid>; IsActive?: KnockoutObservable<Edm.Boolean>; Key?: KnockoutObservable<Edm.String>; Language?: KnockoutObservable<Edm.String>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; SortOrder?: KnockoutObservable<Edm.Int32>; Value?: KnockoutObservable<Edm.String> });

        Color: KnockoutObservable<Edm.String>;
        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        DomainId: KnockoutObservable<Edm.Guid>;
        Favorite: KnockoutObservable<Edm.Boolean>;
        Id: KnockoutObservable<Edm.Guid>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        Key: KnockoutObservable<Edm.String>;
        Language: KnockoutObservable<Edm.String>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        SortOrder: KnockoutObservable<Edm.Int32>;
        Value: KnockoutObservable<Edm.String>;
        innerInstance: CrmProject_ProjectCategory;
    }

    export class ObservableCrmProject_ProjectContactRelationshipType extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; DomainId?: KnockoutObservable<Edm.Guid>; Favorite?: KnockoutObservable<Edm.Boolean>; Id?: KnockoutObservable<Edm.Guid>; IsActive?: KnockoutObservable<Edm.Boolean>; Key?: KnockoutObservable<Edm.String>; Language?: KnockoutObservable<Edm.String>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; SortOrder?: KnockoutObservable<Edm.Int32>; Value?: KnockoutObservable<Edm.String> });

        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        DomainId: KnockoutObservable<Edm.Guid>;
        Favorite: KnockoutObservable<Edm.Boolean>;
        Id: KnockoutObservable<Edm.Guid>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        Key: KnockoutObservable<Edm.String>;
        Language: KnockoutObservable<Edm.String>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        SortOrder: KnockoutObservable<Edm.Int32>;
        Value: KnockoutObservable<Edm.String>;
        innerInstance: CrmProject_ProjectContactRelationshipType;
    }

    export class ObservableCrmProject_ProjectLostReasonCategory extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; DomainId?: KnockoutObservable<Edm.Guid>; Favorite?: KnockoutObservable<Edm.Boolean>; Id?: KnockoutObservable<Edm.Guid>; IsActive?: KnockoutObservable<Edm.Boolean>; Key?: KnockoutObservable<Edm.String>; Language?: KnockoutObservable<Edm.String>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; SortOrder?: KnockoutObservable<Edm.Int32>; Value?: KnockoutObservable<Edm.String> });

        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        DomainId: KnockoutObservable<Edm.Guid>;
        Favorite: KnockoutObservable<Edm.Boolean>;
        Id: KnockoutObservable<Edm.Guid>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        Key: KnockoutObservable<Edm.String>;
        Language: KnockoutObservable<Edm.String>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        SortOrder: KnockoutObservable<Edm.Int32>;
        Value: KnockoutObservable<Edm.String>;
        innerInstance: CrmProject_ProjectLostReasonCategory;
    }

    export class ObservableCrmProject_ProjectStatus extends $data.Entity {
        constructor();
        constructor(initData: { Color?: KnockoutObservable<Edm.String>; CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; DomainId?: KnockoutObservable<Edm.Guid>; Favorite?: KnockoutObservable<Edm.Boolean>; Groups?: KnockoutObservable<Edm.String>; Id?: KnockoutObservable<Edm.Guid>; IsActive?: KnockoutObservable<Edm.Boolean>; Key?: KnockoutObservable<Edm.String>; Language?: KnockoutObservable<Edm.String>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; SortOrder?: KnockoutObservable<Edm.Int32>; Value?: KnockoutObservable<Edm.String> });

        Color: KnockoutObservable<Edm.String>;
        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        DomainId: KnockoutObservable<Edm.Guid>;
        Favorite: KnockoutObservable<Edm.Boolean>;
        Groups: KnockoutObservable<Edm.String>;
        Id: KnockoutObservable<Edm.Guid>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        Key: KnockoutObservable<Edm.String>;
        Language: KnockoutObservable<Edm.String>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        SortOrder: KnockoutObservable<Edm.Int32>;
        Value: KnockoutObservable<Edm.String>;
        innerInstance: CrmProject_ProjectStatus;
    }

    export class CrmProject_PotentialContactRelationshipType extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; DomainId?: Edm.Guid; Favorite?: Edm.Boolean; Id?: Edm.Guid; IsActive?: Edm.Boolean; Key?: Edm.String; Language?: Edm.String; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; SortOrder?: Edm.Int32; Value?: Edm.String });

        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        DomainId: Edm.Guid;
        Favorite: Edm.Boolean;
        Id: Edm.Guid;
        IsActive: Edm.Boolean;
        Key: Edm.String;
        Language: Edm.String;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        SortOrder: Edm.Int32;
        Value: Edm.String;
        asKoObservable(): ObservableCrmProject_PotentialContactRelationshipType;
        static create(): CrmProject_PotentialContactRelationshipType;
        static create(initData:any): CrmProject_PotentialContactRelationshipType;
    }

    export class CrmProject_PotentialPriority extends $data.Entity {
        constructor();
        constructor(initData: { Color?: Edm.String; CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; DomainId?: Edm.Guid; Favorite?: Edm.Boolean; Id?: Edm.Guid; IsActive?: Edm.Boolean; Key?: Edm.String; Language?: Edm.String; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; SortOrder?: Edm.Int32; Value?: Edm.String });

        Color: Edm.String;
        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        DomainId: Edm.Guid;
        Favorite: Edm.Boolean;
        Id: Edm.Guid;
        IsActive: Edm.Boolean;
        Key: Edm.String;
        Language: Edm.String;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        SortOrder: Edm.Int32;
        Value: Edm.String;
        asKoObservable(): ObservableCrmProject_PotentialPriority;
        static create(): CrmProject_PotentialPriority;
        static create(initData:any): CrmProject_PotentialPriority;
    }

    export class CrmProject_PotentialStatus extends $data.Entity {
        constructor();
        constructor(initData: { Color?: Edm.String; CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; DomainId?: Edm.Guid; Favorite?: Edm.Boolean; Id?: Edm.Guid; IsActive?: Edm.Boolean; Key?: Edm.String; Language?: Edm.String; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; SortOrder?: Edm.Int32; Value?: Edm.String });

        Color: Edm.String;
        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        DomainId: Edm.Guid;
        Favorite: Edm.Boolean;
        Id: Edm.Guid;
        IsActive: Edm.Boolean;
        Key: Edm.String;
        Language: Edm.String;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        SortOrder: Edm.Int32;
        Value: Edm.String;
        asKoObservable(): ObservableCrmProject_PotentialStatus;
        static create(): CrmProject_PotentialStatus;
        static create(initData:any): CrmProject_PotentialStatus;
    }

    export class CrmProject_ProjectCategory extends $data.Entity {
        constructor();
        constructor(initData: { Color?: Edm.String; CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; DomainId?: Edm.Guid; Favorite?: Edm.Boolean; Id?: Edm.Guid; IsActive?: Edm.Boolean; Key?: Edm.String; Language?: Edm.String; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; SortOrder?: Edm.Int32; Value?: Edm.String });

        Color: Edm.String;
        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        DomainId: Edm.Guid;
        Favorite: Edm.Boolean;
        Id: Edm.Guid;
        IsActive: Edm.Boolean;
        Key: Edm.String;
        Language: Edm.String;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        SortOrder: Edm.Int32;
        Value: Edm.String;
        asKoObservable(): ObservableCrmProject_ProjectCategory;
        static create(): CrmProject_ProjectCategory;
        static create(initData:any): CrmProject_ProjectCategory;
    }

    export class CrmProject_ProjectContactRelationshipType extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; DomainId?: Edm.Guid; Favorite?: Edm.Boolean; Id?: Edm.Guid; IsActive?: Edm.Boolean; Key?: Edm.String; Language?: Edm.String; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; SortOrder?: Edm.Int32; Value?: Edm.String });

        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        DomainId: Edm.Guid;
        Favorite: Edm.Boolean;
        Id: Edm.Guid;
        IsActive: Edm.Boolean;
        Key: Edm.String;
        Language: Edm.String;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        SortOrder: Edm.Int32;
        Value: Edm.String;
        asKoObservable(): ObservableCrmProject_ProjectContactRelationshipType;
        static create(): CrmProject_ProjectContactRelationshipType;
        static create(initData:any): CrmProject_ProjectContactRelationshipType;
    }

    export class CrmProject_ProjectLostReasonCategory extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; DomainId?: Edm.Guid; Favorite?: Edm.Boolean; Id?: Edm.Guid; IsActive?: Edm.Boolean; Key?: Edm.String; Language?: Edm.String; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; SortOrder?: Edm.Int32; Value?: Edm.String });

        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        DomainId: Edm.Guid;
        Favorite: Edm.Boolean;
        Id: Edm.Guid;
        IsActive: Edm.Boolean;
        Key: Edm.String;
        Language: Edm.String;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        SortOrder: Edm.Int32;
        Value: Edm.String;
        asKoObservable(): ObservableCrmProject_ProjectLostReasonCategory;
        static create(): CrmProject_ProjectLostReasonCategory;
        static create(initData:any): CrmProject_ProjectLostReasonCategory;
    }

    export class CrmProject_ProjectStatus extends $data.Entity {
        constructor();
        constructor(initData: { Color?: Edm.String; CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; DomainId?: Edm.Guid; Favorite?: Edm.Boolean; Groups?: Edm.String; Id?: Edm.Guid; IsActive?: Edm.Boolean; Key?: Edm.String; Language?: Edm.String; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; SortOrder?: Edm.Int32; Value?: Edm.String });

        Color: Edm.String;
        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        DomainId: Edm.Guid;
        Favorite: Edm.Boolean;
        Groups: Edm.String;
        Id: Edm.Guid;
        IsActive: Edm.Boolean;
        Key: Edm.String;
        Language: Edm.String;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        SortOrder: Edm.Int32;
        Value: Edm.String;
        asKoObservable(): ObservableCrmProject_ProjectStatus;
        static create(): CrmProject_ProjectStatus;
        static create(initData:any): CrmProject_ProjectStatus;
    }

}

namespace Crm.PerDiem.Rest.Model.Lookups {

    export class ObservableCrmPerDiem_DistanceUnit extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; DomainId?: KnockoutObservable<Edm.Guid>; Favorite?: KnockoutObservable<Edm.Boolean>; Id?: KnockoutObservable<Edm.Guid>; IsActive?: KnockoutObservable<Edm.Boolean>; Key?: KnockoutObservable<Edm.String>; Language?: KnockoutObservable<Edm.String>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; SortOrder?: KnockoutObservable<Edm.Int32>; Value?: KnockoutObservable<Edm.String> });

        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        DomainId: KnockoutObservable<Edm.Guid>;
        Favorite: KnockoutObservable<Edm.Boolean>;
        Id: KnockoutObservable<Edm.Guid>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        Key: KnockoutObservable<Edm.String>;
        Language: KnockoutObservable<Edm.String>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        SortOrder: KnockoutObservable<Edm.Int32>;
        Value: KnockoutObservable<Edm.String>;
        innerInstance: CrmPerDiem_DistanceUnit;
    }

    export class ObservableCrmPerDiem_DriverType extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; DomainId?: KnockoutObservable<Edm.Guid>; Favorite?: KnockoutObservable<Edm.Boolean>; Id?: KnockoutObservable<Edm.Guid>; IsActive?: KnockoutObservable<Edm.Boolean>; Key?: KnockoutObservable<Edm.String>; Language?: KnockoutObservable<Edm.String>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; SortOrder?: KnockoutObservable<Edm.Int32>; Value?: KnockoutObservable<Edm.String> });

        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        DomainId: KnockoutObservable<Edm.Guid>;
        Favorite: KnockoutObservable<Edm.Boolean>;
        Id: KnockoutObservable<Edm.Guid>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        Key: KnockoutObservable<Edm.String>;
        Language: KnockoutObservable<Edm.String>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        SortOrder: KnockoutObservable<Edm.Int32>;
        Value: KnockoutObservable<Edm.String>;
        innerInstance: CrmPerDiem_DriverType;
    }

    export class ObservableCrmPerDiem_ExpenseType extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; DomainId?: KnockoutObservable<Edm.Guid>; Favorite?: KnockoutObservable<Edm.Boolean>; Id?: KnockoutObservable<Edm.Guid>; IsActive?: KnockoutObservable<Edm.Boolean>; Key?: KnockoutObservable<Edm.String>; Language?: KnockoutObservable<Edm.String>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; SortOrder?: KnockoutObservable<Edm.Int32>; ValidCostCenters?: KnockoutObservableArray<Edm.String>; Value?: KnockoutObservable<Edm.String> });

        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        DomainId: KnockoutObservable<Edm.Guid>;
        Favorite: KnockoutObservable<Edm.Boolean>;
        Id: KnockoutObservable<Edm.Guid>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        Key: KnockoutObservable<Edm.String>;
        Language: KnockoutObservable<Edm.String>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        SortOrder: KnockoutObservable<Edm.Int32>;
        ValidCostCenters: KnockoutObservableArray<Edm.String>;
        Value: KnockoutObservable<Edm.String>;
        innerInstance: CrmPerDiem_ExpenseType;
    }

    export class ObservableCrmPerDiem_PerDiemReportStatus extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; DomainId?: KnockoutObservable<Edm.Guid>; Favorite?: KnockoutObservable<Edm.Boolean>; Id?: KnockoutObservable<Edm.Guid>; IsActive?: KnockoutObservable<Edm.Boolean>; Key?: KnockoutObservable<Edm.String>; Language?: KnockoutObservable<Edm.String>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; SettableStatuses?: KnockoutObservable<Edm.String>; ShowInMobileClient?: KnockoutObservable<Edm.Boolean>; SortOrder?: KnockoutObservable<Edm.Int32>; Value?: KnockoutObservable<Edm.String> });

        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        DomainId: KnockoutObservable<Edm.Guid>;
        Favorite: KnockoutObservable<Edm.Boolean>;
        Id: KnockoutObservable<Edm.Guid>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        Key: KnockoutObservable<Edm.String>;
        Language: KnockoutObservable<Edm.String>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        SettableStatuses: KnockoutObservable<Edm.String>;
        ShowInMobileClient: KnockoutObservable<Edm.Boolean>;
        SortOrder: KnockoutObservable<Edm.Int32>;
        Value: KnockoutObservable<Edm.String>;
        innerInstance: CrmPerDiem_PerDiemReportStatus;
    }

    export class ObservableCrmPerDiem_PerDiemReportType extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; DomainId?: KnockoutObservable<Edm.Guid>; Favorite?: KnockoutObservable<Edm.Boolean>; Id?: KnockoutObservable<Edm.Guid>; IsActive?: KnockoutObservable<Edm.Boolean>; Key?: KnockoutObservable<Edm.String>; Language?: KnockoutObservable<Edm.String>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; SortOrder?: KnockoutObservable<Edm.Int32>; Value?: KnockoutObservable<Edm.String> });

        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        DomainId: KnockoutObservable<Edm.Guid>;
        Favorite: KnockoutObservable<Edm.Boolean>;
        Id: KnockoutObservable<Edm.Guid>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        Key: KnockoutObservable<Edm.String>;
        Language: KnockoutObservable<Edm.String>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        SortOrder: KnockoutObservable<Edm.Int32>;
        Value: KnockoutObservable<Edm.String>;
        innerInstance: CrmPerDiem_PerDiemReportType;
    }

    export class ObservableCrmPerDiem_TimeEntryType extends $data.Entity {
        constructor();
        constructor(initData: { AllowedDaysIntoFuture?: KnockoutObservable<Edm.Int32>; AllowedDaysIntoPast?: KnockoutObservable<Edm.Int32>; Color?: KnockoutObservable<Edm.String>; CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; DecreasesCapacity?: KnockoutObservable<Edm.Boolean>; DefaultDurationInMinutes?: KnockoutObservable<Edm.Int32>; DomainId?: KnockoutObservable<Edm.Guid>; Favorite?: KnockoutObservable<Edm.Boolean>; Id?: KnockoutObservable<Edm.Guid>; IsActive?: KnockoutObservable<Edm.Boolean>; Key?: KnockoutObservable<Edm.String>; Language?: KnockoutObservable<Edm.String>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; ShowInMobileClient?: KnockoutObservable<Edm.Boolean>; ShowInScheduler?: KnockoutObservable<Edm.Boolean>; ShowTravelType?: KnockoutObservable<Edm.Boolean>; SortOrder?: KnockoutObservable<Edm.Int32>; ValidCostCenters?: KnockoutObservableArray<Edm.String>; Value?: KnockoutObservable<Edm.String> });

        AllowedDaysIntoFuture: KnockoutObservable<Edm.Int32>;
        AllowedDaysIntoPast: KnockoutObservable<Edm.Int32>;
        Color: KnockoutObservable<Edm.String>;
        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        DecreasesCapacity: KnockoutObservable<Edm.Boolean>;
        DefaultDurationInMinutes: KnockoutObservable<Edm.Int32>;
        DomainId: KnockoutObservable<Edm.Guid>;
        Favorite: KnockoutObservable<Edm.Boolean>;
        Id: KnockoutObservable<Edm.Guid>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        Key: KnockoutObservable<Edm.String>;
        Language: KnockoutObservable<Edm.String>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        ShowInMobileClient: KnockoutObservable<Edm.Boolean>;
        ShowInScheduler: KnockoutObservable<Edm.Boolean>;
        ShowTravelType: KnockoutObservable<Edm.Boolean>;
        SortOrder: KnockoutObservable<Edm.Int32>;
        ValidCostCenters: KnockoutObservableArray<Edm.String>;
        Value: KnockoutObservable<Edm.String>;
        innerInstance: CrmPerDiem_TimeEntryType;
    }

    export class ObservableCrmPerDiem_TravelType extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; DomainId?: KnockoutObservable<Edm.Guid>; Favorite?: KnockoutObservable<Edm.Boolean>; Id?: KnockoutObservable<Edm.Guid>; IsActive?: KnockoutObservable<Edm.Boolean>; Key?: KnockoutObservable<Edm.String>; Language?: KnockoutObservable<Edm.String>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; ShowDriverType?: KnockoutObservable<Edm.Boolean>; ShowLicensePlate?: KnockoutObservable<Edm.Boolean>; SortOrder?: KnockoutObservable<Edm.Int32>; Value?: KnockoutObservable<Edm.String> });

        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        DomainId: KnockoutObservable<Edm.Guid>;
        Favorite: KnockoutObservable<Edm.Boolean>;
        Id: KnockoutObservable<Edm.Guid>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        Key: KnockoutObservable<Edm.String>;
        Language: KnockoutObservable<Edm.String>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        ShowDriverType: KnockoutObservable<Edm.Boolean>;
        ShowLicensePlate: KnockoutObservable<Edm.Boolean>;
        SortOrder: KnockoutObservable<Edm.Int32>;
        Value: KnockoutObservable<Edm.String>;
        innerInstance: CrmPerDiem_TravelType;
    }

    export class CrmPerDiem_DistanceUnit extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; DomainId?: Edm.Guid; Favorite?: Edm.Boolean; Id?: Edm.Guid; IsActive?: Edm.Boolean; Key?: Edm.String; Language?: Edm.String; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; SortOrder?: Edm.Int32; Value?: Edm.String });

        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        DomainId: Edm.Guid;
        Favorite: Edm.Boolean;
        Id: Edm.Guid;
        IsActive: Edm.Boolean;
        Key: Edm.String;
        Language: Edm.String;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        SortOrder: Edm.Int32;
        Value: Edm.String;
        asKoObservable(): ObservableCrmPerDiem_DistanceUnit;
        static create(): CrmPerDiem_DistanceUnit;
        static create(initData:any): CrmPerDiem_DistanceUnit;
    }

    export class CrmPerDiem_DriverType extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; DomainId?: Edm.Guid; Favorite?: Edm.Boolean; Id?: Edm.Guid; IsActive?: Edm.Boolean; Key?: Edm.String; Language?: Edm.String; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; SortOrder?: Edm.Int32; Value?: Edm.String });

        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        DomainId: Edm.Guid;
        Favorite: Edm.Boolean;
        Id: Edm.Guid;
        IsActive: Edm.Boolean;
        Key: Edm.String;
        Language: Edm.String;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        SortOrder: Edm.Int32;
        Value: Edm.String;
        asKoObservable(): ObservableCrmPerDiem_DriverType;
        static create(): CrmPerDiem_DriverType;
        static create(initData:any): CrmPerDiem_DriverType;
    }

    export class CrmPerDiem_ExpenseType extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; DomainId?: Edm.Guid; Favorite?: Edm.Boolean; Id?: Edm.Guid; IsActive?: Edm.Boolean; Key?: Edm.String; Language?: Edm.String; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; SortOrder?: Edm.Int32; ValidCostCenters?: Edm.String[]; Value?: Edm.String });

        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        DomainId: Edm.Guid;
        Favorite: Edm.Boolean;
        Id: Edm.Guid;
        IsActive: Edm.Boolean;
        Key: Edm.String;
        Language: Edm.String;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        SortOrder: Edm.Int32;
        ValidCostCenters: Edm.String[];
        Value: Edm.String;
        asKoObservable(): ObservableCrmPerDiem_ExpenseType;
        static create(): CrmPerDiem_ExpenseType;
        static create(initData:any): CrmPerDiem_ExpenseType;
    }

    export class CrmPerDiem_PerDiemReportStatus extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; DomainId?: Edm.Guid; Favorite?: Edm.Boolean; Id?: Edm.Guid; IsActive?: Edm.Boolean; Key?: Edm.String; Language?: Edm.String; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; SettableStatuses?: Edm.String; ShowInMobileClient?: Edm.Boolean; SortOrder?: Edm.Int32; Value?: Edm.String });

        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        DomainId: Edm.Guid;
        Favorite: Edm.Boolean;
        Id: Edm.Guid;
        IsActive: Edm.Boolean;
        Key: Edm.String;
        Language: Edm.String;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        SettableStatuses: Edm.String;
        ShowInMobileClient: Edm.Boolean;
        SortOrder: Edm.Int32;
        Value: Edm.String;
        asKoObservable(): ObservableCrmPerDiem_PerDiemReportStatus;
        static create(): CrmPerDiem_PerDiemReportStatus;
        static create(initData:any): CrmPerDiem_PerDiemReportStatus;
    }

    export class CrmPerDiem_PerDiemReportType extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; DomainId?: Edm.Guid; Favorite?: Edm.Boolean; Id?: Edm.Guid; IsActive?: Edm.Boolean; Key?: Edm.String; Language?: Edm.String; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; SortOrder?: Edm.Int32; Value?: Edm.String });

        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        DomainId: Edm.Guid;
        Favorite: Edm.Boolean;
        Id: Edm.Guid;
        IsActive: Edm.Boolean;
        Key: Edm.String;
        Language: Edm.String;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        SortOrder: Edm.Int32;
        Value: Edm.String;
        asKoObservable(): ObservableCrmPerDiem_PerDiemReportType;
        static create(): CrmPerDiem_PerDiemReportType;
        static create(initData:any): CrmPerDiem_PerDiemReportType;
    }

    export class CrmPerDiem_TimeEntryType extends $data.Entity {
        constructor();
        constructor(initData: { AllowedDaysIntoFuture?: Edm.Int32; AllowedDaysIntoPast?: Edm.Int32; Color?: Edm.String; CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; DecreasesCapacity?: Edm.Boolean; DefaultDurationInMinutes?: Edm.Int32; DomainId?: Edm.Guid; Favorite?: Edm.Boolean; Id?: Edm.Guid; IsActive?: Edm.Boolean; Key?: Edm.String; Language?: Edm.String; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; ShowInMobileClient?: Edm.Boolean; ShowInScheduler?: Edm.Boolean; ShowTravelType?: Edm.Boolean; SortOrder?: Edm.Int32; ValidCostCenters?: Edm.String[]; Value?: Edm.String });

        AllowedDaysIntoFuture: Edm.Int32;
        AllowedDaysIntoPast: Edm.Int32;
        Color: Edm.String;
        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        DecreasesCapacity: Edm.Boolean;
        DefaultDurationInMinutes: Edm.Int32;
        DomainId: Edm.Guid;
        Favorite: Edm.Boolean;
        Id: Edm.Guid;
        IsActive: Edm.Boolean;
        Key: Edm.String;
        Language: Edm.String;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        ShowInMobileClient: Edm.Boolean;
        ShowInScheduler: Edm.Boolean;
        ShowTravelType: Edm.Boolean;
        SortOrder: Edm.Int32;
        ValidCostCenters: Edm.String[];
        Value: Edm.String;
        asKoObservable(): ObservableCrmPerDiem_TimeEntryType;
        static create(): CrmPerDiem_TimeEntryType;
        static create(initData:any): CrmPerDiem_TimeEntryType;
    }

    export class CrmPerDiem_TravelType extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; DomainId?: Edm.Guid; Favorite?: Edm.Boolean; Id?: Edm.Guid; IsActive?: Edm.Boolean; Key?: Edm.String; Language?: Edm.String; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; ShowDriverType?: Edm.Boolean; ShowLicensePlate?: Edm.Boolean; SortOrder?: Edm.Int32; Value?: Edm.String });

        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        DomainId: Edm.Guid;
        Favorite: Edm.Boolean;
        Id: Edm.Guid;
        IsActive: Edm.Boolean;
        Key: Edm.String;
        Language: Edm.String;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        ShowDriverType: Edm.Boolean;
        ShowLicensePlate: Edm.Boolean;
        SortOrder: Edm.Int32;
        Value: Edm.String;
        asKoObservable(): ObservableCrmPerDiem_TravelType;
        static create(): CrmPerDiem_TravelType;
        static create(initData:any): CrmPerDiem_TravelType;
    }

}

namespace Crm.Order.Rest.Model.Lookups {

    export class ObservableCrmOrder_CalculationPositionType extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; DomainId?: KnockoutObservable<Edm.Guid>; Favorite?: KnockoutObservable<Edm.Boolean>; HasPurchasePrice?: KnockoutObservable<Edm.Boolean>; Id?: KnockoutObservable<Edm.Guid>; IsAbsolute?: KnockoutObservable<Edm.Boolean>; IsActive?: KnockoutObservable<Edm.Boolean>; IsDefault?: KnockoutObservable<Edm.Boolean>; IsDiscount?: KnockoutObservable<Edm.Boolean>; Key?: KnockoutObservable<Edm.String>; Language?: KnockoutObservable<Edm.String>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; SortOrder?: KnockoutObservable<Edm.Int32>; Value?: KnockoutObservable<Edm.String> });

        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        DomainId: KnockoutObservable<Edm.Guid>;
        Favorite: KnockoutObservable<Edm.Boolean>;
        HasPurchasePrice: KnockoutObservable<Edm.Boolean>;
        Id: KnockoutObservable<Edm.Guid>;
        IsAbsolute: KnockoutObservable<Edm.Boolean>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        IsDefault: KnockoutObservable<Edm.Boolean>;
        IsDiscount: KnockoutObservable<Edm.Boolean>;
        Key: KnockoutObservable<Edm.String>;
        Language: KnockoutObservable<Edm.String>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        SortOrder: KnockoutObservable<Edm.Int32>;
        Value: KnockoutObservable<Edm.String>;
        innerInstance: CrmOrder_CalculationPositionType;
    }

    export class ObservableCrmOrder_OrderCancelReasonCategory extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; DomainId?: KnockoutObservable<Edm.Guid>; Favorite?: KnockoutObservable<Edm.Boolean>; Id?: KnockoutObservable<Edm.Guid>; IsActive?: KnockoutObservable<Edm.Boolean>; Key?: KnockoutObservable<Edm.String>; Language?: KnockoutObservable<Edm.String>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; SortOrder?: KnockoutObservable<Edm.Int32>; Value?: KnockoutObservable<Edm.String> });

        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        DomainId: KnockoutObservable<Edm.Guid>;
        Favorite: KnockoutObservable<Edm.Boolean>;
        Id: KnockoutObservable<Edm.Guid>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        Key: KnockoutObservable<Edm.String>;
        Language: KnockoutObservable<Edm.String>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        SortOrder: KnockoutObservable<Edm.Int32>;
        Value: KnockoutObservable<Edm.String>;
        innerInstance: CrmOrder_OrderCancelReasonCategory;
    }

    export class ObservableCrmOrder_OrderCategory extends $data.Entity {
        constructor();
        constructor(initData: { AllowNegativeQuantities?: KnockoutObservable<Edm.Boolean>; AllowPositiveQuantities?: KnockoutObservable<Edm.Boolean>; AllowedArticleGroupValues?: KnockoutObservableArray<Edm.String>; AllowedArticleTypeValues?: KnockoutObservableArray<Edm.String>; Color?: KnockoutObservable<Edm.String>; CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; CustomerFlags?: KnockoutObservableArray<Edm.String>; DomainId?: KnockoutObservable<Edm.Guid>; Favorite?: KnockoutObservable<Edm.Boolean>; Id?: KnockoutObservable<Edm.Guid>; IsActive?: KnockoutObservable<Edm.Boolean>; Key?: KnockoutObservable<Edm.String>; Language?: KnockoutObservable<Edm.String>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; SortOrder?: KnockoutObservable<Edm.Int32>; Value?: KnockoutObservable<Edm.String> });

        AllowNegativeQuantities: KnockoutObservable<Edm.Boolean>;
        AllowPositiveQuantities: KnockoutObservable<Edm.Boolean>;
        AllowedArticleGroupValues: KnockoutObservableArray<Edm.String>;
        AllowedArticleTypeValues: KnockoutObservableArray<Edm.String>;
        Color: KnockoutObservable<Edm.String>;
        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        CustomerFlags: KnockoutObservableArray<Edm.String>;
        DomainId: KnockoutObservable<Edm.Guid>;
        Favorite: KnockoutObservable<Edm.Boolean>;
        Id: KnockoutObservable<Edm.Guid>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        Key: KnockoutObservable<Edm.String>;
        Language: KnockoutObservable<Edm.String>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        SortOrder: KnockoutObservable<Edm.Int32>;
        Value: KnockoutObservable<Edm.String>;
        innerInstance: CrmOrder_OrderCategory;
    }

    export class ObservableCrmOrder_OrderEntryType extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; DomainId?: KnockoutObservable<Edm.Guid>; Favorite?: KnockoutObservable<Edm.Boolean>; Id?: KnockoutObservable<Edm.Guid>; IsActive?: KnockoutObservable<Edm.Boolean>; Key?: KnockoutObservable<Edm.String>; Language?: KnockoutObservable<Edm.String>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; SortOrder?: KnockoutObservable<Edm.Int32>; Value?: KnockoutObservable<Edm.String> });

        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        DomainId: KnockoutObservable<Edm.Guid>;
        Favorite: KnockoutObservable<Edm.Boolean>;
        Id: KnockoutObservable<Edm.Guid>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        Key: KnockoutObservable<Edm.String>;
        Language: KnockoutObservable<Edm.String>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        SortOrder: KnockoutObservable<Edm.Int32>;
        Value: KnockoutObservable<Edm.String>;
        innerInstance: CrmOrder_OrderEntryType;
    }

    export class ObservableCrmOrder_OrderStatus extends $data.Entity {
        constructor();
        constructor(initData: { Color?: KnockoutObservable<Edm.String>; CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; DomainId?: KnockoutObservable<Edm.Guid>; Favorite?: KnockoutObservable<Edm.Boolean>; Id?: KnockoutObservable<Edm.Guid>; IsActive?: KnockoutObservable<Edm.Boolean>; Key?: KnockoutObservable<Edm.String>; Language?: KnockoutObservable<Edm.String>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; SortOrder?: KnockoutObservable<Edm.Int32>; Value?: KnockoutObservable<Edm.String> });

        Color: KnockoutObservable<Edm.String>;
        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        DomainId: KnockoutObservable<Edm.Guid>;
        Favorite: KnockoutObservable<Edm.Boolean>;
        Id: KnockoutObservable<Edm.Guid>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        Key: KnockoutObservable<Edm.String>;
        Language: KnockoutObservable<Edm.String>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        SortOrder: KnockoutObservable<Edm.Int32>;
        Value: KnockoutObservable<Edm.String>;
        innerInstance: CrmOrder_OrderStatus;
    }

    export class CrmOrder_CalculationPositionType extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; DomainId?: Edm.Guid; Favorite?: Edm.Boolean; HasPurchasePrice?: Edm.Boolean; Id?: Edm.Guid; IsAbsolute?: Edm.Boolean; IsActive?: Edm.Boolean; IsDefault?: Edm.Boolean; IsDiscount?: Edm.Boolean; Key?: Edm.String; Language?: Edm.String; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; SortOrder?: Edm.Int32; Value?: Edm.String });

        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        DomainId: Edm.Guid;
        Favorite: Edm.Boolean;
        HasPurchasePrice: Edm.Boolean;
        Id: Edm.Guid;
        IsAbsolute: Edm.Boolean;
        IsActive: Edm.Boolean;
        IsDefault: Edm.Boolean;
        IsDiscount: Edm.Boolean;
        Key: Edm.String;
        Language: Edm.String;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        SortOrder: Edm.Int32;
        Value: Edm.String;
        asKoObservable(): ObservableCrmOrder_CalculationPositionType;
        static create(): CrmOrder_CalculationPositionType;
        static create(initData:any): CrmOrder_CalculationPositionType;
    }

    export class CrmOrder_OrderCancelReasonCategory extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; DomainId?: Edm.Guid; Favorite?: Edm.Boolean; Id?: Edm.Guid; IsActive?: Edm.Boolean; Key?: Edm.String; Language?: Edm.String; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; SortOrder?: Edm.Int32; Value?: Edm.String });

        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        DomainId: Edm.Guid;
        Favorite: Edm.Boolean;
        Id: Edm.Guid;
        IsActive: Edm.Boolean;
        Key: Edm.String;
        Language: Edm.String;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        SortOrder: Edm.Int32;
        Value: Edm.String;
        asKoObservable(): ObservableCrmOrder_OrderCancelReasonCategory;
        static create(): CrmOrder_OrderCancelReasonCategory;
        static create(initData:any): CrmOrder_OrderCancelReasonCategory;
    }

    export class CrmOrder_OrderCategory extends $data.Entity {
        constructor();
        constructor(initData: { AllowNegativeQuantities?: Edm.Boolean; AllowPositiveQuantities?: Edm.Boolean; AllowedArticleGroupValues?: Edm.String[]; AllowedArticleTypeValues?: Edm.String[]; Color?: Edm.String; CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; CustomerFlags?: Edm.String[]; DomainId?: Edm.Guid; Favorite?: Edm.Boolean; Id?: Edm.Guid; IsActive?: Edm.Boolean; Key?: Edm.String; Language?: Edm.String; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; SortOrder?: Edm.Int32; Value?: Edm.String });

        AllowNegativeQuantities: Edm.Boolean;
        AllowPositiveQuantities: Edm.Boolean;
        AllowedArticleGroupValues: Edm.String[];
        AllowedArticleTypeValues: Edm.String[];
        Color: Edm.String;
        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        CustomerFlags: Edm.String[];
        DomainId: Edm.Guid;
        Favorite: Edm.Boolean;
        Id: Edm.Guid;
        IsActive: Edm.Boolean;
        Key: Edm.String;
        Language: Edm.String;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        SortOrder: Edm.Int32;
        Value: Edm.String;
        asKoObservable(): ObservableCrmOrder_OrderCategory;
        static create(): CrmOrder_OrderCategory;
        static create(initData:any): CrmOrder_OrderCategory;
    }

    export class CrmOrder_OrderEntryType extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; DomainId?: Edm.Guid; Favorite?: Edm.Boolean; Id?: Edm.Guid; IsActive?: Edm.Boolean; Key?: Edm.String; Language?: Edm.String; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; SortOrder?: Edm.Int32; Value?: Edm.String });

        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        DomainId: Edm.Guid;
        Favorite: Edm.Boolean;
        Id: Edm.Guid;
        IsActive: Edm.Boolean;
        Key: Edm.String;
        Language: Edm.String;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        SortOrder: Edm.Int32;
        Value: Edm.String;
        asKoObservable(): ObservableCrmOrder_OrderEntryType;
        static create(): CrmOrder_OrderEntryType;
        static create(initData:any): CrmOrder_OrderEntryType;
    }

    export class CrmOrder_OrderStatus extends $data.Entity {
        constructor();
        constructor(initData: { Color?: Edm.String; CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; DomainId?: Edm.Guid; Favorite?: Edm.Boolean; Id?: Edm.Guid; IsActive?: Edm.Boolean; Key?: Edm.String; Language?: Edm.String; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; SortOrder?: Edm.Int32; Value?: Edm.String });

        Color: Edm.String;
        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        DomainId: Edm.Guid;
        Favorite: Edm.Boolean;
        Id: Edm.Guid;
        IsActive: Edm.Boolean;
        Key: Edm.String;
        Language: Edm.String;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        SortOrder: Edm.Int32;
        Value: Edm.String;
        asKoObservable(): ObservableCrmOrder_OrderStatus;
        static create(): CrmOrder_OrderStatus;
        static create(initData:any): CrmOrder_OrderStatus;
    }

}

namespace Crm.MarketInsight.Rest.Model.Lookups {

    export class ObservableCrmMarketInsight_MarketInsightReference extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; DomainId?: KnockoutObservable<Edm.Guid>; Favorite?: KnockoutObservable<Edm.Boolean>; Id?: KnockoutObservable<Edm.Guid>; IsActive?: KnockoutObservable<Edm.Boolean>; Key?: KnockoutObservable<Edm.String>; Language?: KnockoutObservable<Edm.String>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; SortOrder?: KnockoutObservable<Edm.Int32>; Value?: KnockoutObservable<Edm.String> });

        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        DomainId: KnockoutObservable<Edm.Guid>;
        Favorite: KnockoutObservable<Edm.Boolean>;
        Id: KnockoutObservable<Edm.Guid>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        Key: KnockoutObservable<Edm.String>;
        Language: KnockoutObservable<Edm.String>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        SortOrder: KnockoutObservable<Edm.Int32>;
        Value: KnockoutObservable<Edm.String>;
        innerInstance: CrmMarketInsight_MarketInsightReference;
    }

    export class ObservableCrmMarketInsight_MarketInsightStatus extends $data.Entity {
        constructor();
        constructor(initData: { Color?: KnockoutObservable<Edm.String>; CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; DomainId?: KnockoutObservable<Edm.Guid>; Favorite?: KnockoutObservable<Edm.Boolean>; Id?: KnockoutObservable<Edm.Guid>; IsActive?: KnockoutObservable<Edm.Boolean>; Key?: KnockoutObservable<Edm.String>; Language?: KnockoutObservable<Edm.String>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; SelectableByUser?: KnockoutObservable<Edm.Boolean>; SortOrder?: KnockoutObservable<Edm.Int32>; Value?: KnockoutObservable<Edm.String> });

        Color: KnockoutObservable<Edm.String>;
        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        DomainId: KnockoutObservable<Edm.Guid>;
        Favorite: KnockoutObservable<Edm.Boolean>;
        Id: KnockoutObservable<Edm.Guid>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        Key: KnockoutObservable<Edm.String>;
        Language: KnockoutObservable<Edm.String>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        SelectableByUser: KnockoutObservable<Edm.Boolean>;
        SortOrder: KnockoutObservable<Edm.Int32>;
        Value: KnockoutObservable<Edm.String>;
        innerInstance: CrmMarketInsight_MarketInsightStatus;
    }

    export class ObservableCrmMarketInsight_MarketInsightContactRelationshipType extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; DomainId?: KnockoutObservable<Edm.Guid>; Favorite?: KnockoutObservable<Edm.Boolean>; Id?: KnockoutObservable<Edm.Guid>; IsActive?: KnockoutObservable<Edm.Boolean>; Key?: KnockoutObservable<Edm.String>; Language?: KnockoutObservable<Edm.String>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; SortOrder?: KnockoutObservable<Edm.Int32>; Value?: KnockoutObservable<Edm.String> });

        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        DomainId: KnockoutObservable<Edm.Guid>;
        Favorite: KnockoutObservable<Edm.Boolean>;
        Id: KnockoutObservable<Edm.Guid>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        Key: KnockoutObservable<Edm.String>;
        Language: KnockoutObservable<Edm.String>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        SortOrder: KnockoutObservable<Edm.Int32>;
        Value: KnockoutObservable<Edm.String>;
        innerInstance: CrmMarketInsight_MarketInsightContactRelationshipType;
    }

    export class CrmMarketInsight_MarketInsightReference extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; DomainId?: Edm.Guid; Favorite?: Edm.Boolean; Id?: Edm.Guid; IsActive?: Edm.Boolean; Key?: Edm.String; Language?: Edm.String; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; SortOrder?: Edm.Int32; Value?: Edm.String });

        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        DomainId: Edm.Guid;
        Favorite: Edm.Boolean;
        Id: Edm.Guid;
        IsActive: Edm.Boolean;
        Key: Edm.String;
        Language: Edm.String;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        SortOrder: Edm.Int32;
        Value: Edm.String;
        asKoObservable(): ObservableCrmMarketInsight_MarketInsightReference;
        static create(): CrmMarketInsight_MarketInsightReference;
        static create(initData:any): CrmMarketInsight_MarketInsightReference;
    }

    export class CrmMarketInsight_MarketInsightStatus extends $data.Entity {
        constructor();
        constructor(initData: { Color?: Edm.String; CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; DomainId?: Edm.Guid; Favorite?: Edm.Boolean; Id?: Edm.Guid; IsActive?: Edm.Boolean; Key?: Edm.String; Language?: Edm.String; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; SelectableByUser?: Edm.Boolean; SortOrder?: Edm.Int32; Value?: Edm.String });

        Color: Edm.String;
        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        DomainId: Edm.Guid;
        Favorite: Edm.Boolean;
        Id: Edm.Guid;
        IsActive: Edm.Boolean;
        Key: Edm.String;
        Language: Edm.String;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        SelectableByUser: Edm.Boolean;
        SortOrder: Edm.Int32;
        Value: Edm.String;
        asKoObservable(): ObservableCrmMarketInsight_MarketInsightStatus;
        static create(): CrmMarketInsight_MarketInsightStatus;
        static create(initData:any): CrmMarketInsight_MarketInsightStatus;
    }

    export class CrmMarketInsight_MarketInsightContactRelationshipType extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; DomainId?: Edm.Guid; Favorite?: Edm.Boolean; Id?: Edm.Guid; IsActive?: Edm.Boolean; Key?: Edm.String; Language?: Edm.String; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; SortOrder?: Edm.Int32; Value?: Edm.String });

        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        DomainId: Edm.Guid;
        Favorite: Edm.Boolean;
        Id: Edm.Guid;
        IsActive: Edm.Boolean;
        Key: Edm.String;
        Language: Edm.String;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        SortOrder: Edm.Int32;
        Value: Edm.String;
        asKoObservable(): ObservableCrmMarketInsight_MarketInsightContactRelationshipType;
        static create(): CrmMarketInsight_MarketInsightContactRelationshipType;
        static create(initData:any): CrmMarketInsight_MarketInsightContactRelationshipType;
    }

}

namespace Crm.ErpExtension.Rest.Model.Lookups {

    export class ObservableCrmErpExtension_ErpDocumentStatus extends $data.Entity {
        constructor();
        constructor(initData: { Color?: KnockoutObservable<Edm.String>; CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; DomainId?: KnockoutObservable<Edm.Guid>; Favorite?: KnockoutObservable<Edm.Boolean>; Id?: KnockoutObservable<Edm.Guid>; IsActive?: KnockoutObservable<Edm.Boolean>; Key?: KnockoutObservable<Edm.String>; Language?: KnockoutObservable<Edm.String>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; SortOrder?: KnockoutObservable<Edm.Int32>; Value?: KnockoutObservable<Edm.String> });

        Color: KnockoutObservable<Edm.String>;
        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        DomainId: KnockoutObservable<Edm.Guid>;
        Favorite: KnockoutObservable<Edm.Boolean>;
        Id: KnockoutObservable<Edm.Guid>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        Key: KnockoutObservable<Edm.String>;
        Language: KnockoutObservable<Edm.String>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        SortOrder: KnockoutObservable<Edm.Int32>;
        Value: KnockoutObservable<Edm.String>;
        innerInstance: CrmErpExtension_ErpDocumentStatus;
    }

    export class ObservableCrmErpExtension_ErpPaymentMethod extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; DomainId?: KnockoutObservable<Edm.Guid>; Favorite?: KnockoutObservable<Edm.Boolean>; Id?: KnockoutObservable<Edm.Guid>; IsActive?: KnockoutObservable<Edm.Boolean>; Key?: KnockoutObservable<Edm.String>; Language?: KnockoutObservable<Edm.String>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; SortOrder?: KnockoutObservable<Edm.Int32>; Value?: KnockoutObservable<Edm.String> });

        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        DomainId: KnockoutObservable<Edm.Guid>;
        Favorite: KnockoutObservable<Edm.Boolean>;
        Id: KnockoutObservable<Edm.Guid>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        Key: KnockoutObservable<Edm.String>;
        Language: KnockoutObservable<Edm.String>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        SortOrder: KnockoutObservable<Edm.Int32>;
        Value: KnockoutObservable<Edm.String>;
        innerInstance: CrmErpExtension_ErpPaymentMethod;
    }

    export class ObservableCrmErpExtension_ErpDeliveryMethod extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; DomainId?: KnockoutObservable<Edm.Guid>; Favorite?: KnockoutObservable<Edm.Boolean>; Id?: KnockoutObservable<Edm.Guid>; IsActive?: KnockoutObservable<Edm.Boolean>; Key?: KnockoutObservable<Edm.String>; Language?: KnockoutObservable<Edm.String>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; SortOrder?: KnockoutObservable<Edm.Int32>; Value?: KnockoutObservable<Edm.String> });

        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        DomainId: KnockoutObservable<Edm.Guid>;
        Favorite: KnockoutObservable<Edm.Boolean>;
        Id: KnockoutObservable<Edm.Guid>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        Key: KnockoutObservable<Edm.String>;
        Language: KnockoutObservable<Edm.String>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        SortOrder: KnockoutObservable<Edm.Int32>;
        Value: KnockoutObservable<Edm.String>;
        innerInstance: CrmErpExtension_ErpDeliveryMethod;
    }

    export class ObservableCrmErpExtension_ErpDeliveryProhibitedReason extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; DomainId?: KnockoutObservable<Edm.Guid>; Favorite?: KnockoutObservable<Edm.Boolean>; Id?: KnockoutObservable<Edm.Guid>; IsActive?: KnockoutObservable<Edm.Boolean>; Key?: KnockoutObservable<Edm.String>; Language?: KnockoutObservable<Edm.String>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; SortOrder?: KnockoutObservable<Edm.Int32>; Value?: KnockoutObservable<Edm.String> });

        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        DomainId: KnockoutObservable<Edm.Guid>;
        Favorite: KnockoutObservable<Edm.Boolean>;
        Id: KnockoutObservable<Edm.Guid>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        Key: KnockoutObservable<Edm.String>;
        Language: KnockoutObservable<Edm.String>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        SortOrder: KnockoutObservable<Edm.Int32>;
        Value: KnockoutObservable<Edm.String>;
        innerInstance: CrmErpExtension_ErpDeliveryProhibitedReason;
    }

    export class ObservableCrmErpExtension_ErpPartialDeliveryProhibitedReason extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; DomainId?: KnockoutObservable<Edm.Guid>; Favorite?: KnockoutObservable<Edm.Boolean>; Id?: KnockoutObservable<Edm.Guid>; IsActive?: KnockoutObservable<Edm.Boolean>; Key?: KnockoutObservable<Edm.String>; Language?: KnockoutObservable<Edm.String>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; SortOrder?: KnockoutObservable<Edm.Int32>; Value?: KnockoutObservable<Edm.String> });

        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        DomainId: KnockoutObservable<Edm.Guid>;
        Favorite: KnockoutObservable<Edm.Boolean>;
        Id: KnockoutObservable<Edm.Guid>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        Key: KnockoutObservable<Edm.String>;
        Language: KnockoutObservable<Edm.String>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        SortOrder: KnockoutObservable<Edm.Int32>;
        Value: KnockoutObservable<Edm.String>;
        innerInstance: CrmErpExtension_ErpPartialDeliveryProhibitedReason;
    }

    export class ObservableCrmErpExtension_ErpTermsOfDelivery extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; DomainId?: KnockoutObservable<Edm.Guid>; Favorite?: KnockoutObservable<Edm.Boolean>; Id?: KnockoutObservable<Edm.Guid>; IsActive?: KnockoutObservable<Edm.Boolean>; Key?: KnockoutObservable<Edm.String>; Language?: KnockoutObservable<Edm.String>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; SortOrder?: KnockoutObservable<Edm.Int32>; Value?: KnockoutObservable<Edm.String> });

        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        DomainId: KnockoutObservable<Edm.Guid>;
        Favorite: KnockoutObservable<Edm.Boolean>;
        Id: KnockoutObservable<Edm.Guid>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        Key: KnockoutObservable<Edm.String>;
        Language: KnockoutObservable<Edm.String>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        SortOrder: KnockoutObservable<Edm.Int32>;
        Value: KnockoutObservable<Edm.String>;
        innerInstance: CrmErpExtension_ErpTermsOfDelivery;
    }

    export class ObservableCrmErpExtension_ErpPaymentTerms extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; DomainId?: KnockoutObservable<Edm.Guid>; Favorite?: KnockoutObservable<Edm.Boolean>; Id?: KnockoutObservable<Edm.Guid>; IsActive?: KnockoutObservable<Edm.Boolean>; Key?: KnockoutObservable<Edm.String>; Language?: KnockoutObservable<Edm.String>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; SortOrder?: KnockoutObservable<Edm.Int32>; Value?: KnockoutObservable<Edm.String> });

        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        DomainId: KnockoutObservable<Edm.Guid>;
        Favorite: KnockoutObservable<Edm.Boolean>;
        Id: KnockoutObservable<Edm.Guid>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        Key: KnockoutObservable<Edm.String>;
        Language: KnockoutObservable<Edm.String>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        SortOrder: KnockoutObservable<Edm.Int32>;
        Value: KnockoutObservable<Edm.String>;
        innerInstance: CrmErpExtension_ErpPaymentTerms;
    }

    export class CrmErpExtension_ErpDocumentStatus extends $data.Entity {
        constructor();
        constructor(initData: { Color?: Edm.String; CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; DomainId?: Edm.Guid; Favorite?: Edm.Boolean; Id?: Edm.Guid; IsActive?: Edm.Boolean; Key?: Edm.String; Language?: Edm.String; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; SortOrder?: Edm.Int32; Value?: Edm.String });

        Color: Edm.String;
        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        DomainId: Edm.Guid;
        Favorite: Edm.Boolean;
        Id: Edm.Guid;
        IsActive: Edm.Boolean;
        Key: Edm.String;
        Language: Edm.String;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        SortOrder: Edm.Int32;
        Value: Edm.String;
        asKoObservable(): ObservableCrmErpExtension_ErpDocumentStatus;
        static create(): CrmErpExtension_ErpDocumentStatus;
        static create(initData:any): CrmErpExtension_ErpDocumentStatus;
    }

    export class CrmErpExtension_ErpPaymentMethod extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; DomainId?: Edm.Guid; Favorite?: Edm.Boolean; Id?: Edm.Guid; IsActive?: Edm.Boolean; Key?: Edm.String; Language?: Edm.String; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; SortOrder?: Edm.Int32; Value?: Edm.String });

        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        DomainId: Edm.Guid;
        Favorite: Edm.Boolean;
        Id: Edm.Guid;
        IsActive: Edm.Boolean;
        Key: Edm.String;
        Language: Edm.String;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        SortOrder: Edm.Int32;
        Value: Edm.String;
        asKoObservable(): ObservableCrmErpExtension_ErpPaymentMethod;
        static create(): CrmErpExtension_ErpPaymentMethod;
        static create(initData:any): CrmErpExtension_ErpPaymentMethod;
    }

    export class CrmErpExtension_ErpDeliveryMethod extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; DomainId?: Edm.Guid; Favorite?: Edm.Boolean; Id?: Edm.Guid; IsActive?: Edm.Boolean; Key?: Edm.String; Language?: Edm.String; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; SortOrder?: Edm.Int32; Value?: Edm.String });

        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        DomainId: Edm.Guid;
        Favorite: Edm.Boolean;
        Id: Edm.Guid;
        IsActive: Edm.Boolean;
        Key: Edm.String;
        Language: Edm.String;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        SortOrder: Edm.Int32;
        Value: Edm.String;
        asKoObservable(): ObservableCrmErpExtension_ErpDeliveryMethod;
        static create(): CrmErpExtension_ErpDeliveryMethod;
        static create(initData:any): CrmErpExtension_ErpDeliveryMethod;
    }

    export class CrmErpExtension_ErpDeliveryProhibitedReason extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; DomainId?: Edm.Guid; Favorite?: Edm.Boolean; Id?: Edm.Guid; IsActive?: Edm.Boolean; Key?: Edm.String; Language?: Edm.String; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; SortOrder?: Edm.Int32; Value?: Edm.String });

        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        DomainId: Edm.Guid;
        Favorite: Edm.Boolean;
        Id: Edm.Guid;
        IsActive: Edm.Boolean;
        Key: Edm.String;
        Language: Edm.String;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        SortOrder: Edm.Int32;
        Value: Edm.String;
        asKoObservable(): ObservableCrmErpExtension_ErpDeliveryProhibitedReason;
        static create(): CrmErpExtension_ErpDeliveryProhibitedReason;
        static create(initData:any): CrmErpExtension_ErpDeliveryProhibitedReason;
    }

    export class CrmErpExtension_ErpPartialDeliveryProhibitedReason extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; DomainId?: Edm.Guid; Favorite?: Edm.Boolean; Id?: Edm.Guid; IsActive?: Edm.Boolean; Key?: Edm.String; Language?: Edm.String; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; SortOrder?: Edm.Int32; Value?: Edm.String });

        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        DomainId: Edm.Guid;
        Favorite: Edm.Boolean;
        Id: Edm.Guid;
        IsActive: Edm.Boolean;
        Key: Edm.String;
        Language: Edm.String;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        SortOrder: Edm.Int32;
        Value: Edm.String;
        asKoObservable(): ObservableCrmErpExtension_ErpPartialDeliveryProhibitedReason;
        static create(): CrmErpExtension_ErpPartialDeliveryProhibitedReason;
        static create(initData:any): CrmErpExtension_ErpPartialDeliveryProhibitedReason;
    }

    export class CrmErpExtension_ErpTermsOfDelivery extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; DomainId?: Edm.Guid; Favorite?: Edm.Boolean; Id?: Edm.Guid; IsActive?: Edm.Boolean; Key?: Edm.String; Language?: Edm.String; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; SortOrder?: Edm.Int32; Value?: Edm.String });

        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        DomainId: Edm.Guid;
        Favorite: Edm.Boolean;
        Id: Edm.Guid;
        IsActive: Edm.Boolean;
        Key: Edm.String;
        Language: Edm.String;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        SortOrder: Edm.Int32;
        Value: Edm.String;
        asKoObservable(): ObservableCrmErpExtension_ErpTermsOfDelivery;
        static create(): CrmErpExtension_ErpTermsOfDelivery;
        static create(initData:any): CrmErpExtension_ErpTermsOfDelivery;
    }

    export class CrmErpExtension_ErpPaymentTerms extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; DomainId?: Edm.Guid; Favorite?: Edm.Boolean; Id?: Edm.Guid; IsActive?: Edm.Boolean; Key?: Edm.String; Language?: Edm.String; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; SortOrder?: Edm.Int32; Value?: Edm.String });

        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        DomainId: Edm.Guid;
        Favorite: Edm.Boolean;
        Id: Edm.Guid;
        IsActive: Edm.Boolean;
        Key: Edm.String;
        Language: Edm.String;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        SortOrder: Edm.Int32;
        Value: Edm.String;
        asKoObservable(): ObservableCrmErpExtension_ErpPaymentTerms;
        static create(): CrmErpExtension_ErpPaymentTerms;
        static create(initData:any): CrmErpExtension_ErpPaymentTerms;
    }

}

namespace Crm.DynamicForms.Model.Lookups {

    export class ObservableCrmDynamicForms_NoSignatureReason extends $data.Entity {
        constructor();
        constructor(initData: { AuthDataId?: KnockoutObservable<Edm.Guid>; CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; Favorite?: KnockoutObservable<Edm.Boolean>; Id?: KnockoutObservable<Edm.Guid>; IsActive?: KnockoutObservable<Edm.Boolean>; Key?: KnockoutObservable<Edm.String>; Language?: KnockoutObservable<Edm.String>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; SortOrder?: KnockoutObservable<Edm.Int32>; Value?: KnockoutObservable<Edm.String> });

        AuthDataId: KnockoutObservable<Edm.Guid>;
        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        Favorite: KnockoutObservable<Edm.Boolean>;
        Id: KnockoutObservable<Edm.Guid>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        Key: KnockoutObservable<Edm.String>;
        Language: KnockoutObservable<Edm.String>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        SortOrder: KnockoutObservable<Edm.Int32>;
        Value: KnockoutObservable<Edm.String>;
        innerInstance: CrmDynamicForms_NoSignatureReason;
    }

    export class CrmDynamicForms_NoSignatureReason extends $data.Entity {
        constructor();
        constructor(initData: { AuthDataId?: Edm.Guid; CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; Favorite?: Edm.Boolean; Id?: Edm.Guid; IsActive?: Edm.Boolean; Key?: Edm.String; Language?: Edm.String; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; SortOrder?: Edm.Int32; Value?: Edm.String });

        AuthDataId: Edm.Guid;
        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        Favorite: Edm.Boolean;
        Id: Edm.Guid;
        IsActive: Edm.Boolean;
        Key: Edm.String;
        Language: Edm.String;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        SortOrder: Edm.Int32;
        Value: Edm.String;
        asKoObservable(): ObservableCrmDynamicForms_NoSignatureReason;
        static create(): CrmDynamicForms_NoSignatureReason;
        static create(initData:any): CrmDynamicForms_NoSignatureReason;
    }

}

namespace Crm.Rest.Model.Lookups {

    export class ObservableCrm_AddressType extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; DomainId?: KnockoutObservable<Edm.Guid>; Favorite?: KnockoutObservable<Edm.Boolean>; Id?: KnockoutObservable<Edm.Guid>; IsActive?: KnockoutObservable<Edm.Boolean>; Key?: KnockoutObservable<Edm.String>; Language?: KnockoutObservable<Edm.String>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; SortOrder?: KnockoutObservable<Edm.Int32>; Value?: KnockoutObservable<Edm.String> });

        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        DomainId: KnockoutObservable<Edm.Guid>;
        Favorite: KnockoutObservable<Edm.Boolean>;
        Id: KnockoutObservable<Edm.Guid>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        Key: KnockoutObservable<Edm.String>;
        Language: KnockoutObservable<Edm.String>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        SortOrder: KnockoutObservable<Edm.Int32>;
        Value: KnockoutObservable<Edm.String>;
        innerInstance: Crm_AddressType;
    }

    export class ObservableCrm_Branch1 extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; DomainId?: KnockoutObservable<Edm.Guid>; Favorite?: KnockoutObservable<Edm.Boolean>; Id?: KnockoutObservable<Edm.Guid>; IsActive?: KnockoutObservable<Edm.Boolean>; Key?: KnockoutObservable<Edm.String>; Language?: KnockoutObservable<Edm.String>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; SortOrder?: KnockoutObservable<Edm.Int32>; Value?: KnockoutObservable<Edm.String> });

        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        DomainId: KnockoutObservable<Edm.Guid>;
        Favorite: KnockoutObservable<Edm.Boolean>;
        Id: KnockoutObservable<Edm.Guid>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        Key: KnockoutObservable<Edm.String>;
        Language: KnockoutObservable<Edm.String>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        SortOrder: KnockoutObservable<Edm.Int32>;
        Value: KnockoutObservable<Edm.String>;
        innerInstance: Crm_Branch1;
    }

    export class ObservableCrm_Branch2 extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; DomainId?: KnockoutObservable<Edm.Guid>; Favorite?: KnockoutObservable<Edm.Boolean>; Id?: KnockoutObservable<Edm.Guid>; IsActive?: KnockoutObservable<Edm.Boolean>; Key?: KnockoutObservable<Edm.String>; Language?: KnockoutObservable<Edm.String>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; ParentName?: KnockoutObservable<Edm.String>; SortOrder?: KnockoutObservable<Edm.Int32>; Value?: KnockoutObservable<Edm.String> });

        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        DomainId: KnockoutObservable<Edm.Guid>;
        Favorite: KnockoutObservable<Edm.Boolean>;
        Id: KnockoutObservable<Edm.Guid>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        Key: KnockoutObservable<Edm.String>;
        Language: KnockoutObservable<Edm.String>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        ParentName: KnockoutObservable<Edm.String>;
        SortOrder: KnockoutObservable<Edm.Int32>;
        Value: KnockoutObservable<Edm.String>;
        innerInstance: Crm_Branch2;
    }

    export class ObservableCrm_Branch3 extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; DomainId?: KnockoutObservable<Edm.Guid>; Favorite?: KnockoutObservable<Edm.Boolean>; Id?: KnockoutObservable<Edm.Guid>; IsActive?: KnockoutObservable<Edm.Boolean>; Key?: KnockoutObservable<Edm.String>; Language?: KnockoutObservable<Edm.String>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; ParentName?: KnockoutObservable<Edm.String>; SortOrder?: KnockoutObservable<Edm.Int32>; Value?: KnockoutObservable<Edm.String> });

        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        DomainId: KnockoutObservable<Edm.Guid>;
        Favorite: KnockoutObservable<Edm.Boolean>;
        Id: KnockoutObservable<Edm.Guid>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        Key: KnockoutObservable<Edm.String>;
        Language: KnockoutObservable<Edm.String>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        ParentName: KnockoutObservable<Edm.String>;
        SortOrder: KnockoutObservable<Edm.Int32>;
        Value: KnockoutObservable<Edm.String>;
        innerInstance: Crm_Branch3;
    }

    export class ObservableCrm_Branch4 extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; DomainId?: KnockoutObservable<Edm.Guid>; Favorite?: KnockoutObservable<Edm.Boolean>; Id?: KnockoutObservable<Edm.Guid>; IsActive?: KnockoutObservable<Edm.Boolean>; Key?: KnockoutObservable<Edm.String>; Language?: KnockoutObservable<Edm.String>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; ParentName?: KnockoutObservable<Edm.String>; SortOrder?: KnockoutObservable<Edm.Int32>; Value?: KnockoutObservable<Edm.String> });

        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        DomainId: KnockoutObservable<Edm.Guid>;
        Favorite: KnockoutObservable<Edm.Boolean>;
        Id: KnockoutObservable<Edm.Guid>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        Key: KnockoutObservable<Edm.String>;
        Language: KnockoutObservable<Edm.String>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        ParentName: KnockoutObservable<Edm.String>;
        SortOrder: KnockoutObservable<Edm.Int32>;
        Value: KnockoutObservable<Edm.String>;
        innerInstance: Crm_Branch4;
    }

    export class ObservableCrm_BravoCategory extends $data.Entity {
        constructor();
        constructor(initData: { ContactType?: KnockoutObservable<Edm.String>; CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; DomainId?: KnockoutObservable<Edm.Guid>; Favorite?: KnockoutObservable<Edm.Boolean>; Id?: KnockoutObservable<Edm.Guid>; IsActive?: KnockoutObservable<Edm.Boolean>; Key?: KnockoutObservable<Edm.String>; Language?: KnockoutObservable<Edm.String>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; SortOrder?: KnockoutObservable<Edm.Int32>; Value?: KnockoutObservable<Edm.String> });

        ContactType: KnockoutObservable<Edm.String>;
        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        DomainId: KnockoutObservable<Edm.Guid>;
        Favorite: KnockoutObservable<Edm.Boolean>;
        Id: KnockoutObservable<Edm.Guid>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        Key: KnockoutObservable<Edm.String>;
        Language: KnockoutObservable<Edm.String>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        SortOrder: KnockoutObservable<Edm.Int32>;
        Value: KnockoutObservable<Edm.String>;
        innerInstance: Crm_BravoCategory;
    }

    export class ObservableCrm_BusinessRelationshipType extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; DefaultInverseRelationship?: KnockoutObservable<Crm.Library.Globalization.Lookup.DefaultInverseRelationship>; DomainId?: KnockoutObservable<Edm.Guid>; Favorite?: KnockoutObservable<Edm.Boolean>; Id?: KnockoutObservable<Edm.Guid>; InverseRelationshipTypeKey?: KnockoutObservable<Edm.String>; IsActive?: KnockoutObservable<Edm.Boolean>; IsIndelible?: KnockoutObservable<Edm.Boolean>; Key?: KnockoutObservable<Edm.String>; Language?: KnockoutObservable<Edm.String>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; SortOrder?: KnockoutObservable<Edm.Int32>; Value?: KnockoutObservable<Edm.String> });

        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        DefaultInverseRelationship: KnockoutObservable<Crm.Library.Globalization.Lookup.DefaultInverseRelationship>;
        DomainId: KnockoutObservable<Edm.Guid>;
        Favorite: KnockoutObservable<Edm.Boolean>;
        Id: KnockoutObservable<Edm.Guid>;
        InverseRelationshipTypeKey: KnockoutObservable<Edm.String>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        IsIndelible: KnockoutObservable<Edm.Boolean>;
        Key: KnockoutObservable<Edm.String>;
        Language: KnockoutObservable<Edm.String>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        SortOrder: KnockoutObservable<Edm.Int32>;
        Value: KnockoutObservable<Edm.String>;
        innerInstance: Crm_BusinessRelationshipType;
    }

    export class ObservableCrm_BusinessTitle extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; DomainId?: KnockoutObservable<Edm.Guid>; Favorite?: KnockoutObservable<Edm.Boolean>; Id?: KnockoutObservable<Edm.Guid>; IsActive?: KnockoutObservable<Edm.Boolean>; Key?: KnockoutObservable<Edm.String>; Language?: KnockoutObservable<Edm.String>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; SortOrder?: KnockoutObservable<Edm.Int32>; Value?: KnockoutObservable<Edm.String> });

        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        DomainId: KnockoutObservable<Edm.Guid>;
        Favorite: KnockoutObservable<Edm.Boolean>;
        Id: KnockoutObservable<Edm.Guid>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        Key: KnockoutObservable<Edm.String>;
        Language: KnockoutObservable<Edm.String>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        SortOrder: KnockoutObservable<Edm.Int32>;
        Value: KnockoutObservable<Edm.String>;
        innerInstance: Crm_BusinessTitle;
    }

    export class ObservableCrm_CompanyGroupFlag1 extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; DomainId?: KnockoutObservable<Edm.Guid>; Favorite?: KnockoutObservable<Edm.Boolean>; Id?: KnockoutObservable<Edm.Guid>; IsActive?: KnockoutObservable<Edm.Boolean>; Key?: KnockoutObservable<Edm.String>; Language?: KnockoutObservable<Edm.String>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; SortOrder?: KnockoutObservable<Edm.Int32>; Value?: KnockoutObservable<Edm.String> });

        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        DomainId: KnockoutObservable<Edm.Guid>;
        Favorite: KnockoutObservable<Edm.Boolean>;
        Id: KnockoutObservable<Edm.Guid>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        Key: KnockoutObservable<Edm.String>;
        Language: KnockoutObservable<Edm.String>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        SortOrder: KnockoutObservable<Edm.Int32>;
        Value: KnockoutObservable<Edm.String>;
        innerInstance: Crm_CompanyGroupFlag1;
    }

    export class ObservableCrm_CompanyGroupFlag2 extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; DomainId?: KnockoutObservable<Edm.Guid>; Favorite?: KnockoutObservable<Edm.Boolean>; Id?: KnockoutObservable<Edm.Guid>; IsActive?: KnockoutObservable<Edm.Boolean>; Key?: KnockoutObservable<Edm.String>; Language?: KnockoutObservable<Edm.String>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; SortOrder?: KnockoutObservable<Edm.Int32>; Value?: KnockoutObservable<Edm.String> });

        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        DomainId: KnockoutObservable<Edm.Guid>;
        Favorite: KnockoutObservable<Edm.Boolean>;
        Id: KnockoutObservable<Edm.Guid>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        Key: KnockoutObservable<Edm.String>;
        Language: KnockoutObservable<Edm.String>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        SortOrder: KnockoutObservable<Edm.Int32>;
        Value: KnockoutObservable<Edm.String>;
        innerInstance: Crm_CompanyGroupFlag2;
    }

    export class ObservableCrm_CompanyGroupFlag3 extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; DomainId?: KnockoutObservable<Edm.Guid>; Favorite?: KnockoutObservable<Edm.Boolean>; Id?: KnockoutObservable<Edm.Guid>; IsActive?: KnockoutObservable<Edm.Boolean>; Key?: KnockoutObservable<Edm.String>; Language?: KnockoutObservable<Edm.String>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; SortOrder?: KnockoutObservable<Edm.Int32>; Value?: KnockoutObservable<Edm.String> });

        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        DomainId: KnockoutObservable<Edm.Guid>;
        Favorite: KnockoutObservable<Edm.Boolean>;
        Id: KnockoutObservable<Edm.Guid>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        Key: KnockoutObservable<Edm.String>;
        Language: KnockoutObservable<Edm.String>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        SortOrder: KnockoutObservable<Edm.Int32>;
        Value: KnockoutObservable<Edm.String>;
        innerInstance: Crm_CompanyGroupFlag3;
    }

    export class ObservableCrm_CompanyGroupFlag4 extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; DomainId?: KnockoutObservable<Edm.Guid>; Favorite?: KnockoutObservable<Edm.Boolean>; Id?: KnockoutObservable<Edm.Guid>; IsActive?: KnockoutObservable<Edm.Boolean>; Key?: KnockoutObservable<Edm.String>; Language?: KnockoutObservable<Edm.String>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; SortOrder?: KnockoutObservable<Edm.Int32>; Value?: KnockoutObservable<Edm.String> });

        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        DomainId: KnockoutObservable<Edm.Guid>;
        Favorite: KnockoutObservable<Edm.Boolean>;
        Id: KnockoutObservable<Edm.Guid>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        Key: KnockoutObservable<Edm.String>;
        Language: KnockoutObservable<Edm.String>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        SortOrder: KnockoutObservable<Edm.Int32>;
        Value: KnockoutObservable<Edm.String>;
        innerInstance: Crm_CompanyGroupFlag4;
    }

    export class ObservableCrm_CompanyGroupFlag5 extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; DomainId?: KnockoutObservable<Edm.Guid>; Favorite?: KnockoutObservable<Edm.Boolean>; Id?: KnockoutObservable<Edm.Guid>; IsActive?: KnockoutObservable<Edm.Boolean>; Key?: KnockoutObservable<Edm.String>; Language?: KnockoutObservable<Edm.String>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; SortOrder?: KnockoutObservable<Edm.Int32>; Value?: KnockoutObservable<Edm.String> });

        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        DomainId: KnockoutObservable<Edm.Guid>;
        Favorite: KnockoutObservable<Edm.Boolean>;
        Id: KnockoutObservable<Edm.Guid>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        Key: KnockoutObservable<Edm.String>;
        Language: KnockoutObservable<Edm.String>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        SortOrder: KnockoutObservable<Edm.Int32>;
        Value: KnockoutObservable<Edm.String>;
        innerInstance: Crm_CompanyGroupFlag5;
    }

    export class ObservableCrm_CompanyPersonRelationshipType extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; DomainId?: KnockoutObservable<Edm.Guid>; Favorite?: KnockoutObservable<Edm.Boolean>; Id?: KnockoutObservable<Edm.Guid>; IsActive?: KnockoutObservable<Edm.Boolean>; Key?: KnockoutObservable<Edm.String>; Language?: KnockoutObservable<Edm.String>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; SortOrder?: KnockoutObservable<Edm.Int32>; Value?: KnockoutObservable<Edm.String> });

        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        DomainId: KnockoutObservable<Edm.Guid>;
        Favorite: KnockoutObservable<Edm.Boolean>;
        Id: KnockoutObservable<Edm.Guid>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        Key: KnockoutObservable<Edm.String>;
        Language: KnockoutObservable<Edm.String>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        SortOrder: KnockoutObservable<Edm.Int32>;
        Value: KnockoutObservable<Edm.String>;
        innerInstance: Crm_CompanyPersonRelationshipType;
    }

    export class ObservableCrm_CompanyType extends $data.Entity {
        constructor();
        constructor(initData: { Color?: KnockoutObservable<Edm.String>; CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; DomainId?: KnockoutObservable<Edm.Guid>; ExtensionValues?: KnockoutObservable<Default.ObservableCrm_CompanyType_ExtensionValues>; Favorite?: KnockoutObservable<Edm.Boolean>; Id?: KnockoutObservable<Edm.Guid>; IsActive?: KnockoutObservable<Edm.Boolean>; Key?: KnockoutObservable<Edm.String>; Language?: KnockoutObservable<Edm.String>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; SortOrder?: KnockoutObservable<Edm.Int32>; Value?: KnockoutObservable<Edm.String> });

        Color: KnockoutObservable<Edm.String>;
        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        DomainId: KnockoutObservable<Edm.Guid>;
        ExtensionValues: KnockoutObservable<Default.ObservableCrm_CompanyType_ExtensionValues>;
        Favorite: KnockoutObservable<Edm.Boolean>;
        Id: KnockoutObservable<Edm.Guid>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        Key: KnockoutObservable<Edm.String>;
        Language: KnockoutObservable<Edm.String>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        SortOrder: KnockoutObservable<Edm.Int32>;
        Value: KnockoutObservable<Edm.String>;
        innerInstance: Crm_CompanyType;
    }

    export class ObservableCrm_DepartmentType extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; DomainId?: KnockoutObservable<Edm.Guid>; Favorite?: KnockoutObservable<Edm.Boolean>; Id?: KnockoutObservable<Edm.Guid>; IsActive?: KnockoutObservable<Edm.Boolean>; Key?: KnockoutObservable<Edm.String>; Language?: KnockoutObservable<Edm.String>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; SortOrder?: KnockoutObservable<Edm.Int32>; Value?: KnockoutObservable<Edm.String> });

        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        DomainId: KnockoutObservable<Edm.Guid>;
        Favorite: KnockoutObservable<Edm.Boolean>;
        Id: KnockoutObservable<Edm.Guid>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        Key: KnockoutObservable<Edm.String>;
        Language: KnockoutObservable<Edm.String>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        SortOrder: KnockoutObservable<Edm.Int32>;
        Value: KnockoutObservable<Edm.String>;
        innerInstance: Crm_DepartmentType;
    }

    export class ObservableCrm_EmailType extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; DomainId?: KnockoutObservable<Edm.Guid>; Favorite?: KnockoutObservable<Edm.Boolean>; Id?: KnockoutObservable<Edm.Guid>; IsActive?: KnockoutObservable<Edm.Boolean>; Key?: KnockoutObservable<Edm.String>; Language?: KnockoutObservable<Edm.String>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; SortOrder?: KnockoutObservable<Edm.Int32>; Value?: KnockoutObservable<Edm.String> });

        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        DomainId: KnockoutObservable<Edm.Guid>;
        Favorite: KnockoutObservable<Edm.Boolean>;
        Id: KnockoutObservable<Edm.Guid>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        Key: KnockoutObservable<Edm.String>;
        Language: KnockoutObservable<Edm.String>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        SortOrder: KnockoutObservable<Edm.Int32>;
        Value: KnockoutObservable<Edm.String>;
        innerInstance: Crm_EmailType;
    }

    export class ObservableCrm_FaxType extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; DomainId?: KnockoutObservable<Edm.Guid>; Favorite?: KnockoutObservable<Edm.Boolean>; Id?: KnockoutObservable<Edm.Guid>; IsActive?: KnockoutObservable<Edm.Boolean>; Key?: KnockoutObservable<Edm.String>; Language?: KnockoutObservable<Edm.String>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; SortOrder?: KnockoutObservable<Edm.Int32>; Value?: KnockoutObservable<Edm.String> });

        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        DomainId: KnockoutObservable<Edm.Guid>;
        Favorite: KnockoutObservable<Edm.Boolean>;
        Id: KnockoutObservable<Edm.Guid>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        Key: KnockoutObservable<Edm.String>;
        Language: KnockoutObservable<Edm.String>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        SortOrder: KnockoutObservable<Edm.Int32>;
        Value: KnockoutObservable<Edm.String>;
        innerInstance: Crm_FaxType;
    }

    export class ObservableCrm_NoteType extends $data.Entity {
        constructor();
        constructor(initData: { Color?: KnockoutObservable<Edm.String>; CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; DomainId?: KnockoutObservable<Edm.Guid>; Favorite?: KnockoutObservable<Edm.Boolean>; Icon?: KnockoutObservable<Edm.String>; Id?: KnockoutObservable<Edm.Guid>; IsActive?: KnockoutObservable<Edm.Boolean>; IsSyncable?: KnockoutObservable<Edm.Boolean>; Key?: KnockoutObservable<Edm.String>; Language?: KnockoutObservable<Edm.String>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; SortOrder?: KnockoutObservable<Edm.Int32>; Value?: KnockoutObservable<Edm.String> });

        Color: KnockoutObservable<Edm.String>;
        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        DomainId: KnockoutObservable<Edm.Guid>;
        Favorite: KnockoutObservable<Edm.Boolean>;
        Icon: KnockoutObservable<Edm.String>;
        Id: KnockoutObservable<Edm.Guid>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        IsSyncable: KnockoutObservable<Edm.Boolean>;
        Key: KnockoutObservable<Edm.String>;
        Language: KnockoutObservable<Edm.String>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        SortOrder: KnockoutObservable<Edm.Int32>;
        Value: KnockoutObservable<Edm.String>;
        innerInstance: Crm_NoteType;
    }

    export class ObservableCrm_NumberOfEmployees extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; DomainId?: KnockoutObservable<Edm.Guid>; Favorite?: KnockoutObservable<Edm.Boolean>; Id?: KnockoutObservable<Edm.Guid>; IsActive?: KnockoutObservable<Edm.Boolean>; Key?: KnockoutObservable<Edm.String>; Language?: KnockoutObservable<Edm.String>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; SortOrder?: KnockoutObservable<Edm.Int32>; Value?: KnockoutObservable<Edm.String> });

        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        DomainId: KnockoutObservable<Edm.Guid>;
        Favorite: KnockoutObservable<Edm.Boolean>;
        Id: KnockoutObservable<Edm.Guid>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        Key: KnockoutObservable<Edm.String>;
        Language: KnockoutObservable<Edm.String>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        SortOrder: KnockoutObservable<Edm.Int32>;
        Value: KnockoutObservable<Edm.String>;
        innerInstance: Crm_NumberOfEmployees;
    }

    export class ObservableCrm_PhoneType extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; DomainId?: KnockoutObservable<Edm.Guid>; Favorite?: KnockoutObservable<Edm.Boolean>; Id?: KnockoutObservable<Edm.Guid>; IsActive?: KnockoutObservable<Edm.Boolean>; Key?: KnockoutObservable<Edm.String>; Language?: KnockoutObservable<Edm.String>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; SortOrder?: KnockoutObservable<Edm.Int32>; Value?: KnockoutObservable<Edm.String> });

        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        DomainId: KnockoutObservable<Edm.Guid>;
        Favorite: KnockoutObservable<Edm.Boolean>;
        Id: KnockoutObservable<Edm.Guid>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        Key: KnockoutObservable<Edm.String>;
        Language: KnockoutObservable<Edm.String>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        SortOrder: KnockoutObservable<Edm.Int32>;
        Value: KnockoutObservable<Edm.String>;
        innerInstance: Crm_PhoneType;
    }

    export class ObservableCrm_Salutation extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; DomainId?: KnockoutObservable<Edm.Guid>; Favorite?: KnockoutObservable<Edm.Boolean>; Id?: KnockoutObservable<Edm.Guid>; IsActive?: KnockoutObservable<Edm.Boolean>; Key?: KnockoutObservable<Edm.String>; Language?: KnockoutObservable<Edm.String>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; SortOrder?: KnockoutObservable<Edm.Int32>; Value?: KnockoutObservable<Edm.String> });

        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        DomainId: KnockoutObservable<Edm.Guid>;
        Favorite: KnockoutObservable<Edm.Boolean>;
        Id: KnockoutObservable<Edm.Guid>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        Key: KnockoutObservable<Edm.String>;
        Language: KnockoutObservable<Edm.String>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        SortOrder: KnockoutObservable<Edm.Int32>;
        Value: KnockoutObservable<Edm.String>;
        innerInstance: Crm_Salutation;
    }

    export class ObservableCrm_SalutationLetter extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; DomainId?: KnockoutObservable<Edm.Guid>; Favorite?: KnockoutObservable<Edm.Boolean>; Id?: KnockoutObservable<Edm.Guid>; IsActive?: KnockoutObservable<Edm.Boolean>; Key?: KnockoutObservable<Edm.String>; Language?: KnockoutObservable<Edm.String>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; SortOrder?: KnockoutObservable<Edm.Int32>; Value?: KnockoutObservable<Edm.String> });

        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        DomainId: KnockoutObservable<Edm.Guid>;
        Favorite: KnockoutObservable<Edm.Boolean>;
        Id: KnockoutObservable<Edm.Guid>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        Key: KnockoutObservable<Edm.String>;
        Language: KnockoutObservable<Edm.String>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        SortOrder: KnockoutObservable<Edm.Int32>;
        Value: KnockoutObservable<Edm.String>;
        innerInstance: Crm_SalutationLetter;
    }

    export class ObservableCrm_SourceType extends $data.Entity {
        constructor();
        constructor(initData: { CampaignType?: KnockoutObservable<Edm.Boolean>; Color?: KnockoutObservable<Edm.String>; CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; DomainId?: KnockoutObservable<Edm.Guid>; Favorite?: KnockoutObservable<Edm.Boolean>; Id?: KnockoutObservable<Edm.Guid>; IsActive?: KnockoutObservable<Edm.Boolean>; Key?: KnockoutObservable<Edm.String>; Language?: KnockoutObservable<Edm.String>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; SortOrder?: KnockoutObservable<Edm.Int32>; Value?: KnockoutObservable<Edm.String> });

        CampaignType: KnockoutObservable<Edm.Boolean>;
        Color: KnockoutObservable<Edm.String>;
        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        DomainId: KnockoutObservable<Edm.Guid>;
        Favorite: KnockoutObservable<Edm.Boolean>;
        Id: KnockoutObservable<Edm.Guid>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        Key: KnockoutObservable<Edm.String>;
        Language: KnockoutObservable<Edm.String>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        SortOrder: KnockoutObservable<Edm.Int32>;
        Value: KnockoutObservable<Edm.String>;
        innerInstance: Crm_SourceType;
    }

    export class ObservableCrm_TaskType extends $data.Entity {
        constructor();
        constructor(initData: { Color?: KnockoutObservable<Edm.String>; CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; DomainId?: KnockoutObservable<Edm.Guid>; Favorite?: KnockoutObservable<Edm.Boolean>; Id?: KnockoutObservable<Edm.Guid>; IsActive?: KnockoutObservable<Edm.Boolean>; Key?: KnockoutObservable<Edm.String>; Language?: KnockoutObservable<Edm.String>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; SortOrder?: KnockoutObservable<Edm.Int32>; Value?: KnockoutObservable<Edm.String> });

        Color: KnockoutObservable<Edm.String>;
        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        DomainId: KnockoutObservable<Edm.Guid>;
        Favorite: KnockoutObservable<Edm.Boolean>;
        Id: KnockoutObservable<Edm.Guid>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        Key: KnockoutObservable<Edm.String>;
        Language: KnockoutObservable<Edm.String>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        SortOrder: KnockoutObservable<Edm.Int32>;
        Value: KnockoutObservable<Edm.String>;
        innerInstance: Crm_TaskType;
    }

    export class ObservableCrm_Title extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; DomainId?: KnockoutObservable<Edm.Guid>; Favorite?: KnockoutObservable<Edm.Boolean>; Id?: KnockoutObservable<Edm.Guid>; IsActive?: KnockoutObservable<Edm.Boolean>; Key?: KnockoutObservable<Edm.String>; Language?: KnockoutObservable<Edm.String>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; SortOrder?: KnockoutObservable<Edm.Int32>; Value?: KnockoutObservable<Edm.String> });

        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        DomainId: KnockoutObservable<Edm.Guid>;
        Favorite: KnockoutObservable<Edm.Boolean>;
        Id: KnockoutObservable<Edm.Guid>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        Key: KnockoutObservable<Edm.String>;
        Language: KnockoutObservable<Edm.String>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        SortOrder: KnockoutObservable<Edm.Int32>;
        Value: KnockoutObservable<Edm.String>;
        innerInstance: Crm_Title;
    }

    export class ObservableCrm_Turnover extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; DomainId?: KnockoutObservable<Edm.Guid>; Favorite?: KnockoutObservable<Edm.Boolean>; Id?: KnockoutObservable<Edm.Guid>; IsActive?: KnockoutObservable<Edm.Boolean>; Key?: KnockoutObservable<Edm.String>; Language?: KnockoutObservable<Edm.String>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; SortOrder?: KnockoutObservable<Edm.Int32>; Value?: KnockoutObservable<Edm.String> });

        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        DomainId: KnockoutObservable<Edm.Guid>;
        Favorite: KnockoutObservable<Edm.Boolean>;
        Id: KnockoutObservable<Edm.Guid>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        Key: KnockoutObservable<Edm.String>;
        Language: KnockoutObservable<Edm.String>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        SortOrder: KnockoutObservable<Edm.Int32>;
        Value: KnockoutObservable<Edm.String>;
        innerInstance: Crm_Turnover;
    }

    export class ObservableCrm_WebsiteType extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; DomainId?: KnockoutObservable<Edm.Guid>; Favorite?: KnockoutObservable<Edm.Boolean>; Id?: KnockoutObservable<Edm.Guid>; IsActive?: KnockoutObservable<Edm.Boolean>; Key?: KnockoutObservable<Edm.String>; Language?: KnockoutObservable<Edm.String>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; SortOrder?: KnockoutObservable<Edm.Int32>; Value?: KnockoutObservable<Edm.String> });

        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        DomainId: KnockoutObservable<Edm.Guid>;
        Favorite: KnockoutObservable<Edm.Boolean>;
        Id: KnockoutObservable<Edm.Guid>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        Key: KnockoutObservable<Edm.String>;
        Language: KnockoutObservable<Edm.String>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        SortOrder: KnockoutObservable<Edm.Int32>;
        Value: KnockoutObservable<Edm.String>;
        innerInstance: Crm_WebsiteType;
    }

    export class Crm_AddressType extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; DomainId?: Edm.Guid; Favorite?: Edm.Boolean; Id?: Edm.Guid; IsActive?: Edm.Boolean; Key?: Edm.String; Language?: Edm.String; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; SortOrder?: Edm.Int32; Value?: Edm.String });

        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        DomainId: Edm.Guid;
        Favorite: Edm.Boolean;
        Id: Edm.Guid;
        IsActive: Edm.Boolean;
        Key: Edm.String;
        Language: Edm.String;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        SortOrder: Edm.Int32;
        Value: Edm.String;
        asKoObservable(): ObservableCrm_AddressType;
        static create(): Crm_AddressType;
        static create(initData:any): Crm_AddressType;
    }

    export class Crm_Branch1 extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; DomainId?: Edm.Guid; Favorite?: Edm.Boolean; Id?: Edm.Guid; IsActive?: Edm.Boolean; Key?: Edm.String; Language?: Edm.String; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; SortOrder?: Edm.Int32; Value?: Edm.String });

        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        DomainId: Edm.Guid;
        Favorite: Edm.Boolean;
        Id: Edm.Guid;
        IsActive: Edm.Boolean;
        Key: Edm.String;
        Language: Edm.String;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        SortOrder: Edm.Int32;
        Value: Edm.String;
        asKoObservable(): ObservableCrm_Branch1;
        static create(): Crm_Branch1;
        static create(initData:any): Crm_Branch1;
    }

    export class Crm_Branch2 extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; DomainId?: Edm.Guid; Favorite?: Edm.Boolean; Id?: Edm.Guid; IsActive?: Edm.Boolean; Key?: Edm.String; Language?: Edm.String; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; ParentName?: Edm.String; SortOrder?: Edm.Int32; Value?: Edm.String });

        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        DomainId: Edm.Guid;
        Favorite: Edm.Boolean;
        Id: Edm.Guid;
        IsActive: Edm.Boolean;
        Key: Edm.String;
        Language: Edm.String;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        ParentName: Edm.String;
        SortOrder: Edm.Int32;
        Value: Edm.String;
        asKoObservable(): ObservableCrm_Branch2;
        static create(): Crm_Branch2;
        static create(initData:any): Crm_Branch2;
    }

    export class Crm_Branch3 extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; DomainId?: Edm.Guid; Favorite?: Edm.Boolean; Id?: Edm.Guid; IsActive?: Edm.Boolean; Key?: Edm.String; Language?: Edm.String; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; ParentName?: Edm.String; SortOrder?: Edm.Int32; Value?: Edm.String });

        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        DomainId: Edm.Guid;
        Favorite: Edm.Boolean;
        Id: Edm.Guid;
        IsActive: Edm.Boolean;
        Key: Edm.String;
        Language: Edm.String;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        ParentName: Edm.String;
        SortOrder: Edm.Int32;
        Value: Edm.String;
        asKoObservable(): ObservableCrm_Branch3;
        static create(): Crm_Branch3;
        static create(initData:any): Crm_Branch3;
    }

    export class Crm_Branch4 extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; DomainId?: Edm.Guid; Favorite?: Edm.Boolean; Id?: Edm.Guid; IsActive?: Edm.Boolean; Key?: Edm.String; Language?: Edm.String; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; ParentName?: Edm.String; SortOrder?: Edm.Int32; Value?: Edm.String });

        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        DomainId: Edm.Guid;
        Favorite: Edm.Boolean;
        Id: Edm.Guid;
        IsActive: Edm.Boolean;
        Key: Edm.String;
        Language: Edm.String;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        ParentName: Edm.String;
        SortOrder: Edm.Int32;
        Value: Edm.String;
        asKoObservable(): ObservableCrm_Branch4;
        static create(): Crm_Branch4;
        static create(initData:any): Crm_Branch4;
    }

    export class Crm_BravoCategory extends $data.Entity {
        constructor();
        constructor(initData: { ContactType?: Edm.String; CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; DomainId?: Edm.Guid; Favorite?: Edm.Boolean; Id?: Edm.Guid; IsActive?: Edm.Boolean; Key?: Edm.String; Language?: Edm.String; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; SortOrder?: Edm.Int32; Value?: Edm.String });

        ContactType: Edm.String;
        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        DomainId: Edm.Guid;
        Favorite: Edm.Boolean;
        Id: Edm.Guid;
        IsActive: Edm.Boolean;
        Key: Edm.String;
        Language: Edm.String;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        SortOrder: Edm.Int32;
        Value: Edm.String;
        asKoObservable(): ObservableCrm_BravoCategory;
        static create(): Crm_BravoCategory;
        static create(initData:any): Crm_BravoCategory;
    }

    export class Crm_BusinessRelationshipType extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; DefaultInverseRelationship?: Crm.Library.Globalization.Lookup.DefaultInverseRelationship; DomainId?: Edm.Guid; Favorite?: Edm.Boolean; Id?: Edm.Guid; InverseRelationshipTypeKey?: Edm.String; IsActive?: Edm.Boolean; IsIndelible?: Edm.Boolean; Key?: Edm.String; Language?: Edm.String; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; SortOrder?: Edm.Int32; Value?: Edm.String });

        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        DefaultInverseRelationship: Crm.Library.Globalization.Lookup.DefaultInverseRelationship;
        DomainId: Edm.Guid;
        Favorite: Edm.Boolean;
        Id: Edm.Guid;
        InverseRelationshipTypeKey: Edm.String;
        IsActive: Edm.Boolean;
        IsIndelible: Edm.Boolean;
        Key: Edm.String;
        Language: Edm.String;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        SortOrder: Edm.Int32;
        Value: Edm.String;
        asKoObservable(): ObservableCrm_BusinessRelationshipType;
        static create(): Crm_BusinessRelationshipType;
        static create(initData:any): Crm_BusinessRelationshipType;
    }

    export class Crm_BusinessTitle extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; DomainId?: Edm.Guid; Favorite?: Edm.Boolean; Id?: Edm.Guid; IsActive?: Edm.Boolean; Key?: Edm.String; Language?: Edm.String; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; SortOrder?: Edm.Int32; Value?: Edm.String });

        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        DomainId: Edm.Guid;
        Favorite: Edm.Boolean;
        Id: Edm.Guid;
        IsActive: Edm.Boolean;
        Key: Edm.String;
        Language: Edm.String;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        SortOrder: Edm.Int32;
        Value: Edm.String;
        asKoObservable(): ObservableCrm_BusinessTitle;
        static create(): Crm_BusinessTitle;
        static create(initData:any): Crm_BusinessTitle;
    }

    export class Crm_CompanyGroupFlag1 extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; DomainId?: Edm.Guid; Favorite?: Edm.Boolean; Id?: Edm.Guid; IsActive?: Edm.Boolean; Key?: Edm.String; Language?: Edm.String; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; SortOrder?: Edm.Int32; Value?: Edm.String });

        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        DomainId: Edm.Guid;
        Favorite: Edm.Boolean;
        Id: Edm.Guid;
        IsActive: Edm.Boolean;
        Key: Edm.String;
        Language: Edm.String;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        SortOrder: Edm.Int32;
        Value: Edm.String;
        asKoObservable(): ObservableCrm_CompanyGroupFlag1;
        static create(): Crm_CompanyGroupFlag1;
        static create(initData:any): Crm_CompanyGroupFlag1;
    }

    export class Crm_CompanyGroupFlag2 extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; DomainId?: Edm.Guid; Favorite?: Edm.Boolean; Id?: Edm.Guid; IsActive?: Edm.Boolean; Key?: Edm.String; Language?: Edm.String; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; SortOrder?: Edm.Int32; Value?: Edm.String });

        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        DomainId: Edm.Guid;
        Favorite: Edm.Boolean;
        Id: Edm.Guid;
        IsActive: Edm.Boolean;
        Key: Edm.String;
        Language: Edm.String;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        SortOrder: Edm.Int32;
        Value: Edm.String;
        asKoObservable(): ObservableCrm_CompanyGroupFlag2;
        static create(): Crm_CompanyGroupFlag2;
        static create(initData:any): Crm_CompanyGroupFlag2;
    }

    export class Crm_CompanyGroupFlag3 extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; DomainId?: Edm.Guid; Favorite?: Edm.Boolean; Id?: Edm.Guid; IsActive?: Edm.Boolean; Key?: Edm.String; Language?: Edm.String; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; SortOrder?: Edm.Int32; Value?: Edm.String });

        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        DomainId: Edm.Guid;
        Favorite: Edm.Boolean;
        Id: Edm.Guid;
        IsActive: Edm.Boolean;
        Key: Edm.String;
        Language: Edm.String;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        SortOrder: Edm.Int32;
        Value: Edm.String;
        asKoObservable(): ObservableCrm_CompanyGroupFlag3;
        static create(): Crm_CompanyGroupFlag3;
        static create(initData:any): Crm_CompanyGroupFlag3;
    }

    export class Crm_CompanyGroupFlag4 extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; DomainId?: Edm.Guid; Favorite?: Edm.Boolean; Id?: Edm.Guid; IsActive?: Edm.Boolean; Key?: Edm.String; Language?: Edm.String; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; SortOrder?: Edm.Int32; Value?: Edm.String });

        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        DomainId: Edm.Guid;
        Favorite: Edm.Boolean;
        Id: Edm.Guid;
        IsActive: Edm.Boolean;
        Key: Edm.String;
        Language: Edm.String;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        SortOrder: Edm.Int32;
        Value: Edm.String;
        asKoObservable(): ObservableCrm_CompanyGroupFlag4;
        static create(): Crm_CompanyGroupFlag4;
        static create(initData:any): Crm_CompanyGroupFlag4;
    }

    export class Crm_CompanyGroupFlag5 extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; DomainId?: Edm.Guid; Favorite?: Edm.Boolean; Id?: Edm.Guid; IsActive?: Edm.Boolean; Key?: Edm.String; Language?: Edm.String; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; SortOrder?: Edm.Int32; Value?: Edm.String });

        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        DomainId: Edm.Guid;
        Favorite: Edm.Boolean;
        Id: Edm.Guid;
        IsActive: Edm.Boolean;
        Key: Edm.String;
        Language: Edm.String;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        SortOrder: Edm.Int32;
        Value: Edm.String;
        asKoObservable(): ObservableCrm_CompanyGroupFlag5;
        static create(): Crm_CompanyGroupFlag5;
        static create(initData:any): Crm_CompanyGroupFlag5;
    }

    export class Crm_CompanyPersonRelationshipType extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; DomainId?: Edm.Guid; Favorite?: Edm.Boolean; Id?: Edm.Guid; IsActive?: Edm.Boolean; Key?: Edm.String; Language?: Edm.String; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; SortOrder?: Edm.Int32; Value?: Edm.String });

        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        DomainId: Edm.Guid;
        Favorite: Edm.Boolean;
        Id: Edm.Guid;
        IsActive: Edm.Boolean;
        Key: Edm.String;
        Language: Edm.String;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        SortOrder: Edm.Int32;
        Value: Edm.String;
        asKoObservable(): ObservableCrm_CompanyPersonRelationshipType;
        static create(): Crm_CompanyPersonRelationshipType;
        static create(initData:any): Crm_CompanyPersonRelationshipType;
    }

    export class Crm_CompanyType extends $data.Entity {
        constructor();
        constructor(initData: { Color?: Edm.String; CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; DomainId?: Edm.Guid; ExtensionValues?: Default.Crm_CompanyType_ExtensionValues; Favorite?: Edm.Boolean; Id?: Edm.Guid; IsActive?: Edm.Boolean; Key?: Edm.String; Language?: Edm.String; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; SortOrder?: Edm.Int32; Value?: Edm.String });

        Color: Edm.String;
        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        DomainId: Edm.Guid;
        ExtensionValues: Default.Crm_CompanyType_ExtensionValues;
        Favorite: Edm.Boolean;
        Id: Edm.Guid;
        IsActive: Edm.Boolean;
        Key: Edm.String;
        Language: Edm.String;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        SortOrder: Edm.Int32;
        Value: Edm.String;
        asKoObservable(): ObservableCrm_CompanyType;
        static create(): Crm_CompanyType;
        static create(initData:any): Crm_CompanyType;
    }

    export class Crm_DepartmentType extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; DomainId?: Edm.Guid; Favorite?: Edm.Boolean; Id?: Edm.Guid; IsActive?: Edm.Boolean; Key?: Edm.String; Language?: Edm.String; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; SortOrder?: Edm.Int32; Value?: Edm.String });

        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        DomainId: Edm.Guid;
        Favorite: Edm.Boolean;
        Id: Edm.Guid;
        IsActive: Edm.Boolean;
        Key: Edm.String;
        Language: Edm.String;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        SortOrder: Edm.Int32;
        Value: Edm.String;
        asKoObservable(): ObservableCrm_DepartmentType;
        static create(): Crm_DepartmentType;
        static create(initData:any): Crm_DepartmentType;
    }

    export class Crm_EmailType extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; DomainId?: Edm.Guid; Favorite?: Edm.Boolean; Id?: Edm.Guid; IsActive?: Edm.Boolean; Key?: Edm.String; Language?: Edm.String; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; SortOrder?: Edm.Int32; Value?: Edm.String });

        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        DomainId: Edm.Guid;
        Favorite: Edm.Boolean;
        Id: Edm.Guid;
        IsActive: Edm.Boolean;
        Key: Edm.String;
        Language: Edm.String;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        SortOrder: Edm.Int32;
        Value: Edm.String;
        asKoObservable(): ObservableCrm_EmailType;
        static create(): Crm_EmailType;
        static create(initData:any): Crm_EmailType;
    }

    export class Crm_FaxType extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; DomainId?: Edm.Guid; Favorite?: Edm.Boolean; Id?: Edm.Guid; IsActive?: Edm.Boolean; Key?: Edm.String; Language?: Edm.String; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; SortOrder?: Edm.Int32; Value?: Edm.String });

        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        DomainId: Edm.Guid;
        Favorite: Edm.Boolean;
        Id: Edm.Guid;
        IsActive: Edm.Boolean;
        Key: Edm.String;
        Language: Edm.String;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        SortOrder: Edm.Int32;
        Value: Edm.String;
        asKoObservable(): ObservableCrm_FaxType;
        static create(): Crm_FaxType;
        static create(initData:any): Crm_FaxType;
    }

    export class Crm_NoteType extends $data.Entity {
        constructor();
        constructor(initData: { Color?: Edm.String; CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; DomainId?: Edm.Guid; Favorite?: Edm.Boolean; Icon?: Edm.String; Id?: Edm.Guid; IsActive?: Edm.Boolean; IsSyncable?: Edm.Boolean; Key?: Edm.String; Language?: Edm.String; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; SortOrder?: Edm.Int32; Value?: Edm.String });

        Color: Edm.String;
        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        DomainId: Edm.Guid;
        Favorite: Edm.Boolean;
        Icon: Edm.String;
        Id: Edm.Guid;
        IsActive: Edm.Boolean;
        IsSyncable: Edm.Boolean;
        Key: Edm.String;
        Language: Edm.String;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        SortOrder: Edm.Int32;
        Value: Edm.String;
        asKoObservable(): ObservableCrm_NoteType;
        static create(): Crm_NoteType;
        static create(initData:any): Crm_NoteType;
    }

    export class Crm_NumberOfEmployees extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; DomainId?: Edm.Guid; Favorite?: Edm.Boolean; Id?: Edm.Guid; IsActive?: Edm.Boolean; Key?: Edm.String; Language?: Edm.String; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; SortOrder?: Edm.Int32; Value?: Edm.String });

        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        DomainId: Edm.Guid;
        Favorite: Edm.Boolean;
        Id: Edm.Guid;
        IsActive: Edm.Boolean;
        Key: Edm.String;
        Language: Edm.String;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        SortOrder: Edm.Int32;
        Value: Edm.String;
        asKoObservable(): ObservableCrm_NumberOfEmployees;
        static create(): Crm_NumberOfEmployees;
        static create(initData:any): Crm_NumberOfEmployees;
    }

    export class Crm_PhoneType extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; DomainId?: Edm.Guid; Favorite?: Edm.Boolean; Id?: Edm.Guid; IsActive?: Edm.Boolean; Key?: Edm.String; Language?: Edm.String; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; SortOrder?: Edm.Int32; Value?: Edm.String });

        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        DomainId: Edm.Guid;
        Favorite: Edm.Boolean;
        Id: Edm.Guid;
        IsActive: Edm.Boolean;
        Key: Edm.String;
        Language: Edm.String;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        SortOrder: Edm.Int32;
        Value: Edm.String;
        asKoObservable(): ObservableCrm_PhoneType;
        static create(): Crm_PhoneType;
        static create(initData:any): Crm_PhoneType;
    }

    export class Crm_Salutation extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; DomainId?: Edm.Guid; Favorite?: Edm.Boolean; Id?: Edm.Guid; IsActive?: Edm.Boolean; Key?: Edm.String; Language?: Edm.String; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; SortOrder?: Edm.Int32; Value?: Edm.String });

        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        DomainId: Edm.Guid;
        Favorite: Edm.Boolean;
        Id: Edm.Guid;
        IsActive: Edm.Boolean;
        Key: Edm.String;
        Language: Edm.String;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        SortOrder: Edm.Int32;
        Value: Edm.String;
        asKoObservable(): ObservableCrm_Salutation;
        static create(): Crm_Salutation;
        static create(initData:any): Crm_Salutation;
    }

    export class Crm_SalutationLetter extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; DomainId?: Edm.Guid; Favorite?: Edm.Boolean; Id?: Edm.Guid; IsActive?: Edm.Boolean; Key?: Edm.String; Language?: Edm.String; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; SortOrder?: Edm.Int32; Value?: Edm.String });

        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        DomainId: Edm.Guid;
        Favorite: Edm.Boolean;
        Id: Edm.Guid;
        IsActive: Edm.Boolean;
        Key: Edm.String;
        Language: Edm.String;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        SortOrder: Edm.Int32;
        Value: Edm.String;
        asKoObservable(): ObservableCrm_SalutationLetter;
        static create(): Crm_SalutationLetter;
        static create(initData:any): Crm_SalutationLetter;
    }

    export class Crm_SourceType extends $data.Entity {
        constructor();
        constructor(initData: { CampaignType?: Edm.Boolean; Color?: Edm.String; CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; DomainId?: Edm.Guid; Favorite?: Edm.Boolean; Id?: Edm.Guid; IsActive?: Edm.Boolean; Key?: Edm.String; Language?: Edm.String; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; SortOrder?: Edm.Int32; Value?: Edm.String });

        CampaignType: Edm.Boolean;
        Color: Edm.String;
        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        DomainId: Edm.Guid;
        Favorite: Edm.Boolean;
        Id: Edm.Guid;
        IsActive: Edm.Boolean;
        Key: Edm.String;
        Language: Edm.String;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        SortOrder: Edm.Int32;
        Value: Edm.String;
        asKoObservable(): ObservableCrm_SourceType;
        static create(): Crm_SourceType;
        static create(initData:any): Crm_SourceType;
    }

    export class Crm_TaskType extends $data.Entity {
        constructor();
        constructor(initData: { Color?: Edm.String; CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; DomainId?: Edm.Guid; Favorite?: Edm.Boolean; Id?: Edm.Guid; IsActive?: Edm.Boolean; Key?: Edm.String; Language?: Edm.String; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; SortOrder?: Edm.Int32; Value?: Edm.String });

        Color: Edm.String;
        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        DomainId: Edm.Guid;
        Favorite: Edm.Boolean;
        Id: Edm.Guid;
        IsActive: Edm.Boolean;
        Key: Edm.String;
        Language: Edm.String;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        SortOrder: Edm.Int32;
        Value: Edm.String;
        asKoObservable(): ObservableCrm_TaskType;
        static create(): Crm_TaskType;
        static create(initData:any): Crm_TaskType;
    }

    export class Crm_Title extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; DomainId?: Edm.Guid; Favorite?: Edm.Boolean; Id?: Edm.Guid; IsActive?: Edm.Boolean; Key?: Edm.String; Language?: Edm.String; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; SortOrder?: Edm.Int32; Value?: Edm.String });

        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        DomainId: Edm.Guid;
        Favorite: Edm.Boolean;
        Id: Edm.Guid;
        IsActive: Edm.Boolean;
        Key: Edm.String;
        Language: Edm.String;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        SortOrder: Edm.Int32;
        Value: Edm.String;
        asKoObservable(): ObservableCrm_Title;
        static create(): Crm_Title;
        static create(initData:any): Crm_Title;
    }

    export class Crm_Turnover extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; DomainId?: Edm.Guid; Favorite?: Edm.Boolean; Id?: Edm.Guid; IsActive?: Edm.Boolean; Key?: Edm.String; Language?: Edm.String; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; SortOrder?: Edm.Int32; Value?: Edm.String });

        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        DomainId: Edm.Guid;
        Favorite: Edm.Boolean;
        Id: Edm.Guid;
        IsActive: Edm.Boolean;
        Key: Edm.String;
        Language: Edm.String;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        SortOrder: Edm.Int32;
        Value: Edm.String;
        asKoObservable(): ObservableCrm_Turnover;
        static create(): Crm_Turnover;
        static create(initData:any): Crm_Turnover;
    }

    export class Crm_WebsiteType extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; DomainId?: Edm.Guid; Favorite?: Edm.Boolean; Id?: Edm.Guid; IsActive?: Edm.Boolean; Key?: Edm.String; Language?: Edm.String; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; SortOrder?: Edm.Int32; Value?: Edm.String });

        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        DomainId: Edm.Guid;
        Favorite: Edm.Boolean;
        Id: Edm.Guid;
        IsActive: Edm.Boolean;
        Key: Edm.String;
        Language: Edm.String;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        SortOrder: Edm.Int32;
        Value: Edm.String;
        asKoObservable(): ObservableCrm_WebsiteType;
        static create(): Crm_WebsiteType;
        static create(initData:any): Crm_WebsiteType;
    }

}

namespace Crm.Configurator.Rest.Model.Lookups {

    export class ObservableCrmConfigurator_ConfigurationRuleType extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; DomainId?: KnockoutObservable<Edm.Guid>; Favorite?: KnockoutObservable<Edm.Boolean>; Id?: KnockoutObservable<Edm.Guid>; IsActive?: KnockoutObservable<Edm.Boolean>; Key?: KnockoutObservable<Edm.String>; Language?: KnockoutObservable<Edm.String>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; SortOrder?: KnockoutObservable<Edm.Int32>; Value?: KnockoutObservable<Edm.String> });

        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        DomainId: KnockoutObservable<Edm.Guid>;
        Favorite: KnockoutObservable<Edm.Boolean>;
        Id: KnockoutObservable<Edm.Guid>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        Key: KnockoutObservable<Edm.String>;
        Language: KnockoutObservable<Edm.String>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        SortOrder: KnockoutObservable<Edm.Int32>;
        Value: KnockoutObservable<Edm.String>;
        innerInstance: CrmConfigurator_ConfigurationRuleType;
    }

    export class CrmConfigurator_ConfigurationRuleType extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; DomainId?: Edm.Guid; Favorite?: Edm.Boolean; Id?: Edm.Guid; IsActive?: Edm.Boolean; Key?: Edm.String; Language?: Edm.String; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; SortOrder?: Edm.Int32; Value?: Edm.String });

        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        DomainId: Edm.Guid;
        Favorite: Edm.Boolean;
        Id: Edm.Guid;
        IsActive: Edm.Boolean;
        Key: Edm.String;
        Language: Edm.String;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        SortOrder: Edm.Int32;
        Value: Edm.String;
        asKoObservable(): ObservableCrmConfigurator_ConfigurationRuleType;
        static create(): CrmConfigurator_ConfigurationRuleType;
        static create(initData:any): CrmConfigurator_ConfigurationRuleType;
    }

}

namespace Crm.Campaigns.Rest.Model.Lookups {

    export class ObservableCrmCampaigns_CampaignStatus extends $data.Entity {
        constructor();
        constructor(initData: { Color?: KnockoutObservable<Edm.String>; CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; DomainId?: KnockoutObservable<Edm.Guid>; Favorite?: KnockoutObservable<Edm.Boolean>; Id?: KnockoutObservable<Edm.Guid>; IsActive?: KnockoutObservable<Edm.Boolean>; Key?: KnockoutObservable<Edm.String>; Language?: KnockoutObservable<Edm.String>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; SortOrder?: KnockoutObservable<Edm.Int32>; Value?: KnockoutObservable<Edm.String> });

        Color: KnockoutObservable<Edm.String>;
        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        DomainId: KnockoutObservable<Edm.Guid>;
        Favorite: KnockoutObservable<Edm.Boolean>;
        Id: KnockoutObservable<Edm.Guid>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        Key: KnockoutObservable<Edm.String>;
        Language: KnockoutObservable<Edm.String>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        SortOrder: KnockoutObservable<Edm.Int32>;
        Value: KnockoutObservable<Edm.String>;
        innerInstance: CrmCampaigns_CampaignStatus;
    }

    export class CrmCampaigns_CampaignStatus extends $data.Entity {
        constructor();
        constructor(initData: { Color?: Edm.String; CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; DomainId?: Edm.Guid; Favorite?: Edm.Boolean; Id?: Edm.Guid; IsActive?: Edm.Boolean; Key?: Edm.String; Language?: Edm.String; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; SortOrder?: Edm.Int32; Value?: Edm.String });

        Color: Edm.String;
        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        DomainId: Edm.Guid;
        Favorite: Edm.Boolean;
        Id: Edm.Guid;
        IsActive: Edm.Boolean;
        Key: Edm.String;
        Language: Edm.String;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        SortOrder: Edm.Int32;
        Value: Edm.String;
        asKoObservable(): ObservableCrmCampaigns_CampaignStatus;
        static create(): CrmCampaigns_CampaignStatus;
        static create(initData:any): CrmCampaigns_CampaignStatus;
    }

}

namespace Crm.Article.Model.Lookups {

    export class ObservableCrmArticle_ArticleDowntimeReason extends $data.Entity {
        constructor();
        constructor(initData: { AuthDataId?: KnockoutObservable<Edm.Guid>; Color?: KnockoutObservable<Edm.String>; CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; Favorite?: KnockoutObservable<Edm.Boolean>; Id?: KnockoutObservable<Edm.Guid>; IsActive?: KnockoutObservable<Edm.Boolean>; Key?: KnockoutObservable<Edm.String>; Language?: KnockoutObservable<Edm.String>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; SortOrder?: KnockoutObservable<Edm.Int32>; Value?: KnockoutObservable<Edm.String> });

        AuthDataId: KnockoutObservable<Edm.Guid>;
        Color: KnockoutObservable<Edm.String>;
        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        Favorite: KnockoutObservable<Edm.Boolean>;
        Id: KnockoutObservable<Edm.Guid>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        Key: KnockoutObservable<Edm.String>;
        Language: KnockoutObservable<Edm.String>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        SortOrder: KnockoutObservable<Edm.Int32>;
        Value: KnockoutObservable<Edm.String>;
        innerInstance: CrmArticle_ArticleDowntimeReason;
    }

    export class ObservableCrmArticle_CompanyPriceGroup extends $data.Entity {
        constructor();
        constructor(initData: { AuthDataId?: KnockoutObservable<Edm.Guid>; CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; Favorite?: KnockoutObservable<Edm.Boolean>; Id?: KnockoutObservable<Edm.Guid>; IsActive?: KnockoutObservable<Edm.Boolean>; Key?: KnockoutObservable<Edm.String>; Language?: KnockoutObservable<Edm.String>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; SortOrder?: KnockoutObservable<Edm.Int32>; Value?: KnockoutObservable<Edm.String> });

        AuthDataId: KnockoutObservable<Edm.Guid>;
        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        Favorite: KnockoutObservable<Edm.Boolean>;
        Id: KnockoutObservable<Edm.Guid>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        Key: KnockoutObservable<Edm.String>;
        Language: KnockoutObservable<Edm.String>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        SortOrder: KnockoutObservable<Edm.Int32>;
        Value: KnockoutObservable<Edm.String>;
        innerInstance: CrmArticle_CompanyPriceGroup;
    }

    export class ObservableCrmArticle_CompanyPriceLevel extends $data.Entity {
        constructor();
        constructor(initData: { AuthDataId?: KnockoutObservable<Edm.Guid>; CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; Favorite?: KnockoutObservable<Edm.Boolean>; Id?: KnockoutObservable<Edm.Guid>; IsActive?: KnockoutObservable<Edm.Boolean>; Key?: KnockoutObservable<Edm.String>; Language?: KnockoutObservable<Edm.String>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; SortOrder?: KnockoutObservable<Edm.Int32>; Value?: KnockoutObservable<Edm.String> });

        AuthDataId: KnockoutObservable<Edm.Guid>;
        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        Favorite: KnockoutObservable<Edm.Boolean>;
        Id: KnockoutObservable<Edm.Guid>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        Key: KnockoutObservable<Edm.String>;
        Language: KnockoutObservable<Edm.String>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        SortOrder: KnockoutObservable<Edm.Int32>;
        Value: KnockoutObservable<Edm.String>;
        innerInstance: CrmArticle_CompanyPriceLevel;
    }

    export class ObservableCrmArticle_DrivingLicenceCategory extends $data.Entity {
        constructor();
        constructor(initData: { AuthDataId?: KnockoutObservable<Edm.Guid>; CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; Favorite?: KnockoutObservable<Edm.Boolean>; Id?: KnockoutObservable<Edm.Guid>; IsActive?: KnockoutObservable<Edm.Boolean>; Key?: KnockoutObservable<Edm.String>; Language?: KnockoutObservable<Edm.String>; ModifyDate?: KnockoutObservable<Edm.DateTimeOffset>; ModifyUser?: KnockoutObservable<Edm.String>; SortOrder?: KnockoutObservable<Edm.Int32>; Value?: KnockoutObservable<Edm.String> });

        AuthDataId: KnockoutObservable<Edm.Guid>;
        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        Favorite: KnockoutObservable<Edm.Boolean>;
        Id: KnockoutObservable<Edm.Guid>;
        IsActive: KnockoutObservable<Edm.Boolean>;
        Key: KnockoutObservable<Edm.String>;
        Language: KnockoutObservable<Edm.String>;
        ModifyDate: KnockoutObservable<Edm.DateTimeOffset>;
        ModifyUser: KnockoutObservable<Edm.String>;
        SortOrder: KnockoutObservable<Edm.Int32>;
        Value: KnockoutObservable<Edm.String>;
        innerInstance: CrmArticle_DrivingLicenceCategory;
    }

    export class CrmArticle_ArticleDowntimeReason extends $data.Entity {
        constructor();
        constructor(initData: { AuthDataId?: Edm.Guid; Color?: Edm.String; CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; Favorite?: Edm.Boolean; Id?: Edm.Guid; IsActive?: Edm.Boolean; Key?: Edm.String; Language?: Edm.String; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; SortOrder?: Edm.Int32; Value?: Edm.String });

        AuthDataId: Edm.Guid;
        Color: Edm.String;
        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        Favorite: Edm.Boolean;
        Id: Edm.Guid;
        IsActive: Edm.Boolean;
        Key: Edm.String;
        Language: Edm.String;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        SortOrder: Edm.Int32;
        Value: Edm.String;
        asKoObservable(): ObservableCrmArticle_ArticleDowntimeReason;
        static create(): CrmArticle_ArticleDowntimeReason;
        static create(initData:any): CrmArticle_ArticleDowntimeReason;
    }

    export class CrmArticle_CompanyPriceGroup extends $data.Entity {
        constructor();
        constructor(initData: { AuthDataId?: Edm.Guid; CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; Favorite?: Edm.Boolean; Id?: Edm.Guid; IsActive?: Edm.Boolean; Key?: Edm.String; Language?: Edm.String; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; SortOrder?: Edm.Int32; Value?: Edm.String });

        AuthDataId: Edm.Guid;
        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        Favorite: Edm.Boolean;
        Id: Edm.Guid;
        IsActive: Edm.Boolean;
        Key: Edm.String;
        Language: Edm.String;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        SortOrder: Edm.Int32;
        Value: Edm.String;
        asKoObservable(): ObservableCrmArticle_CompanyPriceGroup;
        static create(): CrmArticle_CompanyPriceGroup;
        static create(initData:any): CrmArticle_CompanyPriceGroup;
    }

    export class CrmArticle_CompanyPriceLevel extends $data.Entity {
        constructor();
        constructor(initData: { AuthDataId?: Edm.Guid; CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; Favorite?: Edm.Boolean; Id?: Edm.Guid; IsActive?: Edm.Boolean; Key?: Edm.String; Language?: Edm.String; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; SortOrder?: Edm.Int32; Value?: Edm.String });

        AuthDataId: Edm.Guid;
        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        Favorite: Edm.Boolean;
        Id: Edm.Guid;
        IsActive: Edm.Boolean;
        Key: Edm.String;
        Language: Edm.String;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        SortOrder: Edm.Int32;
        Value: Edm.String;
        asKoObservable(): ObservableCrmArticle_CompanyPriceLevel;
        static create(): CrmArticle_CompanyPriceLevel;
        static create(initData:any): CrmArticle_CompanyPriceLevel;
    }

    export class CrmArticle_DrivingLicenceCategory extends $data.Entity {
        constructor();
        constructor(initData: { AuthDataId?: Edm.Guid; CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; Favorite?: Edm.Boolean; Id?: Edm.Guid; IsActive?: Edm.Boolean; Key?: Edm.String; Language?: Edm.String; ModifyDate?: Edm.DateTimeOffset; ModifyUser?: Edm.String; SortOrder?: Edm.Int32; Value?: Edm.String });

        AuthDataId: Edm.Guid;
        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        Favorite: Edm.Boolean;
        Id: Edm.Guid;
        IsActive: Edm.Boolean;
        Key: Edm.String;
        Language: Edm.String;
        ModifyDate: Edm.DateTimeOffset;
        ModifyUser: Edm.String;
        SortOrder: Edm.Int32;
        Value: Edm.String;
        asKoObservable(): ObservableCrmArticle_DrivingLicenceCategory;
        static create(): CrmArticle_DrivingLicenceCategory;
        static create(initData:any): CrmArticle_DrivingLicenceCategory;
    }

}

namespace Main.Controllers.OData {

    export class ObservableTransaction extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: KnockoutObservable<Edm.DateTimeOffset>; CreateUser?: KnockoutObservable<Edm.String>; Id?: KnockoutObservable<Edm.String>; PostingCount?: KnockoutObservable<Edm.Int32>; Retries?: KnockoutObservable<Edm.Int32>; RetryAfter?: KnockoutObservable<Edm.DateTimeOffset>; TransactionState?: KnockoutObservable<Crm.Library.Model.PostingState> });

        CreateDate: KnockoutObservable<Edm.DateTimeOffset>;
        CreateUser: KnockoutObservable<Edm.String>;
        Id: KnockoutObservable<Edm.String>;
        PostingCount: KnockoutObservable<Edm.Int32>;
        Retries: KnockoutObservable<Edm.Int32>;
        RetryAfter: KnockoutObservable<Edm.DateTimeOffset>;
        TransactionState: KnockoutObservable<Crm.Library.Model.PostingState>;
        innerInstance: Transaction;
    }

    export class Transaction extends $data.Entity {
        constructor();
        constructor(initData: { CreateDate?: Edm.DateTimeOffset; CreateUser?: Edm.String; Id?: Edm.String; PostingCount?: Edm.Int32; Retries?: Edm.Int32; RetryAfter?: Edm.DateTimeOffset; TransactionState?: Crm.Library.Model.PostingState });

        CreateDate: Edm.DateTimeOffset;
        CreateUser: Edm.String;
        Id: Edm.String;
        PostingCount: Edm.Int32;
        Retries: Edm.Int32;
        RetryAfter: Edm.DateTimeOffset;
        TransactionState: Crm.Library.Model.PostingState;
        asKoObservable(): ObservableTransaction;
        static create(): Transaction;
        static create(initData:any): Transaction;
    }

}

namespace Main.Multitenant.Rest.Model {

    export class ObservableMainMultitenant_Domain extends $data.Entity {
        constructor();
        constructor(initData: { ActivePluginNames?: KnockoutObservableArray<Edm.String>; ActiveUsers?: KnockoutObservable<Edm.Int32>; ActiveUsersLast30Days?: KnockoutObservable<Edm.Int32>; ActiveUsersLast7Days?: KnockoutObservable<Edm.Int32>; AuthorisedDomains?: KnockoutObservableArray<Edm.Guid>; Configuration?: KnockoutObservable<Edm.String>; CreatedAt?: KnockoutObservable<Edm.DateTimeOffset>; CreatedBy?: KnockoutObservable<Edm.String>; DeletedAt?: KnockoutObservable<Edm.DateTimeOffset>; ExtensionValues?: KnockoutObservable<Default.ObservableMainMultitenant_Domain_ExtensionValues>; IsDeleted?: KnockoutObservable<Edm.Boolean>; MasterId?: KnockoutObservable<Edm.Guid>; MemoryUsagesInBytes?: KnockoutObservable<Edm.Int32>; ModifiedAt?: KnockoutObservable<Edm.DateTimeOffset>; ModifiedBy?: KnockoutObservable<Edm.String>; Name?: KnockoutObservable<Edm.String>; Type?: KnockoutObservable<LMobile.Unicore.DomainType>; UId?: KnockoutObservable<Edm.Guid>; Version?: KnockoutObservable<Edm.Int64> });

        ActivePluginNames: KnockoutObservableArray<Edm.String>;
        ActiveUsers: KnockoutObservable<Edm.Int32>;
        ActiveUsersLast30Days: KnockoutObservable<Edm.Int32>;
        ActiveUsersLast7Days: KnockoutObservable<Edm.Int32>;
        AuthorisedDomains: KnockoutObservableArray<Edm.Guid>;
        Configuration: KnockoutObservable<Edm.String>;
        CreatedAt: KnockoutObservable<Edm.DateTimeOffset>;
        CreatedBy: KnockoutObservable<Edm.String>;
        DeletedAt: KnockoutObservable<Edm.DateTimeOffset>;
        ExtensionValues: KnockoutObservable<Default.ObservableMainMultitenant_Domain_ExtensionValues>;
        IsDeleted: KnockoutObservable<Edm.Boolean>;
        MasterId: KnockoutObservable<Edm.Guid>;
        MemoryUsagesInBytes: KnockoutObservable<Edm.Int32>;
        ModifiedAt: KnockoutObservable<Edm.DateTimeOffset>;
        ModifiedBy: KnockoutObservable<Edm.String>;
        Name: KnockoutObservable<Edm.String>;
        Type: KnockoutObservable<LMobile.Unicore.DomainType>;
        UId: KnockoutObservable<Edm.Guid>;
        Version: KnockoutObservable<Edm.Int64>;
        innerInstance: MainMultitenant_Domain;
    }

    export class MainMultitenant_Domain extends $data.Entity {
        constructor();
        constructor(initData: { ActivePluginNames?: Edm.String[]; ActiveUsers?: Edm.Int32; ActiveUsersLast30Days?: Edm.Int32; ActiveUsersLast7Days?: Edm.Int32; AuthorisedDomains?: Edm.Guid[]; Configuration?: Edm.String; CreatedAt?: Edm.DateTimeOffset; CreatedBy?: Edm.String; DeletedAt?: Edm.DateTimeOffset; ExtensionValues?: Default.MainMultitenant_Domain_ExtensionValues; IsDeleted?: Edm.Boolean; MasterId?: Edm.Guid; MemoryUsagesInBytes?: Edm.Int32; ModifiedAt?: Edm.DateTimeOffset; ModifiedBy?: Edm.String; Name?: Edm.String; Type?: LMobile.Unicore.DomainType; UId?: Edm.Guid; Version?: Edm.Int64 });

        ActivePluginNames: Edm.String[];
        ActiveUsers: Edm.Int32;
        ActiveUsersLast30Days: Edm.Int32;
        ActiveUsersLast7Days: Edm.Int32;
        AuthorisedDomains: Edm.Guid[];
        Configuration: Edm.String;
        CreatedAt: Edm.DateTimeOffset;
        CreatedBy: Edm.String;
        DeletedAt: Edm.DateTimeOffset;
        ExtensionValues: Default.MainMultitenant_Domain_ExtensionValues;
        IsDeleted: Edm.Boolean;
        MasterId: Edm.Guid;
        MemoryUsagesInBytes: Edm.Int32;
        ModifiedAt: Edm.DateTimeOffset;
        ModifiedBy: Edm.String;
        Name: Edm.String;
        Type: LMobile.Unicore.DomainType;
        UId: Edm.Guid;
        Version: Edm.Int64;
        asKoObservable(): ObservableMainMultitenant_Domain;
        static create(): MainMultitenant_Domain;
        static create(initData:any): MainMultitenant_Domain;
    }

}

namespace Main.Replication.Controllers {

    export class ObservableFailure extends $data.Entity {
        constructor();
        constructor(initData: { Count?: KnockoutObservable<Edm.Int32>; ExternalClientName?: KnockoutObservable<Edm.String>; ExternalId?: KnockoutObservable<Edm.String>; FieldId?: KnockoutObservable<Edm.String>; FieldType?: KnockoutObservable<Edm.String>; NaturalId?: KnockoutObservable<Edm.String>; ShortError?: KnockoutObservable<Edm.String>; Timestamp?: KnockoutObservable<Edm.DateTimeOffset> });

        Count: KnockoutObservable<Edm.Int32>;
        ExternalClientName: KnockoutObservable<Edm.String>;
        ExternalId: KnockoutObservable<Edm.String>;
        FieldId: KnockoutObservable<Edm.String>;
        FieldType: KnockoutObservable<Edm.String>;
        NaturalId: KnockoutObservable<Edm.String>;
        ShortError: KnockoutObservable<Edm.String>;
        Timestamp: KnockoutObservable<Edm.DateTimeOffset>;
        innerInstance: Failure;
    }

    export class Failure extends $data.Entity {
        constructor();
        constructor(initData: { Count?: Edm.Int32; ExternalClientName?: Edm.String; ExternalId?: Edm.String; FieldId?: Edm.String; FieldType?: Edm.String; NaturalId?: Edm.String; ShortError?: Edm.String; Timestamp?: Edm.DateTimeOffset });

        Count: Edm.Int32;
        ExternalClientName: Edm.String;
        ExternalId: Edm.String;
        FieldId: Edm.String;
        FieldType: Edm.String;
        NaturalId: Edm.String;
        ShortError: Edm.String;
        Timestamp: Edm.DateTimeOffset;
        asKoObservable(): ObservableFailure;
        static create(): Failure;
        static create(initData:any): Failure;
    }

    export enum Mode {
        Export,
        Import,
    }

}

namespace Crm.Article.Model {

    export class ObservableArticleGroupInformation extends $data.Entity {
        constructor();
        constructor(initData: { ArticleGroup01Key?: KnockoutObservable<Edm.String>; ArticleGroup02Key?: KnockoutObservable<Edm.String>; ArticleGroup03Key?: KnockoutObservable<Edm.String>; ArticleGroup04Key?: KnockoutObservable<Edm.String>; ArticleGroup05Key?: KnockoutObservable<Edm.String> });

        ArticleGroup01Key: KnockoutObservable<Edm.String>;
        ArticleGroup02Key: KnockoutObservable<Edm.String>;
        ArticleGroup03Key: KnockoutObservable<Edm.String>;
        ArticleGroup04Key: KnockoutObservable<Edm.String>;
        ArticleGroup05Key: KnockoutObservable<Edm.String>;
        innerInstance: ArticleGroupInformation;
    }

    export class ArticleGroupInformation extends $data.Entity {
        constructor();
        constructor(initData: { ArticleGroup01Key?: Edm.String; ArticleGroup02Key?: Edm.String; ArticleGroup03Key?: Edm.String; ArticleGroup04Key?: Edm.String; ArticleGroup05Key?: Edm.String });

        ArticleGroup01Key: Edm.String;
        ArticleGroup02Key: Edm.String;
        ArticleGroup03Key: Edm.String;
        ArticleGroup04Key: Edm.String;
        ArticleGroup05Key: Edm.String;
        asKoObservable(): ObservableArticleGroupInformation;
        static create(): ArticleGroupInformation;
        static create(initData:any): ArticleGroupInformation;
    }

}

namespace Crm.ErpExtension.Controllers.OData {

    export class ObservableArticleTurnoverSummary extends $data.Entity {
        constructor();
        constructor(initData: { ContactKey?: KnockoutObservable<Edm.Guid>; CurrencyKey?: KnockoutObservable<Edm.String>; Difference?: KnockoutObservable<Edm.Decimal>; IsVolume?: KnockoutObservable<Edm.Boolean>; QuantityUnitKey?: KnockoutObservable<Edm.String>; TotalCurrentYear?: KnockoutObservable<Edm.Decimal>; TotalMinusThreeYears?: KnockoutObservable<Edm.Decimal>; TotalPrePreviousYear?: KnockoutObservable<Edm.Decimal>; TotalPreviousYear?: KnockoutObservable<Edm.Decimal> });

        ContactKey: KnockoutObservable<Edm.Guid>;
        CurrencyKey: KnockoutObservable<Edm.String>;
        Difference: KnockoutObservable<Edm.Decimal>;
        IsVolume: KnockoutObservable<Edm.Boolean>;
        QuantityUnitKey: KnockoutObservable<Edm.String>;
        TotalCurrentYear: KnockoutObservable<Edm.Decimal>;
        TotalMinusThreeYears: KnockoutObservable<Edm.Decimal>;
        TotalPrePreviousYear: KnockoutObservable<Edm.Decimal>;
        TotalPreviousYear: KnockoutObservable<Edm.Decimal>;
        innerInstance: ArticleTurnoverSummary;
    }

    export class ObservableSalesOrderInformation extends $data.Entity {
        constructor();
        constructor(initData: { FirstOrder?: KnockoutObservable<Edm.DateTimeOffset>; LastOrder?: KnockoutObservable<Edm.DateTimeOffset>; TotalOrders?: KnockoutObservable<Edm.Int32> });

        FirstOrder: KnockoutObservable<Edm.DateTimeOffset>;
        LastOrder: KnockoutObservable<Edm.DateTimeOffset>;
        TotalOrders: KnockoutObservable<Edm.Int32>;
        innerInstance: SalesOrderInformation;
    }

    export class ObservableTurnoverChartData extends $data.Entity {
        constructor();
        constructor(initData: { d?: KnockoutObservable<Edm.String>; x?: KnockoutObservable<Edm.Int32>; y?: KnockoutObservable<Edm.Decimal> });

        d: KnockoutObservable<Edm.String>;
        innerInstance: TurnoverChartData;
        x: KnockoutObservable<Edm.Int32>;
        y: KnockoutObservable<Edm.Decimal>;
    }

    export class ArticleTurnoverSummary extends $data.Entity {
        constructor();
        constructor(initData: { ContactKey?: Edm.Guid; CurrencyKey?: Edm.String; Difference?: Edm.Decimal; IsVolume?: Edm.Boolean; QuantityUnitKey?: Edm.String; TotalCurrentYear?: Edm.Decimal; TotalMinusThreeYears?: Edm.Decimal; TotalPrePreviousYear?: Edm.Decimal; TotalPreviousYear?: Edm.Decimal });

        ContactKey: Edm.Guid;
        CurrencyKey: Edm.String;
        Difference: Edm.Decimal;
        IsVolume: Edm.Boolean;
        QuantityUnitKey: Edm.String;
        TotalCurrentYear: Edm.Decimal;
        TotalMinusThreeYears: Edm.Decimal;
        TotalPrePreviousYear: Edm.Decimal;
        TotalPreviousYear: Edm.Decimal;
        asKoObservable(): ObservableArticleTurnoverSummary;
        static create(): ArticleTurnoverSummary;
        static create(initData:any): ArticleTurnoverSummary;
    }

    export class SalesOrderInformation extends $data.Entity {
        constructor();
        constructor(initData: { FirstOrder?: Edm.DateTimeOffset; LastOrder?: Edm.DateTimeOffset; TotalOrders?: Edm.Int32 });

        FirstOrder: Edm.DateTimeOffset;
        LastOrder: Edm.DateTimeOffset;
        TotalOrders: Edm.Int32;
        asKoObservable(): ObservableSalesOrderInformation;
        static create(): SalesOrderInformation;
        static create(initData:any): SalesOrderInformation;
    }

    export class TurnoverChartData extends $data.Entity {
        constructor();
        constructor(initData: { d?: Edm.String; x?: Edm.Int32; y?: Edm.Decimal });

        asKoObservable(): ObservableTurnoverChartData;
        d: Edm.String;
        static create(): TurnoverChartData;
        static create(initData:any): TurnoverChartData;
        x: Edm.Int32;
        y: Edm.Decimal;
    }

}

namespace Crm.Project.Controllers.OData {

    export class ObservableValueSumByCurrency extends $data.Entity {
        constructor();
        constructor(initData: { Currency?: KnockoutObservable<Edm.String>; CurrencySum?: KnockoutObservable<Edm.Decimal>; Status?: KnockoutObservable<Edm.String> });

        Currency: KnockoutObservable<Edm.String>;
        CurrencySum: KnockoutObservable<Edm.Decimal>;
        Status: KnockoutObservable<Edm.String>;
        innerInstance: ValueSumByCurrency;
    }

    export class ObservableProjectValuesData extends $data.Entity {
        constructor();
        constructor(initData: { Status?: KnockoutObservable<Edm.String>; TotalCount?: KnockoutObservable<Edm.Int32> });

        Status: KnockoutObservable<Edm.String>;
        TotalCount: KnockoutObservable<Edm.Int32>;
        innerInstance: ProjectValuesData;
    }

    export class ObservableProjectValueChartData extends $data.Entity {
        constructor();
        constructor(initData: { d?: KnockoutObservable<Edm.String>; x?: KnockoutObservable<Edm.Int32>; y?: KnockoutObservable<Edm.Decimal> });

        d: KnockoutObservable<Edm.String>;
        innerInstance: ProjectValueChartData;
        x: KnockoutObservable<Edm.Int32>;
        y: KnockoutObservable<Edm.Decimal>;
    }

    export class ObservablePotentialTotalCount extends $data.Entity {
        constructor();
        constructor(initData: { Status?: KnockoutObservable<Edm.String>; TotalCount?: KnockoutObservable<Edm.Int32> });

        Status: KnockoutObservable<Edm.String>;
        TotalCount: KnockoutObservable<Edm.Int32>;
        innerInstance: PotentialTotalCount;
    }

    export class ValueSumByCurrency extends $data.Entity {
        constructor();
        constructor(initData: { Currency?: Edm.String; CurrencySum?: Edm.Decimal; Status?: Edm.String });

        Currency: Edm.String;
        CurrencySum: Edm.Decimal;
        Status: Edm.String;
        asKoObservable(): ObservableValueSumByCurrency;
        static create(): ValueSumByCurrency;
        static create(initData:any): ValueSumByCurrency;
    }

    export class ProjectValuesData extends $data.Entity {
        constructor();
        constructor(initData: { Status?: Edm.String; TotalCount?: Edm.Int32 });

        Status: Edm.String;
        TotalCount: Edm.Int32;
        asKoObservable(): ObservableProjectValuesData;
        static create(): ProjectValuesData;
        static create(initData:any): ProjectValuesData;
    }

    export class ProjectValueChartData extends $data.Entity {
        constructor();
        constructor(initData: { d?: Edm.String; x?: Edm.Int32; y?: Edm.Decimal });

        asKoObservable(): ObservableProjectValueChartData;
        d: Edm.String;
        static create(): ProjectValueChartData;
        static create(initData:any): ProjectValueChartData;
        x: Edm.Int32;
        y: Edm.Decimal;
    }

    export class PotentialTotalCount extends $data.Entity {
        constructor();
        constructor(initData: { Status?: Edm.String; TotalCount?: Edm.Int32 });

        Status: Edm.String;
        TotalCount: Edm.Int32;
        asKoObservable(): ObservablePotentialTotalCount;
        static create(): PotentialTotalCount;
        static create(initData:any): PotentialTotalCount;
    }

}

namespace Crm.Campaigns.Controllers.OData {

    export class ObservableCampaignSearchCriteria extends $data.Entity {
        constructor();
        constructor(initData: { CampaignId?: KnockoutObservable<Edm.String>; CampaignKey?: KnockoutObservable<Edm.Guid>; CategoryKey?: KnockoutObservable<Edm.String>; Name?: KnockoutObservable<Edm.String>; ProductFamilyKey?: KnockoutObservable<Edm.Guid>; SourceTypeKey?: KnockoutObservable<Edm.String>; StatusKey?: KnockoutObservable<Edm.String> });

        CampaignId: KnockoutObservable<Edm.String>;
        CampaignKey: KnockoutObservable<Edm.Guid>;
        CategoryKey: KnockoutObservable<Edm.String>;
        Name: KnockoutObservable<Edm.String>;
        ProductFamilyKey: KnockoutObservable<Edm.Guid>;
        SourceTypeKey: KnockoutObservable<Edm.String>;
        StatusKey: KnockoutObservable<Edm.String>;
        innerInstance: CampaignSearchCriteria;
    }

    export class ObservableProjectSearchCriteria extends $data.Entity {
        constructor();
        constructor(initData: { CategoryKey?: KnockoutObservable<Edm.String>; Name?: KnockoutObservable<Edm.String>; ParentId?: KnockoutObservable<Edm.Guid>; ProductFamilyKey?: KnockoutObservable<Edm.Guid>; SourceTypeKey?: KnockoutObservable<Edm.String>; StatusKey?: KnockoutObservable<Edm.String> });

        CategoryKey: KnockoutObservable<Edm.String>;
        Name: KnockoutObservable<Edm.String>;
        ParentId: KnockoutObservable<Edm.Guid>;
        ProductFamilyKey: KnockoutObservable<Edm.Guid>;
        SourceTypeKey: KnockoutObservable<Edm.String>;
        StatusKey: KnockoutObservable<Edm.String>;
        innerInstance: ProjectSearchCriteria;
    }

    export class ObservablePotentialSearchCriteria extends $data.Entity {
        constructor();
        constructor(initData: { Name?: KnockoutObservable<Edm.String>; ParentId?: KnockoutObservable<Edm.Guid>; PriorityKey?: KnockoutObservable<Edm.String>; ProductFamilyKey?: KnockoutObservable<Edm.Guid>; SourceTypeKey?: KnockoutObservable<Edm.String>; StatusKey?: KnockoutObservable<Edm.String> });

        Name: KnockoutObservable<Edm.String>;
        ParentId: KnockoutObservable<Edm.Guid>;
        PriorityKey: KnockoutObservable<Edm.String>;
        ProductFamilyKey: KnockoutObservable<Edm.Guid>;
        SourceTypeKey: KnockoutObservable<Edm.String>;
        StatusKey: KnockoutObservable<Edm.String>;
        innerInstance: PotentialSearchCriteria;
    }

    export class ObservablePeopleSearchCriteria extends $data.Entity {
        constructor();
        constructor(initData: { BusinessTitleKey?: KnockoutObservable<Edm.String>; DepartmentTypeKey?: KnockoutObservable<Edm.String>; Firstname?: KnockoutObservable<Edm.String>; ParentId?: KnockoutObservable<Edm.Guid>; Surname?: KnockoutObservable<Edm.String> });

        BusinessTitleKey: KnockoutObservable<Edm.String>;
        DepartmentTypeKey: KnockoutObservable<Edm.String>;
        Firstname: KnockoutObservable<Edm.String>;
        ParentId: KnockoutObservable<Edm.Guid>;
        Surname: KnockoutObservable<Edm.String>;
        innerInstance: PeopleSearchCriteria;
    }

    export class ObservableCompanySearchCriteria extends $data.Entity {
        constructor();
        constructor(initData: { Branch1Key?: KnockoutObservable<Edm.String>; City?: KnockoutObservable<Edm.String>; CompanyId?: KnockoutObservable<Edm.Guid>; CompanyTypeKey?: KnockoutObservable<Edm.String>; CountryKey?: KnockoutObservable<Edm.String>; LanguageKey?: KnockoutObservable<Edm.String>; Name?: KnockoutObservable<Edm.String>; ResponsibleUser?: KnockoutObservable<Edm.String>; SourceTypeKey?: KnockoutObservable<Edm.String>; ZipCode?: KnockoutObservable<Edm.String> });

        Branch1Key: KnockoutObservable<Edm.String>;
        City: KnockoutObservable<Edm.String>;
        CompanyId: KnockoutObservable<Edm.Guid>;
        CompanyTypeKey: KnockoutObservable<Edm.String>;
        CountryKey: KnockoutObservable<Edm.String>;
        LanguageKey: KnockoutObservable<Edm.String>;
        Name: KnockoutObservable<Edm.String>;
        ResponsibleUser: KnockoutObservable<Edm.String>;
        SourceTypeKey: KnockoutObservable<Edm.String>;
        ZipCode: KnockoutObservable<Edm.String>;
        innerInstance: CompanySearchCriteria;
    }

    export class ObservableCampaignParticipantsSearchCriteria extends $data.Entity {
        constructor();
        constructor(initData: { CampaignCriteria?: KnockoutObservable<Crm.Campaigns.Controllers.OData.CampaignSearchCriteria>; CampaignId?: KnockoutObservable<Edm.Guid>; CompanyCriteria?: KnockoutObservable<Crm.Campaigns.Controllers.OData.CompanySearchCriteria>; PeopleCriteria?: KnockoutObservable<Crm.Campaigns.Controllers.OData.PeopleSearchCriteria>; PotentialCriteria?: KnockoutObservable<Crm.Campaigns.Controllers.OData.PotentialSearchCriteria>; ProjectCriteria?: KnockoutObservable<Crm.Campaigns.Controllers.OData.ProjectSearchCriteria> });

        CampaignCriteria: KnockoutObservable<Crm.Campaigns.Controllers.OData.CampaignSearchCriteria>;
        CampaignId: KnockoutObservable<Edm.Guid>;
        CompanyCriteria: KnockoutObservable<Crm.Campaigns.Controllers.OData.CompanySearchCriteria>;
        PeopleCriteria: KnockoutObservable<Crm.Campaigns.Controllers.OData.PeopleSearchCriteria>;
        PotentialCriteria: KnockoutObservable<Crm.Campaigns.Controllers.OData.PotentialSearchCriteria>;
        ProjectCriteria: KnockoutObservable<Crm.Campaigns.Controllers.OData.ProjectSearchCriteria>;
        innerInstance: CampaignParticipantsSearchCriteria;
    }

    export class CampaignSearchCriteria extends $data.Entity {
        constructor();
        constructor(initData: { CampaignId?: Edm.String; CampaignKey?: Edm.Guid; CategoryKey?: Edm.String; Name?: Edm.String; ProductFamilyKey?: Edm.Guid; SourceTypeKey?: Edm.String; StatusKey?: Edm.String });

        CampaignId: Edm.String;
        CampaignKey: Edm.Guid;
        CategoryKey: Edm.String;
        Name: Edm.String;
        ProductFamilyKey: Edm.Guid;
        SourceTypeKey: Edm.String;
        StatusKey: Edm.String;
        asKoObservable(): ObservableCampaignSearchCriteria;
        static create(): CampaignSearchCriteria;
        static create(initData:any): CampaignSearchCriteria;
    }

    export class ProjectSearchCriteria extends $data.Entity {
        constructor();
        constructor(initData: { CategoryKey?: Edm.String; Name?: Edm.String; ParentId?: Edm.Guid; ProductFamilyKey?: Edm.Guid; SourceTypeKey?: Edm.String; StatusKey?: Edm.String });

        CategoryKey: Edm.String;
        Name: Edm.String;
        ParentId: Edm.Guid;
        ProductFamilyKey: Edm.Guid;
        SourceTypeKey: Edm.String;
        StatusKey: Edm.String;
        asKoObservable(): ObservableProjectSearchCriteria;
        static create(): ProjectSearchCriteria;
        static create(initData:any): ProjectSearchCriteria;
    }

    export class PotentialSearchCriteria extends $data.Entity {
        constructor();
        constructor(initData: { Name?: Edm.String; ParentId?: Edm.Guid; PriorityKey?: Edm.String; ProductFamilyKey?: Edm.Guid; SourceTypeKey?: Edm.String; StatusKey?: Edm.String });

        Name: Edm.String;
        ParentId: Edm.Guid;
        PriorityKey: Edm.String;
        ProductFamilyKey: Edm.Guid;
        SourceTypeKey: Edm.String;
        StatusKey: Edm.String;
        asKoObservable(): ObservablePotentialSearchCriteria;
        static create(): PotentialSearchCriteria;
        static create(initData:any): PotentialSearchCriteria;
    }

    export class PeopleSearchCriteria extends $data.Entity {
        constructor();
        constructor(initData: { BusinessTitleKey?: Edm.String; DepartmentTypeKey?: Edm.String; Firstname?: Edm.String; ParentId?: Edm.Guid; Surname?: Edm.String });

        BusinessTitleKey: Edm.String;
        DepartmentTypeKey: Edm.String;
        Firstname: Edm.String;
        ParentId: Edm.Guid;
        Surname: Edm.String;
        asKoObservable(): ObservablePeopleSearchCriteria;
        static create(): PeopleSearchCriteria;
        static create(initData:any): PeopleSearchCriteria;
    }

    export class CompanySearchCriteria extends $data.Entity {
        constructor();
        constructor(initData: { Branch1Key?: Edm.String; City?: Edm.String; CompanyId?: Edm.Guid; CompanyTypeKey?: Edm.String; CountryKey?: Edm.String; LanguageKey?: Edm.String; Name?: Edm.String; ResponsibleUser?: Edm.String; SourceTypeKey?: Edm.String; ZipCode?: Edm.String });

        Branch1Key: Edm.String;
        City: Edm.String;
        CompanyId: Edm.Guid;
        CompanyTypeKey: Edm.String;
        CountryKey: Edm.String;
        LanguageKey: Edm.String;
        Name: Edm.String;
        ResponsibleUser: Edm.String;
        SourceTypeKey: Edm.String;
        ZipCode: Edm.String;
        asKoObservable(): ObservableCompanySearchCriteria;
        static create(): CompanySearchCriteria;
        static create(initData:any): CompanySearchCriteria;
    }

    export class CampaignParticipantsSearchCriteria extends $data.Entity {
        constructor();
        constructor(initData: { CampaignCriteria?: Crm.Campaigns.Controllers.OData.CampaignSearchCriteria; CampaignId?: Edm.Guid; CompanyCriteria?: Crm.Campaigns.Controllers.OData.CompanySearchCriteria; PeopleCriteria?: Crm.Campaigns.Controllers.OData.PeopleSearchCriteria; PotentialCriteria?: Crm.Campaigns.Controllers.OData.PotentialSearchCriteria; ProjectCriteria?: Crm.Campaigns.Controllers.OData.ProjectSearchCriteria });

        CampaignCriteria: Crm.Campaigns.Controllers.OData.CampaignSearchCriteria;
        CampaignId: Edm.Guid;
        CompanyCriteria: Crm.Campaigns.Controllers.OData.CompanySearchCriteria;
        PeopleCriteria: Crm.Campaigns.Controllers.OData.PeopleSearchCriteria;
        PotentialCriteria: Crm.Campaigns.Controllers.OData.PotentialSearchCriteria;
        ProjectCriteria: Crm.Campaigns.Controllers.OData.ProjectSearchCriteria;
        asKoObservable(): ObservableCampaignParticipantsSearchCriteria;
        static create(): CampaignParticipantsSearchCriteria;
        static create(initData:any): CampaignParticipantsSearchCriteria;
    }

}

namespace Sms.Scheduler.Model {

    export class ObservableHourSpan extends $data.Entity {
        constructor();
        constructor(initData: { From?: KnockoutObservable<Edm.Double>; To?: KnockoutObservable<Edm.Double> });

        From: KnockoutObservable<Edm.Double>;
        To: KnockoutObservable<Edm.Double>;
        innerInstance: HourSpan;
    }

    export class ObservableClientConfig extends $data.Entity {
        constructor();
        constructor(initData: { AllowSchedulingForPast?: KnockoutObservable<Edm.Boolean>; DataForFirstRow?: KnockoutObservableArray<Edm.String>; DataForSecondRow?: KnockoutObservableArray<Edm.String>; DataForThirdRow?: KnockoutObservableArray<Edm.String>; EnablePlanningConfirmations?: KnockoutObservable<Edm.Boolean>; LoadClosedServiceOrders?: KnockoutObservable<Edm.Boolean>; LowerBound?: KnockoutObservable<Edm.Decimal>; NonWorkingHours?: KnockoutObservableArray<Sms.Scheduler.Model.HourSpan>; PipelineFirstLine?: KnockoutObservable<Edm.String>; PipelineGroup?: KnockoutObservableArray<Edm.String>; PipelineSecondLine?: KnockoutObservable<Edm.String>; ResourceGroup?: KnockoutObservableArray<Edm.String>; ResourceRowHeight?: KnockoutObservable<Edm.Int32>; ResourceTooltip?: KnockoutObservableArray<Edm.String>; RouteColors?: KnockoutObservableArray<Edm.String>; ServiceOrderDispatchDefaultDuration?: KnockoutObservable<Edm.Int32>; ServiceOrderDispatchForceMaximumDuration?: KnockoutObservable<Edm.Boolean>; ServiceOrderDispatchIgnoreCalculatedDuration?: KnockoutObservable<Edm.Boolean>; ServiceOrderDispatchMaximumDuration?: KnockoutObservable<Edm.Int32>; ServiceOrderDispatchTooltip?: KnockoutObservableArray<Edm.String>; ServiceOrderTimeTooltip?: KnockoutObservableArray<Edm.String>; ServiceOrderTimesScheduling?: KnockoutObservable<Edm.Boolean>; ServiceOrderTooltip?: KnockoutObservableArray<Edm.String>; SnapFirstEventOfDayToStartOfDay?: KnockoutObservable<Edm.Boolean>; UpperBound?: KnockoutObservable<Edm.Decimal> });

        AllowSchedulingForPast: KnockoutObservable<Edm.Boolean>;
        DataForFirstRow: KnockoutObservableArray<Edm.String>;
        DataForSecondRow: KnockoutObservableArray<Edm.String>;
        DataForThirdRow: KnockoutObservableArray<Edm.String>;
        EnablePlanningConfirmations: KnockoutObservable<Edm.Boolean>;
        LoadClosedServiceOrders: KnockoutObservable<Edm.Boolean>;
        LowerBound: KnockoutObservable<Edm.Decimal>;
        NonWorkingHours: KnockoutObservableArray<Sms.Scheduler.Model.HourSpan>;
        PipelineFirstLine: KnockoutObservable<Edm.String>;
        PipelineGroup: KnockoutObservableArray<Edm.String>;
        PipelineSecondLine: KnockoutObservable<Edm.String>;
        ResourceGroup: KnockoutObservableArray<Edm.String>;
        ResourceRowHeight: KnockoutObservable<Edm.Int32>;
        ResourceTooltip: KnockoutObservableArray<Edm.String>;
        RouteColors: KnockoutObservableArray<Edm.String>;
        ServiceOrderDispatchDefaultDuration: KnockoutObservable<Edm.Int32>;
        ServiceOrderDispatchForceMaximumDuration: KnockoutObservable<Edm.Boolean>;
        ServiceOrderDispatchIgnoreCalculatedDuration: KnockoutObservable<Edm.Boolean>;
        ServiceOrderDispatchMaximumDuration: KnockoutObservable<Edm.Int32>;
        ServiceOrderDispatchTooltip: KnockoutObservableArray<Edm.String>;
        ServiceOrderTimeTooltip: KnockoutObservableArray<Edm.String>;
        ServiceOrderTimesScheduling: KnockoutObservable<Edm.Boolean>;
        ServiceOrderTooltip: KnockoutObservableArray<Edm.String>;
        SnapFirstEventOfDayToStartOfDay: KnockoutObservable<Edm.Boolean>;
        UpperBound: KnockoutObservable<Edm.Decimal>;
        innerInstance: ClientConfig;
    }

    export class HourSpan extends $data.Entity {
        constructor();
        constructor(initData: { From?: Edm.Double; To?: Edm.Double });

        From: Edm.Double;
        To: Edm.Double;
        asKoObservable(): ObservableHourSpan;
        static create(): HourSpan;
        static create(initData:any): HourSpan;
    }

    export class ClientConfig extends $data.Entity {
        constructor();
        constructor(initData: { AllowSchedulingForPast?: Edm.Boolean; DataForFirstRow?: Edm.String[]; DataForSecondRow?: Edm.String[]; DataForThirdRow?: Edm.String[]; EnablePlanningConfirmations?: Edm.Boolean; LoadClosedServiceOrders?: Edm.Boolean; LowerBound?: Edm.Decimal; NonWorkingHours?: Sms.Scheduler.Model.HourSpan[]; PipelineFirstLine?: Edm.String; PipelineGroup?: Edm.String[]; PipelineSecondLine?: Edm.String; ResourceGroup?: Edm.String[]; ResourceRowHeight?: Edm.Int32; ResourceTooltip?: Edm.String[]; RouteColors?: Edm.String[]; ServiceOrderDispatchDefaultDuration?: Edm.Int32; ServiceOrderDispatchForceMaximumDuration?: Edm.Boolean; ServiceOrderDispatchIgnoreCalculatedDuration?: Edm.Boolean; ServiceOrderDispatchMaximumDuration?: Edm.Int32; ServiceOrderDispatchTooltip?: Edm.String[]; ServiceOrderTimeTooltip?: Edm.String[]; ServiceOrderTimesScheduling?: Edm.Boolean; ServiceOrderTooltip?: Edm.String[]; SnapFirstEventOfDayToStartOfDay?: Edm.Boolean; UpperBound?: Edm.Decimal });

        AllowSchedulingForPast: Edm.Boolean;
        DataForFirstRow: Edm.String[];
        DataForSecondRow: Edm.String[];
        DataForThirdRow: Edm.String[];
        EnablePlanningConfirmations: Edm.Boolean;
        LoadClosedServiceOrders: Edm.Boolean;
        LowerBound: Edm.Decimal;
        NonWorkingHours: Sms.Scheduler.Model.HourSpan[];
        PipelineFirstLine: Edm.String;
        PipelineGroup: Edm.String[];
        PipelineSecondLine: Edm.String;
        ResourceGroup: Edm.String[];
        ResourceRowHeight: Edm.Int32;
        ResourceTooltip: Edm.String[];
        RouteColors: Edm.String[];
        ServiceOrderDispatchDefaultDuration: Edm.Int32;
        ServiceOrderDispatchForceMaximumDuration: Edm.Boolean;
        ServiceOrderDispatchIgnoreCalculatedDuration: Edm.Boolean;
        ServiceOrderDispatchMaximumDuration: Edm.Int32;
        ServiceOrderDispatchTooltip: Edm.String[];
        ServiceOrderTimeTooltip: Edm.String[];
        ServiceOrderTimesScheduling: Edm.Boolean;
        ServiceOrderTooltip: Edm.String[];
        SnapFirstEventOfDayToStartOfDay: Edm.Boolean;
        UpperBound: Edm.Decimal;
        asKoObservable(): ObservableClientConfig;
        static create(): ClientConfig;
        static create(initData:any): ClientConfig;
    }

}

namespace Default {

    export class Container extends $data.EntityContext {
        onReady(): Promise<Container>;

        CreateApiRole: { (clientType: Main.Replication.Model.ClientType, suffix: Edm.String): Promise<void>; };
        CrmArticle_Article: $data.EntitySet<typeof Crm.Article.Rest.Model.CrmArticle_Article, Crm.Article.Rest.Model.CrmArticle_Article> & {
            GetDistinctArticleGroupCombinations(): $data.Queryable<Crm.Article.Model.ArticleGroupInformation>;
        };
        CrmArticle_ArticleCompanyRelationship: $data.EntitySet<typeof Crm.Article.Rest.Model.CrmArticle_ArticleCompanyRelationship, Crm.Article.Rest.Model.CrmArticle_ArticleCompanyRelationship>;
        CrmArticle_ArticleCompanyRelationshipType: $data.EntitySet<typeof Crm.Article.Rest.Model.Lookups.CrmArticle_ArticleCompanyRelationshipType, Crm.Article.Rest.Model.Lookups.CrmArticle_ArticleCompanyRelationshipType>;
        CrmArticle_ArticleDescription: $data.EntitySet<typeof Crm.Article.Rest.Model.Lookups.CrmArticle_ArticleDescription, Crm.Article.Rest.Model.Lookups.CrmArticle_ArticleDescription>;
        CrmArticle_ArticleDowntime: $data.EntitySet<typeof Crm.Article.Rest.Model.CrmArticle_ArticleDowntime, Crm.Article.Rest.Model.CrmArticle_ArticleDowntime>;
        CrmArticle_ArticleDowntimeReason: $data.EntitySet<typeof Crm.Article.Model.Lookups.CrmArticle_ArticleDowntimeReason, Crm.Article.Model.Lookups.CrmArticle_ArticleDowntimeReason>;
        CrmArticle_ArticleGroup01: $data.EntitySet<typeof Crm.Article.Rest.Model.Lookups.CrmArticle_ArticleGroup01, Crm.Article.Rest.Model.Lookups.CrmArticle_ArticleGroup01>;
        CrmArticle_ArticleGroup02: $data.EntitySet<typeof Crm.Article.Rest.Model.Lookups.CrmArticle_ArticleGroup02, Crm.Article.Rest.Model.Lookups.CrmArticle_ArticleGroup02>;
        CrmArticle_ArticleGroup03: $data.EntitySet<typeof Crm.Article.Rest.Model.Lookups.CrmArticle_ArticleGroup03, Crm.Article.Rest.Model.Lookups.CrmArticle_ArticleGroup03>;
        CrmArticle_ArticleGroup04: $data.EntitySet<typeof Crm.Article.Rest.Model.Lookups.CrmArticle_ArticleGroup04, Crm.Article.Rest.Model.Lookups.CrmArticle_ArticleGroup04>;
        CrmArticle_ArticleGroup05: $data.EntitySet<typeof Crm.Article.Rest.Model.Lookups.CrmArticle_ArticleGroup05, Crm.Article.Rest.Model.Lookups.CrmArticle_ArticleGroup05>;
        CrmArticle_ArticleRelationship: $data.EntitySet<typeof Crm.Article.Rest.Model.CrmArticle_ArticleRelationship, Crm.Article.Rest.Model.CrmArticle_ArticleRelationship>;
        CrmArticle_ArticleRelationshipType: $data.EntitySet<typeof Crm.Article.Rest.Model.Lookups.CrmArticle_ArticleRelationshipType, Crm.Article.Rest.Model.Lookups.CrmArticle_ArticleRelationshipType>;
        CrmArticle_ArticleType: $data.EntitySet<typeof Crm.Article.Rest.Model.Lookups.CrmArticle_ArticleType, Crm.Article.Rest.Model.Lookups.CrmArticle_ArticleType>;
        CrmArticle_ArticleUserRelationship: $data.EntitySet<typeof Crm.Article.Rest.Model.CrmArticle_ArticleUserRelationship, Crm.Article.Rest.Model.CrmArticle_ArticleUserRelationship>;
        CrmArticle_CompanyPriceGroup: $data.EntitySet<typeof Crm.Article.Model.Lookups.CrmArticle_CompanyPriceGroup, Crm.Article.Model.Lookups.CrmArticle_CompanyPriceGroup>;
        CrmArticle_CompanyPriceLevel: $data.EntitySet<typeof Crm.Article.Model.Lookups.CrmArticle_CompanyPriceLevel, Crm.Article.Model.Lookups.CrmArticle_CompanyPriceLevel>;
        CrmArticle_DrivingLicenceCategory: $data.EntitySet<typeof Crm.Article.Model.Lookups.CrmArticle_DrivingLicenceCategory, Crm.Article.Model.Lookups.CrmArticle_DrivingLicenceCategory>;
        CrmArticle_Location: $data.EntitySet<typeof Crm.Article.Rest.Model.CrmArticle_Location, Crm.Article.Rest.Model.CrmArticle_Location>;
        CrmArticle_Price: $data.EntitySet<typeof Crm.Article.Rest.Model.CrmArticle_Price, Crm.Article.Rest.Model.CrmArticle_Price>;
        CrmArticle_ProductFamily: $data.EntitySet<typeof Crm.Article.Rest.Model.CrmArticle_ProductFamily, Crm.Article.Rest.Model.CrmArticle_ProductFamily>;
        CrmArticle_ProductFamilyDescription: $data.EntitySet<typeof Crm.Article.Rest.Model.Lookups.CrmArticle_ProductFamilyDescription, Crm.Article.Rest.Model.Lookups.CrmArticle_ProductFamilyDescription>;
        CrmArticle_ProductFamilyStatus: $data.EntitySet<typeof Crm.Article.Rest.Model.Lookups.CrmArticle_ProductFamilyStatus, Crm.Article.Rest.Model.Lookups.CrmArticle_ProductFamilyStatus>;
        CrmArticle_QuantityUnit: $data.EntitySet<typeof Crm.Article.Rest.Model.Lookups.CrmArticle_QuantityUnit, Crm.Article.Rest.Model.Lookups.CrmArticle_QuantityUnit>;
        CrmArticle_QuantityUnitEntry: $data.EntitySet<typeof Crm.Article.Rest.Model.CrmArticle_QuantityUnitEntry, Crm.Article.Rest.Model.CrmArticle_QuantityUnitEntry>;
        CrmArticle_Serial: $data.EntitySet<typeof Crm.Article.Rest.Model.CrmArticle_Serial, Crm.Article.Rest.Model.CrmArticle_Serial>;
        CrmArticle_Stock: $data.EntitySet<typeof Crm.Article.Rest.Model.CrmArticle_Stock, Crm.Article.Rest.Model.CrmArticle_Stock>;
        CrmArticle_StorageArea: $data.EntitySet<typeof Crm.Article.Rest.Model.CrmArticle_StorageArea, Crm.Article.Rest.Model.CrmArticle_StorageArea>;
        CrmArticle_Store: $data.EntitySet<typeof Crm.Article.Rest.Model.CrmArticle_Store, Crm.Article.Rest.Model.CrmArticle_Store>;
        CrmArticle_StoreName: $data.EntitySet<typeof Crm.Article.Rest.Model.Lookups.CrmArticle_StoreName, Crm.Article.Rest.Model.Lookups.CrmArticle_StoreName>;
        CrmArticle_VATLevel: $data.EntitySet<typeof Crm.Article.Rest.Model.Lookups.CrmArticle_VATLevel, Crm.Article.Rest.Model.Lookups.CrmArticle_VATLevel>;
        CrmAttributeForms_AttributeForm: $data.EntitySet<typeof Crm.AttributeForms.Rest.Model.CrmAttributeForms_AttributeForm, Crm.AttributeForms.Rest.Model.CrmAttributeForms_AttributeForm>;
        CrmAttributeForms_AttributeFormContactTypeRelationship: $data.EntitySet<typeof Crm.AttributeForms.Rest.Model.CrmAttributeForms_AttributeFormContactTypeRelationship, Crm.AttributeForms.Rest.Model.CrmAttributeForms_AttributeFormContactTypeRelationship>;
        CrmCampaigns_Campaign: $data.EntitySet<typeof Crm.Campaigns.Rest.Model.CrmCampaigns_Campaign, Crm.Campaigns.Rest.Model.CrmCampaigns_Campaign>;
        CrmCampaigns_CampaignCompany: $data.EntitySet<typeof Crm.Campaigns.Rest.Model.CrmCampaigns_CampaignCompany, Crm.Campaigns.Rest.Model.CrmCampaigns_CampaignCompany>;
        CrmCampaigns_CampaignPerson: $data.EntitySet<typeof Crm.Campaigns.Rest.Model.CrmCampaigns_CampaignPerson, Crm.Campaigns.Rest.Model.CrmCampaigns_CampaignPerson>;
        CrmCampaigns_CampaignStatus: $data.EntitySet<typeof Crm.Campaigns.Rest.Model.Lookups.CrmCampaigns_CampaignStatus, Crm.Campaigns.Rest.Model.Lookups.CrmCampaigns_CampaignStatus>;
        CrmConfigurator_ConfigurationBase: $data.EntitySet<typeof Crm.Configurator.Rest.Model.CrmConfigurator_ConfigurationBase, Crm.Configurator.Rest.Model.CrmConfigurator_ConfigurationBase>;
        CrmConfigurator_ConfigurationRule: $data.EntitySet<typeof Crm.Configurator.Rest.Model.CrmConfigurator_ConfigurationRule, Crm.Configurator.Rest.Model.CrmConfigurator_ConfigurationRule>;
        CrmConfigurator_ConfigurationRuleType: $data.EntitySet<typeof Crm.Configurator.Rest.Model.Lookups.CrmConfigurator_ConfigurationRuleType, Crm.Configurator.Rest.Model.Lookups.CrmConfigurator_ConfigurationRuleType>;
        CrmConfigurator_Variable: $data.EntitySet<typeof Crm.Configurator.Rest.Model.CrmConfigurator_Variable, Crm.Configurator.Rest.Model.CrmConfigurator_Variable>;
        CrmDynamicForms_CheckBoxList: $data.EntitySet<typeof Crm.DynamicForms.Rest.Model.CrmDynamicForms_CheckBoxList, Crm.DynamicForms.Rest.Model.CrmDynamicForms_CheckBoxList>;
        CrmDynamicForms_Date: $data.EntitySet<typeof Crm.DynamicForms.Rest.Model.CrmDynamicForms_Date, Crm.DynamicForms.Rest.Model.CrmDynamicForms_Date>;
        CrmDynamicForms_DropDown: $data.EntitySet<typeof Crm.DynamicForms.Rest.Model.CrmDynamicForms_DropDown, Crm.DynamicForms.Rest.Model.CrmDynamicForms_DropDown>;
        CrmDynamicForms_DynamicForm: $data.EntitySet<typeof Crm.DynamicForms.Rest.Model.CrmDynamicForms_DynamicForm, Crm.DynamicForms.Rest.Model.CrmDynamicForms_DynamicForm>;
        CrmDynamicForms_DynamicFormCategory: $data.EntitySet<typeof Crm.DynamicForms.Rest.Model.Lookups.CrmDynamicForms_DynamicFormCategory, Crm.DynamicForms.Rest.Model.Lookups.CrmDynamicForms_DynamicFormCategory>;
        CrmDynamicForms_DynamicFormElementRule: $data.EntitySet<typeof Crm.DynamicForms.Rest.Model.CrmDynamicForms_DynamicFormElementRule, Crm.DynamicForms.Rest.Model.CrmDynamicForms_DynamicFormElementRule>;
        CrmDynamicForms_DynamicFormElementRuleCondition: $data.EntitySet<typeof Crm.DynamicForms.Rest.Model.CrmDynamicForms_DynamicFormElementRuleCondition, Crm.DynamicForms.Rest.Model.CrmDynamicForms_DynamicFormElementRuleCondition>;
        CrmDynamicForms_DynamicFormElementTemplate: $data.EntitySet<typeof Crm.DynamicForms.Rest.Model.CrmDynamicForms_DynamicFormElementTemplate, Crm.DynamicForms.Rest.Model.CrmDynamicForms_DynamicFormElementTemplate>;
        CrmDynamicForms_DynamicFormElementTemplateLanguage: $data.EntitySet<typeof Crm.DynamicForms.Rest.Model.CrmDynamicForms_DynamicFormElementTemplateLanguage, Crm.DynamicForms.Rest.Model.CrmDynamicForms_DynamicFormElementTemplateLanguage>;
        CrmDynamicForms_DynamicFormFileResponse: $data.EntitySet<typeof Crm.DynamicForms.Rest.Model.CrmDynamicForms_DynamicFormFileResponse, Crm.DynamicForms.Rest.Model.CrmDynamicForms_DynamicFormFileResponse>;
        CrmDynamicForms_DynamicFormLanguage: $data.EntitySet<typeof Crm.DynamicForms.Rest.Model.CrmDynamicForms_DynamicFormLanguage, Crm.DynamicForms.Rest.Model.CrmDynamicForms_DynamicFormLanguage>;
        CrmDynamicForms_DynamicFormLocalization: $data.EntitySet<typeof Crm.DynamicForms.Rest.Model.Lookups.CrmDynamicForms_DynamicFormLocalization, Crm.DynamicForms.Rest.Model.Lookups.CrmDynamicForms_DynamicFormLocalization>;
        CrmDynamicForms_DynamicFormRemark: $data.EntitySet<typeof Crm.DynamicForms.Rest.Model.CrmDynamicForms_DynamicFormRemark, Crm.DynamicForms.Rest.Model.CrmDynamicForms_DynamicFormRemark>;
        CrmDynamicForms_DynamicFormResponse: $data.EntitySet<typeof Crm.DynamicForms.Rest.Model.CrmDynamicForms_DynamicFormResponse, Crm.DynamicForms.Rest.Model.CrmDynamicForms_DynamicFormResponse>;
        CrmDynamicForms_DynamicFormResponseFileResourceRelationship: $data.EntitySet<typeof Crm.DynamicForms.Rest.Model.CrmDynamicForms_DynamicFormResponseFileResourceRelationship, Crm.DynamicForms.Rest.Model.CrmDynamicForms_DynamicFormResponseFileResourceRelationship>;
        CrmDynamicForms_DynamicFormResponseTemplate: $data.EntitySet<typeof Crm.DynamicForms.Rest.Model.CrmDynamicForms_DynamicFormResponseTemplate, Crm.DynamicForms.Rest.Model.CrmDynamicForms_DynamicFormResponseTemplate>;
        CrmDynamicForms_DynamicFormStatus: $data.EntitySet<typeof Crm.DynamicForms.Rest.Model.Lookups.CrmDynamicForms_DynamicFormStatus, Crm.DynamicForms.Rest.Model.Lookups.CrmDynamicForms_DynamicFormStatus>;
        CrmDynamicForms_FileAttachmentDynamicFormElement: $data.EntitySet<typeof Crm.DynamicForms.Rest.Model.CrmDynamicForms_FileAttachmentDynamicFormElement, Crm.DynamicForms.Rest.Model.CrmDynamicForms_FileAttachmentDynamicFormElement>;
        CrmDynamicForms_Image: $data.EntitySet<typeof Crm.DynamicForms.Rest.Model.CrmDynamicForms_Image, Crm.DynamicForms.Rest.Model.CrmDynamicForms_Image>;
        CrmDynamicForms_Literal: $data.EntitySet<typeof Crm.DynamicForms.Rest.Model.CrmDynamicForms_Literal, Crm.DynamicForms.Rest.Model.CrmDynamicForms_Literal>;
        CrmDynamicForms_MatrixQuestion: $data.EntitySet<typeof Crm.DynamicForms.Rest.Model.CrmDynamicForms_MatrixQuestion, Crm.DynamicForms.Rest.Model.CrmDynamicForms_MatrixQuestion>;
        CrmDynamicForms_MultiLineText: $data.EntitySet<typeof Crm.DynamicForms.Rest.Model.CrmDynamicForms_MultiLineText, Crm.DynamicForms.Rest.Model.CrmDynamicForms_MultiLineText>;
        CrmDynamicForms_NoSignatureReason: $data.EntitySet<typeof Crm.DynamicForms.Model.Lookups.CrmDynamicForms_NoSignatureReason, Crm.DynamicForms.Model.Lookups.CrmDynamicForms_NoSignatureReason>;
        CrmDynamicForms_Number: $data.EntitySet<typeof Crm.DynamicForms.Rest.Model.CrmDynamicForms_Number, Crm.DynamicForms.Rest.Model.CrmDynamicForms_Number>;
        CrmDynamicForms_PageSeparator: $data.EntitySet<typeof Crm.DynamicForms.Rest.Model.CrmDynamicForms_PageSeparator, Crm.DynamicForms.Rest.Model.CrmDynamicForms_PageSeparator>;
        CrmDynamicForms_RadioButtonList: $data.EntitySet<typeof Crm.DynamicForms.Rest.Model.CrmDynamicForms_RadioButtonList, Crm.DynamicForms.Rest.Model.CrmDynamicForms_RadioButtonList>;
        CrmDynamicForms_SectionSeparator: $data.EntitySet<typeof Crm.DynamicForms.Rest.Model.CrmDynamicForms_SectionSeparator, Crm.DynamicForms.Rest.Model.CrmDynamicForms_SectionSeparator>;
        CrmDynamicForms_SignaturePad: $data.EntitySet<typeof Crm.DynamicForms.Rest.Model.CrmDynamicForms_SignaturePad, Crm.DynamicForms.Rest.Model.CrmDynamicForms_SignaturePad>;
        CrmDynamicForms_SingleLineText: $data.EntitySet<typeof Crm.DynamicForms.Rest.Model.CrmDynamicForms_SingleLineText, Crm.DynamicForms.Rest.Model.CrmDynamicForms_SingleLineText>;
        CrmDynamicForms_Time: $data.EntitySet<typeof Crm.DynamicForms.Rest.Model.CrmDynamicForms_Time, Crm.DynamicForms.Rest.Model.CrmDynamicForms_Time>;
        CrmErpExtension_CreditNote: $data.EntitySet<typeof Crm.ErpExtension.Rest.Model.CrmErpExtension_CreditNote, Crm.ErpExtension.Rest.Model.CrmErpExtension_CreditNote>;
        CrmErpExtension_CreditNotePosition: $data.EntitySet<typeof Crm.ErpExtension.Rest.Model.CrmErpExtension_CreditNotePosition, Crm.ErpExtension.Rest.Model.CrmErpExtension_CreditNotePosition>;
        CrmErpExtension_DeliveryNote: $data.EntitySet<typeof Crm.ErpExtension.Rest.Model.CrmErpExtension_DeliveryNote, Crm.ErpExtension.Rest.Model.CrmErpExtension_DeliveryNote>;
        CrmErpExtension_DeliveryNotePosition: $data.EntitySet<typeof Crm.ErpExtension.Rest.Model.CrmErpExtension_DeliveryNotePosition, Crm.ErpExtension.Rest.Model.CrmErpExtension_DeliveryNotePosition>;
        CrmErpExtension_ErpDeliveryMethod: $data.EntitySet<typeof Crm.ErpExtension.Rest.Model.Lookups.CrmErpExtension_ErpDeliveryMethod, Crm.ErpExtension.Rest.Model.Lookups.CrmErpExtension_ErpDeliveryMethod>;
        CrmErpExtension_ErpDeliveryProhibitedReason: $data.EntitySet<typeof Crm.ErpExtension.Rest.Model.Lookups.CrmErpExtension_ErpDeliveryProhibitedReason, Crm.ErpExtension.Rest.Model.Lookups.CrmErpExtension_ErpDeliveryProhibitedReason>;
        CrmErpExtension_ErpDocumentStatus: $data.EntitySet<typeof Crm.ErpExtension.Rest.Model.Lookups.CrmErpExtension_ErpDocumentStatus, Crm.ErpExtension.Rest.Model.Lookups.CrmErpExtension_ErpDocumentStatus>;
        CrmErpExtension_ErpPartialDeliveryProhibitedReason: $data.EntitySet<typeof Crm.ErpExtension.Rest.Model.Lookups.CrmErpExtension_ErpPartialDeliveryProhibitedReason, Crm.ErpExtension.Rest.Model.Lookups.CrmErpExtension_ErpPartialDeliveryProhibitedReason>;
        CrmErpExtension_ErpPaymentMethod: $data.EntitySet<typeof Crm.ErpExtension.Rest.Model.Lookups.CrmErpExtension_ErpPaymentMethod, Crm.ErpExtension.Rest.Model.Lookups.CrmErpExtension_ErpPaymentMethod>;
        CrmErpExtension_ErpPaymentTerms: $data.EntitySet<typeof Crm.ErpExtension.Rest.Model.Lookups.CrmErpExtension_ErpPaymentTerms, Crm.ErpExtension.Rest.Model.Lookups.CrmErpExtension_ErpPaymentTerms>;
        CrmErpExtension_ErpTermsOfDelivery: $data.EntitySet<typeof Crm.ErpExtension.Rest.Model.Lookups.CrmErpExtension_ErpTermsOfDelivery, Crm.ErpExtension.Rest.Model.Lookups.CrmErpExtension_ErpTermsOfDelivery>;
        CrmErpExtension_ErpTurnover: $data.EntitySet<typeof Crm.ErpExtension.Rest.Model.CrmErpExtension_ErpTurnover, Crm.ErpExtension.Rest.Model.CrmErpExtension_ErpTurnover> & {
            TurnoverPerArticleGroup01AndYear(ContactKey: Edm.Guid, IsVolume: Edm.Boolean, CurrencyKey?: Edm.String, QuantityUnitKey?: Edm.String): $data.Queryable<Crm.ErpExtension.Controllers.OData.TurnoverChartData>;
            GetDistinctProperty(ContactKey: Edm.Guid, PropertyName?: Edm.String): $data.Queryable<Edm.String>;
            GetArticleTurnoverSummaries(ArticleKey: Edm.Guid, IsVolume: Edm.Boolean): $data.Queryable<Crm.ErpExtension.Controllers.OData.ArticleTurnoverSummary>;
        };
        CrmErpExtension_Invoice: $data.EntitySet<typeof Crm.ErpExtension.Rest.Model.CrmErpExtension_Invoice, Crm.ErpExtension.Rest.Model.CrmErpExtension_Invoice>;
        CrmErpExtension_InvoicePosition: $data.EntitySet<typeof Crm.ErpExtension.Rest.Model.CrmErpExtension_InvoicePosition, Crm.ErpExtension.Rest.Model.CrmErpExtension_InvoicePosition>;
        CrmErpExtension_MasterContract: $data.EntitySet<typeof Crm.ErpExtension.Rest.Model.CrmErpExtension_MasterContract, Crm.ErpExtension.Rest.Model.CrmErpExtension_MasterContract>;
        CrmErpExtension_MasterContractPosition: $data.EntitySet<typeof Crm.ErpExtension.Rest.Model.CrmErpExtension_MasterContractPosition, Crm.ErpExtension.Rest.Model.CrmErpExtension_MasterContractPosition>;
        CrmErpExtension_Quote: $data.EntitySet<typeof Crm.ErpExtension.Rest.Model.CrmErpExtension_Quote, Crm.ErpExtension.Rest.Model.CrmErpExtension_Quote>;
        CrmErpExtension_QuotePosition: $data.EntitySet<typeof Crm.ErpExtension.Rest.Model.CrmErpExtension_QuotePosition, Crm.ErpExtension.Rest.Model.CrmErpExtension_QuotePosition>;
        CrmErpExtension_SalesOrder: $data.EntitySet<typeof Crm.ErpExtension.Rest.Model.CrmErpExtension_SalesOrder, Crm.ErpExtension.Rest.Model.CrmErpExtension_SalesOrder> & {
            GetInformation(ContactKey: Edm.Guid): $data.Queryable<Crm.ErpExtension.Controllers.OData.SalesOrderInformation>;
        };
        CrmErpExtension_SalesOrderPosition: $data.EntitySet<typeof Crm.ErpExtension.Rest.Model.CrmErpExtension_SalesOrderPosition, Crm.ErpExtension.Rest.Model.CrmErpExtension_SalesOrderPosition>;
        CrmErpExtension_TurnoverSummary: $data.EntitySet<typeof Crm.ErpExtension.Rest.Model.CrmErpExtension_TurnoverSummary, Crm.ErpExtension.Rest.Model.CrmErpExtension_TurnoverSummary> & {
            GetDistinctLookupProperty(PropertyName?: Edm.String): $data.Queryable<Edm.String>;
        };
        CrmMarketInsight_MarketInsight: $data.EntitySet<typeof Crm.MarketInsight.Rest.Model.CrmMarketInsight_MarketInsight, Crm.MarketInsight.Rest.Model.CrmMarketInsight_MarketInsight>;
        CrmMarketInsight_MarketInsightContactRelationship: $data.EntitySet<typeof Crm.MarketInsight.Rest.Model.CrmMarketInsight_MarketInsightContactRelationship, Crm.MarketInsight.Rest.Model.CrmMarketInsight_MarketInsightContactRelationship>;
        CrmMarketInsight_MarketInsightContactRelationshipType: $data.EntitySet<typeof Crm.MarketInsight.Rest.Model.Lookups.CrmMarketInsight_MarketInsightContactRelationshipType, Crm.MarketInsight.Rest.Model.Lookups.CrmMarketInsight_MarketInsightContactRelationshipType>;
        CrmMarketInsight_MarketInsightReference: $data.EntitySet<typeof Crm.MarketInsight.Rest.Model.Lookups.CrmMarketInsight_MarketInsightReference, Crm.MarketInsight.Rest.Model.Lookups.CrmMarketInsight_MarketInsightReference>;
        CrmMarketInsight_MarketInsightStatus: $data.EntitySet<typeof Crm.MarketInsight.Rest.Model.Lookups.CrmMarketInsight_MarketInsightStatus, Crm.MarketInsight.Rest.Model.Lookups.CrmMarketInsight_MarketInsightStatus>;
        CrmOrder_CalculationPosition: $data.EntitySet<typeof Crm.Order.Rest.Model.CrmOrder_CalculationPosition, Crm.Order.Rest.Model.CrmOrder_CalculationPosition>;
        CrmOrder_CalculationPositionType: $data.EntitySet<typeof Crm.Order.Rest.Model.Lookups.CrmOrder_CalculationPositionType, Crm.Order.Rest.Model.Lookups.CrmOrder_CalculationPositionType>;
        CrmOrder_Offer: $data.EntitySet<typeof Crm.Order.Rest.Model.CrmOrder_Offer, Crm.Order.Rest.Model.CrmOrder_Offer>;
        CrmOrder_Order: $data.EntitySet<typeof Crm.Order.Rest.Model.CrmOrder_Order, Crm.Order.Rest.Model.CrmOrder_Order>;
        CrmOrder_OrderCancelReasonCategory: $data.EntitySet<typeof Crm.Order.Rest.Model.Lookups.CrmOrder_OrderCancelReasonCategory, Crm.Order.Rest.Model.Lookups.CrmOrder_OrderCancelReasonCategory>;
        CrmOrder_OrderCategory: $data.EntitySet<typeof Crm.Order.Rest.Model.Lookups.CrmOrder_OrderCategory, Crm.Order.Rest.Model.Lookups.CrmOrder_OrderCategory>;
        CrmOrder_OrderEntryType: $data.EntitySet<typeof Crm.Order.Rest.Model.Lookups.CrmOrder_OrderEntryType, Crm.Order.Rest.Model.Lookups.CrmOrder_OrderEntryType>;
        CrmOrder_OrderItem: $data.EntitySet<typeof Crm.Order.Rest.Model.CrmOrder_OrderItem, Crm.Order.Rest.Model.CrmOrder_OrderItem>;
        CrmOrder_OrderRecipient: $data.EntitySet<typeof Crm.Order.Rest.Model.CrmOrder_OrderRecipient, Crm.Order.Rest.Model.CrmOrder_OrderRecipient>;
        CrmOrder_OrderStatus: $data.EntitySet<typeof Crm.Order.Rest.Model.Lookups.CrmOrder_OrderStatus, Crm.Order.Rest.Model.Lookups.CrmOrder_OrderStatus>;
        CrmPerDiemGermany_PerDiemAllowance: $data.EntitySet<typeof Crm.PerDiem.Germany.Rest.Model.Lookups.CrmPerDiemGermany_PerDiemAllowance, Crm.PerDiem.Germany.Rest.Model.Lookups.CrmPerDiemGermany_PerDiemAllowance>;
        CrmPerDiemGermany_PerDiemAllowanceAdjustment: $data.EntitySet<typeof Crm.PerDiem.Germany.Rest.Model.Lookups.CrmPerDiemGermany_PerDiemAllowanceAdjustment, Crm.PerDiem.Germany.Rest.Model.Lookups.CrmPerDiemGermany_PerDiemAllowanceAdjustment>;
        CrmPerDiemGermany_PerDiemAllowanceEntry: $data.EntitySet<typeof Crm.PerDiem.Germany.Rest.Model.CrmPerDiemGermany_PerDiemAllowanceEntry, Crm.PerDiem.Germany.Rest.Model.CrmPerDiemGermany_PerDiemAllowanceEntry> & {
            GetDistinctPerDiemAllowanceEntryDates(userId?: Edm.String): $data.Queryable<Edm.DateTimeOffset>;
        };
        CrmPerDiemGermany_PerDiemAllowanceEntryAllowanceAdjustmentReference: $data.EntitySet<typeof Crm.PerDiem.Germany.Rest.Model.CrmPerDiemGermany_PerDiemAllowanceEntryAllowanceAdjustmentReference, Crm.PerDiem.Germany.Rest.Model.CrmPerDiemGermany_PerDiemAllowanceEntryAllowanceAdjustmentReference>;
        CrmPerDiem_DistanceUnit: $data.EntitySet<typeof Crm.PerDiem.Rest.Model.Lookups.CrmPerDiem_DistanceUnit, Crm.PerDiem.Rest.Model.Lookups.CrmPerDiem_DistanceUnit>;
        CrmPerDiem_DriverType: $data.EntitySet<typeof Crm.PerDiem.Rest.Model.Lookups.CrmPerDiem_DriverType, Crm.PerDiem.Rest.Model.Lookups.CrmPerDiem_DriverType>;
        CrmPerDiem_ExpenseType: $data.EntitySet<typeof Crm.PerDiem.Rest.Model.Lookups.CrmPerDiem_ExpenseType, Crm.PerDiem.Rest.Model.Lookups.CrmPerDiem_ExpenseType>;
        CrmPerDiem_PerDiemReport: $data.EntitySet<typeof Crm.PerDiem.Rest.Model.CrmPerDiem_PerDiemReport, Crm.PerDiem.Rest.Model.CrmPerDiem_PerDiemReport>;
        CrmPerDiem_PerDiemReportStatus: $data.EntitySet<typeof Crm.PerDiem.Rest.Model.Lookups.CrmPerDiem_PerDiemReportStatus, Crm.PerDiem.Rest.Model.Lookups.CrmPerDiem_PerDiemReportStatus>;
        CrmPerDiem_PerDiemReportType: $data.EntitySet<typeof Crm.PerDiem.Rest.Model.Lookups.CrmPerDiem_PerDiemReportType, Crm.PerDiem.Rest.Model.Lookups.CrmPerDiem_PerDiemReportType>;
        CrmPerDiem_TimeEntryType: $data.EntitySet<typeof Crm.PerDiem.Rest.Model.Lookups.CrmPerDiem_TimeEntryType, Crm.PerDiem.Rest.Model.Lookups.CrmPerDiem_TimeEntryType>;
        CrmPerDiem_TravelType: $data.EntitySet<typeof Crm.PerDiem.Rest.Model.Lookups.CrmPerDiem_TravelType, Crm.PerDiem.Rest.Model.Lookups.CrmPerDiem_TravelType>;
        CrmPerDiem_UserExpense: $data.EntitySet<typeof Crm.PerDiem.Rest.Model.CrmPerDiem_UserExpense, Crm.PerDiem.Rest.Model.CrmPerDiem_UserExpense> & {
            GetDistinctUserExpenseDates(userId?: Edm.String): $data.Queryable<Edm.DateTimeOffset>;
        };
        CrmPerDiem_UserTimeEntry: $data.EntitySet<typeof Crm.PerDiem.Rest.Model.CrmPerDiem_UserTimeEntry, Crm.PerDiem.Rest.Model.CrmPerDiem_UserTimeEntry> & {
            GetDistinctUserTimeEntryDates(userId?: Edm.String): $data.Queryable<Edm.DateTimeOffset>;
        };
        CrmProject_DocumentEntry: $data.EntitySet<typeof Crm.Project.Rest.Model.CrmProject_DocumentEntry, Crm.Project.Rest.Model.CrmProject_DocumentEntry>;
        CrmProject_Potential: $data.EntitySet<typeof Crm.Project.Rest.Model.CrmProject_Potential, Crm.Project.Rest.Model.CrmProject_Potential> & {
            CountOfPotentialsByStatus(ProductFamilyId: Edm.Guid, ParentId: Edm.Guid): $data.Queryable<Crm.Project.Controllers.OData.PotentialTotalCount>;
        };
        CrmProject_PotentialContactRelationship: $data.EntitySet<typeof Crm.Project.Rest.Model.CrmProject_PotentialContactRelationship, Crm.Project.Rest.Model.CrmProject_PotentialContactRelationship>;
        CrmProject_PotentialContactRelationshipType: $data.EntitySet<typeof Crm.Project.Rest.Model.Lookups.CrmProject_PotentialContactRelationshipType, Crm.Project.Rest.Model.Lookups.CrmProject_PotentialContactRelationshipType>;
        CrmProject_PotentialPriority: $data.EntitySet<typeof Crm.Project.Rest.Model.Lookups.CrmProject_PotentialPriority, Crm.Project.Rest.Model.Lookups.CrmProject_PotentialPriority>;
        CrmProject_PotentialStatus: $data.EntitySet<typeof Crm.Project.Rest.Model.Lookups.CrmProject_PotentialStatus, Crm.Project.Rest.Model.Lookups.CrmProject_PotentialStatus>;
        CrmProject_Project: $data.EntitySet<typeof Crm.Project.Rest.Model.CrmProject_Project, Crm.Project.Rest.Model.CrmProject_Project> & {
            ValuePerCategoryAndYear({}: {ProjectIds: Edm.Guid[]}): $data.Queryable<Crm.Project.Controllers.OData.ProjectValueChartData>;
            WeightedValuePerCategoryAndYear({}: {ProjectIds: Edm.Guid[]}): $data.Queryable<Crm.Project.Controllers.OData.ProjectValueChartData>;
            CountOfProjectsByStatus(ProductFamilyId: Edm.Guid, ParentId: Edm.Guid): $data.Queryable<Crm.Project.Controllers.OData.ProjectValuesData>;
            CurrencySumByStatusAndCurrencyKey(ProductFamilyId: Edm.Guid, ParentId: Edm.Guid): $data.Queryable<Crm.Project.Controllers.OData.ValueSumByCurrency>;
            CurrencySumByStatus(ParentId: Edm.Guid): $data.Queryable<Crm.Project.Controllers.OData.ValueSumByCurrency>;
            AllProjectsCurrencySum(): $data.Queryable<Crm.Project.Controllers.OData.ValueSumByCurrency>;
        };
        CrmProject_ProjectCategory: $data.EntitySet<typeof Crm.Project.Rest.Model.Lookups.CrmProject_ProjectCategory, Crm.Project.Rest.Model.Lookups.CrmProject_ProjectCategory>;
        CrmProject_ProjectContactRelationship: $data.EntitySet<typeof Crm.Project.Rest.Model.CrmProject_ProjectContactRelationship, Crm.Project.Rest.Model.CrmProject_ProjectContactRelationship>;
        CrmProject_ProjectContactRelationshipType: $data.EntitySet<typeof Crm.Project.Rest.Model.Lookups.CrmProject_ProjectContactRelationshipType, Crm.Project.Rest.Model.Lookups.CrmProject_ProjectContactRelationshipType>;
        CrmProject_ProjectLostReasonCategory: $data.EntitySet<typeof Crm.Project.Rest.Model.Lookups.CrmProject_ProjectLostReasonCategory, Crm.Project.Rest.Model.Lookups.CrmProject_ProjectLostReasonCategory>;
        CrmProject_ProjectStatus: $data.EntitySet<typeof Crm.Project.Rest.Model.Lookups.CrmProject_ProjectStatus, Crm.Project.Rest.Model.Lookups.CrmProject_ProjectStatus>;
        CrmServiceTeam_ArticleUserGroupRelationship: $data.EntitySet<typeof Crm.Service.Team.Rest.Model.CrmServiceTeam_ArticleUserGroupRelationship, Crm.Service.Team.Rest.Model.CrmServiceTeam_ArticleUserGroupRelationship>;
        CrmService_CommissioningStatus: $data.EntitySet<typeof Crm.Service.Rest.Model.Lookups.CrmService_CommissioningStatus, Crm.Service.Rest.Model.Lookups.CrmService_CommissioningStatus>;
        CrmService_Component: $data.EntitySet<typeof Crm.Service.Rest.Model.Lookups.CrmService_Component, Crm.Service.Rest.Model.Lookups.CrmService_Component>;
        CrmService_ErrorCode: $data.EntitySet<typeof Crm.Service.Rest.Model.Lookups.CrmService_ErrorCode, Crm.Service.Rest.Model.Lookups.CrmService_ErrorCode>;
        CrmService_Installation: $data.EntitySet<typeof Crm.Service.Rest.Model.CrmService_Installation, Crm.Service.Rest.Model.CrmService_Installation>;
        CrmService_InstallationAddressRelationship: $data.EntitySet<typeof Crm.Service.Rest.Model.CrmService_InstallationAddressRelationship, Crm.Service.Rest.Model.CrmService_InstallationAddressRelationship>;
        CrmService_InstallationAddressRelationshipType: $data.EntitySet<typeof Crm.Service.Rest.Model.Lookups.CrmService_InstallationAddressRelationshipType, Crm.Service.Rest.Model.Lookups.CrmService_InstallationAddressRelationshipType>;
        CrmService_InstallationCompanyRelationship: $data.EntitySet<typeof Crm.Service.Rest.Model.CrmService_InstallationCompanyRelationship, Crm.Service.Rest.Model.CrmService_InstallationCompanyRelationship>;
        CrmService_InstallationCompanyRelationshipType: $data.EntitySet<typeof Crm.Service.Rest.Model.Lookups.CrmService_InstallationCompanyRelationshipType, Crm.Service.Rest.Model.Lookups.CrmService_InstallationCompanyRelationshipType>;
        CrmService_InstallationHeadStatus: $data.EntitySet<typeof Crm.Service.Rest.Model.Lookups.CrmService_InstallationHeadStatus, Crm.Service.Rest.Model.Lookups.CrmService_InstallationHeadStatus>;
        CrmService_InstallationPersonRelationship: $data.EntitySet<typeof Crm.Service.Rest.Model.CrmService_InstallationPersonRelationship, Crm.Service.Rest.Model.CrmService_InstallationPersonRelationship>;
        CrmService_InstallationPersonRelationshipType: $data.EntitySet<typeof Crm.Service.Rest.Model.Lookups.CrmService_InstallationPersonRelationshipType, Crm.Service.Rest.Model.Lookups.CrmService_InstallationPersonRelationshipType>;
        CrmService_InstallationPos: $data.EntitySet<typeof Crm.Service.Rest.Model.CrmService_InstallationPos, Crm.Service.Rest.Model.CrmService_InstallationPos>;
        CrmService_InstallationPosSerial: $data.EntitySet<typeof Crm.Service.Rest.Model.CrmService_InstallationPosSerial, Crm.Service.Rest.Model.CrmService_InstallationPosSerial>;
        CrmService_InstallationType: $data.EntitySet<typeof Crm.Service.Rest.Model.Lookups.CrmService_InstallationType, Crm.Service.Rest.Model.Lookups.CrmService_InstallationType>;
        CrmService_MaintenancePlan: $data.EntitySet<typeof Crm.Service.Rest.Model.CrmService_MaintenancePlan, Crm.Service.Rest.Model.CrmService_MaintenancePlan>;
        CrmService_Manufacturer: $data.EntitySet<typeof Crm.Service.Rest.Model.Lookups.CrmService_Manufacturer, Crm.Service.Rest.Model.Lookups.CrmService_Manufacturer>;
        CrmService_MonitoringDataType: $data.EntitySet<typeof Crm.Service.Rest.Model.Lookups.CrmService_MonitoringDataType, Crm.Service.Rest.Model.Lookups.CrmService_MonitoringDataType>;
        CrmService_NoCausingItemPreviousSerialNoReason: $data.EntitySet<typeof Crm.Service.Rest.Model.Lookups.CrmService_NoCausingItemPreviousSerialNoReason, Crm.Service.Rest.Model.Lookups.CrmService_NoCausingItemPreviousSerialNoReason>;
        CrmService_NoCausingItemSerialNoReason: $data.EntitySet<typeof Crm.Service.Rest.Model.Lookups.CrmService_NoCausingItemSerialNoReason, Crm.Service.Rest.Model.Lookups.CrmService_NoCausingItemSerialNoReason>;
        CrmService_NoPreviousSerialNoReason: $data.EntitySet<typeof Crm.Service.Rest.Model.Lookups.CrmService_NoPreviousSerialNoReason, Crm.Service.Rest.Model.Lookups.CrmService_NoPreviousSerialNoReason>;
        CrmService_RdsPpStructure: $data.EntitySet<typeof Crm.Service.Rest.Model.CrmService_RdsPpStructure, Crm.Service.Rest.Model.CrmService_RdsPpStructure>;
        CrmService_ReplenishmentOrder: $data.EntitySet<typeof Crm.Service.Rest.Model.CrmService_ReplenishmentOrder, Crm.Service.Rest.Model.CrmService_ReplenishmentOrder>;
        CrmService_ReplenishmentOrderItem: $data.EntitySet<typeof Crm.Service.Rest.Model.CrmService_ReplenishmentOrderItem, Crm.Service.Rest.Model.CrmService_ReplenishmentOrderItem>;
        CrmService_ServiceCase: $data.EntitySet<typeof Crm.Service.Rest.Model.CrmService_ServiceCase, Crm.Service.Rest.Model.CrmService_ServiceCase>;
        CrmService_ServiceCaseCategory: $data.EntitySet<typeof Crm.Service.Rest.Model.Lookups.CrmService_ServiceCaseCategory, Crm.Service.Rest.Model.Lookups.CrmService_ServiceCaseCategory>;
        CrmService_ServiceCaseStatus: $data.EntitySet<typeof Crm.Service.Rest.Model.Lookups.CrmService_ServiceCaseStatus, Crm.Service.Rest.Model.Lookups.CrmService_ServiceCaseStatus>;
        CrmService_ServiceCaseTemplate: $data.EntitySet<typeof Crm.Service.Rest.Model.CrmService_ServiceCaseTemplate, Crm.Service.Rest.Model.CrmService_ServiceCaseTemplate>;
        CrmService_ServiceContract: $data.EntitySet<typeof Crm.Service.Rest.Model.CrmService_ServiceContract, Crm.Service.Rest.Model.CrmService_ServiceContract>;
        CrmService_ServiceContractAddressRelationship: $data.EntitySet<typeof Crm.Service.Rest.Model.CrmService_ServiceContractAddressRelationship, Crm.Service.Rest.Model.CrmService_ServiceContractAddressRelationship>;
        CrmService_ServiceContractAddressRelationshipType: $data.EntitySet<typeof Crm.Service.Rest.Model.Lookups.CrmService_ServiceContractAddressRelationshipType, Crm.Service.Rest.Model.Lookups.CrmService_ServiceContractAddressRelationshipType>;
        CrmService_ServiceContractInstallationRelationship: $data.EntitySet<typeof Crm.Service.Rest.Model.CrmService_ServiceContractInstallationRelationship, Crm.Service.Rest.Model.CrmService_ServiceContractInstallationRelationship>;
        CrmService_ServiceContractLimitType: $data.EntitySet<typeof Crm.Service.Rest.Model.Lookups.CrmService_ServiceContractLimitType, Crm.Service.Rest.Model.Lookups.CrmService_ServiceContractLimitType>;
        CrmService_ServiceContractStatus: $data.EntitySet<typeof Crm.Service.Rest.Model.Lookups.CrmService_ServiceContractStatus, Crm.Service.Rest.Model.Lookups.CrmService_ServiceContractStatus>;
        CrmService_ServiceContractType: $data.EntitySet<typeof Crm.Service.Rest.Model.Lookups.CrmService_ServiceContractType, Crm.Service.Rest.Model.Lookups.CrmService_ServiceContractType>;
        CrmService_ServiceObject: $data.EntitySet<typeof Crm.Service.Rest.Model.CrmService_ServiceObject, Crm.Service.Rest.Model.CrmService_ServiceObject>;
        CrmService_ServiceObjectCategory: $data.EntitySet<typeof Crm.Service.Rest.Model.Lookups.CrmService_ServiceObjectCategory, Crm.Service.Rest.Model.Lookups.CrmService_ServiceObjectCategory>;
        CrmService_ServiceOrderDispatch: $data.EntitySet<typeof Crm.Service.Rest.Model.CrmService_ServiceOrderDispatch, Crm.Service.Rest.Model.CrmService_ServiceOrderDispatch> & {
            GetDispatchesInRange({}: {technicians?: Edm.String[], startDate: Edm.DateTimeOffset, endDate: Edm.DateTimeOffset}): $data.Queryable<Edm.Guid>;
        };
        CrmService_ServiceOrderDispatchCancellationReason: $data.EntitySet<typeof Crm.Service.Rest.Model.Lookups.CrmService_ServiceOrderDispatchCancellationReason, Crm.Service.Rest.Model.Lookups.CrmService_ServiceOrderDispatchCancellationReason>;
        CrmService_ServiceOrderDispatchRejectReason: $data.EntitySet<typeof Crm.Service.Rest.Model.Lookups.CrmService_ServiceOrderDispatchRejectReason, Crm.Service.Rest.Model.Lookups.CrmService_ServiceOrderDispatchRejectReason>;
        CrmService_ServiceOrderDispatchReportRecipient: $data.EntitySet<typeof Crm.Service.Rest.Model.CrmService_ServiceOrderDispatchReportRecipient, Crm.Service.Rest.Model.CrmService_ServiceOrderDispatchReportRecipient>;
        CrmService_ServiceOrderDispatchStatus: $data.EntitySet<typeof Crm.Service.Rest.Model.Lookups.CrmService_ServiceOrderDispatchStatus, Crm.Service.Rest.Model.Lookups.CrmService_ServiceOrderDispatchStatus>;
        CrmService_ServiceOrderErrorCause: $data.EntitySet<typeof Crm.Service.Rest.Model.CrmService_ServiceOrderErrorCause, Crm.Service.Rest.Model.CrmService_ServiceOrderErrorCause>;
        CrmService_ServiceOrderErrorType: $data.EntitySet<typeof Crm.Service.Rest.Model.CrmService_ServiceOrderErrorType, Crm.Service.Rest.Model.CrmService_ServiceOrderErrorType>;
        CrmService_ServiceOrderExpensePosting: $data.EntitySet<typeof Crm.Service.Rest.Model.CrmService_ServiceOrderExpensePosting, Crm.Service.Rest.Model.CrmService_ServiceOrderExpensePosting> & {
            GetDistinctServiceOrderExpensePostingDates(userId?: Edm.String): $data.Queryable<Edm.DateTimeOffset>;
        };
        CrmService_ServiceOrderHead: $data.EntitySet<typeof Crm.Service.Rest.Model.CrmService_ServiceOrderHead, Crm.Service.Rest.Model.CrmService_ServiceOrderHead> & {
            GetGroupableProperties(): $data.Queryable<Edm.String>;
        };
        CrmService_ServiceOrderInvoiceReason: $data.EntitySet<typeof Crm.Service.Rest.Model.Lookups.CrmService_ServiceOrderInvoiceReason, Crm.Service.Rest.Model.Lookups.CrmService_ServiceOrderInvoiceReason>;
        CrmService_ServiceOrderMaterial: $data.EntitySet<typeof Crm.Service.Rest.Model.CrmService_ServiceOrderMaterial, Crm.Service.Rest.Model.CrmService_ServiceOrderMaterial>;
        CrmService_ServiceOrderNoInvoiceReason: $data.EntitySet<typeof Crm.Service.Rest.Model.Lookups.CrmService_ServiceOrderNoInvoiceReason, Crm.Service.Rest.Model.Lookups.CrmService_ServiceOrderNoInvoiceReason>;
        CrmService_ServiceOrderStatisticsKey: $data.EntitySet<typeof Crm.Service.Rest.Model.CrmService_ServiceOrderStatisticsKey, Crm.Service.Rest.Model.CrmService_ServiceOrderStatisticsKey>;
        CrmService_ServiceOrderStatus: $data.EntitySet<typeof Crm.Service.Rest.Model.Lookups.CrmService_ServiceOrderStatus, Crm.Service.Rest.Model.Lookups.CrmService_ServiceOrderStatus>;
        CrmService_ServiceOrderTime: $data.EntitySet<typeof Crm.Service.Rest.Model.CrmService_ServiceOrderTime, Crm.Service.Rest.Model.CrmService_ServiceOrderTime>;
        CrmService_ServiceOrderTimeCategory: $data.EntitySet<typeof Crm.Service.Rest.Model.Lookups.CrmService_ServiceOrderTimeCategory, Crm.Service.Rest.Model.Lookups.CrmService_ServiceOrderTimeCategory>;
        CrmService_ServiceOrderTimeDispatch: $data.EntitySet<typeof Crm.Service.Rest.Model.CrmService_ServiceOrderTimeDispatch, Crm.Service.Rest.Model.CrmService_ServiceOrderTimeDispatch>;
        CrmService_ServiceOrderTimeLocation: $data.EntitySet<typeof Crm.Service.Rest.Model.Lookups.CrmService_ServiceOrderTimeLocation, Crm.Service.Rest.Model.Lookups.CrmService_ServiceOrderTimeLocation>;
        CrmService_ServiceOrderTimePosting: $data.EntitySet<typeof Crm.Service.Rest.Model.CrmService_ServiceOrderTimePosting, Crm.Service.Rest.Model.CrmService_ServiceOrderTimePosting> & {
            GetDistinctServiceOrderTimePostingDates(userId?: Edm.String): $data.Queryable<Edm.DateTimeOffset>;
        };
        CrmService_ServiceOrderTimePriority: $data.EntitySet<typeof Crm.Service.Rest.Model.Lookups.CrmService_ServiceOrderTimePriority, Crm.Service.Rest.Model.Lookups.CrmService_ServiceOrderTimePriority>;
        CrmService_ServiceOrderTimeStatus: $data.EntitySet<typeof Crm.Service.Rest.Model.Lookups.CrmService_ServiceOrderTimeStatus, Crm.Service.Rest.Model.Lookups.CrmService_ServiceOrderTimeStatus>;
        CrmService_ServiceOrderType: $data.EntitySet<typeof Crm.Service.Rest.Model.Lookups.CrmService_ServiceOrderType, Crm.Service.Rest.Model.Lookups.CrmService_ServiceOrderType>;
        CrmService_ServicePriority: $data.EntitySet<typeof Crm.Service.Rest.Model.Lookups.CrmService_ServicePriority, Crm.Service.Rest.Model.Lookups.CrmService_ServicePriority>;
        CrmService_SparePartsBudgetInvoiceType: $data.EntitySet<typeof Crm.Service.Rest.Model.Lookups.CrmService_SparePartsBudgetInvoiceType, Crm.Service.Rest.Model.Lookups.CrmService_SparePartsBudgetInvoiceType>;
        CrmService_SparePartsBudgetTimeSpanUnit: $data.EntitySet<typeof Crm.Service.Rest.Model.Lookups.CrmService_SparePartsBudgetTimeSpanUnit, Crm.Service.Rest.Model.Lookups.CrmService_SparePartsBudgetTimeSpanUnit>;
        CrmService_StatisticsKeyAssemblyGroup: $data.EntitySet<typeof Crm.Service.Rest.Model.Lookups.CrmService_StatisticsKeyAssemblyGroup, Crm.Service.Rest.Model.Lookups.CrmService_StatisticsKeyAssemblyGroup>;
        CrmService_StatisticsKeyCause: $data.EntitySet<typeof Crm.Service.Rest.Model.Lookups.CrmService_StatisticsKeyCause, Crm.Service.Rest.Model.Lookups.CrmService_StatisticsKeyCause>;
        CrmService_StatisticsKeyCauser: $data.EntitySet<typeof Crm.Service.Rest.Model.Lookups.CrmService_StatisticsKeyCauser, Crm.Service.Rest.Model.Lookups.CrmService_StatisticsKeyCauser>;
        CrmService_StatisticsKeyFaultImage: $data.EntitySet<typeof Crm.Service.Rest.Model.Lookups.CrmService_StatisticsKeyFaultImage, Crm.Service.Rest.Model.Lookups.CrmService_StatisticsKeyFaultImage>;
        CrmService_StatisticsKeyMainAssembly: $data.EntitySet<typeof Crm.Service.Rest.Model.Lookups.CrmService_StatisticsKeyMainAssembly, Crm.Service.Rest.Model.Lookups.CrmService_StatisticsKeyMainAssembly>;
        CrmService_StatisticsKeyProductType: $data.EntitySet<typeof Crm.Service.Rest.Model.Lookups.CrmService_StatisticsKeyProductType, Crm.Service.Rest.Model.Lookups.CrmService_StatisticsKeyProductType>;
        CrmService_StatisticsKeyRemedy: $data.EntitySet<typeof Crm.Service.Rest.Model.Lookups.CrmService_StatisticsKeyRemedy, Crm.Service.Rest.Model.Lookups.CrmService_StatisticsKeyRemedy>;
        CrmService_StatisticsKeySubAssembly: $data.EntitySet<typeof Crm.Service.Rest.Model.Lookups.CrmService_StatisticsKeySubAssembly, Crm.Service.Rest.Model.Lookups.CrmService_StatisticsKeySubAssembly>;
        CrmService_StatisticsKeyWeighting: $data.EntitySet<typeof Crm.Service.Rest.Model.Lookups.CrmService_StatisticsKeyWeighting, Crm.Service.Rest.Model.Lookups.CrmService_StatisticsKeyWeighting>;
        CrmVisitReport_ContactPersonRelationship: $data.EntitySet<typeof Crm.VisitReport.Rest.Model.CrmVisitReport_ContactPersonRelationship, Crm.VisitReport.Rest.Model.CrmVisitReport_ContactPersonRelationship>;
        CrmVisitReport_ContactPersonRelationshipType: $data.EntitySet<typeof Crm.VisitReport.Rest.Model.Lookups.CrmVisitReport_ContactPersonRelationshipType, Crm.VisitReport.Rest.Model.Lookups.CrmVisitReport_ContactPersonRelationshipType>;
        CrmVisitReport_Visit: $data.EntitySet<typeof Crm.VisitReport.Rest.Model.CrmVisitReport_Visit, Crm.VisitReport.Rest.Model.CrmVisitReport_Visit>;
        CrmVisitReport_VisitAim: $data.EntitySet<typeof Crm.VisitReport.Rest.Model.Lookups.CrmVisitReport_VisitAim, Crm.VisitReport.Rest.Model.Lookups.CrmVisitReport_VisitAim>;
        CrmVisitReport_VisitReport: $data.EntitySet<typeof Crm.VisitReport.Rest.Model.CrmVisitReport_VisitReport, Crm.VisitReport.Rest.Model.CrmVisitReport_VisitReport>;
        CrmVisitReport_VisitReportRecipient: $data.EntitySet<typeof Crm.VisitReport.Rest.Model.CrmVisitReport_VisitReportRecipient, Crm.VisitReport.Rest.Model.CrmVisitReport_VisitReportRecipient>;
        CrmVisitReport_VisitStatus: $data.EntitySet<typeof Crm.VisitReport.Rest.Model.Lookups.CrmVisitReport_VisitStatus, Crm.VisitReport.Rest.Model.Lookups.CrmVisitReport_VisitStatus>;
        Crm_Address: $data.EntitySet<typeof Crm.Rest.Model.Crm_Address, Crm.Rest.Model.Crm_Address>;
        Crm_AddressType: $data.EntitySet<typeof Crm.Rest.Model.Lookups.Crm_AddressType, Crm.Rest.Model.Lookups.Crm_AddressType>;
        Crm_Branch1: $data.EntitySet<typeof Crm.Rest.Model.Lookups.Crm_Branch1, Crm.Rest.Model.Lookups.Crm_Branch1>;
        Crm_Branch2: $data.EntitySet<typeof Crm.Rest.Model.Lookups.Crm_Branch2, Crm.Rest.Model.Lookups.Crm_Branch2>;
        Crm_Branch3: $data.EntitySet<typeof Crm.Rest.Model.Lookups.Crm_Branch3, Crm.Rest.Model.Lookups.Crm_Branch3>;
        Crm_Branch4: $data.EntitySet<typeof Crm.Rest.Model.Lookups.Crm_Branch4, Crm.Rest.Model.Lookups.Crm_Branch4>;
        Crm_Bravo: $data.EntitySet<typeof Crm.Rest.Model.Crm_Bravo, Crm.Rest.Model.Crm_Bravo>;
        Crm_BravoCategory: $data.EntitySet<typeof Crm.Rest.Model.Lookups.Crm_BravoCategory, Crm.Rest.Model.Lookups.Crm_BravoCategory>;
        Crm_BusinessRelationship: $data.EntitySet<typeof Crm.Rest.Model.Crm_BusinessRelationship, Crm.Rest.Model.Crm_BusinessRelationship>;
        Crm_BusinessRelationshipType: $data.EntitySet<typeof Crm.Rest.Model.Lookups.Crm_BusinessRelationshipType, Crm.Rest.Model.Lookups.Crm_BusinessRelationshipType>;
        Crm_BusinessTitle: $data.EntitySet<typeof Crm.Rest.Model.Lookups.Crm_BusinessTitle, Crm.Rest.Model.Lookups.Crm_BusinessTitle>;
        Crm_Company: $data.EntitySet<typeof Crm.Rest.Model.Crm_Company, Crm.Rest.Model.Crm_Company>;
        Crm_CompanyBranch: $data.EntitySet<typeof Crm.Rest.Model.Crm_CompanyBranch, Crm.Rest.Model.Crm_CompanyBranch>;
        Crm_CompanyGroupFlag1: $data.EntitySet<typeof Crm.Rest.Model.Lookups.Crm_CompanyGroupFlag1, Crm.Rest.Model.Lookups.Crm_CompanyGroupFlag1>;
        Crm_CompanyGroupFlag2: $data.EntitySet<typeof Crm.Rest.Model.Lookups.Crm_CompanyGroupFlag2, Crm.Rest.Model.Lookups.Crm_CompanyGroupFlag2>;
        Crm_CompanyGroupFlag3: $data.EntitySet<typeof Crm.Rest.Model.Lookups.Crm_CompanyGroupFlag3, Crm.Rest.Model.Lookups.Crm_CompanyGroupFlag3>;
        Crm_CompanyGroupFlag4: $data.EntitySet<typeof Crm.Rest.Model.Lookups.Crm_CompanyGroupFlag4, Crm.Rest.Model.Lookups.Crm_CompanyGroupFlag4>;
        Crm_CompanyGroupFlag5: $data.EntitySet<typeof Crm.Rest.Model.Lookups.Crm_CompanyGroupFlag5, Crm.Rest.Model.Lookups.Crm_CompanyGroupFlag5>;
        Crm_CompanyPersonRelationship: $data.EntitySet<typeof Crm.Rest.Model.Crm_CompanyPersonRelationship, Crm.Rest.Model.Crm_CompanyPersonRelationship>;
        Crm_CompanyPersonRelationshipType: $data.EntitySet<typeof Crm.Rest.Model.Lookups.Crm_CompanyPersonRelationshipType, Crm.Rest.Model.Lookups.Crm_CompanyPersonRelationshipType>;
        Crm_CompanyType: $data.EntitySet<typeof Crm.Rest.Model.Lookups.Crm_CompanyType, Crm.Rest.Model.Lookups.Crm_CompanyType>;
        Crm_DepartmentType: $data.EntitySet<typeof Crm.Rest.Model.Lookups.Crm_DepartmentType, Crm.Rest.Model.Lookups.Crm_DepartmentType>;
        Crm_DocumentAttribute: $data.EntitySet<typeof Crm.Rest.Model.Crm_DocumentAttribute, Crm.Rest.Model.Crm_DocumentAttribute>;
        Crm_Email: $data.EntitySet<typeof Crm.Rest.Model.Crm_Email, Crm.Rest.Model.Crm_Email>;
        Crm_EmailType: $data.EntitySet<typeof Crm.Rest.Model.Lookups.Crm_EmailType, Crm.Rest.Model.Lookups.Crm_EmailType>;
        Crm_Fax: $data.EntitySet<typeof Crm.Rest.Model.Crm_Fax, Crm.Rest.Model.Crm_Fax>;
        Crm_FaxType: $data.EntitySet<typeof Crm.Rest.Model.Lookups.Crm_FaxType, Crm.Rest.Model.Lookups.Crm_FaxType>;
        Crm_FileResource: $data.EntitySet<typeof Crm.Rest.Model.Crm_FileResource, Crm.Rest.Model.Crm_FileResource>;
        Crm_FileShare: $data.EntitySet<typeof Crm.Rest.Model.Crm_FileShare, Crm.Rest.Model.Crm_FileShare>;
        Crm_LinkResource: $data.EntitySet<typeof Crm.Rest.Model.Crm_LinkResource, Crm.Rest.Model.Crm_LinkResource>;
        Crm_Note: $data.EntitySet<typeof Crm.Rest.Model.Crm_Note, Crm.Rest.Model.Crm_Note>;
        Crm_NoteType: $data.EntitySet<typeof Crm.Rest.Model.Lookups.Crm_NoteType, Crm.Rest.Model.Lookups.Crm_NoteType>;
        Crm_NumberOfEmployees: $data.EntitySet<typeof Crm.Rest.Model.Lookups.Crm_NumberOfEmployees, Crm.Rest.Model.Lookups.Crm_NumberOfEmployees>;
        Crm_Person: $data.EntitySet<typeof Crm.Rest.Model.Crm_Person, Crm.Rest.Model.Crm_Person> & {
            SearchCampaignParticipants({}: {SearchCriteria?: Crm.Campaigns.Controllers.OData.CampaignParticipantsSearchCriteria}): $data.Queryable<Crm.Rest.Model.Crm_Person>;
        };
        Crm_Phone: $data.EntitySet<typeof Crm.Rest.Model.Crm_Phone, Crm.Rest.Model.Crm_Phone>;
        Crm_PhoneType: $data.EntitySet<typeof Crm.Rest.Model.Lookups.Crm_PhoneType, Crm.Rest.Model.Lookups.Crm_PhoneType>;
        Crm_Salutation: $data.EntitySet<typeof Crm.Rest.Model.Lookups.Crm_Salutation, Crm.Rest.Model.Lookups.Crm_Salutation>;
        Crm_SalutationLetter: $data.EntitySet<typeof Crm.Rest.Model.Lookups.Crm_SalutationLetter, Crm.Rest.Model.Lookups.Crm_SalutationLetter>;
        Crm_SourceType: $data.EntitySet<typeof Crm.Rest.Model.Lookups.Crm_SourceType, Crm.Rest.Model.Lookups.Crm_SourceType>;
        Crm_Station: $data.EntitySet<typeof Crm.Rest.Model.Crm_Station, Crm.Rest.Model.Crm_Station>;
        Crm_Tag: $data.EntitySet<typeof Crm.Rest.Model.Crm_Tag, Crm.Rest.Model.Crm_Tag> & {
            GetUniqueTagNames(ContactType?: Edm.String, Filter?: Edm.String): $data.Queryable<Edm.String>;
        };
        Crm_Task: $data.EntitySet<typeof Crm.Rest.Model.Crm_Task, Crm.Rest.Model.Crm_Task>;
        Crm_TaskType: $data.EntitySet<typeof Crm.Rest.Model.Lookups.Crm_TaskType, Crm.Rest.Model.Lookups.Crm_TaskType>;
        Crm_Title: $data.EntitySet<typeof Crm.Rest.Model.Lookups.Crm_Title, Crm.Rest.Model.Lookups.Crm_Title>;
        Crm_Turnover: $data.EntitySet<typeof Crm.Rest.Model.Lookups.Crm_Turnover, Crm.Rest.Model.Lookups.Crm_Turnover>;
        Crm_Website: $data.EntitySet<typeof Crm.Rest.Model.Crm_Website, Crm.Rest.Model.Crm_Website>;
        Crm_WebsiteType: $data.EntitySet<typeof Crm.Rest.Model.Lookups.Crm_WebsiteType, Crm.Rest.Model.Lookups.Crm_WebsiteType>;
        GetApiRoles: { (): $data.Queryable<Main.Rest.Model.Main_PermissionSchemaRole>; };
        GetDeletedIds: { (): $data.Queryable<Edm.String>; };
        GetHash: { (): Promise<Edm.String>; };
        GetLookupType: { (FullName: Edm.String): Promise<Main.Rest.Model.LookupType>; };
        GetLookupTypes: { (): $data.Queryable<Main.Rest.Model.LookupType>; };
        GetMapping: { (): $data.Queryable<Main.Replication.Rest.ReplicationState>; };
        GetVersion: { (): Promise<Edm.String>; };
        IntegrationExchange_ExchangeSyncConfig: $data.EntitySet<typeof Integration.Exchange.Rest.IntegrationExchange_ExchangeSyncConfig, Integration.Exchange.Rest.IntegrationExchange_ExchangeSyncConfig>;
        IsLookupUsed: { (Key: Edm.String, Type: Edm.String): Promise<Edm.Boolean>; };
        MainFlow_FlowItem: $data.EntitySet<typeof Main.Flow.Rest.Model.MainFlow_FlowItem, Main.Flow.Rest.Model.MainFlow_FlowItem>;
        MainFlow_FlowRule: $data.EntitySet<typeof Main.Flow.Rest.Model.MainFlow_FlowRule, Main.Flow.Rest.Model.MainFlow_FlowRule>;
        MainLocalization_Localization: $data.EntitySet<typeof Main.Localization.Rest.Model.MainLocalization_Localization, Main.Localization.Rest.Model.MainLocalization_Localization>;
        MainMultitenant_Domain: $data.EntitySet<typeof Main.Multitenant.Rest.Model.MainMultitenant_Domain, Main.Multitenant.Rest.Model.MainMultitenant_Domain> & {
            SetGrantedAccessDomainIds({}: {User?: Main.Rest.Model.Main_User, DomainIds: Edm.Guid[]}): $data.Queryable<Main.Rest.Model.Main_User>;
            GetActiveTenants(): $data.Queryable<Main.Multitenant.Rest.Model.MainMultitenant_Domain>;
            GetAllTenants(): $data.Queryable<Main.Multitenant.Rest.Model.MainMultitenant_Domain>;
            GetGrantedAccessDomainIds(Username?: Edm.String): $data.Queryable<Edm.Guid>;
            ValidateConnectionString(ConnectionString?: Edm.String): $data.Queryable<Edm.String>;
            ArchiveDomain(DomainId: Edm.Guid): $data.Queryable<Edm.String>;
            ActivateDomain(DomainId: Edm.Guid): $data.Queryable<Edm.String>;
        };
        MainReplication_FailedTransfer: $data.EntitySet<typeof Main.Replication.Rest.MainReplication_FailedTransfer, Main.Replication.Rest.MainReplication_FailedTransfer> & {
            Reset({}: {Mode: Main.Replication.Controllers.Mode, ExternalClientName?: Edm.String, FieldType?: Edm.String, Id?: Edm.String}): $data.Queryable<Edm.Int32>;
            GetFailures(Mode: Main.Replication.Controllers.Mode): $data.Queryable<Main.Replication.Controllers.Failure>;
            GetDistinct(Mode: Main.Replication.Controllers.Mode, Property?: Edm.String): $data.Queryable<Edm.String>;
        };
        MainReplication_ReplicationGroupSetting: $data.EntitySet<typeof Main.Replication.Rest.Model.MainReplication_ReplicationGroupSetting, Main.Replication.Rest.Model.MainReplication_ReplicationGroupSetting>;
        MainReplication_TransferConfiguration: $data.EntitySet<typeof Main.Replication.Rest.MainReplication_TransferConfiguration, Main.Replication.Rest.MainReplication_TransferConfiguration>;
        MainVideoCall_JoinedGroupChats: $data.EntitySet<typeof Main.VideoCall.Rest.Model.MainVideoCall_JoinedGroupChats, Main.VideoCall.Rest.Model.MainVideoCall_JoinedGroupChats>;
        Main_Asset: $data.EntitySet<typeof Main.Rest.Model.Lookups.Main_Asset, Main.Rest.Model.Lookups.Main_Asset>;
        Main_CostCenter: $data.EntitySet<typeof Main.Rest.Model.Lookups.Main_CostCenter, Main.Rest.Model.Lookups.Main_CostCenter>;
        Main_Country: $data.EntitySet<typeof Main.Rest.Model.Lookups.Main_Country, Main.Rest.Model.Lookups.Main_Country>;
        Main_Currency: $data.EntitySet<typeof Main.Rest.Model.Lookups.Main_Currency, Main.Rest.Model.Lookups.Main_Currency>;
        Main_Device: $data.EntitySet<typeof Main.Rest.Model.Main_Device, Main.Rest.Model.Main_Device>;
        Main_DocumentCategory: $data.EntitySet<typeof Main.Rest.Model.Lookups.Main_DocumentCategory, Main.Rest.Model.Lookups.Main_DocumentCategory>;
        Main_DocumentGeneratorEntry: $data.EntitySet<typeof Main.Rest.Model.Main_DocumentGeneratorEntry, Main.Rest.Model.Main_DocumentGeneratorEntry> & {
            GetGeneratorServices(Filter?: Edm.String): $data.Queryable<Edm.String>;
            GetFailed(GeneratorService?: Edm.String): $data.Queryable<Main.Rest.Model.Main_DocumentGeneratorEntry>;
            GetPending(GeneratorService?: Edm.String): $data.Queryable<Main.Rest.Model.Main_DocumentGeneratorEntry>;
        };
        Main_EntityType: $data.EntitySet<typeof Main.Rest.Model.Main_EntityType, Main.Rest.Model.Main_EntityType>;
        Main_InvoicingType: $data.EntitySet<typeof Main.Rest.Model.Lookups.Main_InvoicingType, Main.Rest.Model.Lookups.Main_InvoicingType>;
        Main_Language: $data.EntitySet<typeof Main.Rest.Model.Lookups.Main_Language, Main.Rest.Model.Lookups.Main_Language>;
        Main_LengthUnit: $data.EntitySet<typeof Main.Rest.Model.Lookups.Main_LengthUnit, Main.Rest.Model.Lookups.Main_LengthUnit>;
        Main_LicenseModule: $data.EntitySet<typeof Main.Model.Lookups.Main_LicenseModule, Main.Model.Lookups.Main_LicenseModule>;
        Main_Log: $data.EntitySet<typeof Main.Rest.Model.Main_Log, Main.Rest.Model.Main_Log>;
        Main_MenuEntry: $data.EntitySet<typeof Main.Rest.Model.Main_MenuEntry, Main.Rest.Model.Main_MenuEntry>;
        Main_Message: $data.EntitySet<typeof Main.Rest.Model.Main_Message, Main.Rest.Model.Main_Message>;
        Main_MultiFactorAuthenticationMode: $data.EntitySet<typeof Main.Rest.Model.Lookups.Main_MultiFactorAuthenticationMode, Main.Rest.Model.Lookups.Main_MultiFactorAuthenticationMode>;
        Main_PasswordStrength: $data.EntitySet<typeof Main.Model.Lookups.Main_PasswordStrength, Main.Model.Lookups.Main_PasswordStrength>;
        Main_PaymentCondition: $data.EntitySet<typeof Main.Rest.Model.Lookups.Main_PaymentCondition, Main.Rest.Model.Lookups.Main_PaymentCondition>;
        Main_PaymentInterval: $data.EntitySet<typeof Main.Rest.Model.Lookups.Main_PaymentInterval, Main.Rest.Model.Lookups.Main_PaymentInterval>;
        Main_PaymentType: $data.EntitySet<typeof Main.Rest.Model.Lookups.Main_PaymentType, Main.Rest.Model.Lookups.Main_PaymentType>;
        Main_PermissionSchemaRole: $data.EntitySet<typeof Main.Rest.Model.Main_PermissionSchemaRole, Main.Rest.Model.Main_PermissionSchemaRole> & {
            AddRole({}: {Role: Main.Rest.Model.Main_PermissionSchemaRole, SourcePermissionSchemaRoleName?: Edm.String}): $data.Queryable<Main.Rest.Model.Main_PermissionSchemaRole>;
            AssignPermissions({}: {RoleKey: Edm.Guid, AssignedPermissions?: Edm.String[], UnassignedPermissions?: Edm.String[]}): $data.Queryable<Main.Rest.Model.Main_PermissionSchemaRole>;
            AssignUsers({}: {RoleKey: Edm.Guid, AssignedUsernames?: Edm.String[], UnassignedUsernames?: Edm.String[]}): $data.Queryable<Main.Rest.Model.Main_PermissionSchemaRole>;
            ResetRole({}: {RoleKey: Edm.Guid}): $data.Queryable<Main.Rest.Model.Main_PermissionSchemaRole>;
            GetRolePermissions(RoleKey: Edm.Guid): $data.Queryable<Main.Rest.Model.RolePermissions>;
            GetTemplates(): $data.Queryable<Main.Rest.Model.Main_PermissionSchemaRole>;
        };
        Main_Posting: $data.EntitySet<typeof Crm.Library.Rest.Model.Main_Posting, Crm.Library.Rest.Model.Main_Posting> & {
            GetTransactions(): $data.Queryable<Main.Controllers.OData.Transaction>;
        };
        Main_RecentPage: $data.EntitySet<typeof Crm.Library.Rest.Model.Main_RecentPage, Crm.Library.Rest.Model.Main_RecentPage>;
        Main_Region: $data.EntitySet<typeof Main.Rest.Model.Lookups.Main_Region, Main.Rest.Model.Lookups.Main_Region>;
        Main_ReplicationGroup: $data.EntitySet<typeof Main.Rest.Model.Lookups.Main_ReplicationGroup, Main.Rest.Model.Lookups.Main_ReplicationGroup>;
        Main_Site: $data.EntitySet<typeof Main.Rest.Model.Main_Site, Main.Rest.Model.Main_Site> & {
            SetActivePlugins({}: {PluginNames: Edm.String[]}): $data.Queryable<Edm.String>;
            HandleMultiFactorAuthenticationModeChange({}: {PreviousModeKey: Edm.String}): $data.Queryable<Edm.String>;
            GetActivePluginNames(): $data.Queryable<Edm.String>;
            GetCurrentSite(): $data.Queryable<Main.Rest.Model.Main_Site>;
            GetMaterialThemes(): $data.Queryable<Main.Rest.Model.Theme>;
            GetPlugins(): $data.Queryable<Main.Rest.Model.PluginDescriptor>;
            GetSelectableColumnsForBarcodeRoot(): $data.Queryable<Edm.String>;
        };
        Main_Skill: $data.EntitySet<typeof Main.Rest.Model.Lookups.Main_Skill, Main.Rest.Model.Lookups.Main_Skill>;
        Main_TimeUnit: $data.EntitySet<typeof Main.Rest.Model.Lookups.Main_TimeUnit, Main.Rest.Model.Lookups.Main_TimeUnit>;
        Main_User: $data.EntitySet<typeof Main.Rest.Model.Main_User, Main.Rest.Model.Main_User> & {
            AddUser({}: {User: Main.Rest.Model.Main_User, AdName?: Edm.String, Remark?: Edm.String, UsergroupIds: Edm.Guid[], UsergroupNames?: Edm.String[], Password: Edm.String, RoleIds: Edm.Guid[], RoleNames?: Edm.String[], StationIds?: Edm.Guid[], StationNames?: Edm.String[], GrantedAccessDomainsIds?: Edm.Guid[]}): $data.Queryable<Main.Rest.Model.Main_User>;
            SetLogLevel({}: {User: Main.Rest.Model.Main_User, LogLevel: Crm.Library.Signalr.JavaScriptLogLevel}): $data.Queryable<Main.Rest.Model.Main_User>;
            SetRoles({}: {User: Main.Rest.Model.Main_User, RoleIds: Edm.Guid[], RoleNames?: Edm.String[]}): $data.Queryable<Main.Rest.Model.Main_User>;
            SetUsergroups({}: {User: Main.Rest.Model.Main_User, UsergroupIds: Edm.Guid[], UsergroupNames?: Edm.String[]}): $data.Queryable<Main.Rest.Model.Main_User>;
            SetStations({}: {User: Main.Rest.Model.Main_User, StationIds?: Edm.Guid[], StationNames?: Edm.String[]}): $data.Queryable<Main.Rest.Model.Main_User>;
            GetPermissions(): $data.Queryable<Main.Rest.Model.PermissionRest>;
            GetRoles(): $data.Queryable<Edm.String>;
            GetToken(): $data.Queryable<Edm.String>;
            GetUser(): $data.Queryable<Main.Rest.Model.Main_User>;
            GetLocalDatabaseFromLog(username: Edm.String, logDate: Edm.String): $data.Queryable<Edm.String>;
            GetLocalStorageFromLog(username: Edm.String, logDate: Edm.String): $data.Queryable<Edm.String>;
            GetSignalRInformation(): $data.Queryable<Main.Rest.Model.UserSignalRInformation>;
            GetTechnicians(filterByRole: Edm.Boolean): $data.Queryable<Main.Rest.Model.Main_User>;
        };
        Main_UserAsset: $data.EntitySet<typeof Main.Rest.Model.Main_UserAsset, Main.Rest.Model.Main_UserAsset>;
        Main_UserSkill: $data.EntitySet<typeof Main.Rest.Model.Main_UserSkill, Main.Rest.Model.Main_UserSkill>;
        Main_UserStatus: $data.EntitySet<typeof Main.Rest.Model.Lookups.Main_UserStatus, Main.Rest.Model.Lookups.Main_UserStatus>;
        Main_UserSubscription: $data.EntitySet<typeof Main.Rest.Model.Main_UserSubscription, Main.Rest.Model.Main_UserSubscription>;
        Main_UserUserGroup: $data.EntitySet<typeof Main.Rest.Model.Main_UserUserGroup, Main.Rest.Model.Main_UserUserGroup>;
        Main_Usergroup: $data.EntitySet<typeof Main.Rest.Model.Main_Usergroup, Main.Rest.Model.Main_Usergroup> & {
            SetUsers({}: {UserIds: Edm.String[], UserGroup: Edm.Guid}): $data.Queryable<Main.Rest.Model.Main_Usergroup>;
        };
        RetryDocumentGeneration: { (Entries: Main.Rest.Model.Main_DocumentGeneratorEntry[]): Promise<void>; };
        SetReplication: { (state: Main.Replication.Rest.ReplicationState, states: Main.Replication.Rest.ReplicationState[], remove: Edm.Boolean): Promise<void>; };
        SmsChecklists_ChecklistInstallationTypeRelationship: $data.EntitySet<typeof Sms.Checklists.Rest.Model.SmsChecklists_ChecklistInstallationTypeRelationship, Sms.Checklists.Rest.Model.SmsChecklists_ChecklistInstallationTypeRelationship>;
        SmsChecklists_ServiceCaseChecklist: $data.EntitySet<typeof Sms.Checklists.Rest.Model.SmsChecklists_ServiceCaseChecklist, Sms.Checklists.Rest.Model.SmsChecklists_ServiceCaseChecklist>;
        SmsChecklists_ServiceOrderChecklist: $data.EntitySet<typeof Sms.Checklists.Rest.Model.SmsChecklists_ServiceOrderChecklist, Sms.Checklists.Rest.Model.SmsChecklists_ServiceOrderChecklist>;
        SmsScheduler_Absence: $data.EntitySet<typeof Sms.Scheduler.Rest.Model.SmsScheduler_Absence, Sms.Scheduler.Rest.Model.SmsScheduler_Absence>;
        SmsScheduler_DispatchArticleAssignment: $data.EntitySet<typeof Sms.Scheduler.Rest.Model.SmsScheduler_DispatchArticleAssignment, Sms.Scheduler.Rest.Model.SmsScheduler_DispatchArticleAssignment>;
        SmsScheduler_DispatchPersonAssignment: $data.EntitySet<typeof Sms.Scheduler.Rest.Model.SmsScheduler_DispatchPersonAssignment, Sms.Scheduler.Rest.Model.SmsScheduler_DispatchPersonAssignment>;
        SmsScheduler_Profile: $data.EntitySet<typeof Sms.Scheduler.Rest.Model.SmsScheduler_Profile, Sms.Scheduler.Rest.Model.SmsScheduler_Profile> & {
            GetGroupableResourceProperties(): $data.Queryable<Edm.String>;
            GetDefaultProfileConfig(): $data.Queryable<Sms.Scheduler.Model.ClientConfig>;
            GetResourceTooltipProperties(): $data.Queryable<Edm.String>;
        };
        SmsScheduler_ProfileResource: $data.EntitySet<typeof Sms.Scheduler.Rest.Model.SmsScheduler_ProfileResource, Sms.Scheduler.Rest.Model.SmsScheduler_ProfileResource>;
        SmsTimeManagement_TimeManagementEvent: $data.EntitySet<typeof Sms.TimeManagement.Rest.Model.SmsTimeManagement_TimeManagementEvent, Sms.TimeManagement.Rest.Model.SmsTimeManagement_TimeManagementEvent>;
        SmsTimeManagement_TimeManagementEventType: $data.EntitySet<typeof Sms.TimeManagement.Rest.Model.Lookups.SmsTimeManagement_TimeManagementEventType, Sms.TimeManagement.Rest.Model.Lookups.SmsTimeManagement_TimeManagementEventType>;
    }

    export class ObservableCrmDynamicForms_DynamicFormElement_ExtensionValues extends $data.Entity {
        constructor();
        constructor(initData: { CanAttachServiceCases?: KnockoutObservable<Edm.Boolean>; DisplayOnItemTemplate?: KnockoutObservable<Edm.Boolean>; DisplayOnReports?: KnockoutObservable<Edm.Boolean>; Filterable?: KnockoutObservable<Edm.Boolean>; IsRangeFilter?: KnockoutObservable<Edm.Boolean>; IsSpecial?: KnockoutObservable<Edm.Boolean>; IsVerySpecial?: KnockoutObservable<Edm.Boolean> });

        CanAttachServiceCases: KnockoutObservable<Edm.Boolean>;
        DisplayOnItemTemplate: KnockoutObservable<Edm.Boolean>;
        DisplayOnReports: KnockoutObservable<Edm.Boolean>;
        Filterable: KnockoutObservable<Edm.Boolean>;
        IsRangeFilter: KnockoutObservable<Edm.Boolean>;
        IsSpecial: KnockoutObservable<Edm.Boolean>;
        IsVerySpecial: KnockoutObservable<Edm.Boolean>;
        innerInstance: CrmDynamicForms_DynamicFormElement_ExtensionValues;
    }

    export class ObservableMainMultitenant_Domain_ExtensionValues extends $data.Entity {
        constructor();
        constructor(initData: { CompanyName?: KnockoutObservable<Edm.String>; ConnectionString?: KnockoutObservable<Edm.String>; ContractNo?: KnockoutObservable<Edm.String>; DataProtectionOfficer?: KnockoutObservable<Edm.String>; DefaultCountryKey?: KnockoutObservable<Edm.String>; DefaultLanguageKey?: KnockoutObservable<Edm.String>; DefaultLocale?: KnockoutObservable<Edm.String>; Host?: KnockoutObservable<Edm.String>; Identifier?: KnockoutObservable<Edm.String>; LegacyId?: KnockoutObservable<Edm.String>; LicenseKey?: KnockoutObservable<Edm.String>; MaterialLogoBase64?: KnockoutObservable<Edm.String>; MaterialTheme?: KnockoutObservable<Edm.String>; MinPasswordStrength?: KnockoutObservable<Edm.Int32>; MultiFactorAuthenticationModeKey?: KnockoutObservable<Edm.String>; ProjectId?: KnockoutObservable<Edm.Guid>; ReportBarcodeFormat?: KnockoutObservable<Edm.String>; ReportBarcodePrefix?: KnockoutObservable<Edm.String>; ReportBarcodePrintOnly?: KnockoutObservable<Edm.Boolean>; ReportBarcodeRoot?: KnockoutObservable<Edm.String>; ReportBarcodeShowOnChecklistPdf?: KnockoutObservable<Edm.Boolean>; ReportBarcodeShowOnServiceReport?: KnockoutObservable<Edm.Boolean>; ReportBarcodeSuffix?: KnockoutObservable<Edm.String>; ReportFooterCol1?: KnockoutObservable<Edm.String>; ReportFooterCol2?: KnockoutObservable<Edm.String>; ReportFooterCol3?: KnockoutObservable<Edm.String>; ReportFooterImageBase64?: KnockoutObservable<Edm.String>; ReportFooterImageContentType?: KnockoutObservable<Edm.String>; ReportLogoBase64?: KnockoutObservable<Edm.String>; ReportLogoContentType?: KnockoutObservable<Edm.String>; ResponsibleAddress?: KnockoutObservable<Edm.String>; SiteLogoBase64?: KnockoutObservable<Edm.String>; Theme?: KnockoutObservable<Edm.String> });

        CompanyName: KnockoutObservable<Edm.String>;
        ConnectionString: KnockoutObservable<Edm.String>;
        ContractNo: KnockoutObservable<Edm.String>;
        DataProtectionOfficer: KnockoutObservable<Edm.String>;
        DefaultCountryKey: KnockoutObservable<Edm.String>;
        DefaultLanguageKey: KnockoutObservable<Edm.String>;
        DefaultLocale: KnockoutObservable<Edm.String>;
        Host: KnockoutObservable<Edm.String>;
        Identifier: KnockoutObservable<Edm.String>;
        LegacyId: KnockoutObservable<Edm.String>;
        LicenseKey: KnockoutObservable<Edm.String>;
        MaterialLogoBase64: KnockoutObservable<Edm.String>;
        MaterialTheme: KnockoutObservable<Edm.String>;
        MinPasswordStrength: KnockoutObservable<Edm.Int32>;
        MultiFactorAuthenticationModeKey: KnockoutObservable<Edm.String>;
        ProjectId: KnockoutObservable<Edm.Guid>;
        ReportBarcodeFormat: KnockoutObservable<Edm.String>;
        ReportBarcodePrefix: KnockoutObservable<Edm.String>;
        ReportBarcodePrintOnly: KnockoutObservable<Edm.Boolean>;
        ReportBarcodeRoot: KnockoutObservable<Edm.String>;
        ReportBarcodeShowOnChecklistPdf: KnockoutObservable<Edm.Boolean>;
        ReportBarcodeShowOnServiceReport: KnockoutObservable<Edm.Boolean>;
        ReportBarcodeSuffix: KnockoutObservable<Edm.String>;
        ReportFooterCol1: KnockoutObservable<Edm.String>;
        ReportFooterCol2: KnockoutObservable<Edm.String>;
        ReportFooterCol3: KnockoutObservable<Edm.String>;
        ReportFooterImageBase64: KnockoutObservable<Edm.String>;
        ReportFooterImageContentType: KnockoutObservable<Edm.String>;
        ReportLogoBase64: KnockoutObservable<Edm.String>;
        ReportLogoContentType: KnockoutObservable<Edm.String>;
        ResponsibleAddress: KnockoutObservable<Edm.String>;
        SiteLogoBase64: KnockoutObservable<Edm.String>;
        Theme: KnockoutObservable<Edm.String>;
        innerInstance: MainMultitenant_Domain_ExtensionValues;
    }

    export class ObservableMain_PermissionSchemaRole_ExtensionValues extends $data.Entity {
        constructor();
        constructor(initData: { Description?: KnockoutObservable<Edm.String> });

        Description: KnockoutObservable<Edm.String>;
        innerInstance: Main_PermissionSchemaRole_ExtensionValues;
    }

    export class ObservableCrmArticle_ArticleGroup01_ExtensionValues extends $data.Entity {
        constructor();
        constructor(initData: { ShowInConfigurator?: KnockoutObservable<Edm.Boolean> });

        ShowInConfigurator: KnockoutObservable<Edm.Boolean>;
        innerInstance: CrmArticle_ArticleGroup01_ExtensionValues;
    }

    export class ObservableCrm_CompanyType_ExtensionValues extends $data.Entity {
        constructor();
        constructor(initData: { CanHaveOrders?: KnockoutObservable<Edm.Boolean>; Competitor?: KnockoutObservable<Edm.Boolean> });

        CanHaveOrders: KnockoutObservable<Edm.Boolean>;
        Competitor: KnockoutObservable<Edm.Boolean>;
        innerInstance: Crm_CompanyType_ExtensionValues;
    }

    export class ObservableMain_Country_ExtensionValues extends $data.Entity {
        constructor();
        constructor(initData: { IsGreat?: KnockoutObservable<Edm.Boolean>; LegacyId?: KnockoutObservable<Edm.Guid>; Rating?: KnockoutObservable<Edm.Decimal> });

        IsGreat: KnockoutObservable<Edm.Boolean>;
        LegacyId: KnockoutObservable<Edm.Guid>;
        Rating: KnockoutObservable<Edm.Decimal>;
        innerInstance: Main_Country_ExtensionValues;
    }

    export class ObservableMain_DocumentCategory_ExtensionValues extends $data.Entity {
        constructor();
        constructor(initData: { SalesRelated?: KnockoutObservable<Edm.Boolean> });

        SalesRelated: KnockoutObservable<Edm.Boolean>;
        innerInstance: Main_DocumentCategory_ExtensionValues;
    }

    export class ObservableMain_InvoicingType_ExtensionValues extends $data.Entity {
        constructor();
        constructor(initData: { IsCostLumpSum?: KnockoutObservable<Edm.Boolean>; IsMaterialLumpSum?: KnockoutObservable<Edm.Boolean>; IsTimeLumpSum?: KnockoutObservable<Edm.Boolean> });

        IsCostLumpSum: KnockoutObservable<Edm.Boolean>;
        IsMaterialLumpSum: KnockoutObservable<Edm.Boolean>;
        IsTimeLumpSum: KnockoutObservable<Edm.Boolean>;
        innerInstance: Main_InvoicingType_ExtensionValues;
    }

    export class ObservableCrmArticle_ArticleRelationship_ExtensionValues extends $data.Entity {
        constructor();
        constructor(initData: { IsDefault?: KnockoutObservable<Edm.Boolean>; IsRequired?: KnockoutObservable<Edm.Boolean>; PurchasePrice?: KnockoutObservable<Edm.Decimal>; SalesPrice?: KnockoutObservable<Edm.Decimal> });

        IsDefault: KnockoutObservable<Edm.Boolean>;
        IsRequired: KnockoutObservable<Edm.Boolean>;
        PurchasePrice: KnockoutObservable<Edm.Decimal>;
        SalesPrice: KnockoutObservable<Edm.Decimal>;
        innerInstance: CrmArticle_ArticleRelationship_ExtensionValues;
    }

    export class ObservableCrmArticle_Article_ExtensionValues extends $data.Entity {
        constructor();
        constructor(initData: { CanBeAddedAfterCustomerSignature?: KnockoutObservable<Edm.Boolean>; IsDefaultForServiceOrderTimes?: KnockoutObservable<Edm.Boolean>; IsHidden?: KnockoutObservable<Edm.Boolean>; IsServiceOrderExpense?: KnockoutObservable<Edm.Boolean>; ShowDistanceInput?: KnockoutObservable<Edm.Boolean> });

        CanBeAddedAfterCustomerSignature: KnockoutObservable<Edm.Boolean>;
        IsDefaultForServiceOrderTimes: KnockoutObservable<Edm.Boolean>;
        IsHidden: KnockoutObservable<Edm.Boolean>;
        IsServiceOrderExpense: KnockoutObservable<Edm.Boolean>;
        ShowDistanceInput: KnockoutObservable<Edm.Boolean>;
        innerInstance: CrmArticle_Article_ExtensionValues;
    }

    export class ObservableCrmConfigurator_ConfigurationBase_ExtensionValues extends $data.Entity {
        constructor();
        constructor(initData: { CanBeAddedAfterCustomerSignature?: KnockoutObservable<Edm.Boolean>; IsDefaultForServiceOrderTimes?: KnockoutObservable<Edm.Boolean>; IsHidden?: KnockoutObservable<Edm.Boolean>; IsServiceOrderExpense?: KnockoutObservable<Edm.Boolean>; ShowDistanceInput?: KnockoutObservable<Edm.Boolean> });

        CanBeAddedAfterCustomerSignature: KnockoutObservable<Edm.Boolean>;
        IsDefaultForServiceOrderTimes: KnockoutObservable<Edm.Boolean>;
        IsHidden: KnockoutObservable<Edm.Boolean>;
        IsServiceOrderExpense: KnockoutObservable<Edm.Boolean>;
        ShowDistanceInput: KnockoutObservable<Edm.Boolean>;
        innerInstance: CrmConfigurator_ConfigurationBase_ExtensionValues;
    }

    export class ObservableCrmConfigurator_Variable_ExtensionValues extends $data.Entity {
        constructor();
        constructor(initData: { CanBeAddedAfterCustomerSignature?: KnockoutObservable<Edm.Boolean>; IsDefaultForServiceOrderTimes?: KnockoutObservable<Edm.Boolean>; IsHidden?: KnockoutObservable<Edm.Boolean>; IsServiceOrderExpense?: KnockoutObservable<Edm.Boolean>; ShowDistanceInput?: KnockoutObservable<Edm.Boolean> });

        CanBeAddedAfterCustomerSignature: KnockoutObservable<Edm.Boolean>;
        IsDefaultForServiceOrderTimes: KnockoutObservable<Edm.Boolean>;
        IsHidden: KnockoutObservable<Edm.Boolean>;
        IsServiceOrderExpense: KnockoutObservable<Edm.Boolean>;
        ShowDistanceInput: KnockoutObservable<Edm.Boolean>;
        innerInstance: CrmConfigurator_Variable_ExtensionValues;
    }

    export class ObservableCrm_Company_ExtensionValues extends $data.Entity {
        constructor();
        constructor(initData: { CompanyPriceGroupKey?: KnockoutObservable<Edm.String>; CompanyPriceLevelKey?: KnockoutObservable<Edm.String>; ErpAccountGroup?: KnockoutObservable<Edm.Int32>; ErpCreditLimit?: KnockoutObservable<Edm.Decimal>; ErpCurrency?: KnockoutObservable<Edm.String>; ErpDeliveryMethod?: KnockoutObservable<Edm.String>; ErpDeliveryProhibited?: KnockoutObservable<Edm.Boolean>; ErpDeliveryProhibitedReason?: KnockoutObservable<Edm.String>; ErpDiscount?: KnockoutObservable<Edm.Decimal>; ErpOpenItemsDue?: KnockoutObservable<Edm.Decimal>; ErpOpenItemsTotal?: KnockoutObservable<Edm.Decimal>; ErpOutstandingInvoiceValue?: KnockoutObservable<Edm.Decimal>; ErpOutstandingOrderValue?: KnockoutObservable<Edm.Decimal>; ErpPartialDeliveryProhibited?: KnockoutObservable<Edm.Boolean>; ErpPartialDeliveryProhibitedReason?: KnockoutObservable<Edm.String>; ErpPaymentMethod?: KnockoutObservable<Edm.String>; ErpPaymentTerms?: KnockoutObservable<Edm.String>; ErpPaymentTermsKey?: KnockoutObservable<Edm.String>; ErpTermsOfDelivery?: KnockoutObservable<Edm.String>; ErpTermsOfDeliveryKey?: KnockoutObservable<Edm.String>; TestDateTime?: KnockoutObservable<Edm.DateTimeOffset>; TestInt?: KnockoutObservable<Edm.Int32>; VATIdentificationNumber?: KnockoutObservable<Edm.String>; VisitFrequencyTimeUnitKey?: KnockoutObservable<Edm.String>; VisitFrequencyValue?: KnockoutObservable<Edm.Int32>; VisitFrequencyValuePerYear?: KnockoutObservable<Edm.Int32> });

        CompanyPriceGroupKey: KnockoutObservable<Edm.String>;
        CompanyPriceLevelKey: KnockoutObservable<Edm.String>;
        ErpAccountGroup: KnockoutObservable<Edm.Int32>;
        ErpCreditLimit: KnockoutObservable<Edm.Decimal>;
        ErpCurrency: KnockoutObservable<Edm.String>;
        ErpDeliveryMethod: KnockoutObservable<Edm.String>;
        ErpDeliveryProhibited: KnockoutObservable<Edm.Boolean>;
        ErpDeliveryProhibitedReason: KnockoutObservable<Edm.String>;
        ErpDiscount: KnockoutObservable<Edm.Decimal>;
        ErpOpenItemsDue: KnockoutObservable<Edm.Decimal>;
        ErpOpenItemsTotal: KnockoutObservable<Edm.Decimal>;
        ErpOutstandingInvoiceValue: KnockoutObservable<Edm.Decimal>;
        ErpOutstandingOrderValue: KnockoutObservable<Edm.Decimal>;
        ErpPartialDeliveryProhibited: KnockoutObservable<Edm.Boolean>;
        ErpPartialDeliveryProhibitedReason: KnockoutObservable<Edm.String>;
        ErpPaymentMethod: KnockoutObservable<Edm.String>;
        ErpPaymentTerms: KnockoutObservable<Edm.String>;
        ErpPaymentTermsKey: KnockoutObservable<Edm.String>;
        ErpTermsOfDelivery: KnockoutObservable<Edm.String>;
        ErpTermsOfDeliveryKey: KnockoutObservable<Edm.String>;
        TestDateTime: KnockoutObservable<Edm.DateTimeOffset>;
        TestInt: KnockoutObservable<Edm.Int32>;
        VATIdentificationNumber: KnockoutObservable<Edm.String>;
        VisitFrequencyTimeUnitKey: KnockoutObservable<Edm.String>;
        VisitFrequencyValue: KnockoutObservable<Edm.Int32>;
        VisitFrequencyValuePerYear: KnockoutObservable<Edm.Int32>;
        innerInstance: Crm_Company_ExtensionValues;
    }

    export class ObservableCrm_DocumentAttribute_ExtensionValues extends $data.Entity {
        constructor();
        constructor(initData: { DispatchId?: KnockoutObservable<Edm.Guid>; ErpDocumentId?: KnockoutObservable<Edm.Guid>; ServiceOrderMaterialId?: KnockoutObservable<Edm.Guid>; ServiceOrderTimeId?: KnockoutObservable<Edm.Guid> });

        DispatchId: KnockoutObservable<Edm.Guid>;
        ErpDocumentId: KnockoutObservable<Edm.Guid>;
        ServiceOrderMaterialId: KnockoutObservable<Edm.Guid>;
        ServiceOrderTimeId: KnockoutObservable<Edm.Guid>;
        innerInstance: Crm_DocumentAttribute_ExtensionValues;
    }

    export class ObservableCrm_FileResource_ExtensionValues extends $data.Entity {
        constructor();
        constructor(initData: { XmppRoomName?: KnockoutObservable<Edm.String> });

        XmppRoomName: KnockoutObservable<Edm.String>;
        innerInstance: Crm_FileResource_ExtensionValues;
    }

    export class ObservableCrmDynamicForms_DynamicForm_ExtensionValues extends $data.Entity {
        constructor();
        constructor(initData: { ContactType?: KnockoutObservable<Edm.String> });

        ContactType: KnockoutObservable<Edm.String>;
        innerInstance: CrmDynamicForms_DynamicForm_ExtensionValues;
    }

    export class ObservableCrm_Task_ExtensionValues extends $data.Entity {
        constructor();
        constructor(initData: { CampaignName?: KnockoutObservable<Edm.String>; TaskCampaignKey?: KnockoutObservable<Edm.Guid>; Test?: KnockoutObservable<Edm.String> });

        CampaignName: KnockoutObservable<Edm.String>;
        TaskCampaignKey: KnockoutObservable<Edm.Guid>;
        Test: KnockoutObservable<Edm.String>;
        innerInstance: Crm_Task_ExtensionValues;
    }

    export class ObservableCrm_Note_ExtensionValues extends $data.Entity {
        constructor();
        constructor(initData: { Bool?: KnockoutObservable<Edm.Boolean>; CalleeAudioERating?: KnockoutObservable<Edm.Single>; CalleeVideoERating?: KnockoutObservable<Edm.Single>; CallerAudioERating?: KnockoutObservable<Edm.Single>; CallerVideoERating?: KnockoutObservable<Edm.Single>; DataUsage?: KnockoutObservable<Edm.Single>; DispatchId?: KnockoutObservable<Edm.Guid>; NoteCampaignKey?: KnockoutObservable<Edm.Guid> });

        Bool: KnockoutObservable<Edm.Boolean>;
        CalleeAudioERating: KnockoutObservable<Edm.Single>;
        CalleeVideoERating: KnockoutObservable<Edm.Single>;
        CallerAudioERating: KnockoutObservable<Edm.Single>;
        CallerVideoERating: KnockoutObservable<Edm.Single>;
        DataUsage: KnockoutObservable<Edm.Single>;
        DispatchId: KnockoutObservable<Edm.Guid>;
        NoteCampaignKey: KnockoutObservable<Edm.Guid>;
        innerInstance: Crm_Note_ExtensionValues;
    }

    export class ObservableMain_User_ExtensionValues extends $data.Entity {
        constructor();
        constructor(initData: { ActiveProfileId?: KnockoutObservable<Edm.Int32>; DefaultLocationNo?: KnockoutObservable<Edm.String>; DefaultStorageAreaNo?: KnockoutObservable<Edm.String>; DefaultStoreNo?: KnockoutObservable<Edm.String>; DropboxToken?: KnockoutObservable<Edm.String>; HomeAddressId?: KnockoutObservable<Edm.Guid>; LicensePlate?: KnockoutObservable<Edm.String>; StationIds?: KnockoutObservableArray<Edm.Guid>; WorkingHoursPerDay?: KnockoutObservable<Edm.Int32> });

        ActiveProfileId: KnockoutObservable<Edm.Int32>;
        DefaultLocationNo: KnockoutObservable<Edm.String>;
        DefaultStorageAreaNo: KnockoutObservable<Edm.String>;
        DefaultStoreNo: KnockoutObservable<Edm.String>;
        DropboxToken: KnockoutObservable<Edm.String>;
        HomeAddressId: KnockoutObservable<Edm.Guid>;
        LicensePlate: KnockoutObservable<Edm.String>;
        StationIds: KnockoutObservableArray<Edm.Guid>;
        WorkingHoursPerDay: KnockoutObservable<Edm.Int32>;
        innerInstance: Main_User_ExtensionValues;
    }

    export class ObservableMain_Usergroup_ExtensionValues extends $data.Entity {
        constructor();
        constructor(initData: { IsServiceTeam?: KnockoutObservable<Edm.Boolean>; MainResourceId?: KnockoutObservable<Edm.String>; ValidFrom?: KnockoutObservable<Edm.DateTimeOffset>; ValidTo?: KnockoutObservable<Edm.DateTimeOffset> });

        IsServiceTeam: KnockoutObservable<Edm.Boolean>;
        MainResourceId: KnockoutObservable<Edm.String>;
        ValidFrom: KnockoutObservable<Edm.DateTimeOffset>;
        ValidTo: KnockoutObservable<Edm.DateTimeOffset>;
        innerInstance: Main_Usergroup_ExtensionValues;
    }

    export class ObservableMain_Site_ExtensionValues extends $data.Entity {
        constructor();
        constructor(initData: { CompanyName?: KnockoutObservable<Edm.String>; ConnectionString?: KnockoutObservable<Edm.String>; ContractNo?: KnockoutObservable<Edm.String>; DataProtectionOfficer?: KnockoutObservable<Edm.String>; DefaultCountryKey?: KnockoutObservable<Edm.String>; DefaultLanguageKey?: KnockoutObservable<Edm.String>; DefaultLocale?: KnockoutObservable<Edm.String>; Host?: KnockoutObservable<Edm.String>; Identifier?: KnockoutObservable<Edm.String>; LegacyId?: KnockoutObservable<Edm.String>; LicenseKey?: KnockoutObservable<Edm.String>; MaterialLogoBase64?: KnockoutObservable<Edm.String>; MaterialTheme?: KnockoutObservable<Edm.String>; MinPasswordStrength?: KnockoutObservable<Edm.Int32>; MultiFactorAuthenticationModeKey?: KnockoutObservable<Edm.String>; ProjectId?: KnockoutObservable<Edm.Guid>; ReportBarcodeFormat?: KnockoutObservable<Edm.String>; ReportBarcodePrefix?: KnockoutObservable<Edm.String>; ReportBarcodePrintOnly?: KnockoutObservable<Edm.Boolean>; ReportBarcodeRoot?: KnockoutObservable<Edm.String>; ReportBarcodeShowOnChecklistPdf?: KnockoutObservable<Edm.Boolean>; ReportBarcodeShowOnServiceReport?: KnockoutObservable<Edm.Boolean>; ReportBarcodeSuffix?: KnockoutObservable<Edm.String>; ReportFooterCol1?: KnockoutObservable<Edm.String>; ReportFooterCol2?: KnockoutObservable<Edm.String>; ReportFooterCol3?: KnockoutObservable<Edm.String>; ReportFooterImageBase64?: KnockoutObservable<Edm.String>; ReportFooterImageContentType?: KnockoutObservable<Edm.String>; ReportLogoBase64?: KnockoutObservable<Edm.String>; ReportLogoContentType?: KnockoutObservable<Edm.String>; ResponsibleAddress?: KnockoutObservable<Edm.String>; SiteLogoBase64?: KnockoutObservable<Edm.String>; Theme?: KnockoutObservable<Edm.String> });

        CompanyName: KnockoutObservable<Edm.String>;
        ConnectionString: KnockoutObservable<Edm.String>;
        ContractNo: KnockoutObservable<Edm.String>;
        DataProtectionOfficer: KnockoutObservable<Edm.String>;
        DefaultCountryKey: KnockoutObservable<Edm.String>;
        DefaultLanguageKey: KnockoutObservable<Edm.String>;
        DefaultLocale: KnockoutObservable<Edm.String>;
        Host: KnockoutObservable<Edm.String>;
        Identifier: KnockoutObservable<Edm.String>;
        LegacyId: KnockoutObservable<Edm.String>;
        LicenseKey: KnockoutObservable<Edm.String>;
        MaterialLogoBase64: KnockoutObservable<Edm.String>;
        MaterialTheme: KnockoutObservable<Edm.String>;
        MinPasswordStrength: KnockoutObservable<Edm.Int32>;
        MultiFactorAuthenticationModeKey: KnockoutObservable<Edm.String>;
        ProjectId: KnockoutObservable<Edm.Guid>;
        ReportBarcodeFormat: KnockoutObservable<Edm.String>;
        ReportBarcodePrefix: KnockoutObservable<Edm.String>;
        ReportBarcodePrintOnly: KnockoutObservable<Edm.Boolean>;
        ReportBarcodeRoot: KnockoutObservable<Edm.String>;
        ReportBarcodeShowOnChecklistPdf: KnockoutObservable<Edm.Boolean>;
        ReportBarcodeShowOnServiceReport: KnockoutObservable<Edm.Boolean>;
        ReportBarcodeSuffix: KnockoutObservable<Edm.String>;
        ReportFooterCol1: KnockoutObservable<Edm.String>;
        ReportFooterCol2: KnockoutObservable<Edm.String>;
        ReportFooterCol3: KnockoutObservable<Edm.String>;
        ReportFooterImageBase64: KnockoutObservable<Edm.String>;
        ReportFooterImageContentType: KnockoutObservable<Edm.String>;
        ReportLogoBase64: KnockoutObservable<Edm.String>;
        ReportLogoContentType: KnockoutObservable<Edm.String>;
        ResponsibleAddress: KnockoutObservable<Edm.String>;
        SiteLogoBase64: KnockoutObservable<Edm.String>;
        Theme: KnockoutObservable<Edm.String>;
        innerInstance: Main_Site_ExtensionValues;
    }

    export class ObservableMain_Device_ExtensionValues extends $data.Entity {
        constructor();
        constructor(initData: { PushNotifications?: KnockoutObservable<Edm.Boolean> });

        PushNotifications: KnockoutObservable<Edm.Boolean>;
        innerInstance: Main_Device_ExtensionValues;
    }

    export class ObservableCrmService_ServiceOrderTime_ExtensionValues extends $data.Entity {
        constructor();
        constructor(initData: { TestGuid?: KnockoutObservable<Edm.Guid> });

        TestGuid: KnockoutObservable<Edm.Guid>;
        innerInstance: CrmService_ServiceOrderTime_ExtensionValues;
    }

    export class ObservableCrmService_ServiceCaseTemplate_ExtensionValues extends $data.Entity {
        constructor();
        constructor(initData: { CompletionDynamicFormId?: KnockoutObservable<Edm.Guid>; CreationDynamicFormId?: KnockoutObservable<Edm.Guid> });

        CompletionDynamicFormId: KnockoutObservable<Edm.Guid>;
        CreationDynamicFormId: KnockoutObservable<Edm.Guid>;
        innerInstance: CrmService_ServiceCaseTemplate_ExtensionValues;
    }

    export class ObservableCrmService_ServiceCase_ExtensionValues extends $data.Entity {
        constructor();
        constructor(initData: { AffectedDynamicFormElementId?: KnockoutObservable<Edm.Guid>; AffectedDynamicFormReferenceId?: KnockoutObservable<Edm.Guid> });

        AffectedDynamicFormElementId: KnockoutObservable<Edm.Guid>;
        AffectedDynamicFormReferenceId: KnockoutObservable<Edm.Guid>;
        innerInstance: CrmService_ServiceCase_ExtensionValues;
    }

    export class ObservableCrmService_ServiceOrderDispatch_ExtensionValues extends $data.Entity {
        constructor();
        constructor(initData: { SchedulingGroupId?: KnockoutObservable<Edm.Guid>; TeamId?: KnockoutObservable<Edm.Guid> });

        SchedulingGroupId: KnockoutObservable<Edm.Guid>;
        TeamId: KnockoutObservable<Edm.Guid>;
        innerInstance: CrmService_ServiceOrderDispatch_ExtensionValues;
    }

    export class ObservableCrmProject_Project_ExtensionValues extends $data.Entity {
        constructor();
        constructor(initData: { PreferredOfferId?: KnockoutObservable<Edm.Guid> });

        PreferredOfferId: KnockoutObservable<Edm.Guid>;
        innerInstance: CrmProject_Project_ExtensionValues;
    }

    export class ObservableCrmOrder_Order_ExtensionValues extends $data.Entity {
        constructor();
        constructor(initData: { ConfigurationBaseId?: KnockoutObservable<Edm.Guid>; ProjectId?: KnockoutObservable<Edm.Guid>; ProjectLegacyName?: KnockoutObservable<Edm.String> });

        ConfigurationBaseId: KnockoutObservable<Edm.Guid>;
        ProjectId: KnockoutObservable<Edm.Guid>;
        ProjectLegacyName: KnockoutObservable<Edm.String>;
        innerInstance: CrmOrder_Order_ExtensionValues;
    }

    export class ObservableCrmOrder_OrderItem_ExtensionValues extends $data.Entity {
        constructor();
        constructor(initData: { VariableId?: KnockoutObservable<Edm.Guid> });

        VariableId: KnockoutObservable<Edm.Guid>;
        innerInstance: CrmOrder_OrderItem_ExtensionValues;
    }

    export class ObservableCrmOrder_Offer_ExtensionValues extends $data.Entity {
        constructor();
        constructor(initData: { ConfigurationBaseId?: KnockoutObservable<Edm.Guid>; ProjectId?: KnockoutObservable<Edm.Guid>; ProjectLegacyName?: KnockoutObservable<Edm.String> });

        ConfigurationBaseId: KnockoutObservable<Edm.Guid>;
        ProjectId: KnockoutObservable<Edm.Guid>;
        ProjectLegacyName: KnockoutObservable<Edm.String>;
        innerInstance: CrmOrder_Offer_ExtensionValues;
    }

    export class CrmDynamicForms_DynamicFormElement_ExtensionValues extends $data.Entity {
        constructor();
        constructor(initData: { CanAttachServiceCases?: Edm.Boolean; DisplayOnItemTemplate?: Edm.Boolean; DisplayOnReports?: Edm.Boolean; Filterable?: Edm.Boolean; IsRangeFilter?: Edm.Boolean; IsSpecial?: Edm.Boolean; IsVerySpecial?: Edm.Boolean });

        CanAttachServiceCases: Edm.Boolean;
        DisplayOnItemTemplate: Edm.Boolean;
        DisplayOnReports: Edm.Boolean;
        Filterable: Edm.Boolean;
        IsRangeFilter: Edm.Boolean;
        IsSpecial: Edm.Boolean;
        IsVerySpecial: Edm.Boolean;
        asKoObservable(): ObservableCrmDynamicForms_DynamicFormElement_ExtensionValues;
        static create(): CrmDynamicForms_DynamicFormElement_ExtensionValues;
        static create(initData:any): CrmDynamicForms_DynamicFormElement_ExtensionValues;
    }

    export class MainMultitenant_Domain_ExtensionValues extends $data.Entity {
        constructor();
        constructor(initData: { CompanyName?: Edm.String; ConnectionString?: Edm.String; ContractNo?: Edm.String; DataProtectionOfficer?: Edm.String; DefaultCountryKey?: Edm.String; DefaultLanguageKey?: Edm.String; DefaultLocale?: Edm.String; Host?: Edm.String; Identifier?: Edm.String; LegacyId?: Edm.String; LicenseKey?: Edm.String; MaterialLogoBase64?: Edm.String; MaterialTheme?: Edm.String; MinPasswordStrength?: Edm.Int32; MultiFactorAuthenticationModeKey?: Edm.String; ProjectId?: Edm.Guid; ReportBarcodeFormat?: Edm.String; ReportBarcodePrefix?: Edm.String; ReportBarcodePrintOnly?: Edm.Boolean; ReportBarcodeRoot?: Edm.String; ReportBarcodeShowOnChecklistPdf?: Edm.Boolean; ReportBarcodeShowOnServiceReport?: Edm.Boolean; ReportBarcodeSuffix?: Edm.String; ReportFooterCol1?: Edm.String; ReportFooterCol2?: Edm.String; ReportFooterCol3?: Edm.String; ReportFooterImageBase64?: Edm.String; ReportFooterImageContentType?: Edm.String; ReportLogoBase64?: Edm.String; ReportLogoContentType?: Edm.String; ResponsibleAddress?: Edm.String; SiteLogoBase64?: Edm.String; Theme?: Edm.String });

        CompanyName: Edm.String;
        ConnectionString: Edm.String;
        ContractNo: Edm.String;
        DataProtectionOfficer: Edm.String;
        DefaultCountryKey: Edm.String;
        DefaultLanguageKey: Edm.String;
        DefaultLocale: Edm.String;
        Host: Edm.String;
        Identifier: Edm.String;
        LegacyId: Edm.String;
        LicenseKey: Edm.String;
        MaterialLogoBase64: Edm.String;
        MaterialTheme: Edm.String;
        MinPasswordStrength: Edm.Int32;
        MultiFactorAuthenticationModeKey: Edm.String;
        ProjectId: Edm.Guid;
        ReportBarcodeFormat: Edm.String;
        ReportBarcodePrefix: Edm.String;
        ReportBarcodePrintOnly: Edm.Boolean;
        ReportBarcodeRoot: Edm.String;
        ReportBarcodeShowOnChecklistPdf: Edm.Boolean;
        ReportBarcodeShowOnServiceReport: Edm.Boolean;
        ReportBarcodeSuffix: Edm.String;
        ReportFooterCol1: Edm.String;
        ReportFooterCol2: Edm.String;
        ReportFooterCol3: Edm.String;
        ReportFooterImageBase64: Edm.String;
        ReportFooterImageContentType: Edm.String;
        ReportLogoBase64: Edm.String;
        ReportLogoContentType: Edm.String;
        ResponsibleAddress: Edm.String;
        SiteLogoBase64: Edm.String;
        Theme: Edm.String;
        asKoObservable(): ObservableMainMultitenant_Domain_ExtensionValues;
        static create(): MainMultitenant_Domain_ExtensionValues;
        static create(initData:any): MainMultitenant_Domain_ExtensionValues;
    }

    export class Main_PermissionSchemaRole_ExtensionValues extends $data.Entity {
        constructor();
        constructor(initData: { Description?: Edm.String });

        Description: Edm.String;
        asKoObservable(): ObservableMain_PermissionSchemaRole_ExtensionValues;
        static create(): Main_PermissionSchemaRole_ExtensionValues;
        static create(initData:any): Main_PermissionSchemaRole_ExtensionValues;
    }

    export class CrmArticle_ArticleGroup01_ExtensionValues extends $data.Entity {
        constructor();
        constructor(initData: { ShowInConfigurator?: Edm.Boolean });

        ShowInConfigurator: Edm.Boolean;
        asKoObservable(): ObservableCrmArticle_ArticleGroup01_ExtensionValues;
        static create(): CrmArticle_ArticleGroup01_ExtensionValues;
        static create(initData:any): CrmArticle_ArticleGroup01_ExtensionValues;
    }

    export class Crm_CompanyType_ExtensionValues extends $data.Entity {
        constructor();
        constructor(initData: { CanHaveOrders?: Edm.Boolean; Competitor?: Edm.Boolean });

        CanHaveOrders: Edm.Boolean;
        Competitor: Edm.Boolean;
        asKoObservable(): ObservableCrm_CompanyType_ExtensionValues;
        static create(): Crm_CompanyType_ExtensionValues;
        static create(initData:any): Crm_CompanyType_ExtensionValues;
    }

    export class Main_Country_ExtensionValues extends $data.Entity {
        constructor();
        constructor(initData: { IsGreat?: Edm.Boolean; LegacyId?: Edm.Guid; Rating?: Edm.Decimal });

        IsGreat: Edm.Boolean;
        LegacyId: Edm.Guid;
        Rating: Edm.Decimal;
        asKoObservable(): ObservableMain_Country_ExtensionValues;
        static create(): Main_Country_ExtensionValues;
        static create(initData:any): Main_Country_ExtensionValues;
    }

    export class Main_DocumentCategory_ExtensionValues extends $data.Entity {
        constructor();
        constructor(initData: { SalesRelated?: Edm.Boolean });

        SalesRelated: Edm.Boolean;
        asKoObservable(): ObservableMain_DocumentCategory_ExtensionValues;
        static create(): Main_DocumentCategory_ExtensionValues;
        static create(initData:any): Main_DocumentCategory_ExtensionValues;
    }

    export class Main_InvoicingType_ExtensionValues extends $data.Entity {
        constructor();
        constructor(initData: { IsCostLumpSum?: Edm.Boolean; IsMaterialLumpSum?: Edm.Boolean; IsTimeLumpSum?: Edm.Boolean });

        IsCostLumpSum: Edm.Boolean;
        IsMaterialLumpSum: Edm.Boolean;
        IsTimeLumpSum: Edm.Boolean;
        asKoObservable(): ObservableMain_InvoicingType_ExtensionValues;
        static create(): Main_InvoicingType_ExtensionValues;
        static create(initData:any): Main_InvoicingType_ExtensionValues;
    }

    export class CrmArticle_ArticleRelationship_ExtensionValues extends $data.Entity {
        constructor();
        constructor(initData: { IsDefault?: Edm.Boolean; IsRequired?: Edm.Boolean; PurchasePrice?: Edm.Decimal; SalesPrice?: Edm.Decimal });

        IsDefault: Edm.Boolean;
        IsRequired: Edm.Boolean;
        PurchasePrice: Edm.Decimal;
        SalesPrice: Edm.Decimal;
        asKoObservable(): ObservableCrmArticle_ArticleRelationship_ExtensionValues;
        static create(): CrmArticle_ArticleRelationship_ExtensionValues;
        static create(initData:any): CrmArticle_ArticleRelationship_ExtensionValues;
    }

    export class CrmArticle_Article_ExtensionValues extends $data.Entity {
        constructor();
        constructor(initData: { CanBeAddedAfterCustomerSignature?: Edm.Boolean; IsDefaultForServiceOrderTimes?: Edm.Boolean; IsHidden?: Edm.Boolean; IsServiceOrderExpense?: Edm.Boolean; ShowDistanceInput?: Edm.Boolean });

        CanBeAddedAfterCustomerSignature: Edm.Boolean;
        IsDefaultForServiceOrderTimes: Edm.Boolean;
        IsHidden: Edm.Boolean;
        IsServiceOrderExpense: Edm.Boolean;
        ShowDistanceInput: Edm.Boolean;
        asKoObservable(): ObservableCrmArticle_Article_ExtensionValues;
        static create(): CrmArticle_Article_ExtensionValues;
        static create(initData:any): CrmArticle_Article_ExtensionValues;
    }

    export class CrmConfigurator_ConfigurationBase_ExtensionValues extends $data.Entity {
        constructor();
        constructor(initData: { CanBeAddedAfterCustomerSignature?: Edm.Boolean; IsDefaultForServiceOrderTimes?: Edm.Boolean; IsHidden?: Edm.Boolean; IsServiceOrderExpense?: Edm.Boolean; ShowDistanceInput?: Edm.Boolean });

        CanBeAddedAfterCustomerSignature: Edm.Boolean;
        IsDefaultForServiceOrderTimes: Edm.Boolean;
        IsHidden: Edm.Boolean;
        IsServiceOrderExpense: Edm.Boolean;
        ShowDistanceInput: Edm.Boolean;
        asKoObservable(): ObservableCrmConfigurator_ConfigurationBase_ExtensionValues;
        static create(): CrmConfigurator_ConfigurationBase_ExtensionValues;
        static create(initData:any): CrmConfigurator_ConfigurationBase_ExtensionValues;
    }

    export class CrmConfigurator_Variable_ExtensionValues extends $data.Entity {
        constructor();
        constructor(initData: { CanBeAddedAfterCustomerSignature?: Edm.Boolean; IsDefaultForServiceOrderTimes?: Edm.Boolean; IsHidden?: Edm.Boolean; IsServiceOrderExpense?: Edm.Boolean; ShowDistanceInput?: Edm.Boolean });

        CanBeAddedAfterCustomerSignature: Edm.Boolean;
        IsDefaultForServiceOrderTimes: Edm.Boolean;
        IsHidden: Edm.Boolean;
        IsServiceOrderExpense: Edm.Boolean;
        ShowDistanceInput: Edm.Boolean;
        asKoObservable(): ObservableCrmConfigurator_Variable_ExtensionValues;
        static create(): CrmConfigurator_Variable_ExtensionValues;
        static create(initData:any): CrmConfigurator_Variable_ExtensionValues;
    }

    export class Crm_Company_ExtensionValues extends $data.Entity {
        constructor();
        constructor(initData: { CompanyPriceGroupKey?: Edm.String; CompanyPriceLevelKey?: Edm.String; ErpAccountGroup?: Edm.Int32; ErpCreditLimit?: Edm.Decimal; ErpCurrency?: Edm.String; ErpDeliveryMethod?: Edm.String; ErpDeliveryProhibited?: Edm.Boolean; ErpDeliveryProhibitedReason?: Edm.String; ErpDiscount?: Edm.Decimal; ErpOpenItemsDue?: Edm.Decimal; ErpOpenItemsTotal?: Edm.Decimal; ErpOutstandingInvoiceValue?: Edm.Decimal; ErpOutstandingOrderValue?: Edm.Decimal; ErpPartialDeliveryProhibited?: Edm.Boolean; ErpPartialDeliveryProhibitedReason?: Edm.String; ErpPaymentMethod?: Edm.String; ErpPaymentTerms?: Edm.String; ErpPaymentTermsKey?: Edm.String; ErpTermsOfDelivery?: Edm.String; ErpTermsOfDeliveryKey?: Edm.String; TestDateTime?: Edm.DateTimeOffset; TestInt?: Edm.Int32; VATIdentificationNumber?: Edm.String; VisitFrequencyTimeUnitKey?: Edm.String; VisitFrequencyValue?: Edm.Int32; VisitFrequencyValuePerYear?: Edm.Int32 });

        CompanyPriceGroupKey: Edm.String;
        CompanyPriceLevelKey: Edm.String;
        ErpAccountGroup: Edm.Int32;
        ErpCreditLimit: Edm.Decimal;
        ErpCurrency: Edm.String;
        ErpDeliveryMethod: Edm.String;
        ErpDeliveryProhibited: Edm.Boolean;
        ErpDeliveryProhibitedReason: Edm.String;
        ErpDiscount: Edm.Decimal;
        ErpOpenItemsDue: Edm.Decimal;
        ErpOpenItemsTotal: Edm.Decimal;
        ErpOutstandingInvoiceValue: Edm.Decimal;
        ErpOutstandingOrderValue: Edm.Decimal;
        ErpPartialDeliveryProhibited: Edm.Boolean;
        ErpPartialDeliveryProhibitedReason: Edm.String;
        ErpPaymentMethod: Edm.String;
        ErpPaymentTerms: Edm.String;
        ErpPaymentTermsKey: Edm.String;
        ErpTermsOfDelivery: Edm.String;
        ErpTermsOfDeliveryKey: Edm.String;
        TestDateTime: Edm.DateTimeOffset;
        TestInt: Edm.Int32;
        VATIdentificationNumber: Edm.String;
        VisitFrequencyTimeUnitKey: Edm.String;
        VisitFrequencyValue: Edm.Int32;
        VisitFrequencyValuePerYear: Edm.Int32;
        asKoObservable(): ObservableCrm_Company_ExtensionValues;
        static create(): Crm_Company_ExtensionValues;
        static create(initData:any): Crm_Company_ExtensionValues;
    }

    export class Crm_DocumentAttribute_ExtensionValues extends $data.Entity {
        constructor();
        constructor(initData: { DispatchId?: Edm.Guid; ErpDocumentId?: Edm.Guid; ServiceOrderMaterialId?: Edm.Guid; ServiceOrderTimeId?: Edm.Guid });

        DispatchId: Edm.Guid;
        ErpDocumentId: Edm.Guid;
        ServiceOrderMaterialId: Edm.Guid;
        ServiceOrderTimeId: Edm.Guid;
        asKoObservable(): ObservableCrm_DocumentAttribute_ExtensionValues;
        static create(): Crm_DocumentAttribute_ExtensionValues;
        static create(initData:any): Crm_DocumentAttribute_ExtensionValues;
    }

    export class Crm_FileResource_ExtensionValues extends $data.Entity {
        constructor();
        constructor(initData: { XmppRoomName?: Edm.String });

        XmppRoomName: Edm.String;
        asKoObservable(): ObservableCrm_FileResource_ExtensionValues;
        static create(): Crm_FileResource_ExtensionValues;
        static create(initData:any): Crm_FileResource_ExtensionValues;
    }

    export class CrmDynamicForms_DynamicForm_ExtensionValues extends $data.Entity {
        constructor();
        constructor(initData: { ContactType?: Edm.String });

        ContactType: Edm.String;
        asKoObservable(): ObservableCrmDynamicForms_DynamicForm_ExtensionValues;
        static create(): CrmDynamicForms_DynamicForm_ExtensionValues;
        static create(initData:any): CrmDynamicForms_DynamicForm_ExtensionValues;
    }

    export class Crm_Task_ExtensionValues extends $data.Entity {
        constructor();
        constructor(initData: { CampaignName?: Edm.String; TaskCampaignKey?: Edm.Guid; Test?: Edm.String });

        CampaignName: Edm.String;
        TaskCampaignKey: Edm.Guid;
        Test: Edm.String;
        asKoObservable(): ObservableCrm_Task_ExtensionValues;
        static create(): Crm_Task_ExtensionValues;
        static create(initData:any): Crm_Task_ExtensionValues;
    }

    export class Crm_Note_ExtensionValues extends $data.Entity {
        constructor();
        constructor(initData: { Bool?: Edm.Boolean; CalleeAudioERating?: Edm.Single; CalleeVideoERating?: Edm.Single; CallerAudioERating?: Edm.Single; CallerVideoERating?: Edm.Single; DataUsage?: Edm.Single; DispatchId?: Edm.Guid; NoteCampaignKey?: Edm.Guid });

        Bool: Edm.Boolean;
        CalleeAudioERating: Edm.Single;
        CalleeVideoERating: Edm.Single;
        CallerAudioERating: Edm.Single;
        CallerVideoERating: Edm.Single;
        DataUsage: Edm.Single;
        DispatchId: Edm.Guid;
        NoteCampaignKey: Edm.Guid;
        asKoObservable(): ObservableCrm_Note_ExtensionValues;
        static create(): Crm_Note_ExtensionValues;
        static create(initData:any): Crm_Note_ExtensionValues;
    }

    export class Main_User_ExtensionValues extends $data.Entity {
        constructor();
        constructor(initData: { ActiveProfileId?: Edm.Int32; DefaultLocationNo?: Edm.String; DefaultStorageAreaNo?: Edm.String; DefaultStoreNo?: Edm.String; DropboxToken?: Edm.String; HomeAddressId?: Edm.Guid; LicensePlate?: Edm.String; StationIds?: Edm.Guid[]; WorkingHoursPerDay?: Edm.Int32 });

        ActiveProfileId: Edm.Int32;
        DefaultLocationNo: Edm.String;
        DefaultStorageAreaNo: Edm.String;
        DefaultStoreNo: Edm.String;
        DropboxToken: Edm.String;
        HomeAddressId: Edm.Guid;
        LicensePlate: Edm.String;
        StationIds: Edm.Guid[];
        WorkingHoursPerDay: Edm.Int32;
        asKoObservable(): ObservableMain_User_ExtensionValues;
        static create(): Main_User_ExtensionValues;
        static create(initData:any): Main_User_ExtensionValues;
    }

    export class Main_Usergroup_ExtensionValues extends $data.Entity {
        constructor();
        constructor(initData: { IsServiceTeam?: Edm.Boolean; MainResourceId?: Edm.String; ValidFrom?: Edm.DateTimeOffset; ValidTo?: Edm.DateTimeOffset });

        IsServiceTeam: Edm.Boolean;
        MainResourceId: Edm.String;
        ValidFrom: Edm.DateTimeOffset;
        ValidTo: Edm.DateTimeOffset;
        asKoObservable(): ObservableMain_Usergroup_ExtensionValues;
        static create(): Main_Usergroup_ExtensionValues;
        static create(initData:any): Main_Usergroup_ExtensionValues;
    }

    export class Main_Site_ExtensionValues extends $data.Entity {
        constructor();
        constructor(initData: { CompanyName?: Edm.String; ConnectionString?: Edm.String; ContractNo?: Edm.String; DataProtectionOfficer?: Edm.String; DefaultCountryKey?: Edm.String; DefaultLanguageKey?: Edm.String; DefaultLocale?: Edm.String; Host?: Edm.String; Identifier?: Edm.String; LegacyId?: Edm.String; LicenseKey?: Edm.String; MaterialLogoBase64?: Edm.String; MaterialTheme?: Edm.String; MinPasswordStrength?: Edm.Int32; MultiFactorAuthenticationModeKey?: Edm.String; ProjectId?: Edm.Guid; ReportBarcodeFormat?: Edm.String; ReportBarcodePrefix?: Edm.String; ReportBarcodePrintOnly?: Edm.Boolean; ReportBarcodeRoot?: Edm.String; ReportBarcodeShowOnChecklistPdf?: Edm.Boolean; ReportBarcodeShowOnServiceReport?: Edm.Boolean; ReportBarcodeSuffix?: Edm.String; ReportFooterCol1?: Edm.String; ReportFooterCol2?: Edm.String; ReportFooterCol3?: Edm.String; ReportFooterImageBase64?: Edm.String; ReportFooterImageContentType?: Edm.String; ReportLogoBase64?: Edm.String; ReportLogoContentType?: Edm.String; ResponsibleAddress?: Edm.String; SiteLogoBase64?: Edm.String; Theme?: Edm.String });

        CompanyName: Edm.String;
        ConnectionString: Edm.String;
        ContractNo: Edm.String;
        DataProtectionOfficer: Edm.String;
        DefaultCountryKey: Edm.String;
        DefaultLanguageKey: Edm.String;
        DefaultLocale: Edm.String;
        Host: Edm.String;
        Identifier: Edm.String;
        LegacyId: Edm.String;
        LicenseKey: Edm.String;
        MaterialLogoBase64: Edm.String;
        MaterialTheme: Edm.String;
        MinPasswordStrength: Edm.Int32;
        MultiFactorAuthenticationModeKey: Edm.String;
        ProjectId: Edm.Guid;
        ReportBarcodeFormat: Edm.String;
        ReportBarcodePrefix: Edm.String;
        ReportBarcodePrintOnly: Edm.Boolean;
        ReportBarcodeRoot: Edm.String;
        ReportBarcodeShowOnChecklistPdf: Edm.Boolean;
        ReportBarcodeShowOnServiceReport: Edm.Boolean;
        ReportBarcodeSuffix: Edm.String;
        ReportFooterCol1: Edm.String;
        ReportFooterCol2: Edm.String;
        ReportFooterCol3: Edm.String;
        ReportFooterImageBase64: Edm.String;
        ReportFooterImageContentType: Edm.String;
        ReportLogoBase64: Edm.String;
        ReportLogoContentType: Edm.String;
        ResponsibleAddress: Edm.String;
        SiteLogoBase64: Edm.String;
        Theme: Edm.String;
        asKoObservable(): ObservableMain_Site_ExtensionValues;
        static create(): Main_Site_ExtensionValues;
        static create(initData:any): Main_Site_ExtensionValues;
    }

    export class Main_Device_ExtensionValues extends $data.Entity {
        constructor();
        constructor(initData: { PushNotifications?: Edm.Boolean });

        PushNotifications: Edm.Boolean;
        asKoObservable(): ObservableMain_Device_ExtensionValues;
        static create(): Main_Device_ExtensionValues;
        static create(initData:any): Main_Device_ExtensionValues;
    }

    export class CrmService_ServiceOrderTime_ExtensionValues extends $data.Entity {
        constructor();
        constructor(initData: { TestGuid?: Edm.Guid });

        TestGuid: Edm.Guid;
        asKoObservable(): ObservableCrmService_ServiceOrderTime_ExtensionValues;
        static create(): CrmService_ServiceOrderTime_ExtensionValues;
        static create(initData:any): CrmService_ServiceOrderTime_ExtensionValues;
    }

    export class CrmService_ServiceCaseTemplate_ExtensionValues extends $data.Entity {
        constructor();
        constructor(initData: { CompletionDynamicFormId?: Edm.Guid; CreationDynamicFormId?: Edm.Guid });

        CompletionDynamicFormId: Edm.Guid;
        CreationDynamicFormId: Edm.Guid;
        asKoObservable(): ObservableCrmService_ServiceCaseTemplate_ExtensionValues;
        static create(): CrmService_ServiceCaseTemplate_ExtensionValues;
        static create(initData:any): CrmService_ServiceCaseTemplate_ExtensionValues;
    }

    export class CrmService_ServiceCase_ExtensionValues extends $data.Entity {
        constructor();
        constructor(initData: { AffectedDynamicFormElementId?: Edm.Guid; AffectedDynamicFormReferenceId?: Edm.Guid });

        AffectedDynamicFormElementId: Edm.Guid;
        AffectedDynamicFormReferenceId: Edm.Guid;
        asKoObservable(): ObservableCrmService_ServiceCase_ExtensionValues;
        static create(): CrmService_ServiceCase_ExtensionValues;
        static create(initData:any): CrmService_ServiceCase_ExtensionValues;
    }

    export class CrmService_ServiceOrderDispatch_ExtensionValues extends $data.Entity {
        constructor();
        constructor(initData: { SchedulingGroupId?: Edm.Guid; TeamId?: Edm.Guid });

        SchedulingGroupId: Edm.Guid;
        TeamId: Edm.Guid;
        asKoObservable(): ObservableCrmService_ServiceOrderDispatch_ExtensionValues;
        static create(): CrmService_ServiceOrderDispatch_ExtensionValues;
        static create(initData:any): CrmService_ServiceOrderDispatch_ExtensionValues;
    }

    export class CrmProject_Project_ExtensionValues extends $data.Entity {
        constructor();
        constructor(initData: { PreferredOfferId?: Edm.Guid });

        PreferredOfferId: Edm.Guid;
        asKoObservable(): ObservableCrmProject_Project_ExtensionValues;
        static create(): CrmProject_Project_ExtensionValues;
        static create(initData:any): CrmProject_Project_ExtensionValues;
    }

    export class CrmOrder_Order_ExtensionValues extends $data.Entity {
        constructor();
        constructor(initData: { ConfigurationBaseId?: Edm.Guid; ProjectId?: Edm.Guid; ProjectLegacyName?: Edm.String });

        ConfigurationBaseId: Edm.Guid;
        ProjectId: Edm.Guid;
        ProjectLegacyName: Edm.String;
        asKoObservable(): ObservableCrmOrder_Order_ExtensionValues;
        static create(): CrmOrder_Order_ExtensionValues;
        static create(initData:any): CrmOrder_Order_ExtensionValues;
    }

    export class CrmOrder_OrderItem_ExtensionValues extends $data.Entity {
        constructor();
        constructor(initData: { VariableId?: Edm.Guid });

        VariableId: Edm.Guid;
        asKoObservable(): ObservableCrmOrder_OrderItem_ExtensionValues;
        static create(): CrmOrder_OrderItem_ExtensionValues;
        static create(initData:any): CrmOrder_OrderItem_ExtensionValues;
    }

    export class CrmOrder_Offer_ExtensionValues extends $data.Entity {
        constructor();
        constructor(initData: { ConfigurationBaseId?: Edm.Guid; ProjectId?: Edm.Guid; ProjectLegacyName?: Edm.String });

        ConfigurationBaseId: Edm.Guid;
        ProjectId: Edm.Guid;
        ProjectLegacyName: Edm.String;
        asKoObservable(): ObservableCrmOrder_Offer_ExtensionValues;
        static create(): CrmOrder_Offer_ExtensionValues;
        static create(initData:any): CrmOrder_Offer_ExtensionValues;
    }

}

namespace Crm.Library.Signalr {

    export enum JavaScriptLogLevel {
        DEBUG,
        INFO,
        WARN,
        ERROR,
        NONE,
    }

}

namespace Main.Replication.Model {

    export enum ClientType {
        None,
        CSV,
        Infor,
        SAPBO,
        SelectLine,
    }

}

namespace Crm.Library.BaseModel {

    export enum Visibility {
        OnlyMe,
        Everybody,
        UserGroups,
        Users,
    }

}

namespace Crm.Article.Model.Enums {

    export enum DiscountType {
        NoDiscount,
        Percentage,
        Absolute,
    }

}

namespace Crm.Library.Model {

    export enum PostingCategory {
        Posting,
        FlowItem,
    }

    export enum PostingType {
        Remove,
        Save,
    }

    export enum PostingState {
        Failed,
        Pending,
        Processed,
        Skipped,
        Stale,
        Blocked,
    }

}

namespace Main.Model.Enums {

    export enum MessageState {
        Pending,
        Dispatched,
        Failed,
    }

}

namespace Crm.PerDiem.Germany.Model.Enums {

    export enum AdjustmentFrom {
        AllDay,
        Partial,
        Always,
    }

}

namespace LMobile.Unicore {

    export enum DomainAccessOptions {
        None,
        Normal,
        Archived,
        NormalArchived,
        Garbage,
        NormalGarbage,
        ArchivedGarbage,
        All,
    }

    export enum DomainAccessMergeType {
        Conjunction,
        Disjunction,
        Equation,
    }

    export enum CircleConstraint {
        Normal,
        PublicCircle,
        NoCircle,
        RecursivePublicCircle,
        RecursiveNoCircle,
    }

    export enum DomainType {
        Normal,
        Archived,
        Garbage,
    }

}

namespace Crm.Library.Globalization.Lookup {

    export enum DefaultInverseRelationship {
        None,
        Self,
    }

}
}

export {Sms as Sms}

export {Main as Main}

export {Crm as Crm}

export {Integration as Integration}

export {Default as Default}

export {LMobile as LMobile}

export var type: typeof Default.Container;
export var factory: (config:any) => Default.Container;
declare type JSDate = Date;